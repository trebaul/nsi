{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"body { text-align: justify} Les sciences informatiques au lyc\u00e9e \u00b6 L'informatique est maintenant enseign\u00e9e en lyc\u00e9e g\u00e9n\u00e9ral et n\u00e9cessite des ressources ! Voici des supports pour mes cours en Num\u00e9rique et Sciences Informatiques et en Sciences num\u00e9riques et technologie . Fiche de pr\u00e9sentation en PDF Pour la classe de 2nde : Ce cours pose les jalons d'une culture num\u00e9rique en abordant des th\u00e8mes divers (Internet, le Web, jusqu'\u00e0 la photographie num\u00e9rique et les r\u00e9seaux sociaux) et introduit \u00e0 la programmation avec Python. Pour la classe de 1\u00e8re : Ce cours aborde plusieurs domaines de l'informatique : la programmation en Python y occupe une bonne place, \u00e0 laquelle on associe l'algorithmique (la science des algorithmes), le Web (HTML/CSS/Javascript), les r\u00e9seaux et aussi l'architecture de la machine. Pourquoi choisir NSI en premi\u00e8re ? pour ma\u00eetriser la programmation , pour conna\u00eetre les diff\u00e9rents domaines des sciences informatiques , pour d\u00e9velopper le raisonnement logique , la rigueur et l' abstraction , pour apprendre la m\u00e9thodologie de projet , et d\u00e9velopper sa cr\u00e9ativit\u00e9 scientfique. Attention ! Le cours de NSI est bien diff\u00e9rent du cours de SNT, il est beaucoup plus port\u00e9 sur la science que sur l'aspect culture g\u00e9n\u00e9rale. Il faut s'attendre \u00e0 devoir s'investir beaucoup plus pour r\u00e9ussir. Pour la classe de terminale : Ce cours compl\u00e8te et approfondit les diff\u00e9rents domaines abord\u00e9s en 1\u00e8re (sauf le Web) : la programmation et les structures de donn\u00e9es sont tr\u00e8s pr\u00e9sentes, ainsi que des notions plus pouss\u00e9es d'algorithmique et d'informatique th\u00e9orique, les bases de donn\u00e9es sont introduites avec le langage SQL, et r\u00e9seau et architecture sont aussi trait\u00e9s. Pourquoi choisir NSI en terminale ? pour approfondir ses comp\u00e9tences en programmation et d\u00e9velopper des projets plus ambitieux , pour acqu\u00e9rir une culture scientifique solide et vaste du domaine et en traiter des probl\u00e8mes plus complexes , pour d\u00e9velopper un projet d'orientation scientifique ou en lien avec l' informatique . Attention ! Des r\u00e9sultats trop justes en premi\u00e8re ont tr\u00e8s peu de chances de s'am\u00e9liorer en terminale. Il faut \u00eatre particuli\u00e8rement motiv\u00e9 pour garder la sp\u00e9cialit\u00e9, et pr\u00e9senter les \u00e9preuves du baccalaur\u00e9at au mois de mars ! Pour quelle orientation ? \u00b6 Cette sp\u00e9cialit\u00e9, comme les autres, s'inscrit dans un cursus g\u00e9n\u00e9raliste et n'a pas vocation \u00e0 former uniquement de futurs informaticiens. Elle est n\u00e9anmoins bien s\u00fbr tr\u00e8s adapt\u00e9e \u00e0 tous ceux qui comptent s'orienter vers un domaine de l' informatique , mais aussi ceux ayant des projets plus g\u00e9n\u00e9ralistes en sciences , en ing\u00e9nierie , ou bien transversaux . Des d\u00e9bouch\u00e9es courantes : En 2-3 ans : BTS (Syst\u00e8mes Num\u00e9riques SN , Services Informatiques aux Organisations SIO , Cybers\u00e9curit\u00e9, Informatique et R\u00e9seaux, Electronique CIEL ) BUT (informatique, R et T, STID, information communication...) En 5 ans (ou plus): licences (informatique, math\u00e9matiques, ou autre en fonction de la 2\u00e8me sp\u00e9cialit\u00e9) en 3 ans, menant vers des masters (5 ans en tout) . \u00e9coles d'ing\u00e9nieurs post-baccalaur\u00e9at (sp\u00e9cialit\u00e9 maths conseill\u00e9e en terminale, avec une autre sp\u00e9cialit\u00e9 scientifique) , classe pr\u00e9paratoire (MPII ou bien MPSI pour ceux conservant la sp\u00e9cialit\u00e9 en terminale, PCSI pour ceux ne l'ayant qu'en premi\u00e8re) .","title":"Home"},{"location":"#les-sciences-informatiques-au-lycee","text":"L'informatique est maintenant enseign\u00e9e en lyc\u00e9e g\u00e9n\u00e9ral et n\u00e9cessite des ressources ! Voici des supports pour mes cours en Num\u00e9rique et Sciences Informatiques et en Sciences num\u00e9riques et technologie . Fiche de pr\u00e9sentation en PDF Pour la classe de 2nde : Ce cours pose les jalons d'une culture num\u00e9rique en abordant des th\u00e8mes divers (Internet, le Web, jusqu'\u00e0 la photographie num\u00e9rique et les r\u00e9seaux sociaux) et introduit \u00e0 la programmation avec Python. Pour la classe de 1\u00e8re : Ce cours aborde plusieurs domaines de l'informatique : la programmation en Python y occupe une bonne place, \u00e0 laquelle on associe l'algorithmique (la science des algorithmes), le Web (HTML/CSS/Javascript), les r\u00e9seaux et aussi l'architecture de la machine. Pourquoi choisir NSI en premi\u00e8re ? pour ma\u00eetriser la programmation , pour conna\u00eetre les diff\u00e9rents domaines des sciences informatiques , pour d\u00e9velopper le raisonnement logique , la rigueur et l' abstraction , pour apprendre la m\u00e9thodologie de projet , et d\u00e9velopper sa cr\u00e9ativit\u00e9 scientfique. Attention ! Le cours de NSI est bien diff\u00e9rent du cours de SNT, il est beaucoup plus port\u00e9 sur la science que sur l'aspect culture g\u00e9n\u00e9rale. Il faut s'attendre \u00e0 devoir s'investir beaucoup plus pour r\u00e9ussir. Pour la classe de terminale : Ce cours compl\u00e8te et approfondit les diff\u00e9rents domaines abord\u00e9s en 1\u00e8re (sauf le Web) : la programmation et les structures de donn\u00e9es sont tr\u00e8s pr\u00e9sentes, ainsi que des notions plus pouss\u00e9es d'algorithmique et d'informatique th\u00e9orique, les bases de donn\u00e9es sont introduites avec le langage SQL, et r\u00e9seau et architecture sont aussi trait\u00e9s. Pourquoi choisir NSI en terminale ? pour approfondir ses comp\u00e9tences en programmation et d\u00e9velopper des projets plus ambitieux , pour acqu\u00e9rir une culture scientifique solide et vaste du domaine et en traiter des probl\u00e8mes plus complexes , pour d\u00e9velopper un projet d'orientation scientifique ou en lien avec l' informatique . Attention ! Des r\u00e9sultats trop justes en premi\u00e8re ont tr\u00e8s peu de chances de s'am\u00e9liorer en terminale. Il faut \u00eatre particuli\u00e8rement motiv\u00e9 pour garder la sp\u00e9cialit\u00e9, et pr\u00e9senter les \u00e9preuves du baccalaur\u00e9at au mois de mars !","title":"Les sciences informatiques au lyc\u00e9e"},{"location":"#pour-quelle-orientation","text":"Cette sp\u00e9cialit\u00e9, comme les autres, s'inscrit dans un cursus g\u00e9n\u00e9raliste et n'a pas vocation \u00e0 former uniquement de futurs informaticiens. Elle est n\u00e9anmoins bien s\u00fbr tr\u00e8s adapt\u00e9e \u00e0 tous ceux qui comptent s'orienter vers un domaine de l' informatique , mais aussi ceux ayant des projets plus g\u00e9n\u00e9ralistes en sciences , en ing\u00e9nierie , ou bien transversaux . Des d\u00e9bouch\u00e9es courantes : En 2-3 ans : BTS (Syst\u00e8mes Num\u00e9riques SN , Services Informatiques aux Organisations SIO , Cybers\u00e9curit\u00e9, Informatique et R\u00e9seaux, Electronique CIEL ) BUT (informatique, R et T, STID, information communication...) En 5 ans (ou plus): licences (informatique, math\u00e9matiques, ou autre en fonction de la 2\u00e8me sp\u00e9cialit\u00e9) en 3 ans, menant vers des masters (5 ans en tout) . \u00e9coles d'ing\u00e9nieurs post-baccalaur\u00e9at (sp\u00e9cialit\u00e9 maths conseill\u00e9e en terminale, avec une autre sp\u00e9cialit\u00e9 scientifique) , classe pr\u00e9paratoire (MPII ou bien MPSI pour ceux conservant la sp\u00e9cialit\u00e9 en terminale, PCSI pour ceux ne l'ayant qu'en premi\u00e8re) .","title":"Pour quelle orientation ?"},{"location":"about/","text":"body { text-align: justify} Ing\u00e9nieure en informatique, docteure en neurosciences computationnelles et enseignante en lyc\u00e9e g\u00e9n\u00e9ral, j'enseigne en NSI et en SNT dans l'acad\u00e9mie de Paris depuis l'ann\u00e9e scolaire 2020-2021. Parcours : Contributions scientifiques :","title":"A propos"},{"location":"culture_g%C3%A9/","text":"Ressources par th\u00e9matique \u00b6 En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources par th\u00e9matique"},{"location":"culture_g%C3%A9/#ressources-par-thematique","text":"En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources par th\u00e9matique"},{"location":"ressources/","text":"Ressources \u00b6 En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources"},{"location":"ressources/#ressources","text":"En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources"},{"location":"1ere/","text":"Les cours de premi\u00e8re \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de premi\u00e8re"},{"location":"1ere/#les-cours-de-premiere","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de premi\u00e8re"},{"location":"1ere/introduction/","text":"body { text-align: justify} Qu'est-ce que l'informatique ? \u00b6 A. Brainstorming \u00b6 A quoi le mot \"informatique\" vous fait-il penser ? B. D\u00e9finitions \u00b6 D\u00e9duire de l'exercice pr\u00e9c\u00e9dent les 4 piliers de l'informatique . Les ................................. : des informations repr\u00e9sent\u00e9es num\u00e9riquement (sous forme de nombres) . Cela peut \u00eatre des nombres, du texte, des images, des sons, etc. Les ................................. : des suites d'instructions \u00e9crite dans un langage abstrait permettant de r\u00e9soudre des probl\u00e8mes . Les ................................. : ils permettent de traduire les algorithmes en programmes , pour les rendre compr\u00e9hensibles aux machines. Les ................................. : elles permettent d'ex\u00e9cuter des programmes, de stocker des donn\u00e9es, de g\u00e9rer les communications. D\u00e9finition L'informatique est la science du traitement automatique de l'information . Pas la \"science des ordinateurs \" ! Ce sont des outils , dont la ma\u00eetrise est tout de m\u00eame indispensable dans la discipline. C. Exemple \u00b6 Probl\u00e8me : comment faire une tarte aux pommes ? \u00b6 Donn\u00e9es : pommes, farine, sucre, oeufs Algorithme : la recette - Faire la p\u00e2te avec la farine, le sucre et les oeufs - Faire de la compote - Couper les pommes restantes - Mettre la compote et les pommes dans la p\u00e2te - Mettre au four Repr\u00e9sentation sch\u00e9matique \u00b6 graph TB A[..............] --> F[..............]; B[..............] --> F; C[..............] --> F; D[..............] --> F; F --> G[..............] Solution graph TB pommes --> F[recette]; farine --> F; sucre --> F; oeufs --> F; F --> G[tarte aux pommes] D. Le monde du num\u00e9rique et de l'informatique \u00b6 D.1. Les secteurs d'activit\u00e9 \u00b6 Regarder la vid\u00e9o suivante : Relever les diff\u00e9rentes cat\u00e9gories dans lesquels on retrouve diff\u00e9rents m\u00e9tiers du num\u00e9rique et indiquer ce \u00e0 quoi elles correspondent. Relever diff\u00e9rents m\u00e9tiers entrant dans ces diff\u00e9rentes cat\u00e9gories. Solution Entreprises du hardware : production du mat\u00e9riel M\u00e9tiers : ouvriers sp\u00e9cialis\u00e9s, ing\u00e9nieurs conception, production, d\u00e9veloppement informatique. Entreprises fabriquant les infrastructures : pose des c\u00e2bles, des antennes, etc M\u00e9tiers : ouvriers du b\u00e2timent, ing\u00e9nieurs, op\u00e9rateurs r\u00e9seau et syst\u00e8mes. Entreprises du software : cr\u00e9ation d\u2019applications, de logiciels. M\u00e9tiers : programmeurs, ing\u00e9nieurs, graphistes, webdesigner, m\u00e9tiers du marketing. ??? note \"Entreprises d\u00e9pendantes d'applications\" font appel \u00e0 d\u2019autres entreprises, ou bien int\u00e8grent ces comp\u00e9tences. Toutes les entreprises sont concern\u00e9es par la r\u00e9volution num\u00e9rique D.2. Les m\u00e9tiers \u00b6 A partir de la vid\u00e9o suivante, indiquer en quoi consistent les m\u00e9tiers list\u00e9s ci-dessous : Architecte technique ? Data scientist ? D\u00e9veloppeur ?","title":"Introduction"},{"location":"1ere/introduction/#quest-ce-que-linformatique","text":"","title":"Qu'est-ce que l'informatique ?"},{"location":"1ere/seq0/","text":"body { text-align: justify} Programme \u00b6","title":"Index"},{"location":"1ere/seq0/#programme","text":"","title":"Programme"},{"location":"1ere/seq0/bases_web/","text":"body { text-align: justify} I. Hypertexte et URL \u00b6 Cours \u00b6 A. Internet et le Web \u00b6 Repr\u00e9senter sch\u00e9matiquement Internet et le Web. En d\u00e9duire la diff\u00e9rence entre les deux. D\u00e9finition Le WWW ou World Wide Web est une application qui permet d'acc\u00e9der \u00e0 un r\u00e9seau de documents, reli\u00e9s entre eux par le principe de l' hypertexte . B. Les bases du Web \u00b6 On acc\u00e8de \u00e0 une page : - gr\u00e2ce \u00e0 son URL , qui localise le serveur Web et la page, - gr\u00e2ce \u00e0 un protocole HTTP oui HTTPS qui indique comment acc\u00e9der \u00e0 la page, - Cette page est \u00e9crite au minimum avec le langage de description HTML . C. L'URL \u00b6 C.I. Structure de l'URL \u00b6 Pour localiser une page Web, et le serveur sur lequel elle est stock\u00e9e, on utilise l' URL (Uniform Ressource Locator) de la page. Elle est construite selon une certaine structure. Exemple L'adresse https://pixees.fr/informatiquelycee/prem/index3.html est constitu\u00e9e de : https ou http, correspond au protocole de communication utilis\u00e9. pixees.fr est le **nom de domaine**, permettant d'identifier le serveur web qui stocke le site. /informatiquelycee/prem/index3.html est le **chemin d'acc\u00e8s** au fichier html, sur le serveur. Il suit une arborescence. C.II. Chemin d'acc\u00e8s \u00e0 un fichier \u00b6 D\u00e9finitions Une arborescence de fichiers correspond \u00e0 la repr\u00e9sentation de leur hi\u00e9rarchie les uns par rapport aux autres. On repr\u00e9sente les r\u00e9pertoires ou dossiers qui contiennent d'autres r\u00e9pertoires et/ou des fichiers , et les fichiers qui stockent les donn\u00e9es. Sur notre exemple pr\u00e9c\u00e9dent, on peut la repr\u00e9senter la mani\u00e8re suivante. graph TB G[.] --> D G --> I[actualites] D[informatiquelycee] --> A A[sec] --> B(index1.html) D --> C[prem] C --> H(index2.html) D --> E[term] E --> F(index3.html) C'est une structure d' arbre , constitu\u00e9 de noeuds . Le noeud tout en haut est appel\u00e9 racine : de lui, on sait aller partout dans le reste de la structure. D\u00e9finition Un chemin depuis la racine vers un fichier ou un r\u00e9pertoire est nomm\u00e9 chemin absolu . Donner le chemin absolu d'acc\u00e8s au fichier index1.html . ./informatiquelycee/sec/index1.html En d\u00e9duire l'URL permettant d'acc\u00e9der \u00e0 cette page. https://pixees.fr/informatiquelycee/sec/index1.html On se trouve dans informatiquelycee . Quel est le chemin, \u00e0 partir de ce dossier, pour acc\u00e9der \u00e0 index3.html ? /term/index3.html D\u00e9finition Un chemin depuis un r\u00e9pertoire courant , c'est-\u00e0-dire celui dans lequel l'utilisateur se trouve, vers un fichier ou un r\u00e9pertoire est appel\u00e9 chemin relatif . D. Les logiciels du Web \u00b6 D.I. Lire des pages \u00b6 Une page en HTML est ouverte par un navigateur qui est le logiciel capable de lire les pages Web. Donner des exemples de navigateurs. Mozilla Firefox, Google Chrome, Microsoft Edge ou Safari sont des navigateurs. Quelle est la diff\u00e9rence entre navigateur et moteur de recherche ? Un moteur de recherche est un site Web, une application permettant de faire des recherches sur le Web, auquel on acc\u00e8de gr\u00e2ce au navigateur qui peut lire ses pages. D.II. Cr\u00e9er des pages \u00b6 Pour \u00e9crire des pages Web en manipulant HTML et CSS, il faut utiliser un \u00e9diteur de texte . Donner des exemples d'\u00e9diteurs de texte. Le Bloc-notes, Notepad++ sont des exemples d'\u00e9diteur de texte courants.","title":"I. Hypertexte et URL"},{"location":"1ere/seq0/bases_web/#i-hypertexte-et-url","text":"","title":"I. Hypertexte et URL"},{"location":"1ere/seq0/bases_web/#cours","text":"","title":"Cours"},{"location":"1ere/seq0/langages_web/","text":"body { text-align: justify} II. Les langages HTML et CSS \u00b6 Cours : le HTML \u00b6 A. Les bases du HTML \u00b6 D\u00e9finition Le langage HTML (HyperText Markup Language) sert \u00e0 d\u00e9finir le contenu et la structure de la page Web. Il sert \u00e0 pr\u00e9senter de l'information, pas \u00e0 faire des calculs comme Python ! A.1. Utilisation de balises \u00b6 C'est un langage de balisage , c'est-\u00e0-dire bas\u00e9 sur l'utilisation de balises : des \u00e9l\u00e9ments plac\u00e9s entre < et > et associ\u00e9s \u00e0 des fonctions diff\u00e9rentes. Exemple : Code < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ strong > . </ p > Ce code utilise 3 balises : h1 indique un titre principal (il en existe pour diff\u00e9rents niveaux : h2 , h3 ,...), p correspond \u00e0 un paragraphe , strong fait appara\u00eetre le texte en gras ( italique : em ). Chacune est ouverte : <balise1> puis ferm\u00e9e </balise1> au fur et \u00e0 mesure. L'ordre dans lequel on ouvre et on ferme les balise a de l'importance. Il n'aurait pas \u00e9t\u00e9 possible, par exemple, d'\u00e9crire : Code < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ p > . </ strong > p ayant \u00e9t\u00e9 ouverte avant strong , elle doit \u00eatre referm\u00e9e avant \u00e9galement. A.2. Les attributs \u00b6 D\u00e9finition On peut rajouter des attributs aux balises, permettant de leur rajouter des propri\u00e9t\u00e9s. Exemples : la balise a pour les liens hypertextes, l'attribut href indiquant la localisation de la page \u00e0 lier : Code < a href = \"https://openclassrooms.com/fr/\" > OpenClassrooms </ a > la balise img pour ins\u00e9rer une image, l'attribut src indiquant o\u00f9 se trouve l'image \u00e0 afficher : Code < img src = \"ascii.png\" alt = \"code_ascii\" /> Remarque 1 img est une balise \u00e0 la fois ouvrante et fermante ( auto-fermante ). Il en existe d'autres, comme la balise br qui sert \u00e0 sauter des lignes, et s'utilise de la m\u00eame fa\u00e7on. Remarque 2 Les chemins vers les ressources peuvent \u00eatre relatifs ou absolus . Elles peuvent \u00eatre stock\u00e9es localement ou bien accessible sur le Web gr\u00e2ce \u00e0 une URL . Les attributs id et class permettent d'identifier un seul (pour id ) paragraphe, titre, ou autre balise, parmi les autres, ou bien un groupe (pour class ) parmi l'ensemble : Code < h1 > Voici mon titre ! </ h1 > < p id = \"paragraphe1\" > J'\u00e9cris ensuite un < strong > paragraphe </ strong ></ p > . Cela va permettre ici, avec les autres langages du Web, de donner une repr\u00e9sentation diff\u00e9rente \u00e0 ce paragraphe uniquement. B. Une page minimale \u00b6 Code <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > </ head > < body > < h1 > Le HTML </ h1 > < p > Voici le contenu de ma page sur le HTML. </ p > </ body > </ html > Relever les diff\u00e9rentes balises et indiquer leur fonction. Balise Fonction html d\u00e9limite le code en html head d\u00e9finit l'ent\u00eate de la page meta permet de d\u00e9finir l'encodage utilis\u00e9 pour le texte avec l'attribut charset title d\u00e9finit le titre en haut de la barre de navigation body correspond au corps de la page Cours : Le CSS \u00b6 A. Les bases du CSS \u00b6 D\u00e9finition Le CSS (Cascading Style Sheet) permet de mettre en forme une page Web. Le code en CSS peut s'\u00e9crire \u00e0 l'int\u00e9rieur d'une page en HTML, ou bien dans un fichier s\u00e9par\u00e9. Pour plus de clart\u00e9, on pr\u00e9f\u00e8re cette deuxi\u00e8me solution. Dans un fichier en .css , on \u00e9crit le code suivant : Code CSS h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } Il est associ\u00e9 au HTML suivant : Code HTML < h1 > Pr\u00e9sentation </ h1 > < p > Voici ma page de pr\u00e9sentation. </ p > < br /> < p class = \"special\" > Elle est tr\u00e8s sp\u00e9ciale ! </ p > Quelle est la structure utilis\u00e9e ? A la suite soit du nom d'une balise , soit de celui d'une classe (pr\u00e9c\u00e9d\u00e9e d'un . ), on donne entre accolades des valeurs pour diff\u00e9rentes propri\u00e9t\u00e9s, qui modifient l'apparence du contenu de la balise. Comment s'attend-on \u00e0 voir appara\u00eetre les titres de niveau 1 ? Ils doivent appara\u00eetre centr\u00e9s et sur un fond de couleur rouge. Comment s'attend-on \u00e0 voir appara\u00eetre chacun des paragraphes ? Le premier doit appara\u00eetre dans la police Verdana, en noir. Le deuxi\u00e8me est associ\u00e9 \u00e0 la classe special et appara\u00eetra en bleu, en italique et en 25px. B. Lier CSS et HTML \u00b6 Pour que le code pr\u00e9c\u00e9dent s'applique \u00e0 notre texte, il faut lier le fichier HTML et le fichier CSS. On propose le fichier HTML suivant : Code <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > Le CSS </ h1 > < p > Voici le contenu de ma page sur le CSS. </ p > </ body > </ html > Entourer la ligne qui a chang\u00e9, par rapport au fichier de base vu dans la partie sur le HTML. Il s'agit de la 3\u00e8me ligne de l'ent\u00eate. Quel est le nom de la balise utilis\u00e9e pour relier le fichier CSS au fichier HTML ? Quels sont ses attributs ? Il s'agit de la balise link dont les attributs sont rel (donne des informations sur le type de la ressource) et href qui indique le chemin vers le fichier .css. Exercices \u00b6 Exercice 1 : Ressources et chemins \u00b6 J'\u00e9cris un fichier HTML index.html stock\u00e9 selon la hi\u00e9rarchie suivante (on suppose ici que Mon_dossier est la racine) : graph TB G[Mon_dossier] --> D G --> I[Images] D[Code] --> A(page.html) D --> C(index.html) D --> E[style] E --> F(moncss.css) I --> H(monimage.jpg) Quel(s) code(s) affichera bien l'image monimage.jpg ? <img src='monimage.jpg'> <img src='Mon_dossier/Images/monimage.jpg'> <img src='Code/Mon_dossier/Images/monimage.jpg'> Quel(s) code(s) permettra de bien relier ma page \u00e0 moncss.css ? <link rel=\"stylesheet\" href=\"style/style.css\"> <link rel=\"stylesheet\" href=\"style/moncss.css\"> <link rel=\"stylesheet\" href=\"Mon_dossier/Code/style/moncss.css\"> Quel code faut-il \u00e9crire pour ins\u00e9rer monimage.jpg dans la page page.html et la relier \u00e0 moncss.css ? Exercice 2 : Liste \u00e0 puces \u00b6 Pour cr\u00e9er une liste \u00e0 puce, il faut utiliser deux balises : ul indique le d\u00e9but (balise ouvrante) et la fin (balise fermante) de la liste, alors que li d\u00e9limite chacun de ses \u00e9l\u00e9ments. Ecrire le code permettant d'afficher sous forme de liste \u00e0 puce les premiers vers du po\u00e8me \"Le chat\" de C. Baudelaire : De sa fourrure blonde et brune Sort un parfum si doux, qu'un soir J'en fus embaum\u00e9, pour l'avoir Caress\u00e9e une fois, rien qu'une. Exercice 3 : Diff\u00e9rencier des paragraphes \u00b6 Ecrire les codes HTML et CSS permettant d'afficher un paragraphe \"Ce paragraphe est noir\" en couleur noire et en police Verdana, alors que le paragraphe \"Ce paragraphe est rouge.\" doit \u00eatre rouge et en police Arial. TP : HTML et CSS \u00b6 A. Pr\u00e9paration du r\u00e9pertoire de travail \u00b6 Ouvrir l' explorateur de fichiers de votre ordinateur, et aller dans votre espace personnel en cliquant sur Ce PC , puis sur Espace Personnel Pr\u00e9nom NOM avec votre pr\u00e9nom et nom. Aller dans les Documents , puis cr\u00e9er un dossier NSI et un dossier seq0 dans NSI . Vous devez obtenir l'arborescence suivante : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[NSI] D --> C[Images] D --> E[Musique] B --> F[seq0] Ouvrir le fichier html qui servira de base \u00e0 vos pages : base.html Une page blanche s'affiche : faire un clic droit, puis Enregistrer sous . S\u00e9lectionner le dossier seq0 , et l'enregistrer sous presentation.html . Depuis l' explorateur de fichiers , faire une copie de presentation.html (dans le m\u00eame dossier), et le nommer avis.html . Ouvrir vos 2 fichiers avec votre \u00e9diteur de texte (Notepad++ ou Bloc-notes). B. Les fichiers HTML \u00b6 Sur ces deux pages HTML, vous allez pr\u00e9senter un film de votre choix sur la page presentation.html , et donner un (court) avis sur le film sur la page avis.html . Vous allez remplir le corps de vos deux pages Web avec les \u00e9l\u00e9ments suivants : 1. Des titres de diff\u00e9rents niveaux (balises <h1> , <h2> ,...), du texte sous la forme de paragraphes ( <p> ) et de liste ( <ul> ) d'\u00e9l\u00e9ments. 2. Des images (balise auto-fermante <img .../> ). 3. Sur chaque page, un lien hypertexte vers l'autre page (balise <a href=...> ). 4. Un lien hypertexte vers un autre site web (idem). 5. Les mots-cl\u00e9s doivent \u00eatre en gras ou bien en italique ( <strong> et <em> ). 6. Une vid\u00e9o embarqu\u00e9e Youtube contenant la bande-annonce du film. Indications Pour la vid\u00e9o Youtube : - Aller sur le site de https://youtube.com et trouver la vid\u00e9o de votre choix, - cliquer sur \"Partager\" puis sur \"Int\u00e9grer\", - copier/coller le code HTML qui s'affiche (d\u00e9limit\u00e9 par une balise <iframe> ) dans le corps de votre page. Pour tout le reste, se r\u00e9f\u00e9rer \u00e0 la fiche m\u00e9mo distribu\u00e9e et, bien s\u00fbr, au cours . Exemple de rendu : C. La feuille de style \u00b6 Pr\u00e9paration A partir de votre \u00e9diteur de texte, cr\u00e9er un nouveau fichier. L'enregistrer sous style.css dans votre dossier site_web . Pour rajouter du style \u00e0 vos pages, il faut d\u00e9finir la feuille de style style.css . Rajouter la ligne qui permet de lier un fichier .html \u00e0 un fichier .css dans l'ent\u00eate de vos deux fichiers presentation.html et avis.html . D\u00e9finir un style pour vos pages. Vous allez utiliser au moins 5 des propri\u00e9t\u00e9s r\u00e9pertori\u00e9es dans le tableau suivant (libre \u00e0 vous d'en utiliser plus, ou d'autres !) : Propri\u00e9t\u00e9 Description Valeurs possibles font-family police du texte d'un \u00e9l\u00e9ment Arial, Verdana, Sans serif,... font-style permet de mettre en italique italic , oblique , normal color couleur du texte d'un \u00e9l\u00e9ment en anglais ( red ), en hexad\u00e9cimal ( #000000 ), en RGB ( rgb(255,255,255) ) background-color couleur de fond 'un \u00e9l\u00e9ment comme pour color width , height respectivement largeur et hauteur d'un \u00e9l\u00e9ment comme pour font-size background-image image d'arri\u00e8re-plan url(\"../chemin_vers_ressource\") Indications Rappelez-vous que vous pouvez s\u00e9lectionner les types de balises ( h1 , h2 , p ...) ou bien les \u00e9l\u00e9ments d'une classe en rajoutant cet attribut. Vous pouvez ensuite appliquer un style \u00e0 certains \u00e9l\u00e9ments d'un type, ou bien \u00e0 un seul \u00e9l\u00e9ment. Exemple de rendu : D. Dossier compress\u00e9 \u00b6 Vous allez me partager les diff\u00e9rents fichiers de votre site en cr\u00e9ant une archive, et l'application Casier de l'ENT. Depuis l'explorateur de fichiers aller dans votre dossier NSI . Faire un clic droit sur seq0 puis cliquer sur Compresser dans un fichier zip . Renommer l'archive en site_web_pr\u00e9nom_NOM.zip en rempla\u00e7ant pr\u00e9nom et NOM par votre pr\u00e9nom et votre nom. Depuis l'ENT, se connecter \u00e0 l'application Casier . Elle sert \u00e0 partager des ressources avec vos enseignants. Cliquer sur D\u00e9poser dans un casier . Cliquer sur Parcourir , et trouver votre fichier site_web_pr\u00e9nom_NOM.zip sur votre machine. Dans la partie Destinataire rechercher TREBAUL et s\u00e9lectionner le profil de votre enseignante. Cliquer sur Envoyer . TP : Liens et images \u00b6 T\u00e9l\u00e9charger l'archive suivante : Archive La d\u00e9compresser dans un dossier que vous nommez site_ia , \u00e0 placer ainsi dans votre arborescence de fichiers : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[NSI] D --> C[Images] D --> E[Musique] B --> F[seq0] F --> H(site_ia) L'image de la page index.html ne s'affiche pas. Localiser la balise qui permet de l'afficher, et modifier le chemin vers la ressource pour qu'elle s'affiche. La feuille de style n'est pas appliqu\u00e9e aux deux pages HTML. Rajouter la ligne qui permet de faire le lien entre le fichier .css et les deux pages index.html et critique.html . Le style appliqu\u00e9 \u00e0 la page index.html donne le rendu suivant : On doit pouvoir naviguer de la page index.html \u00e0 la page critique.html et r\u00e9ciproquement. Corriger le code des balises correspondantes sur chacune des deux pages pour que ce soit possible. Lire le contenu des pages, c'est instructif ! (mais ne tardez pas \u00e0 passer \u00e0 la suite)","title":"II. Les langages HTML et CSS"},{"location":"1ere/seq0/langages_web/#ii-les-langages-html-et-css","text":"","title":"II. Les langages HTML et CSS"},{"location":"1ere/seq0/langages_web/#cours-le-html","text":"","title":"Cours : le HTML"},{"location":"1ere/seq0/langages_web/#cours-le-css","text":"","title":"Cours : Le CSS"},{"location":"1ere/seq0/langages_web/#exercices","text":"","title":"Exercices"},{"location":"1ere/seq0/langages_web/#tp-html-et-css","text":"","title":"TP : HTML et CSS"},{"location":"1ere/seq0/langages_web/#tp-liens-et-images","text":"T\u00e9l\u00e9charger l'archive suivante : Archive La d\u00e9compresser dans un dossier que vous nommez site_ia , \u00e0 placer ainsi dans votre arborescence de fichiers : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[NSI] D --> C[Images] D --> E[Musique] B --> F[seq0] F --> H(site_ia) L'image de la page index.html ne s'affiche pas. Localiser la balise qui permet de l'afficher, et modifier le chemin vers la ressource pour qu'elle s'affiche. La feuille de style n'est pas appliqu\u00e9e aux deux pages HTML. Rajouter la ligne qui permet de faire le lien entre le fichier .css et les deux pages index.html et critique.html . Le style appliqu\u00e9 \u00e0 la page index.html donne le rendu suivant : On doit pouvoir naviguer de la page index.html \u00e0 la page critique.html et r\u00e9ciproquement. Corriger le code des balises correspondantes sur chacune des deux pages pour que ce soit possible. Lire le contenu des pages, c'est instructif ! (mais ne tardez pas \u00e0 passer \u00e0 la suite)","title":"TP : Liens et images"},{"location":"1ere/seq1/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq1/#programme","text":"","title":"Programme"},{"location":"1ere/seq1/boucles_bornees/","text":"body { text-align: justify} IV. Les boucles born\u00e9es \u00b6 TP : Introduction aux boucles born\u00e9es \u00b6 Les boucles , en programmation, servent \u00e0 r\u00e9p\u00e9ter plusieurs les m\u00eames instructions (ou presque les m\u00eames instructions) . On s'int\u00e9resse dans ce TP aux boucles born\u00e9es : on sait \u00e0 l'avance combien de fois elles vont s'ex\u00e9cuter. On utilise une boucle for pour r\u00e9p\u00e9ter l'affichage de la cha\u00eene de caract\u00e8res \"NSI\" . Le nombre de fois que l'instruction est r\u00e9p\u00e9t\u00e9e est d\u00e9finie par les param\u00e8tres du range(...) . for _ in range ( 5 ): print ( \"NSI\" ) a. Combien de fois cette cha\u00eene appara\u00eet-elle dans la console ? ..................... b. Modifier le code pour que \"SNT\" s'affiche 10 fois. for i in range ( 5 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 1 ? ................................................... b. Le param\u00e8tre du range est toujours 5 . Noter la liste des valeurs qui s'affichent, pour ce param\u00e8tre : .................................................. for i in range ( 1 , 5 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 2 ? .................................................. b. De combien \u00e0 combien vont les valeurs qui s'affichent ? .................................................. for i in range ( 5 , 1 , - 1 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 3 ? .................................................. b. En vous basant sur l'affichage correspondant \u00e0 ce code, \u00e0 quoi peut bien correspondre le -1 \u00e9crit dans le range ? .................................................. Utiliser ce que vous avez vu dans les questions pr\u00e9c\u00e9dentes pour afficher les entiers de 1 \u00e0 10 compris. for i in range ( 1 , 10 , 2 ): print ( i ) a. Quelles valeurs le programme affiche-t-il ? ...................................... b. Le modifier pour afficher cette fois-ci les multiples de 3 de 1 \u00e0 10 compris. Afficher, \u00e0 la mani\u00e8re d'un thermom\u00e8tre tr\u00e8s pr\u00e9cis, tous les entiers de 0 \u00e0 40 compris. Afficher tous les entiers de 40 \u00e0 0 compris. Afficher, \u00e0 la mani\u00e8re d'un thermom\u00e8tre moins pr\u00e9cis, les multiples de 5 en partant de 40 et en allant jusqu'\u00e0 0 compris. Cours \u00b6 Lorsque l'on utilise une boucle non-born\u00e9e, on n'a pas \u00e0 savoir \u00e0 l'avance combien de fois est-ce que l'on va r\u00e9p\u00e9ter les op\u00e9rations. On utilise une boucle born\u00e9e (qui a des bornes, de d\u00e9part et d'arriv\u00e9e) lorsqu'on le sait. A. Exemple \u00b6 Pour afficher tous les entiers de 1 \u00e0 10 avec une boucle born\u00e9e, l'algorithme est le suivant (compl\u00e9ter sa traduction Python) : Algorithme et code Pour i de 1 \u00e0 10 afficher i for i in range ( 1 , 11 ): print ( i ) Le i est une variable cr\u00e9\u00e9e avec la boucle, dont la valeur change automatiquement \u00e0 chaque nouveau passage = chaque nouvelle it\u00e9ration . Comment i varie est d\u00e9termin\u00e9 par la fonction range : elle permet d'obtenir une s\u00e9quence de nombres \u00e0 partir d'un nombre de d\u00e9part , d'arriv\u00e9e et \u00e9ventuellement d'un pas : la diff\u00e9rence entre deux nombres successifs de la s\u00e9quence. Voici un extrait de sa documentation : range ( stop ) range ( start , stop [, step ]) start The value of the start parameter ( or 0 if the parameter was not supplied ) stop The value of the stop parameter step The value of the step parameter ( or 1 if the parameter was not supplied ) S'il n'y a qu'un param\u00e8tre, que d\u00e9signe-t-il ? Il d\u00e9signe la valeur avant laquelle on s'arr\u00eate : la derni\u00e8re valeur prise par la variable est stop-1 . S'il y a 2 param\u00e8tres, que d\u00e9signent-ils ? Ils d\u00e9signent la valeur de d\u00e9part (incluse), et la valeur avant laquelle on s'arr\u00eate. M\u00eame question s'il y en a 3. Ils d\u00e9signent la valeur de d\u00e9part, la valeur avant laquelle on s'arr\u00eate, et le pas. Quelle est la valeur de d\u00e9but par d\u00e9faut ? La valeur du pas par d\u00e9faut ? Par d\u00e9faut, la valeur de d\u00e9but est 0 et la valeur du pas est 1. B. Cas g\u00e9n\u00e9ral \u00b6 D\u00e9finition Une boucle born\u00e9e permet de r\u00e9p\u00e9ter des instructions un nombre de fois d\u00e9termin\u00e9 \u00e0 l'avance. On utilise souvent une variable stockant une valeur diff\u00e9rente \u00e0 chaque nouvelle it\u00e9ration. De mani\u00e8re g\u00e9n\u00e9rale, la valeur contenue dans la variable de la boucle est prise dans une s\u00e9quence (une suite de valeurs) qui peut \u00eatre cr\u00e9\u00e9e gr\u00e2ce \u00e0 la fonction range . Algorithme Pour i dans s\u00e9quence instructions Pour j variant de 0 \u00e0 fin - 1 instructions Pour k variant de debut \u00e0 fin - 1 instructions Pour l variant de debut \u00e0 fin - 1 en variant de pas instructions Code for i in sequence : instructions for j in range ( fin ): instructions for k in range ( debut , fin ): instructions for l in range ( debut , fin , pas ): instructions TD : Les boucles born\u00e9es \u00b6 Exercice 1 : Boucles sur des entiers \u00b6 Code for i in range ( 1 , 11 ): print ( 2 * i ) Combien de fois l'intruction de la boucle for va-t-elle \u00eatre ex\u00e9cut\u00e9e ? Compl\u00e9ter la table de trace suivante (en ajoutant le bon nombre de lignes, correspondant au nombre d'it\u00e9rations) : It\u00e9ration i 2*i 1 2 En d\u00e9duire ce qu'affiche ce programme. Qu'affichent les programmes suivants ? Vous appliquerez au besoin la m\u00eame m\u00e9thode que pr\u00e9c\u00e9demment (attention aux param\u00e8tres du range !). Code 1 for i in range ( 0 , 10 ): print ( 3 * i ) Code 2 for i in range ( 0 , 5 ): print ( i ** 2 ) Code 3 for i in range ( 1 , 100 , 10 ): print ( i // 10 ) Exercice 2 : boucles born\u00e9es et non-born\u00e9es \u00b6 Transformer le code suivant pour utiliser une boucle born\u00e9e \u00e0 la place d'une boucle non-born\u00e9e. Quelle valeur contient la variable somme , dans les deux cas, apr\u00e8s ex\u00e9cution du code ? Code c = 0 somme = 0 while c < 5 : somme = somme + c c = c + 1 Transformer le code suivant pour utiliser une boucle non-born\u00e9e \u00e0 la place d'une boucle born\u00e9e. Quelle valeur contient la variable total , dans les deux cas, apr\u00e8s ex\u00e9cution du code ? Code total = 0 for i in range ( 5 ): total = total + i ** 2 Exercice 3 : Boucles sur des cha\u00eenes de caract\u00e8res \u00b6 Une cha\u00eene de caract\u00e8res stocke plusieurs valeurs, plusieurs caract\u00e8res. Les diff\u00e9rents caract\u00e8res sont accessibles gr\u00e2ce \u00e0 leur position dans la cha\u00eene, appel\u00e9e leur indice . Le tableau suivant donne l'indice des diff\u00e9rents caract\u00e8res de la cha\u00eene NSI : Caract\u00e8re Indice N 0 S 1 I 2 On acc\u00e8de aux diff\u00e9rents caract\u00e8res d'une cha\u00eene chaine avec la syntaxe chaine[indice] o\u00f9 indice est un entier compris entre 0 et la longueur de la cha\u00eene - 1. Avec quelle instruction acc\u00e9der au caract\u00e8re S dans la cha\u00eene chaine = 'NSI' ? Pour parcourir toute la cha\u00eene, on a besoin de sa longueur, que l'on extrait avec la fonction len . Dans notre cas, que vaut len(chaine) ? Le code Python suivant affiche un \u00e0 un des diff\u00e9rents caract\u00e8res de c . Code for i in range ( len ( chaine )): print ( chaine [ i ]) Adapter ce code pour stocker dans une nouvelle variable chaine_inversee les caract\u00e8res de chaine mais dans l'ordre inverse : dans notre cas le caract\u00e8re d'indice 0 se retrouve \u00e0 l'indice 2 , celui d'indice 2 \u00e0 l'indice 0 . TP : Dessiner des formes g\u00e9om\u00e9triques avec Turtle 2 \u00b6 Dans ce TP, on am\u00e9liore ce qui a \u00e9t\u00e9 fait dans le premier TP Turtle, en utilisant des boucles. Voici un code qui permettait de tracer un carr\u00e9. V\u00e9rifier qu'il fonctionne bien en l'ex\u00e9cutant : from turtle import * forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) done () R\u00e9ecrire ce code sans r\u00e9p\u00e9ter les instructions qui permettent d'avancer et de tourner, mais en utilisant une boucle for \u00e0 la place. Ne pas oublier l'appel done() \u00e0 la fin ! from turtle import * ... R\u00e9utiliser le code de la question 2 (donc avec une boucle) pour am\u00e9liorer la d\u00e9finition de la fonction carre(cote, couleur) , faite au TP pr\u00e9c\u00e9dent : from turtle import * def carre ( cote , couleur ): ... En appelant la fonction carre(cote, couleur) , tracer 4 carr\u00e9s de 100 pixels de c\u00f4t\u00e9, rouges, c\u00f4te \u00e0 c\u00f4te (coll\u00e9s) gr\u00e2ce \u00e0 une boucle born\u00e9e. from turtle import * ... Tracer encore 4 carr\u00e9s c\u00f4te \u00e0 c\u00f4te, mais espac\u00e9s de 50 pixels. On pourra utiliser soit la fonction forward , soit la fonction goto . On rappelle que up() et down() permettent de lever (pour ne pas tracer) et de baisser (pour tracer) la tortue. from turtle import * ... Utiliser une boucle born\u00e9e pour cr\u00e9er 4 cercles gr\u00e2ce \u00e0 la fonction circle(rayon) , de rayon 50px et espac\u00e9s de 50px. from turtle import * ... Utiliser une boucle born\u00e9e pour cr\u00e9er 4 cercles, respectivement de rayon 50, 40, 30 et 20px et espac\u00e9s de 10px. from turtle import * ... On veut maintenant dessiner 4 carr\u00e9s espac\u00e9s de 10px sur une ligne, puis 3 autres lignes de carr\u00e9s dessin\u00e9es en-dessous , dispos\u00e9s de la m\u00eame fa\u00e7on. Ecrire le programme correspondant, utilisant 2 boucles imbriqu\u00e9es et la fonction carre . from turtle import * ... Pour aller plus loin... Ecrire une fonction permettant de choisir le nombre de lignes et le nombre de colonnes de carr\u00e9s que l'on veut dessiner. from turtle import * ... Ne pas oublier d' enregistrer votre travail en cliquant sur la disquette en haut \u00e0 gauche ! TP : Boucles born\u00e9es et fonctions \u00b6 Pour toutes les questions de ce TP, on utilisera une boucle born\u00e9e. Ecrire une fonction somme1() ne prenant pas de param\u00e8tre, et renvoyant la somme des entiers de 1 \u00e0 100 compris. Ecrire une fonction somme2() ne prenant pas de param\u00e8tre, et renvoyant la somme des entiers pairs de 2 \u00e0 100 compris. Ecrire une fonction somme3(n) prenant un entier n en param\u00e8tre, et renvoyant la somme des entiers de 1 \u00e0 n compris. Ecrire une fonction somme4(n) prenant un entier n en param\u00e8tre, et renvoyant la somme des entiers impairs de 1 \u00e0 n compris. Ecrire une fonction multiplication(a, b) prenant en param\u00e8tres deux entiers a et b et renvoyant la multiplication de a par b sans utiliser l'op\u00e9rateur * , mais uniquement les op\u00e9rateurs + et - . Aide : distinguer le cas o\u00f9 a et b sont positifs, du cas o\u00f9 un des deux est positif, du cas o\u00f9 les 2 sont n\u00e9gatifs. Ecrire une fonction table(n) prenant en param\u00e8tre un entier n pouvant valoir de 2 \u00e0 9 et affichant sa table de multiplication. Ecrire une fonction tables_multiplication() affichant toutes les tables de multiplication des chiffres de 2 \u00e0 9 . On utilisera 2 boucles born\u00e9es imbriqu\u00e9es .","title":"V. Les boucles born\u00e9es"},{"location":"1ere/seq1/boucles_bornees/#iv-les-boucles-bornees","text":"","title":"IV. Les boucles born\u00e9es"},{"location":"1ere/seq1/boucles_bornees/#tp-introduction-aux-boucles-bornees","text":"Les boucles , en programmation, servent \u00e0 r\u00e9p\u00e9ter plusieurs les m\u00eames instructions (ou presque les m\u00eames instructions) . On s'int\u00e9resse dans ce TP aux boucles born\u00e9es : on sait \u00e0 l'avance combien de fois elles vont s'ex\u00e9cuter. On utilise une boucle for pour r\u00e9p\u00e9ter l'affichage de la cha\u00eene de caract\u00e8res \"NSI\" . Le nombre de fois que l'instruction est r\u00e9p\u00e9t\u00e9e est d\u00e9finie par les param\u00e8tres du range(...) . for _ in range ( 5 ): print ( \"NSI\" ) a. Combien de fois cette cha\u00eene appara\u00eet-elle dans la console ? ..................... b. Modifier le code pour que \"SNT\" s'affiche 10 fois. for i in range ( 5 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 1 ? ................................................... b. Le param\u00e8tre du range est toujours 5 . Noter la liste des valeurs qui s'affichent, pour ce param\u00e8tre : .................................................. for i in range ( 1 , 5 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 2 ? .................................................. b. De combien \u00e0 combien vont les valeurs qui s'affichent ? .................................................. for i in range ( 5 , 1 , - 1 ): print ( i ) a. Qu'est-ce qui a chang\u00e9 dans la syntaxe du for par rapport \u00e0 la question 3 ? .................................................. b. En vous basant sur l'affichage correspondant \u00e0 ce code, \u00e0 quoi peut bien correspondre le -1 \u00e9crit dans le range ? .................................................. Utiliser ce que vous avez vu dans les questions pr\u00e9c\u00e9dentes pour afficher les entiers de 1 \u00e0 10 compris. for i in range ( 1 , 10 , 2 ): print ( i ) a. Quelles valeurs le programme affiche-t-il ? ...................................... b. Le modifier pour afficher cette fois-ci les multiples de 3 de 1 \u00e0 10 compris. Afficher, \u00e0 la mani\u00e8re d'un thermom\u00e8tre tr\u00e8s pr\u00e9cis, tous les entiers de 0 \u00e0 40 compris. Afficher tous les entiers de 40 \u00e0 0 compris. Afficher, \u00e0 la mani\u00e8re d'un thermom\u00e8tre moins pr\u00e9cis, les multiples de 5 en partant de 40 et en allant jusqu'\u00e0 0 compris.","title":"TP : Introduction aux boucles born\u00e9es"},{"location":"1ere/seq1/boucles_bornees/#cours","text":"Lorsque l'on utilise une boucle non-born\u00e9e, on n'a pas \u00e0 savoir \u00e0 l'avance combien de fois est-ce que l'on va r\u00e9p\u00e9ter les op\u00e9rations. On utilise une boucle born\u00e9e (qui a des bornes, de d\u00e9part et d'arriv\u00e9e) lorsqu'on le sait.","title":"Cours"},{"location":"1ere/seq1/boucles_bornees/#td-les-boucles-bornees","text":"","title":"TD : Les boucles born\u00e9es"},{"location":"1ere/seq1/boucles_bornees/#tp-dessiner-des-formes-geometriques-avec-turtle-2","text":"Dans ce TP, on am\u00e9liore ce qui a \u00e9t\u00e9 fait dans le premier TP Turtle, en utilisant des boucles. Voici un code qui permettait de tracer un carr\u00e9. V\u00e9rifier qu'il fonctionne bien en l'ex\u00e9cutant : from turtle import * forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) forward ( 100 ) left ( 90 ) done () R\u00e9ecrire ce code sans r\u00e9p\u00e9ter les instructions qui permettent d'avancer et de tourner, mais en utilisant une boucle for \u00e0 la place. Ne pas oublier l'appel done() \u00e0 la fin ! from turtle import * ... R\u00e9utiliser le code de la question 2 (donc avec une boucle) pour am\u00e9liorer la d\u00e9finition de la fonction carre(cote, couleur) , faite au TP pr\u00e9c\u00e9dent : from turtle import * def carre ( cote , couleur ): ... En appelant la fonction carre(cote, couleur) , tracer 4 carr\u00e9s de 100 pixels de c\u00f4t\u00e9, rouges, c\u00f4te \u00e0 c\u00f4te (coll\u00e9s) gr\u00e2ce \u00e0 une boucle born\u00e9e. from turtle import * ... Tracer encore 4 carr\u00e9s c\u00f4te \u00e0 c\u00f4te, mais espac\u00e9s de 50 pixels. On pourra utiliser soit la fonction forward , soit la fonction goto . On rappelle que up() et down() permettent de lever (pour ne pas tracer) et de baisser (pour tracer) la tortue. from turtle import * ... Utiliser une boucle born\u00e9e pour cr\u00e9er 4 cercles gr\u00e2ce \u00e0 la fonction circle(rayon) , de rayon 50px et espac\u00e9s de 50px. from turtle import * ... Utiliser une boucle born\u00e9e pour cr\u00e9er 4 cercles, respectivement de rayon 50, 40, 30 et 20px et espac\u00e9s de 10px. from turtle import * ... On veut maintenant dessiner 4 carr\u00e9s espac\u00e9s de 10px sur une ligne, puis 3 autres lignes de carr\u00e9s dessin\u00e9es en-dessous , dispos\u00e9s de la m\u00eame fa\u00e7on. Ecrire le programme correspondant, utilisant 2 boucles imbriqu\u00e9es et la fonction carre . from turtle import * ... Pour aller plus loin... Ecrire une fonction permettant de choisir le nombre de lignes et le nombre de colonnes de carr\u00e9s que l'on veut dessiner. from turtle import * ... Ne pas oublier d' enregistrer votre travail en cliquant sur la disquette en haut \u00e0 gauche !","title":"TP : Dessiner des formes g\u00e9om\u00e9triques avec Turtle 2"},{"location":"1ere/seq1/boucles_bornees/#tp-boucles-bornees-et-fonctions","text":"Pour toutes les questions de ce TP, on utilisera une boucle born\u00e9e. Ecrire une fonction somme1() ne prenant pas de param\u00e8tre, et renvoyant la somme des entiers de 1 \u00e0 100 compris. Ecrire une fonction somme2() ne prenant pas de param\u00e8tre, et renvoyant la somme des entiers pairs de 2 \u00e0 100 compris. Ecrire une fonction somme3(n) prenant un entier n en param\u00e8tre, et renvoyant la somme des entiers de 1 \u00e0 n compris. Ecrire une fonction somme4(n) prenant un entier n en param\u00e8tre, et renvoyant la somme des entiers impairs de 1 \u00e0 n compris. Ecrire une fonction multiplication(a, b) prenant en param\u00e8tres deux entiers a et b et renvoyant la multiplication de a par b sans utiliser l'op\u00e9rateur * , mais uniquement les op\u00e9rateurs + et - . Aide : distinguer le cas o\u00f9 a et b sont positifs, du cas o\u00f9 un des deux est positif, du cas o\u00f9 les 2 sont n\u00e9gatifs. Ecrire une fonction table(n) prenant en param\u00e8tre un entier n pouvant valoir de 2 \u00e0 9 et affichant sa table de multiplication. Ecrire une fonction tables_multiplication() affichant toutes les tables de multiplication des chiffres de 2 \u00e0 9 . On utilisera 2 boucles born\u00e9es imbriqu\u00e9es .","title":"TP : Boucles born\u00e9es et fonctions"},{"location":"1ere/seq1/boucles_non_bornees/","text":"body { text-align: justify} IV. Les boucles non-born\u00e9es \u00b6 Cours \u00b6 Dans certains probl\u00e8mes, on peut vouloir r\u00e9p\u00e9ter plusieurs fois de suite les m\u00eames op\u00e9rations. On peut utiliser pour cela des boucles non-born\u00e9es pour r\u00e9p\u00e9ter des instructions un nombre ind\u00e9termin\u00e9 de fois. A. Exemple \u00b6 Prenons l'exemple de la conversion d'un nombre n de la base 10 \u00e0 la base 2. On fait des divisions euclidiennes successives par 2 pour obtenir n \u00e9crit en binaire. Code 1 n = 4 2 r = n % 2 # on calcule le reste de n dans la division euclidienne par 2 3 n = n // 2 # on remplace n par son quotient dans la division par 2 4 r = n % 2 # on calcule le nouveau reste 5 n = n // 2 # on remplace n \u00e0 nouveau 6 r = n % 2 7 n = n // 2 Compl\u00e9ter la table de trace correspondant \u00e0 l'ex\u00e9cution de ce code : Ligne n r 1 2 3 4 5 6 7 Solution Ligne n r 1 4 / 2 4 0 3 2 0 4 2 0 5 1 0 6 1 1 7 0 1 On r\u00e9p\u00e8te les m\u00eames op\u00e9rations, jusqu'\u00e0 ce que n vale 0 . Au lieu de r\u00e9\u00e9crire les m\u00eames instructions, on peut utiliser une boucle tant que . En Python, on peut l'\u00e9crire de la mani\u00e8re suivante (code \u00e0 compl\u00e9ter) : Code n = 4 while ................ Solution n = 4 while n != 0 : r = n % 2 n = n // 2 print ( r ) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder B. Cas g\u00e9n\u00e9ral \u00b6 D\u00e9finition Une boucle non-born\u00e9e r\u00e9p\u00e8te une instruction un nombre ind\u00e9termin\u00e9 de fois. Elle s'ex\u00e9cute tant que sa condition vaut True . Algorithme et traduction Python (\u00e0 compl\u00e9ter) tant que condition instructions La condition est une expression bool\u00e9enne et les instructions une suite d' op\u00e9rations . Quand est-ce que la boucle s'arr\u00eate ? Elle s'arr\u00eate lorsque la condition devient fausse - c'est-\u00e0-dire qu'elle vaut False . La syntaxe Python est similaire \u00e0 celle utilis\u00e9e pour les instructions conditionnelles : - la condition est suivie de : , - Comment sont plac\u00e9es les instructions par rapport au while ? Elles sont plac\u00e9es \u00e0 une indentation sur la droite. Attention ! Le cauchemar du programmeur est d'\u00e9crire un code dans lequel il y a une boucle infinie : une boucle de laquelle on ne sort pas. Il faut donc toujours v\u00e9rifier qu'\u00e0 un moment dans l'ex\u00e9cution du programme, la condition sera fausse . Classiquement, on fait d\u00e9cro\u00eetre ou cro\u00eetre une variable. TD \u00b6 Exercice 1 \u00b6 Code compt = 1 while compt < 10 : compt = compt * 2 print ( compt ) Remplir la table de trace suivante, avec le nombre d'it\u00e9ration de boucle ad\u00e9quat : It\u00e9ration Condition compt initialisation 1 2 En d\u00e9duire la valeur affich\u00e9e \u00e0 la fin de l'ex\u00e9cution du programme. Exercice 2 \u00b6 Ecrire un programme remplissant les conditions suivantes : - initialisant une variable n \u00e0 la valeur 0 , - augmentant (incr\u00e9mentant) la valeur de n de 1 \u00e0 chaque passage dans une boucle while , - la valeur de n \u00e0 la fin de l'ex\u00e9cution de la boucle doit \u00eatre de 5 . Exercice 3 : Identification \u00b6 L'acc\u00e8s \u00e0 une page Web reste verrouill\u00e9 tant que l'on n'entre pas le bon mot de passe. On donne le code suivant (incomplet) , qui g\u00e8re cet acc\u00e8s : Code mdp = \"hj51dpM@\" rep = \"\" while ................. : rep = input ( \"Entrer le mot de passe pour acc\u00e9der \u00e0 la page.\" ) print ( \"Acc\u00e8s autoris\u00e9\" ) La fonction input affiche un message et demande \u00e0 l'utilisateur d'entrer une valeur, qui est r\u00e9cup\u00e9r\u00e9e dans une variable, ici rep . Identifier les diff\u00e9rentes variables du code et indiquer leur utilit\u00e9. Compl\u00e9ter le code avec la condition qui convient.","title":"IV. Les boucles non-born\u00e9es"},{"location":"1ere/seq1/boucles_non_bornees/#iv-les-boucles-non-bornees","text":"","title":"IV. Les boucles non-born\u00e9es"},{"location":"1ere/seq1/boucles_non_bornees/#cours","text":"Dans certains probl\u00e8mes, on peut vouloir r\u00e9p\u00e9ter plusieurs fois de suite les m\u00eames op\u00e9rations. On peut utiliser pour cela des boucles non-born\u00e9es pour r\u00e9p\u00e9ter des instructions un nombre ind\u00e9termin\u00e9 de fois.","title":"Cours"},{"location":"1ere/seq1/boucles_non_bornees/#td","text":"","title":"TD"},{"location":"1ere/seq1/conditions/","text":"body { text-align: justify} III. Les conditions \u00b6 Cours \u00b6 A. Les expressions bool\u00e9ennes \u00b6 D\u00e9finitions Une variable de type bool\u00e9en ne peut prendre que la valeur True ou la valeur False en Python. Une expression est un ensemble de variables et/ou de valeurs, et d' op\u00e9rateurs . Une expression bool\u00e9enne est une expression renvoyant un bool\u00e9en. On utilise une expression bool\u00e9enne pour comparer diff\u00e9rentes donn\u00e9es : diff\u00e9rentes valeurs, stock\u00e9es dans une variable ou bien dont on donne directement la valeur. Op\u00e9rateur (en Python) Signification == \u00e9gal != diff\u00e9rent > strictement sup\u00e9rieur < strictement inf\u00e9rieur >= sup\u00e9rieur ou \u00e9gal <= inf\u00e9rieur ou \u00e9gal Exemples Ici a vaut 7 , pommes vaut 3 , nombre1 vaut 25.8 et nombre2 vaut 137.2 . Expression (en Python) Signification Valeur a == 5 0 != pommes nombre1 <= nombre2 123 > 12 Solution Expression (en Python) Signification Valeur a == 5 teste si la variable a contient la valeur 5 False 0 != pommes teste si la valeur de la variable pommes est diff\u00e9rente de 0 False nombre1 <= nombre2 teste si la valeur de nombre1 est inf\u00e9rieure ou \u00e9gale \u00e0 celle de nombre2 True 123 > 12 teste si la valeur 123 est strictement sup\u00e9rieure \u00e0 la valeur 12 True La r\u00e9ponse \u00e0 ces tests sera toujours True ou False . B. Les instructions conditionnelles \u00b6 On peut vouloir qu'un algorithme ne fasse pas les m\u00eames op\u00e9rations en fonction des donn\u00e9es du probl\u00e8me. On utilise alors l'instruction conditionnelle \"Si... alors...\" et \"Sinon...\". B.1. Exemple : trouver le bon prix \u00b6 On veut faire deviner le prix d'un objet \u00e0 un utilisateur stock\u00e9 dans une variable prix_objet . S'il rentre la bonne valeur dans la variable prix , on affiche qu'il l'a trouv\u00e9. Sinon, on affiche le contraire. Algorithme utilis\u00e9 : Si prix \u00e9gal \u00e0 prix_objet afficher \"vous avez trouv\u00e9 le prix\" Sinon afficher \"vous n'avez pas trouv\u00e9\" Traduction en Python if prix == prix_objet : print ( \"vous avez trouv\u00e9 le prix\" ) else : print ( \"vous n'avez pas trouv\u00e9\" ) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder On veut donner plus d'indications au joueur : on veut lui dire si la valeur qu'il a entr\u00e9e, si elle est mauvaise, est inf\u00e9rieure ou sup\u00e9rieure \u00e0 celle attendue. Algorithme utilis\u00e9 : Si prix \u00e9gal \u00e0 prix_objet afficher \"vous avez trouv\u00e9 le prix\" Sinon si prix inf\u00e9rieur \u00e0 prix_objet afficher \"la valeur est inf\u00e9rieure au prix de l'objet\" Sinon afficher \"la valeur est sup\u00e9rieure au prix de l'objet\" Traduction en Python if prix == prix_objet : print ( \"vous avez trouv\u00e9 le prix\" ) elif prix < prix_objet : print ( \"la valeur est inf\u00e9rieure au prix de l'objet\" ) else : print ( \"la valeur est sup\u00e9rieure au prix de l'objet\" ) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder B.2. Principe g\u00e9n\u00e9ral et syntaxe \u00b6 Dans le cas g\u00e9n\u00e9ral, on \u00e9crit l'algorithme sous la forme suivante : Si condition alors instructionA Sinon instructionB Cela correspond en Python \u00e0 : if condition : instructionA else : instructionB La syntaxe Python est importante ! - Les : : indispensables pour marquer la fin de l' expression bool\u00e9enne utilis\u00e9e. - l' indentation est l'espacement par rapport au bord. Elle sert \u00e0 indiquer quelles sont les instructions \u00e0 ex\u00e9cuter uniquement si la condition est vraie, et celles ex\u00e9cut\u00e9es uniquement si la condition est fausse. TD \u00b6 Exercice : (sur feuille) \u00b6 Remplir la table de trace du code suivant : Code seuil = 100 x = 124 if x > seuil : x = seuil Ligne seuil x 1 2 3 4 En d\u00e9duire ce que fait ce programme. Exercice : Minimum et maximum (sur feuille, \u00e0 tester sur ordinateur) \u00b6 On veut \u00e9crire un programme qui stocke dans une variable minimum le minimum entre deux entiers a et b , \u00e0 l'aide d'une instruction conditionnelle. Compl\u00e9ter les entr\u00e9es et sorties du probl\u00e8me sur le sch\u00e9ma suivant : graph LR ............. --> F[algorithme]; .............. --> F; F --> ...................... Compl\u00e9ter le programme suivant effectuant l'op\u00e9ration demand\u00e9e : Code a = 9 b = 2 Quelle valeur contient la variable minimum , apr\u00e8s ex\u00e9cution du programme ? Comment modifier le programme pour en avoir un qui retourne le maximum entre deux entiers ? Code a = 101 b = 64 Ecrire une fonction trouve_maximum prenant en param\u00e8tres deux nombres a et b et renvoyant le maximum des deux. \u00b6 Exercice : R\u00e9seau social et conditions multiples (sur feuille, v\u00e9rification sur ordinateur) \u00b6 Sur un r\u00e9seau social, le contenu des publications d'un utilisateur n'est visible que par ses amis. On repr\u00e9sente le probl\u00e8me avec les variables suivantes : - ami est une variable de type bool\u00e9en indiquant si l'utilisateur qui veut voir les publications est un ami ou non. - publication est une variable de type cha\u00eene de caract\u00e8re avec le contenu d'une publication. Combien y a-t-il de cas \u00e0 traiter ? Proposer un algorithme qui mod\u00e9lise ce probl\u00e8me et le traduire en Python : Algorithme et code On rajoute une possibilit\u00e9 de voir la publication : si celle-ci est publique, elle est visible par tout utilisateur, m\u00eame s'il n'est pas ami avec celui qui poste. On utilise une variable bool\u00e9enne publique pour repr\u00e9senter cela. Combien y a-t-il \u00e0 pr\u00e9sent de cas \u00e0 traiter ? Proposer un nouvel algorithme et le traduire en Python. Algorithme et code Exercice : Publicit\u00e9 cibl\u00e9e (sur feuille, \u00e0 tester sur ordinateur) \u00b6 Un vendeur de t\u00e9l\u00e9phones veut afficher de la publicit\u00e9 aux personnes se trouvant \u00e0 proximit\u00e9, c'est-\u00e0-dire \u00e0 moins de 10 km. D\u00e9finir une fonction publicite_ciblee(distance) prenant en param\u00e8tre la distance entre une personne et le magasin en km, et affichant \"Promotions chez monTel, venez rapidement !\" si distance est inf\u00e9rieure \u00e0 10 km. Code Appeler la fonction pour distance valant 5 , puis pour distance valant 19 . Que fait la fonction dans chacun des cas ? TP : Conditions et fonctions \u00b6 A. Devoir r\u00e9ussi ? \u00b6 \u00c9crire un programme qui : stocke la valeur 12 dans une variable note , si cette valeur est inf\u00e9rieure \u00e0 10, il affiche \"Vous avez eu moins que la moyenne.\" sinon, il affiche \"Vous avez eu plus que la moyenne\" . Ex\u00e9cuter le programme. Faire un 2\u00e8me test, en affectant la valeur 7 \u00e0 note . \u00c9crire un programme qui : stocke la valeur 12 dans une variable note , si cette valeur est \u00e9gale \u00e0 10, il affiche \"Vous avez eu la moyenne.\" sinon, si elle est inf\u00e9rieure \u00e0 10, il affiche \"Vous avez eu moins que la moyenne.\" sinon, il affiche \"Vous avez eu plus que la moyenne\" . Ex\u00e9cuter le programme. Faire un 2\u00e8me test, en affectant la valeur 10 \u00e0 note . \u00c9crire une fonction qui : prend en param\u00e8tre une variable note , si cette valeur est \u00e9gale \u00e0 10, elle affiche \"Vous avez eu la moyenne.\" sinon, si elle est inf\u00e9rieure \u00e0 10, elle affiche \"Vous avez eu moins que la moyenne.\" sinon, elle affiche \"Vous avez eu plus que la moyenne\" . Ex\u00e9cuter le programme. Appeler la fonction en lui donnant la valeur 30 en param\u00e8tre. B. \u00cates-vous majeur ? \u00b6 \u00c9crire un programme qui : stocke la valeur 16 dans une variable age , si cette valeur est sup\u00e9rieure \u00e0 18, il affiche \"Vous avez plus de 18 ans.\" , sinon, il affiche \"Vous avez moins de 18 ans.\" . Ex\u00e9cuter le programme. Faire un 2\u00e8me test, en affectant la valeur 25 \u00e0 age . \u00c9crire un programme qui : stocke la valeur 16 dans une variable age , si cette valeur est \u00e9gale \u00e0 18, il affiche \"Vous avez 18 ans\" , sinon, si cette valeur est sup\u00e9rieure \u00e0 18, il affiche \"Vous avez plus de 18 ans.\" sinon, il affiche \"Vous avez moins de 18 ans.\" Ex\u00e9cuter le programme. Faire un 2\u00e8me test, en affectant la valeur 25 \u00e0 age . \u00c9crire une fonction qui : prend en param\u00e8tre une variable age , si cette valeur est \u00e9gale \u00e0 18, il affiche \"Vous avez 18 ans\" , sinon, si cette valeur est sup\u00e9rieure \u00e0 18, il affiche \"Vous avez plus de 18 ans.\" sinon, il affiche \"Vous avez moins de 18 ans.\" Ex\u00e9cuter le programme. Appeler la fonction en lui donnant la valeur 25 en param\u00e8tre. TP : Conditions multiples \u00b6 Introduction \u00b6 L'objectif de ce TP est d'\u00e9crire un programme qui renvoie automatiquement le nombre de jours qu'il y a dans un mois de l'ann\u00e9e. On repr\u00e9sente les mois de l'ann\u00e9e par leur num\u00e9ro : par exemple janvier est le mois 1 , f\u00e9vrier le mois 2 , et ainsi de suite jusqu'au mois de d\u00e9cembre repr\u00e9sent\u00e9 par l'entier 12 . Tableau 1. Mois de d\u00e9but d'ann\u00e9e Janvier F\u00e9vrier Mars Avril Mai Juin Juillet Entier Nombre de jours Tableau 2. Mois de fin d'ann\u00e9e Ao\u00fbt Septembre Octobre Novembre D\u00e9cembre Entier Nombre de jours Compl\u00e9ter le tableau avec l'entier associ\u00e9 \u00e0 chaque mois. Le nombre de jours contienus dans un mois d\u00e9pend de s'il fait partie des 7 premiers mois de l'ann\u00e9e, ou des 5 derniers. Ecrire une fonction, stockant dans une variable debut un bool\u00e9en, valant True si mois est un mois du d\u00e9but de l'ann\u00e9e, False sinon. Code def est_debut ( m ): a. Au d\u00e9but de l'ann\u00e9e, si mois est pair, alors il a 30 jours, sauf s'il s'agit du mois de f\u00e9vrier qui en a en g\u00e9n\u00e9ral 28. Sinon, il a 31 jours. Compl\u00e9ter le tableau des premiers mois de l'ann\u00e9e, pour indiquer le nombre de jours des mois de janvier \u00e0 juillet. b. Traduire l'algorithme suivant en Python permettant de stocker le nombre de jours du mois mois dans une variable nb_jours . Si mois vaut ... (\u00e0 compl\u00e9ter) , on stocke la valeur 28 dans nb_jours, sinon si mois est pair, stocke la valeur 30 dans nb_jours, sinon, il stocke la valeur 31 dans nb_jours. Code a. Si l'on est \u00e0 la fin de l'ann\u00e9e, c'est l'inverse : si le mois est pair, il a 31 jours, sinon il a 30 jours. Compl\u00e9ter le tableau des mois de fin d'ann\u00e9e (dans l'introduction) avec leur nombre de jours. b. Ecrire un programme (s'inspirant de celui de la question 2) stockant le bon nombre de jours dans nb_jours pour ce cas l\u00e0. Code Ecrire un programme reprenant tous les cas pr\u00e9c\u00e9dents. Il suivra l'algorithme suivant : Si mois est du d\u00e9but de l'ann\u00e9e Si c'est le mois de f\u00e9vrier on stocke le nombre de jours correspondant dans nb_jours Sinon s'il est pair on stocke le nombre de jours correspondant dans nb_jours Sinon on stocke le nombre de jours correspondant dans nb_jours Sinon S'il est pair on stocke le nombre de jours correspondant dans nb_jours Sinon on stocke le nombre de jours correspondant dans nb_jours Tester ce programme pour mois valant 3 , 6 , et 10 . Ecrire une fonction compte_jours(m) prenant en param\u00e8tre un mois m et renvoyant son nombre de jours stock\u00e9 dans la variable nb_jours . Code","title":"III. Les conditions"},{"location":"1ere/seq1/conditions/#iii-les-conditions","text":"","title":"III. Les conditions"},{"location":"1ere/seq1/conditions/#cours","text":"","title":"Cours"},{"location":"1ere/seq1/conditions/#td","text":"","title":"TD"},{"location":"1ere/seq1/conditions/#tp-conditions-et-fonctions","text":"","title":"TP : Conditions et fonctions"},{"location":"1ere/seq1/conditions/#tp-conditions-multiples","text":"","title":"TP : Conditions multiples"},{"location":"1ere/seq1/fonctions/","text":"body { text-align: justify} II. Les fonctions \u00b6 Cours \u00b6 Une fonction est un sous-programme qui peut \u00eatre utilis\u00e9 plusieurs fois dans le programme principal. Ce sous-programme effectue un traitement pr\u00e9cis (une suite d'instructions) sur des donn\u00e9es en param\u00e8tres. A. D\u00e9finition d'une fonction \u00b6 On la d\u00e9finit de la mani\u00e8re suivante (entourer les \u00e9l\u00e9ments de syntaxe Python \u00e0 retenir) : def nom_de_la_fonction ( param1 , param2 , ... ) # le nombre de param\u00e8tres d\u00e9pend de la fonction instruction1 instruction2 ... return resultat # le renvoi d'un r\u00e9sultat est facultatif On peut le repr\u00e9senter sch\u00e9matiquement de la fa\u00e7on suivante. graph LR param1 --> F[nom_de_la_fonction]; param2 --> F[nom_de_la_fonction]; F --> resultat Elle peut avoir de 0 \u00e0 un nombre n de param\u00e8tres, de m\u00eame pour les valeurs de r\u00e9sultat. Au lieu de param\u00e8tres et r\u00e9sultats, on parle aussi d' entr\u00e9es (les donn\u00e9es que l'on a avant de faire un traitement) et de sorties (ce que l'on obtient apr\u00e8s le traitement) . Exemples Pour chacun d'eux, compl\u00e9ter la syntaxe de la fonction en Python. Algorithme 1 fonction dire_bonjour : affiche \"bonjour\" Algorithme 2 fonction saluer ( nom ) : affiche \"bonjour\" + nom Algorithme 3 fonction carre ( x ) : renvoie x au carr\u00e9 B. Appel d'une fonction \u00b6 On appelle la fonction de diff\u00e9rentes fa\u00e7on, en fonction de son nombre de param\u00e8tres et de r\u00e9sultats. Exemples Indiquer, dans chaque cas, ce qui sera affich\u00e9 par l'interpr\u00e9teur. Code 1 dire_bonjour () Code 2 saluer ( \"Dupont\" ) # autre possibilit\u00e9 n = \"Dupont\" saluer ( n ) Code 3 y = carre ( 5 ) TP : Dessiner des formes g\u00e9om\u00e9triques avec Turtle \u00b6 Introduction aux fichiers Notebook L'application Capytale permet d'utiliser des Notebooks : des fichiers qui permettent de faire du Python en ligne. Ils se d\u00e9coupent en plusieurs cellules : soit du texte, soit du code en Python. Pour ex\u00e9cuter les codes, il faut cliquer sur la cellule, puis sur \"Ex\u00e9cuter\". N'essayez pas de modifier les cellules texte ! Nous allons tracer des figures avec la biblioth\u00e8que (ensemble de fonctions d\u00e9j\u00e0 \u00e9crites) turtle , qui fait d\u00e9placer une tortue pour dessiner avec. Le code suivant trace un segment de 100 px. La fonction forward(dist) fait avancer la tortue d'une distance dist , exprim\u00e9e en pixels. La fonction done() indique que l'on a termin\u00e9 et doit toujours \u00eatre plac\u00e9e \u00e0 la fin du programme. Cliquer sur le code, puis sur Ex\u00e9cuter . from turtle import * # on importe une biblioth\u00e8que : un ensemble de fonctions, ici pour pouvoir dessiner forward ( 100 ) # avance la tortue de 100 px done () # instruction obligatoire : indique de faire le trac\u00e9 Les fonctions left(angle) et right(angle) permettent de changer l'orientation de la tortue, de la faire tourner d'un angle angle exprim\u00e9 en pixels, respectivement sur la gauche ou sur la droite. Compl\u00e9ter les param\u00e8tres des fonctions dans le code suivant pour tracer un carr\u00e9 bleu dont la longueur du c\u00f4t\u00e9 est de 100 px : from turtle import * color ( \"blue\" ) forward ( ... ) left ( ... ) forward ( ... ) left ( ... ) forward ( ... ) left ( ... ) forward ( ... ) done () Ecrire une fonction carre , dessinant un carr\u00e9 de longueur cote , pass\u00e9 en param\u00e8tre. V\u00e9rifier que votre code trace bien un carr\u00e9 de 100px de c\u00f4t\u00e9, gr\u00e2ce \u00e0 l'appel carre(100) . from turtle import * def carre ( cote ): ... #\u00e0 compl\u00e9ter carre ( 100 ) On veut pouvoir aussi modifier la couleur du carr\u00e9. R\u00e9ecrire une fonction carre prenant cette fois-ci deux param\u00e8tres : cote et couleur . Ajouter un appel \u00e0 la fonction pour dessiner un troisi\u00e8me carr\u00e9 de longueur de c\u00f4t\u00e9 50 et de couleur jaune (\"yellow\"). from turtle import * def carre ( cote , couleur ): ... #\u00e0 compl\u00e9ter carre ( 200 , \"blue\" ) carre ( 100 , \"green\" ) # ajouter un appel ici On a jusqu'\u00e0 pr\u00e9sent d\u00e9plac\u00e9 la tortue de mani\u00e8re relative : en avan\u00e7ant par rapport \u00e0 l\u00e0 o\u00f9 elle \u00e9tait. On peut aussi lui donner directement des coordonn\u00e9es auxquelles elle doit se d\u00e9placer. goto(x,y) permet de d\u00e9placer la tortue \u00e0 un point de coordonn\u00e9es (x,y), exprim\u00e9es en pixels. Les fonctions up() et down() permettent respectivement de lever et de baisser le crayon. Quand il est lev\u00e9, on ne trace pas, et on recommence \u00e0 tracer quand il est baiss\u00e9. Pour tracer des cercles, une fonction circle existe d\u00e9j\u00e0, il suffit de l'appeler. Ex\u00e9cuter le code suivant, tra\u00e7ant un cercle rouge de 100px de rayon sur la gauche de l'\u00e9cran : from turtle import * color ( \"red\" ) up () goto ( - 200 , 0 ) down () circle ( 100 ) #la valeur du rayon est donn\u00e9e en param\u00e8tre done () Compl\u00e9ter le code suivant pour tracer un premier cercle de rayon 50px \u00e0 partir de la position (-200,0), et un deuxi\u00e8me \u00e0 partir de la position (-100,0). from turtle import * color ( \"red\" ) up () goto ( - 200 , 0 ) down () circle ( ... ) #... \u00e0 compl\u00e9ter done () On veut pouvoir aussi pouvoir modifier la couleur du cercle avec un seul appel de fonction. R\u00e9ecrire une fonction circle qui trace un cercle en faisant appel \u00e0 circle, et d\u00e9finit sa couleur en param\u00e8tre. Appeler la fonction pour tracer un cercle de rayon 150 et de couleur orange. from turtle import * def cercle ( rayon , couleur ): ... #\u00e0 compl\u00e9ter # \u00e9crire l'appel de la fonction Ecrire un programme tra\u00e7ant des cercles de rayon 100 : un rouge, un bleu et un vert, espac\u00e9s chacuns de 100 px. Vous utiliserez la fonction cercle d\u00e9finie \u00e0 la question 7 (elle est connue si vous avez ex\u00e9cut\u00e9 la cellule pr\u00e9c\u00e9dente) . from turtle import * # c'est parti ! Ne pas oublier d' enregistrer votre travail en cliquant sur la disquette en haut \u00e0 gauche ! TP : Op\u00e9rations simples avec des fonctions \u00b6 Ecrire une fonction fois_deux(x) qui prend en param\u00e8tre un entier ou un flottant x et affiche sa valeur multipli\u00e9e par 2. Tester son fonctionnement en l'appelant pour x valant 6 . Modifier cette fonction pour qu'elle n'affiche pas le r\u00e9sultat, mais le renvoie. Tester son fonctionnement en l'appelant pour x valant 6 . Comment r\u00e9cup\u00e9rer le r\u00e9sultat ? Ecrire une fonction multiplication(a, b) affichant le produit de a par b . Tester son fonctionnement en l'appelant sur les valeurs 3 et 4 . Tester son fonctionnement en l'appelant sur les valeurs 3.0 et 4.0 . Que remarquez-vous ? Modifier cette fonction pour qu'elle n'affiche pas le r\u00e9sultat, mais le renvoie. Faire le m\u00eame test que dans la question 6, et r\u00e9cup\u00e9rer le r\u00e9sultat dans une variable. De la m\u00eame fa\u00e7on, \u00e9crire une fonction addition(a, b) renvoyant la somme de a et de b , et tester son fonctionnement en affectant 3 \u00e0 a et 4 \u00e0 b .","title":"II. Les fonctions"},{"location":"1ere/seq1/fonctions/#ii-les-fonctions","text":"","title":"II. Les fonctions"},{"location":"1ere/seq1/fonctions/#cours","text":"Une fonction est un sous-programme qui peut \u00eatre utilis\u00e9 plusieurs fois dans le programme principal. Ce sous-programme effectue un traitement pr\u00e9cis (une suite d'instructions) sur des donn\u00e9es en param\u00e8tres.","title":"Cours"},{"location":"1ere/seq1/fonctions/#tp-dessiner-des-formes-geometriques-avec-turtle","text":"Introduction aux fichiers Notebook L'application Capytale permet d'utiliser des Notebooks : des fichiers qui permettent de faire du Python en ligne. Ils se d\u00e9coupent en plusieurs cellules : soit du texte, soit du code en Python. Pour ex\u00e9cuter les codes, il faut cliquer sur la cellule, puis sur \"Ex\u00e9cuter\". N'essayez pas de modifier les cellules texte ! Nous allons tracer des figures avec la biblioth\u00e8que (ensemble de fonctions d\u00e9j\u00e0 \u00e9crites) turtle , qui fait d\u00e9placer une tortue pour dessiner avec. Le code suivant trace un segment de 100 px. La fonction forward(dist) fait avancer la tortue d'une distance dist , exprim\u00e9e en pixels. La fonction done() indique que l'on a termin\u00e9 et doit toujours \u00eatre plac\u00e9e \u00e0 la fin du programme. Cliquer sur le code, puis sur Ex\u00e9cuter . from turtle import * # on importe une biblioth\u00e8que : un ensemble de fonctions, ici pour pouvoir dessiner forward ( 100 ) # avance la tortue de 100 px done () # instruction obligatoire : indique de faire le trac\u00e9 Les fonctions left(angle) et right(angle) permettent de changer l'orientation de la tortue, de la faire tourner d'un angle angle exprim\u00e9 en pixels, respectivement sur la gauche ou sur la droite. Compl\u00e9ter les param\u00e8tres des fonctions dans le code suivant pour tracer un carr\u00e9 bleu dont la longueur du c\u00f4t\u00e9 est de 100 px : from turtle import * color ( \"blue\" ) forward ( ... ) left ( ... ) forward ( ... ) left ( ... ) forward ( ... ) left ( ... ) forward ( ... ) done () Ecrire une fonction carre , dessinant un carr\u00e9 de longueur cote , pass\u00e9 en param\u00e8tre. V\u00e9rifier que votre code trace bien un carr\u00e9 de 100px de c\u00f4t\u00e9, gr\u00e2ce \u00e0 l'appel carre(100) . from turtle import * def carre ( cote ): ... #\u00e0 compl\u00e9ter carre ( 100 ) On veut pouvoir aussi modifier la couleur du carr\u00e9. R\u00e9ecrire une fonction carre prenant cette fois-ci deux param\u00e8tres : cote et couleur . Ajouter un appel \u00e0 la fonction pour dessiner un troisi\u00e8me carr\u00e9 de longueur de c\u00f4t\u00e9 50 et de couleur jaune (\"yellow\"). from turtle import * def carre ( cote , couleur ): ... #\u00e0 compl\u00e9ter carre ( 200 , \"blue\" ) carre ( 100 , \"green\" ) # ajouter un appel ici On a jusqu'\u00e0 pr\u00e9sent d\u00e9plac\u00e9 la tortue de mani\u00e8re relative : en avan\u00e7ant par rapport \u00e0 l\u00e0 o\u00f9 elle \u00e9tait. On peut aussi lui donner directement des coordonn\u00e9es auxquelles elle doit se d\u00e9placer. goto(x,y) permet de d\u00e9placer la tortue \u00e0 un point de coordonn\u00e9es (x,y), exprim\u00e9es en pixels. Les fonctions up() et down() permettent respectivement de lever et de baisser le crayon. Quand il est lev\u00e9, on ne trace pas, et on recommence \u00e0 tracer quand il est baiss\u00e9. Pour tracer des cercles, une fonction circle existe d\u00e9j\u00e0, il suffit de l'appeler. Ex\u00e9cuter le code suivant, tra\u00e7ant un cercle rouge de 100px de rayon sur la gauche de l'\u00e9cran : from turtle import * color ( \"red\" ) up () goto ( - 200 , 0 ) down () circle ( 100 ) #la valeur du rayon est donn\u00e9e en param\u00e8tre done () Compl\u00e9ter le code suivant pour tracer un premier cercle de rayon 50px \u00e0 partir de la position (-200,0), et un deuxi\u00e8me \u00e0 partir de la position (-100,0). from turtle import * color ( \"red\" ) up () goto ( - 200 , 0 ) down () circle ( ... ) #... \u00e0 compl\u00e9ter done () On veut pouvoir aussi pouvoir modifier la couleur du cercle avec un seul appel de fonction. R\u00e9ecrire une fonction circle qui trace un cercle en faisant appel \u00e0 circle, et d\u00e9finit sa couleur en param\u00e8tre. Appeler la fonction pour tracer un cercle de rayon 150 et de couleur orange. from turtle import * def cercle ( rayon , couleur ): ... #\u00e0 compl\u00e9ter # \u00e9crire l'appel de la fonction Ecrire un programme tra\u00e7ant des cercles de rayon 100 : un rouge, un bleu et un vert, espac\u00e9s chacuns de 100 px. Vous utiliserez la fonction cercle d\u00e9finie \u00e0 la question 7 (elle est connue si vous avez ex\u00e9cut\u00e9 la cellule pr\u00e9c\u00e9dente) . from turtle import * # c'est parti ! Ne pas oublier d' enregistrer votre travail en cliquant sur la disquette en haut \u00e0 gauche !","title":"TP : Dessiner des formes g\u00e9om\u00e9triques avec Turtle"},{"location":"1ere/seq1/fonctions/#tp-operations-simples-avec-des-fonctions","text":"Ecrire une fonction fois_deux(x) qui prend en param\u00e8tre un entier ou un flottant x et affiche sa valeur multipli\u00e9e par 2. Tester son fonctionnement en l'appelant pour x valant 6 . Modifier cette fonction pour qu'elle n'affiche pas le r\u00e9sultat, mais le renvoie. Tester son fonctionnement en l'appelant pour x valant 6 . Comment r\u00e9cup\u00e9rer le r\u00e9sultat ? Ecrire une fonction multiplication(a, b) affichant le produit de a par b . Tester son fonctionnement en l'appelant sur les valeurs 3 et 4 . Tester son fonctionnement en l'appelant sur les valeurs 3.0 et 4.0 . Que remarquez-vous ? Modifier cette fonction pour qu'elle n'affiche pas le r\u00e9sultat, mais le renvoie. Faire le m\u00eame test que dans la question 6, et r\u00e9cup\u00e9rer le r\u00e9sultat dans une variable. De la m\u00eame fa\u00e7on, \u00e9crire une fonction addition(a, b) renvoyant la somme de a et de b , et tester son fonctionnement en affectant 3 \u00e0 a et 4 \u00e0 b .","title":"TP : Op\u00e9rations simples avec des fonctions"},{"location":"1ere/seq1/variables/","text":"body { text-align: justify} I. Les variables \u00b6 Cours \u00b6 A. Les variables et les types \u00b6 Les donn\u00e9es manipul\u00e9es par les algorithmes sont stock\u00e9es dans des variables. D\u00e9finition Une variable correspond \u00e0 une zone de m\u00e9moire, qui stocke des donn\u00e9es. Elle est d\u00e9sign\u00e9e par un nom et contient une valeur . Exemple Pour stocker le nombre de pommes que l'on a pour faire la tarte, on peut utiliser une variable dont le nom est pommes . Avant de commencer la recette, elle contient la valeur 4 . D\u00e9finitions Le nom est compos\u00e9 en Python de caract\u00e8res alphanum\u00e9riques : les lettres minuscules, majuscules et les chiffres, et de tirets du bas : _ ('underscore\"). Il ne peut pas commencer par un chiffre. La valeur peut \u00eatre de diff\u00e9rents types , correspondant \u00e0 un stockage diff\u00e9rent dans la m\u00e9moire de l'ordinateur. Compl\u00e9ter le tableau suivant avec avec les types de base : Type En Python (en anglais) Exemples entier int (\"integer\") 1, 36, -27 flottants cha\u00eenes de caract\u00e8res bool\u00e9ens Solution Type En Python (en anglais) Exemples entier int (\"integer\") 1 , 36 , -27 flottants float (\"floating point number\") 1.0 , -3.14 , 10e15 cha\u00eenes de caract\u00e8res str (\"string\") 'abc' , \"bonjour\" , '12345' bool\u00e9ens bool (\"boolean\") True ou False Exemple Notre variable pommes contenant la valeur 4 est donc de type entier . Si on \u00e9crit 4.0 , elle est de type flottant , et si on \u00e9crit \"4\" , elle est de type cha\u00eenes de caract\u00e8res . B. L'affectation et les op\u00e9rateurs \u00b6 D\u00e9finition Affecter une valeur \u00e0 une variable consiste \u00e0 stocker une valeur (qui a un type) dans l'espace de m\u00e9moire de la variable. On utilise l'op\u00e9rateur = en Python, et la syntaxe nom_de_la_variable = valeur . Cette valeur peut \u00eatre chang\u00e9e dans la suite du programme. Une variable , par d\u00e9finition, n'est pas fixe ! Exemple : Lire le programme et repr\u00e9senter sch\u00e9matiquement ce qu'il s'est pass\u00e9. Code pommes = 4 # puis on d\u00e9coupe une pomme pour faire la tarte pommes = 3 Schema D\u00e9finition On peut effectuer toute sorte d'op\u00e9rations sur ces variables, avec diff\u00e9rents op\u00e9rateurs . Compl\u00e9ter le tableau suivant : Symbole Op\u00e9ration Types + addition - * ** / // % Solution Symbole Op\u00e9ration Types + addition int+float->float , int(float)+str->ERREUR - soustraction int-float->float , int(float)-str->ERREUR * multiplication int*float->float , int(float)*str->ERREUR ** puissance sur int ou float / division sur int ou float // quotient de la division euclidienne sur int ou float % reste de la division euclidienne (modulo) sur int ou float Les op\u00e9rateurs permettent de modifier les valeurs des variables au fur et \u00e0 mesure d'un programme. Exemple Code 1 pommes = 4 2 pommes = pommes - 1 3 pommes = pommes * 3 Que contient la variable pomme apr\u00e8s ex\u00e9cution de ces deux instructions ? Elle contient la valeur 9. On peut repr\u00e9senter l'\u00e9volution des valeurs stock\u00e9es dans les variables d'un programme avec une table de trace . Compl\u00e9ter celle correspondant \u00e0 ce programme : Ligne pommes 1 2 3 Solution Ligne pommes 1 4 2 3 3 9 TD : Variables et affectation \u00b6 Exercice 1 : Noms de variables \u00b6 Le tableau suivant contient des noms de variables. Indiquer, pour chacune d'elle, si elle est valide ou non, et si ce n'est pas le cas indiquer pourquoi. Nom Valide ou non-valide Justification age user_age 123abc _name first name favoriteColor last-name total$ 3dogs car_model Exercice 2 : Types \u00b6 Pour chacune des valeurs propos\u00e9es, indiquer le type de base utilis\u00e9 et son nom en Python. 42 3.14 \"Hello, world!\" True -7 \"123\" 0.5 False \"True\" Type Nom en Python Exercice 3 : Op\u00e9rations sur les nombres \u00b6 Quelle est la valeur et le type du r\u00e9sultat de chaque expression (v\u00e9rifier sur ordinateur en cas de doute) ? 1 - 6 10.1 + 0.9 68 / 2.0 5 * 4 5 ** 4 7 % 10 10 ** 2 13 // 3 13 % 3 Valeur Type Exercice 4 : Amis sur un r\u00e9seau social \u00b6 Un utilisateur d'un r\u00e9seau social voit son nombre d'amis, initialement de 200 , augmenter de 8% par an. Combien a-t-il d'amis au total au bout d'un an ? On stocke le nombre d'amis dans une variable nb_amis . Compl\u00e9ter le code pour avoir successivement le nombre d'amis de cet utilisateur dans 1, 2 et 3 ans. Code nb_amis = 200 Exercice 5 : Valeurs d'une variable \u00b6 A faire sur feuille. Que vaut x apr\u00e8s ex\u00e9cution de ce programme ? ............... Code x = 1 x = 5 x = x + 2 Que vaut x apr\u00e8s ex\u00e9cution de ce programme ? ...............Que vaut y ? ............... Code x = 1 y = 5 y = x + 2 Exercice 6 : Manipulation de variables \u00b6 A faire sur feuille. On donne le code suivant : Code 1 a = 9 2 b = 24 3 t = a 4 a = b 5 b = t Remplir la table de trace suivante avec la valeur de chaque variable \u00e0 chaque ligne du programme, et en d\u00e9duire ce que fait ce programme. Ligne a b t 1 2 3 4 5 TP : Types et op\u00e9rateurs \u00b6 L'application Capytale permet d'utiliser des Notebooks : des fichiers qui permettent de faire du Python en ligne. Ils se d\u00e9coupent en plusieurs cellules : soit du texte , soit du code en Python. Pour ex\u00e9cuter les codes, il faut cliquer sur la cellule, puis sur \"Ex\u00e9cuter\". N'essayez pas de modifier les cellules texte ! Noter les r\u00e9ponses aux questions sur votre cahier de TP, et tout le code dans les cellules de code du Notebook. On s'int\u00e9resse dans ce TP aux types de variables, et \u00e0 l'utilisation d'op\u00e9rateurs usuels permettant de faire des calculs sur ces variables. Ex\u00e9cuter les scripts suivant. Quelle information donne la fonction type ? a = \"bonjour\" type ( a ) b = 15 type ( b ) c = True type ( c ) Quel est la valeur et le type de l'expression 6+10.0 ? S'inspirer de la question 1 pour afficher la r\u00e9ponse dans la cellule suivante. 6 + 10.0 a. Que se passe-t-il si l'on tape l'expression 1+'mot' ? b. Relever l'erreur (la 3\u00e8me ligne qui s'affiche) produite en anglais, et en faire une traduction. Si besoin, utiliser un traducteur en ligne comme Google Translate. a. Le calcul de la question 3 n'avait pas beaucoup de sens, mais il est possible dans un programme de se retrouver avec un calcul du type 1+'5' . Que va-t-il se passer ? b. Le v\u00e9rifier avec le programme suivant : nb1 = 1 nb2 = '5' print ( nb1 + nb2 ) Note : L'instruction print(...) permet d'afficher ce qu'il y a entre les parenth\u00e8ses. c. La fonction input permet de demander \u00e0 l'utilisateur de rentrer lui-m\u00eame une valeur pour une variable. Il la saisit au clavier, puis appuie sur la touche Entr\u00e9e. On remplace la ligne 2 du programme pr\u00e9c\u00e9dent par celle-ci : nb1 = 1 nb2 = input ( \"Entrer un nombre (entier ou flottant)\" ) print ( nb1 + nb2 ) d. Ex\u00e9cuter le programme. Que se passe-t-il ? e. La valeur stock\u00e9e dans nb2 est de type str , pour faire des op\u00e9rations avec cette variable et des nombres, il faut la convertir. On peut utiliser la fonction int(...) qui prend en param\u00e8tre une variable (entre les parenth\u00e8ses) et la transforme en entier. Ajouter l'instruction suivante et v\u00e9rifier que cela fonctionne : nb1 = 1 nb2 = input ( \"Entrer un nombre (entier ou flottant)\" ) # ajouter l'op\u00e9ration de conversion ici print ( nb1 + nb2 ) On veut faire un convertisseur d'euros en dollars. En s'inspirant de la question 4, \u00e9crire un programme qui demande \u00e0 l'utilisateur d'entrer une somme (un entier ou un flottant) en utilisant la fonction input , la multiplie par 1.09 et affiche le r\u00e9sultat en dollars avec la fonction print . Un personnage de jeu a un nombre entier de points de vie point_de_vie et on stocke dans une variable degats un entier correspondant aux points perdus. Ecrire un programme qui demande \u00e0 l'utilisateur d'entrer un nombre de points de vie, stock\u00e9 dans une variable point_de_vie , puis un entier degats , et qui ensuite calcule et affiche le nombre de points de vie actualis\u00e9.","title":"I. Les variables"},{"location":"1ere/seq1/variables/#i-les-variables","text":"","title":"I. Les variables"},{"location":"1ere/seq1/variables/#cours","text":"","title":"Cours"},{"location":"1ere/seq1/variables/#td-variables-et-affectation","text":"","title":"TD : Variables et affectation"},{"location":"1ere/seq1/variables/#tp-types-et-operateurs","text":"L'application Capytale permet d'utiliser des Notebooks : des fichiers qui permettent de faire du Python en ligne. Ils se d\u00e9coupent en plusieurs cellules : soit du texte , soit du code en Python. Pour ex\u00e9cuter les codes, il faut cliquer sur la cellule, puis sur \"Ex\u00e9cuter\". N'essayez pas de modifier les cellules texte ! Noter les r\u00e9ponses aux questions sur votre cahier de TP, et tout le code dans les cellules de code du Notebook. On s'int\u00e9resse dans ce TP aux types de variables, et \u00e0 l'utilisation d'op\u00e9rateurs usuels permettant de faire des calculs sur ces variables. Ex\u00e9cuter les scripts suivant. Quelle information donne la fonction type ? a = \"bonjour\" type ( a ) b = 15 type ( b ) c = True type ( c ) Quel est la valeur et le type de l'expression 6+10.0 ? S'inspirer de la question 1 pour afficher la r\u00e9ponse dans la cellule suivante. 6 + 10.0 a. Que se passe-t-il si l'on tape l'expression 1+'mot' ? b. Relever l'erreur (la 3\u00e8me ligne qui s'affiche) produite en anglais, et en faire une traduction. Si besoin, utiliser un traducteur en ligne comme Google Translate. a. Le calcul de la question 3 n'avait pas beaucoup de sens, mais il est possible dans un programme de se retrouver avec un calcul du type 1+'5' . Que va-t-il se passer ? b. Le v\u00e9rifier avec le programme suivant : nb1 = 1 nb2 = '5' print ( nb1 + nb2 ) Note : L'instruction print(...) permet d'afficher ce qu'il y a entre les parenth\u00e8ses. c. La fonction input permet de demander \u00e0 l'utilisateur de rentrer lui-m\u00eame une valeur pour une variable. Il la saisit au clavier, puis appuie sur la touche Entr\u00e9e. On remplace la ligne 2 du programme pr\u00e9c\u00e9dent par celle-ci : nb1 = 1 nb2 = input ( \"Entrer un nombre (entier ou flottant)\" ) print ( nb1 + nb2 ) d. Ex\u00e9cuter le programme. Que se passe-t-il ? e. La valeur stock\u00e9e dans nb2 est de type str , pour faire des op\u00e9rations avec cette variable et des nombres, il faut la convertir. On peut utiliser la fonction int(...) qui prend en param\u00e8tre une variable (entre les parenth\u00e8ses) et la transforme en entier. Ajouter l'instruction suivante et v\u00e9rifier que cela fonctionne : nb1 = 1 nb2 = input ( \"Entrer un nombre (entier ou flottant)\" ) # ajouter l'op\u00e9ration de conversion ici print ( nb1 + nb2 ) On veut faire un convertisseur d'euros en dollars. En s'inspirant de la question 4, \u00e9crire un programme qui demande \u00e0 l'utilisateur d'entrer une somme (un entier ou un flottant) en utilisant la fonction input , la multiplie par 1.09 et affiche le r\u00e9sultat en dollars avec la fonction print . Un personnage de jeu a un nombre entier de points de vie point_de_vie et on stocke dans une variable degats un entier correspondant aux points perdus. Ecrire un programme qui demande \u00e0 l'utilisateur d'entrer un nombre de points de vie, stock\u00e9 dans une variable point_de_vie , puis un entier degats , et qui ensuite calcule et affiche le nombre de points de vie actualis\u00e9.","title":"TP : Types et op\u00e9rateurs"},{"location":"1ere/seq10/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq10/#programme","text":"","title":"Programme"},{"location":"1ere/seq10/dico/","text":"body { text-align: justify} I. Les dictionnaires \u00b6 TP : Le type dictionnaire \u00b6 I. D\u00e9couverte de la structure \u00b6 Nous allons voir un nouveau type, le dictionnaire qui permet de regrouper des donn\u00e9es, mais auxquelles on acc\u00e8de gr\u00e2ce \u00e0 une cl\u00e9 plut\u00f4t que gr\u00e2ce \u00e0 un indice , comme pour les tableaux et p-uplets. Cr\u00e9er une variable dico , initialement vide, avec l'instruction : dico = {} . V\u00e9rifier son type, en tapant type(dico) dans la console. Ajouter un \u00e9l\u00e9ment au dictionnaire avec la syntaxe suivante : dico[\"nom\"] = \"Lennon\" , puis visualiser le contenu de la variable avec la console. \"nom\" est une cl\u00e9 du dictionnaire, et \"Lennon\" une valeur . Rajouter d'autres \u00e9l\u00e9ments au dictionnaire : dico [ \"pr\u00e9nom\" ] = \"John\" dico [ \"ann\u00e9e de naissance\" ] = 1940 On voit que le type des valeurs, comme celui des cl\u00e9s, peut varier (caract\u00e8res, entiers, ou d'autres) . Consulter le contenu de dico et v\u00e9rifier qu'il s'affiche sous la forme suivante : {'nom': 'Lennon', 'pr\u00e9nom': 'John', 'ann\u00e9e de naissance': 1940} Que renvoie l'instruction dico[0] ? Expliquer. ................................................................................ Que renvoie l'instruction dico[\"pr\u00e9nom\"] ? ...................................... C'est ainsi que l'on acc\u00e8de \u00e0 une valeur associ\u00e9e \u00e0 une cl\u00e9. Que renvoie l'instruction len(dico) ? ................. Quelles valeurs renvoient les instructions suivantes ? dico.keys() : .................................................................. dico.values() : ................................................................ dico.items() : ................................................................. On utilise ces fonctions pour faire des parcours de dictionnaire. Tester le code suivant : for k in dico . keys (): print ( dico [ k ]) Modifier ensuite le code pour afficher les cl\u00e9s du dictionnaire. On peut aussi cr\u00e9er un dictionnaire en utilisant la syntaxe suivante : dictionnaire = {cl\u00e91: valeur1, cl\u00e92: valeur2} . Cr\u00e9er un deuxi\u00e8me dictionnaire dico_2 avec cette m\u00e9thode, dans lequel on stocke les informations suivantes : le nom \"McCartney\" , le pr\u00e9nom \"Paul\" , et la date de naissance 1942 . II. Exercices \u00b6 Pour chacun des exercices, v\u00e9rifier la solution sur ordinateur, puis la noter sur votre feuille. Exercice 1 : les donn\u00e9es EXIF d'une image \u00b6 Les photos num\u00e9riques sont accompagn\u00e9es de m\u00e9tadonn\u00e9es, consultables dans leurs propri\u00e9t\u00e9s. Repr\u00e9senter les donn\u00e9es EXIF pr\u00e9sent\u00e9es ci-contre sous la forme d'un dictionnaire nomm\u00e9 exif . Quelle instruction permet d'afficher la hauteur de l'image ? Exercice 2 : un groupe de rock \u00b6 On veut stocker la liste des membres d'un groupe de rock dans un dictionnaire rockband , c'est-\u00e0-dire : Cl\u00e9 Valeur \"chanteur\" Julian Casablancas \"guitariste rythmique\" Albert Hammond Jr \"lead guitariste\" \"Nick Valensi\" \"bassiste\" \"Nikolai Fraiture\" \"batteur\" \"Fabrizio Moretti\" Ecrire l'instruction permettant de cr\u00e9er le dictionnaire correspondant. Ecrire l'instruction renvoyant les noms de tous les membres du groupe. Ecrire une fonction est_membre(rockband, nom) renvoyant True si nom est pr\u00e9sent dans le groupe, False sinon. On fera un parcours de dictionnaire. def est_membre ( rockband , nom ): Tester si \"Nick Valensi\" et \"Bjork\" appartiennent au groupe ou non. Cours \u00b6 Dans certains cas, on peut ne pas vouloir acc\u00e9der \u00e0 des donn\u00e9es par leur indice comme avec un tableau ou un p-uplet, car une autre information (souvent de type caract\u00e8res , mais les autres types sont possibles) aurait plus de sens. On utilise alors un dictionnaire . D\u00e9finition Un dictionnaire est une collection non-ordonn\u00e9e d'\u00e9l\u00e9ments. Ces \u00e9l\u00e9ments sont constitu\u00e9s d'une cl\u00e9 associ\u00e9e \u00e0 une valeur . A. Cr\u00e9ation \u00b6 Pour cr\u00e9er un dictionnaire vide , on utilise les accolades {} ou bien le mot-cl\u00e9 dict . Pour cr\u00e9er un dictionnaire non-vide , on utilise les accolades suivies de couples cle: valeur s\u00e9par\u00e9s par des virgules. Exemples d1 = dict () #d1 est un dictionnaire vide d2 = {} #d2 aussi dico = { \"algorithme\" : \"suite d'instructions\" , \"m\u00e9moire\" : \"espace de stockage des donn\u00e9es\" , \"processeur\" : \"unit\u00e9 de calcul\" } #dico a 3 couples cl\u00e9-valeur B. Modification \u00b6 On ajoute un \u00e9l\u00e9ment \u00e0 un dictionnaire avec la syntaxe : d[cle] = valeur o\u00f9 cle et valeur sont des \u00e9l\u00e9ments de n'importe quel type de base (entier, flottant, caract\u00e8res, bool\u00e9en) . On peut modifier la valeur associ\u00e9e \u00e0 une cl\u00e9 d\u00e9j\u00e0 existante en utilisant la m\u00eame syntaxe. Exemples dico [ \"programme\" ] = \"algorithme \u00e9crit dans un langage de programmation\" #ajoute un nouveau couple \u00e0 dico dico [ \"processeur\" ] = \"constitu\u00e9 d'une unit\u00e9 de calcul et une unit\u00e9 de commande\" #modifie la valeur associ\u00e9e \u00e0 la cl\u00e9 processeur C. Parcours \u00b6 On peut it\u00e9rer sur les \u00e9l\u00e9ments d'un dictionnaire, de la m\u00eame mani\u00e8re que l'on peut it\u00e9rer sur les \u00e9l\u00e9ments d'un tableau ou d'un p-uplet (les types construits) . Cela permet d'appliquer des algorithmes comme ceux vus sur ces autres types construits : recherche d'occurrences, calcul de statistiques, etc. On peut utiliser diff\u00e9rentes syntaxes : C.I. Parcourir les cl\u00e9s \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) keys() permet d'acc\u00e9der \u00e0 la liste des cl\u00e9s. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for cle in dico . keys (): print ( cle , dico [ cle ]) Si la m\u00e9thode n'est pas pr\u00e9cis\u00e9e, par d\u00e9faut le parcours se fera sur les cl\u00e9s : ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for cle in dico : print ( cle , dico [ cle ]) C.II. Parcourir les valeurs \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) values() permet d'acc\u00e9der \u00e0 la liste des valeurs. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for v in dico . values (): print ( v ) Attention ! On n'a alors pas acc\u00e8s \u00e0 la cl\u00e9 associ\u00e9e \u00e0 chaque valeur. C.III. Parcourir les couples cl\u00e9-valeur \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) items() permet d'acc\u00e9der aux couples cl\u00e9, valeur. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for c , v in dico . items (): print ( c , v ) Conclusion \u00b6 Les dictionnaires compl\u00e8tent les tableaux et p-uplets en permettant de \"ranger\" diff\u00e9remment des \u00e9l\u00e9ments. Comme dans un dictionnaire au sens classique, on associe des valeurs (comme une d\u00e9finition) \u00e0 une information (comme un mot). Ces structures sont ensuite utilis\u00e9es par des algorithmes. TD : Dictionnaires et algorithmes \u00b6 Exercice 1 : manipulation de dictionnaires \u00b6 dico = { \"alexandre\" : 17 , \"mehdi\" : 18 , \"jeanne\" : 16 , \"charlotte\" : 19 , \"celina\" : 18 , \"no\u00e9\" : 19 } def f ( dic ): for cle , valeur in dic . items () : if valeur > 18 : return cle Que renvoie l'appel de f(dico) ? Quelle est la valeur affich\u00e9e \u00e0 l'ex\u00e9cution du programme Python suivant ? ports = { 'http' : 80 , 'imap' : 142 , 'smtp' : 25 } ports [ 'ftp' ] = 21 print ( ports [ 'ftp' ]) T = [{ 'fruit' : 'banane' , 'nombre' : 25 }, { 'fruit' : 'orange' , 'nombre' : 124 }, { 'fruit' : 'pomme' , 'nombre' : 75 }, { 'fruit' : 'kiwi' , 'nombre' : 51 }] Quelle expression utiliser pour afficher le nombre de pommes ? Par quelle expression remplacer les pointill\u00e9s dans le programme Python suivant, pour que son ex\u00e9cution affiche le num\u00e9ro de Dupond ? repertoire = [{ 'nom' : 'Dupont' , 'tel' : '5234' },{ 'nom' : 'Tournesol' , 'tel' : '5248' }, { 'nom' : 'Dupond' , 'tel' : '3452' }] for i in range ( len ( repertoire )): if ............................... : print ( repertoire [ i ][ 'tel' ]) Exercice 2 : recherche de maximum \u00b6 Que faut-il changer dans le programme ci-dessous, impl\u00e9mentant la recherche de l'indice du maximum dans un tableau, pour rechercher la cl\u00e9 associ\u00e9e \u00e0 la valeur maximale d'un dictionnaire non-vide d' entiers positifs ? V\u00e9rifier que le dictionnaire est bien non-vide. def maximum_tab ( tab ): assert tab != [] ind = 0 for i in range ( len ( tab )): if tab [ i ] > tab [ ind ]: ind = i return ind Exercice 3 : comptage d'occurrences \u00b6 On veut \u00e9crire une fonction compte_occurrences(chaine) qui compte les occurrences de toutes les lettres pr\u00e9sentes dans une cha\u00eene de caract\u00e8res chaine , et stocke le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont ces lettres, et les valeurs leur nombre d'occurrences. Ce dictionnaire est renvoy\u00e9 par la fonction. Par exemple : >>> compte_occurrences ( 'bonjour' ) {'b': 1, 'o': 2, 'n': 1, 'j': 1, 'u': 1, 'r': 1} Ecrire l'algorithme (pseudo-code) permettant de r\u00e9soudre ce probl\u00e8me. Note : on parcourt une cha\u00eene de caract\u00e8re comme on parcourt un tableau : chaque caract\u00e8re \u00e0 un indice indiquant sa position dans la cha\u00eene, on peut donc faire un parcours par indice ou par valeur . Traduire cet algorithme en programme. Note : Pour tester si une cl\u00e9 cle est pr\u00e9sente dans un dictionnaire dico , on peut utiliser la syntaxe cle in dico qui vaut True (est pr\u00e9sente) ou False (n'est pas pr\u00e9sente) (c'est une recherche d'occurrence). TP : Les r\u00e9sultats d'une \u00e9lection \u00b6 Une \u00e9lection est organis\u00e9e, pour laquelle les votes sont enregistr\u00e9s par une machine \u00e9lectronique. L'objectif de ce TP est d'\u00e9crire les fonctions qui vont permettre de comptabiliser automatiquement les votes et d\u00e9terminer le vainqueur de l'\u00e9lection. Introduction : repr\u00e9sentation des donn\u00e9es \u00b6 Les votes sont enregistr\u00e9s dans un tableau de cha\u00eenes de caract\u00e8res . Les \u00e9lecteurs peuvent s\u00e9lectionner parmi une liste de candidats, voter nul en entrant un nom qui ne fait pas parti des candidats ou bien voter blanc. Par exemple, \u00e0 la fin du vote, la machine a en m\u00e9moire le tableau suivant : votes = [\"Alan Turing\", \"Ada Lovelace\", \"Ada Lovelace\", \"\", \"George Boole\", \"Mark Zukerberg\", \"\"] Une cha\u00eene de caract\u00e8re vide correspond \u00e0 un vote blanc. Question Les candidats \u00e9tant Alan Turing, Ada Lovelace et George Boole, quel est le vainqueur ? Combien y a-t-il de votes pour les autres candidats, de votes nuls et de votes blancs ? Dans la suite, on stocke cette information dans une variable candidats = [\"Alan Turing\", \"Ada Lovelace\", \"George Boole\"] . A. D\u00e9pouillement \u00b6 On veut \u00e9crire une fonction depouillement qui prend en param\u00e8tres : - un tableau de cha\u00eenes de caract\u00e8res candidats , - un tableau de cha\u00eenes de caract\u00e8res votes , et qui renvoie un dictionnaire dont les cl\u00e9s sont les noms des candidats (stock\u00e9s dans candidats ) et les cha\u00eenes de caract\u00e8res \"Nul\" et \"Blanc\" , et les valeurs le nombre de bulletins associ\u00e9 (stock\u00e9s dans votes ) . Il faut commencer par cr\u00e9er un dictionnaire nomm\u00e9 occurrences , dont les cl\u00e9s sont les noms des candidats, ainsi que \"Nul\" et \"Blanc\" , et les valeurs sont initialis\u00e9es \u00e0 0 . Ecrire le code correspondant \u00e0 cette initialisation. On peut aussi utiliser la compr\u00e9hension sur les dictionnaires, avec la syntaxe suivante : d = {cle:valeur for cle in tableau} Ecrire une fonction est_present(tab, v) prenant en param\u00e8tres un tableau tab de type liste Python et une valeur v , et renvoyant True si v est pr\u00e9sente dans tab , False sinon. Ecrire la fonction depouillement , en se basant sur les questions pr\u00e9c\u00e9dentes et sur l'algorithme \u00e9crit ci-dessous : def depouillement ( candidats , votes ): 1 # initialisation du dictionnaire occurrences - question 1 2 pour chaque element v de votes 3 si v est pr\u00e9sent dans candidats # fonction \u00e9crite dans la question 2 4 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 v dans occurrences 5 sinon si v vaut \"\" 6 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 \"Blanc\" dans occurrences 7 sinon 8 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 \"Nul\" dans occurrences renvoyer occurrences Note La syntaxe if v in tab pourrait \u00eatre utilis\u00e9e ligne 3. Cela revient \u00e0 \u00e9crire une fonction de recherche d'occurrence dans un tableau renvoyant un bool\u00e9en. Vous pourrez l'utiliser par la suite, mais il faut savoir \u00e9crire la fonction de recherche d'occurrence . Tester cette fonction avec les variables candidats et votes d\u00e9finies dans l'introduction. V\u00e9rifier que l'on obtient bien le dictionnaire suivant : { 'Alan Turing' : 1 , 'Ada Lovelace' : 2 , 'George Boole' : 1 , 'Blanc' : 2 , 'Nul' : 1 } B. Trouver le vainqueur \u00b6 On consid\u00e8re qu'il n'y a qu'un seul vainqueur \u00e0 l'\u00e9lection. C'est-\u00e0-dire qu'un candidat a obtenu plus de votes que tous les autres. R\u00e9\u00e9crire ci-dessous un programme permettant de trouver le maximum d'un tableau de nombres t (vous n'avez pas besoin de l'\u00e9crire sur l'ordinateur) : Adapter ce code pour \u00e9crire une fonction qui recherche le maximum des valeurs stock\u00e9es cette fois-ci dans un dictionnaire : ce sera la fonction vainqueur(d) , avec d ayant pour cl\u00e9s les candidats (cha\u00eenes de caract\u00e8res) et pour valeurs le nombre de votes qui leur est associ\u00e9 (obtenu avec la fonction depouillement de la partie A). Cette fonction renvoie la cl\u00e9 associ\u00e9e \u00e0 la plus grande valeur. On prendra soin d'exclure les votes nuls et blancs. Appliquer la fonction vainqueur au dictionnaire obtenu \u00e0 la question A.4., et stocker le r\u00e9sultat du vote dans une variable resultat . V\u00e9rifier qu' Ada Lovelace est bien la grande gagnante de ce scrutin.","title":"I. Les dictionnaires"},{"location":"1ere/seq10/dico/#i-les-dictionnaires","text":"","title":"I. Les dictionnaires"},{"location":"1ere/seq10/dico/#tp-le-type-dictionnaire","text":"","title":"TP : Le type dictionnaire"},{"location":"1ere/seq10/dico/#cours","text":"Dans certains cas, on peut ne pas vouloir acc\u00e9der \u00e0 des donn\u00e9es par leur indice comme avec un tableau ou un p-uplet, car une autre information (souvent de type caract\u00e8res , mais les autres types sont possibles) aurait plus de sens. On utilise alors un dictionnaire . D\u00e9finition Un dictionnaire est une collection non-ordonn\u00e9e d'\u00e9l\u00e9ments. Ces \u00e9l\u00e9ments sont constitu\u00e9s d'une cl\u00e9 associ\u00e9e \u00e0 une valeur .","title":"Cours"},{"location":"1ere/seq10/dico/#td-dictionnaires-et-algorithmes","text":"","title":"TD : Dictionnaires et algorithmes"},{"location":"1ere/seq10/dico/#tp-les-resultats-dune-election","text":"Une \u00e9lection est organis\u00e9e, pour laquelle les votes sont enregistr\u00e9s par une machine \u00e9lectronique. L'objectif de ce TP est d'\u00e9crire les fonctions qui vont permettre de comptabiliser automatiquement les votes et d\u00e9terminer le vainqueur de l'\u00e9lection.","title":"TP : Les r\u00e9sultats d'une \u00e9lection"},{"location":"1ere/seq10/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 On consid\u00e8re l\u2019extraction suivante d'une base de donn\u00e9es des d\u00e9partements fran\u00e7ais. Cette extraction a ensuite \u00e9t\u00e9 sauvegard\u00e9e dans un fichier texte. \"1\",\"01\",\"Ain\",\"AIN\",\"ain\",\"A500\" \"2\",\"02\",\"Aisne\",\"AISNE\",\"aisne\",\"A250\" \"3\",\"03\",\"Allier\",\"ALLIER\",\"allier\",\"A460\" \"4\",\"04\",\"Alpes-de-Haute-Provence\",\"ALPES-DE-HAUTE-PROVENCE\",\"alpes-de-haute-provence\",\"A412316152\" \"5\",\"05\",\"Hautes-Alpes\",\"HAUTES-ALPES\",\"hautes-alpes\",\"H32412\" On consid\u00e8re le code suivant : import csv with open ( 'departements.csv' , newline = '' ) as monFichier : lesLignes = csv . reader ( monFichier ) for uneLigne in lesLignes : print ( uneLigne [ 3 ]) Que va produire l'ex\u00e9cution de ce code ? A L'affichage de la troisi\u00e8me colonne \u00e0 savoir le nom du d\u00e9partement avec une majuscule initiale B L'affichage de tout le contenu du fichier C L'affichage du nombre total de d\u00e9partements figurant dans le fichier D L'affichage de la quatri\u00e8me colonne, \u00e0 savoir le nom du d\u00e9partement tout en majuscules On ex\u00e9cute le code suivant : table = [[ 'lovelace' , 'ada' , 1815 , 1852 ], [ 'von neumann' , 'john' , 1903 , 1957 ], [ 'turing' , 'alan' , 1912 , 1954 ], [ 'mccarthy' , 'john' , 1927 , 2011 ], [ 'floyd' , 'robert' , 1936 , 2001 ]] L = [] for index in range ( len ( table )): if table [ index ][ 3 ] > 1954 : L . append ( index ) Quelle est la valeur de la liste L \u00e0 la suite de cette ex\u00e9cution ? A ['von neumann','mccarthy','floyd'] B [1957,2011,2001] C [1,3,4] D ['lovelace','turing'] On consid\u00e8re une table de donn\u00e9es qui est une liste de dictionnaires \"Titre\", \"R\u00e9alisateur\",\"Date\". Un enregistrement de la table contient un titre de film, le nom de son r\u00e9alisateur et l'ann\u00e9e de sortie du film. films = [{ \"Titre\" : \"ET\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 1982 },{ \"Titre\" : \"Ready Player One\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 2018 },{ \"Titre\" : \"The Artist\" , \"R\u00e9alisateur\" : \"Hazanavicius\" , \"Date\" : 2011 }, ... ] On souhaite obtenir la liste des films r\u00e9alis\u00e9s par \"Spielberg\" ou par \"Hazanavicius\" depuis l'ann\u00e9e 2000. Quelle doit \u00eatre la condition utilis\u00e9e pour s\u00e9lectionner les enregistrements correspondants, lors du parcours de la table ? A (film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\") and film[\"Date\"] >= 2000 B film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\" and film[\"Date\"] >= 2000 C film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\" or film[\"Date\"] >= 2000 D (film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\") or film[\"Date\"] >= 2000 On d\u00e9finit une table d'\u00e9l\u00e8ves et une liste finale de la fa\u00e7on suivante : table_eleves = [{ \"prenom\" : \"Ada\" , \"nom\" : \"Lovelace\" , \"age\" : 17 }, { \"prenom\" : \"Charles\" , \"nom\" : \"Babbage\" , \"age\" : 18 }, ...... , { \"prenom\" : \"John\" , \"nom\" : \"Von Neumann\" , \"age\" : 16 }] liste_finale = [ eleve for eleve in table_eleves if eleve [ \"age\" ] >= 18 ] Que contient cette liste finale ? A La liste des pr\u00e9noms des \u00e9l\u00e8ves majeurs de la table. B La liste des \u00e2ges des \u00e9l\u00e8ves majeurs de la table. C La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par un dictionnaire. D La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par une liste. Laquelle de ces listes de cha\u00eenes de caract\u00e8res est tri\u00e9e en ordre croissant ? A [\"112\", \"19\", \"27\", \"45\", \"8\"] B [\"8\", \"19\", \"27\", \"45\", \"112\"] C [\"8\", \"112\", \"19\", \"27\", \"45\"] D [\"19\", \"112\", \"27\", \"45\", \"8\"]","title":"Pour s'entra\u00eener"},{"location":"1ere/seq10/synthese/#synthese","text":"On consid\u00e8re l\u2019extraction suivante d'une base de donn\u00e9es des d\u00e9partements fran\u00e7ais. Cette extraction a ensuite \u00e9t\u00e9 sauvegard\u00e9e dans un fichier texte. \"1\",\"01\",\"Ain\",\"AIN\",\"ain\",\"A500\" \"2\",\"02\",\"Aisne\",\"AISNE\",\"aisne\",\"A250\" \"3\",\"03\",\"Allier\",\"ALLIER\",\"allier\",\"A460\" \"4\",\"04\",\"Alpes-de-Haute-Provence\",\"ALPES-DE-HAUTE-PROVENCE\",\"alpes-de-haute-provence\",\"A412316152\" \"5\",\"05\",\"Hautes-Alpes\",\"HAUTES-ALPES\",\"hautes-alpes\",\"H32412\" On consid\u00e8re le code suivant : import csv with open ( 'departements.csv' , newline = '' ) as monFichier : lesLignes = csv . reader ( monFichier ) for uneLigne in lesLignes : print ( uneLigne [ 3 ]) Que va produire l'ex\u00e9cution de ce code ? A L'affichage de la troisi\u00e8me colonne \u00e0 savoir le nom du d\u00e9partement avec une majuscule initiale B L'affichage de tout le contenu du fichier C L'affichage du nombre total de d\u00e9partements figurant dans le fichier D L'affichage de la quatri\u00e8me colonne, \u00e0 savoir le nom du d\u00e9partement tout en majuscules On ex\u00e9cute le code suivant : table = [[ 'lovelace' , 'ada' , 1815 , 1852 ], [ 'von neumann' , 'john' , 1903 , 1957 ], [ 'turing' , 'alan' , 1912 , 1954 ], [ 'mccarthy' , 'john' , 1927 , 2011 ], [ 'floyd' , 'robert' , 1936 , 2001 ]] L = [] for index in range ( len ( table )): if table [ index ][ 3 ] > 1954 : L . append ( index ) Quelle est la valeur de la liste L \u00e0 la suite de cette ex\u00e9cution ? A ['von neumann','mccarthy','floyd'] B [1957,2011,2001] C [1,3,4] D ['lovelace','turing'] On consid\u00e8re une table de donn\u00e9es qui est une liste de dictionnaires \"Titre\", \"R\u00e9alisateur\",\"Date\". Un enregistrement de la table contient un titre de film, le nom de son r\u00e9alisateur et l'ann\u00e9e de sortie du film. films = [{ \"Titre\" : \"ET\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 1982 },{ \"Titre\" : \"Ready Player One\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 2018 },{ \"Titre\" : \"The Artist\" , \"R\u00e9alisateur\" : \"Hazanavicius\" , \"Date\" : 2011 }, ... ] On souhaite obtenir la liste des films r\u00e9alis\u00e9s par \"Spielberg\" ou par \"Hazanavicius\" depuis l'ann\u00e9e 2000. Quelle doit \u00eatre la condition utilis\u00e9e pour s\u00e9lectionner les enregistrements correspondants, lors du parcours de la table ? A (film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\") and film[\"Date\"] >= 2000 B film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\" and film[\"Date\"] >= 2000 C film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\" or film[\"Date\"] >= 2000 D (film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\") or film[\"Date\"] >= 2000 On d\u00e9finit une table d'\u00e9l\u00e8ves et une liste finale de la fa\u00e7on suivante : table_eleves = [{ \"prenom\" : \"Ada\" , \"nom\" : \"Lovelace\" , \"age\" : 17 }, { \"prenom\" : \"Charles\" , \"nom\" : \"Babbage\" , \"age\" : 18 }, ...... , { \"prenom\" : \"John\" , \"nom\" : \"Von Neumann\" , \"age\" : 16 }] liste_finale = [ eleve for eleve in table_eleves if eleve [ \"age\" ] >= 18 ] Que contient cette liste finale ? A La liste des pr\u00e9noms des \u00e9l\u00e8ves majeurs de la table. B La liste des \u00e2ges des \u00e9l\u00e8ves majeurs de la table. C La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par un dictionnaire. D La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par une liste. Laquelle de ces listes de cha\u00eenes de caract\u00e8res est tri\u00e9e en ordre croissant ? A [\"112\", \"19\", \"27\", \"45\", \"8\"] B [\"8\", \"19\", \"27\", \"45\", \"112\"] C [\"8\", \"112\", \"19\", \"27\", \"45\"] D [\"19\", \"112\", \"27\", \"45\", \"8\"]","title":"Synth\u00e8se"},{"location":"1ere/seq10/traitement_tables/","text":"body { text-align: justify} Traiter les donn\u00e9es en tables \u00b6 TD : G\u00e9rer ses s\u00e9ries \u00b6 Mme NSI veut cr\u00e9er un r\u00e9pertoire pour stocker les s\u00e9ries qu'elle a visionn\u00e9es et jusqu'\u00e0 o\u00f9 est-ce qu'elle les a regard\u00e9es. A. Repr\u00e9sentation des donn\u00e9es \u00b6 Voici les informations enregistr\u00e9es dans une table SERIES , stock\u00e9e dans un fichier CSV : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis (8, 7) (8, 7) Kaamelott 2005 France (6, 10) (5, 3) Sherlock 2010 Angleterre (4, 3) (4, 3) Peaky Blinders 2013 Angleterre (6, 6) (5, 6) Borgen 2010 Danemark (4, 8) (4, 7) Breaking Bad 2008 Etats-Unis (5, 16) (5, 16) Mad Men 2006 Etats-Unis (7, 14) (4, 3) La Casa de Papel 2017 Espagne (3, 10) (2, 16) Note : Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode. Quels sont les descripteurs (la liste des informations dont on dispose) de cette table ? Pour chacun d'entre eux, identifier quel type de valeur est-ce que l'on peut utiliser pour les stocker informatiquement. B. Recherches dans la table \u00b6 On veut pouvoir faire des recherches dans cette table, pour obtenir des informations plus pr\u00e9cises. Quels sont les noms des s\u00e9ries produites en Angleterre ? Quels sont les noms des s\u00e9ries produites aux Etats-Unis avant l'ann\u00e9e 2010 ? Comment obtenir les s\u00e9ries pour lesquelles il reste des \u00e9pisodes \u00e0 regarder ? Combien y-en a-t-il ? Informatiquement, on formule ces recherches sous la forme de requ\u00eates . Par exemple : s\u00e9lectionner nom dans la table SERIES o\u00f9 pays = France renvoie les noms des s\u00e9ries produites en France. Formuler la recherche de la question 2 sous la forme d'une requ\u00eate. Formuler la recherche de la question 3 sous la forme d'une requ\u00eate. C. Coh\u00e9rence des donn\u00e9es \u00b6 On veut rajouter \u00e0 la table l'enregistrement suivant : Succession, 2018, Etats-Unis, (3, 9), 4 . Quel probl\u00e8me cela pose-t-il ? On veut rajouter \u00e0 la table l'enregistrement suivant : Succession, 2018, Etats-Unis, (3, 9), (4, 9) . Quel probl\u00e8me cela pose-t-il ? De quoi faut-il donc s'assurer lorsque l'on ajoute de nouvelles donn\u00e9es ? D. Fusion de tables \u00b6 Elle veut fusionner sa base de donn\u00e9es avec celle d'une amie, qui est la suivante : nom annee dernier_diffuse dernier_vu Community 2009 (6, 13) (1, 23) House of the dragon 2022 (1, 10) (1, 10) Emily in Paris 2020 (3, 10) (3, 10) Quelle est la liste des descripteurs de cette table ? Quelle(s) modification(s) faut-il faire dans cette liste pour pouvoir la fusionner avec celle de Mme NSI ? Cours \u00b6 Pour traiter des donn\u00e9es en grande quantit\u00e9, il faut qu'elles aient une structure : c'est-\u00e0-dire que l'on ait les m\u00eames informations, sous la m\u00eame forme, pour diff\u00e9rents objets. Que l'on regroupe des donn\u00e9es sur des animaux, des villes, des gens,... Cela permet de faire diff\u00e9rents types de traitements de mani\u00e8re automatique. Exemple Un ensemble de morceaux de musique est stock\u00e9 dans une table que l'on peut repr\u00e9senter comme ci-dessous. Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Blackbird The Beatles 1968 Smells like teen spirits Nirvana 1991 A. Structurer les donn\u00e9es et les indexer dans une table \u00b6 A.1. Des donn\u00e9es en tables \u00b6 Les fichiers CSV Les donn\u00e9es peuvent \u00eatre structur\u00e9es dans des fichiers CSV , pour \"Comma-Separated Values\" : les donn\u00e9es (valeurs) ont un s\u00e9parateur , qui est souvent une virgule (mais peut \u00eatre autre chose, comme un point-virgule). Vocabulaire Les caract\u00e9ristiques qui d\u00e9crivent ces donn\u00e9es sont les descripteurs . Un \u00e9l\u00e9ment d'une table est un ensemble de valeurs , chacune associ\u00e9e \u00e0 \u00e0 un descripteur et ayant un type (entier, bool\u00e9en, caract\u00e8res, flottant,...). A.2. Importer et indexer les donn\u00e9es \u00b6 Les donn\u00e9es d'un fichier CSV peuvent \u00eatre import\u00e9es pour \u00eatre trait\u00e9es automatiquement en Python : with open ( nom_fichier , mode = 'r' ) as fichier : table = csv . reader ( fichier , delimiter = \",\" ) Le fichier est ouvert en mode lecture . La fonction reader de la biblioth\u00e8que csv s\u00e9pare les donn\u00e9es qui sont entre des , . Une table peut \u00eatre repr\u00e9sent\u00e9e en Python sous la forme d'un tableau de tableau , ou bien d'un tableau de p-uplets : Exemple # tableau \u00e0 deux dimensions titres = [[ 'Enjoy the silence' , 'Depeche Mode' , '1990' ], [ 'Blackbird' , 'The Beatles' , '1968' ], [ 'Smells like teen spirits' , 'Nirvana' , '1991' ]] # p-uplets titres = [( 'Enjoy the silence' , 'Depeche Mode' , 1990 ), ( 'Blackbird' , 'The Beatles' , 1968 ), ( 'Smells like teen spirits' , 'Nirvana' , 1991 )] Quel est l'int\u00e9r\u00eat de chacun des types utilis\u00e9 ? Un tableau de tableaux permet de modifier ses \u00e9l\u00e9ments apr\u00e8s les avoir d\u00e9clar\u00e9s, alors qu'un tableau de p-uplets permet de stocker diff\u00e9rents types de variables. Quelle instruction renvoie la valeur 'Nirvana' ? titres[2][1] renvoie 'Nirvana' . B. Recherche dans une table \u00b6 B.1. Coh\u00e9rence \u00b6 Avant de commencer les recherches dans une (ou des) table(s), il faut v\u00e9rifier que les donn\u00e9es sont de bonne qualit\u00e9, et rep\u00e9rer les probl\u00e8mes s'il y en a. Valeurs coh\u00e9rentes Chacune des valeurs a un type et une \u00e9tendue de valeurs . Exemple Que faut-il tester pour notre table ? Les valeurs des descripteurs Titre et Artiste sont des caract\u00e8res, et celles du descripteur Ann\u00e9e est un entier inf\u00e9rieur \u00e0 l'ann\u00e9e actuelle. Quel algorithme peut-on utiliser ? Entr\u00e9e : table Sortie : liste des erreurs erreurs <- liste vide on parcourt les lignes de la table avec l'indice i si l'\u00e9l\u00e9ment de la colonne test\u00e9e de table[i] ne respecte pas le critere on ajoute table[i] \u00e0 la liste des erreurs Il faut aussi v\u00e9rifier que l'on a pas enregistr\u00e9 plusieurs fois les m\u00eames informations, c'est-\u00e0-dire rechercher les doublons . Quel algorithme peut-on utiliser ? Entr\u00e9e : table Sortie : liste des doublons doublons <- liste vide on parcourt les lignes de la table avec l'indice i on parcourt \u00e0 nouveau les lignes de la table avec l'indice j, \u00e0 partir de i si table[j] est \u00e9gal \u00e0 table[i] on ajoute table[j] dans la liste des doublons B.2. S\u00e9lection \u00b6 S\u00e9lection de donn\u00e9es Filtrer des lignes des tables correspond \u00e0 une op\u00e9ration de s\u00e9lection . Pour s\u00e9lectionner ces lignes, on teste une condition exprim\u00e9e dans la logique bool\u00e9enne , c'est-\u00e0-dire avec les op\u00e9rateurs bool\u00e9ens et et ou . Exemple Ecrire en Python la condition permettant de s\u00e9lectionner les titres des Beatles parus avant 1970. titres[i][1] == 'Beatles' and titres[i][2]<1970 Ecrire en Python la condition permettant de s\u00e9lectionner les titres parus avant 1950 ou bien apr\u00e8s 1990. titres[i][2] < 1950 or titres[i][2] > 1990 C. Tri d'une table \u00b6 Pour faire appara\u00eetre les informations selon un ordre voulu, on peut trier les donn\u00e9es selon une colonne . Exemple Dans notre cas, on peut vouloir faire appara\u00eetre les titres : par ordre chronologique : Titre Artiste Ann\u00e9e Blackbird The Beatles 1968 Enjoy the silence Depeche Mode 1990 Smells like teen spirits Nirvana 1991 par ordre alphab\u00e9tique du nom de l'artiste : Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Smells like teen spirits Nirvana 1991 Blackbird The Beatles 1968 Comment peut-on trier des caract\u00e8res ? On peut les trier en utilisant leur code ASCII (Unicode). Table Pour faire le test 'mot' < 'tri' par exemple, m sera compar\u00e9 avec t , et cette expression renverra True . En d\u00e9duire ce que renvoient '123'<'234' et '123'<'23' . Les deux tests renvoient True . Il faut donc bien faire la conversion si on veut comparer des nombres (entiers ou flottant), car le r\u00e9sultat des tests sera diff\u00e9rent avec des caract\u00e8res. D. Fusion de tables \u00b6 On ne peut fusionner que deux tables qui ont les m\u00eames descripteurs , et que les valeurs sont compatibles entre elles . Exemple Est-ce le cas pour la table suivante ? Titre Artiste Ann\u00e9e Karma Police Radiohead 1997 Where is my mind Pixies 1988 This is love PJ Harvey 2000 Quel op\u00e9rateur peut-on utiliser en Python sur les tableaux pour faire cette fusion ? L'op\u00e9rateur de concat\u00e9nation + permet de fusionner des tableaux ou des p-uplets. TP: Traitement de donn\u00e9es g\u00e9ographiques \u00b6 T\u00e9l\u00e9charger le fichier capitales.csv stockant les donn\u00e9es, et le fichier Python TP_Donnees_Geographiques.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. Dans ce TP, nous allons traiter des donn\u00e9es sur les capitales des pays du monde. Introduction \u00b6 Ouvrir le fichier avec un tableur . L'ouvrir en parall\u00e8le avec un \u00e9diteur de texte . Quel symbole appara\u00eet dans le 2\u00e8me cas mais pas dans le 1er ? Relever les caract\u00e9ristiques qui se trouvent sur la premi\u00e8re ligne : ce sont les descripteurs des donn\u00e9es. Il est possible de visualiser ces donn\u00e9es sur une carte, avec le lien suivant : https://www.cahier-nsi.fr/livecsvmap2/?template=Seq4_exo1 A. Indexation des donn\u00e9es \u00b6 Ouvrir le fichier TP_Donnees_Geographiques.py dans votre IDE Python. L'instruction import csv sert \u00e0 importer des fonctions de la biblioth\u00e8que csv , permettant de lire et d'\u00e9crire dans des fichiers de ce format. Analyser la fonction lecture_fichier : elle ouvre le fichier avec open() : quels sont les param\u00e8tres utilis\u00e9s ? (faire une recherche Web si besoin) elle le convertit sous la forme de liste Python avec csv.reader : quels sont les param\u00e8tres de cette fonction ? Appeler cette fonction lecture_fichier pour charger les donn\u00e9es de capitales.csv , et stocker le r\u00e9sultat dans une variable capitales . Visualiser le contenu de capitales dans la console : quel est son type ? .......................................... Quelle information r\u00e9cup\u00e8re-t-on avec l'instruction capitales[0] ? ................................................................... Quelle instruction permet d'obtenir le nombre de capitales pr\u00e9sentes dans ces donn\u00e9es ? ............................................... B. Tests de coh\u00e9rence \u00b6 Avant de pouvoir faire des recherches dans ces donn\u00e9es, il faut v\u00e9rifier qu'elles sont de bonne qualit\u00e9, qu'elles sont coh\u00e9rentes . S'assurer que les donn\u00e9es sont coh\u00e9rentes, c'est s'assurer que les valeurs entr\u00e9es ne sont pas aberrantes. Par exemple, si on stocke la taille d'une personne en centim\u00e8tres, on ne veut pas avoir une valeur comme 1000 . La longitude varie entre -180 et +180, et la latitude entre -90 et 90 (ce sont des degr\u00e9s). V\u00e9rifions que les valeurs stock\u00e9es dans le v\u00e9rifier sont coh\u00e9rentes avec cela, en \u00e9crivant les fonctions test_latitude(table) et test_longitude(table) parcourant les lignes de table et v\u00e9rifiant que la colonne correspondant \u00e0 la latitude/la longitude contient une valeur dans les intervalles pr\u00e9cis\u00e9s. On se base sur l'algorithme suivant : Entr\u00e9e : la table Sortie : les enregistrement avec erreur sous la forme de liste erreur <- liste vide pour chaque indice i de 1 \u00e0 la longueur de la table si l'\u00e9lement d'indice i de la table ne respecte pas l'intervalle donn\u00e9 on l'ajoute \u00e0 erreur Note : Il faut convertir la latitude/longitude en float avec la syntaxe float(table[...]) . Tester la fonction. Trouvez-vous des erreurs ? ....................... C. S\u00e9lection \u00b6 Nous pouvons maintenant faire des recherches sur ces donn\u00e9es, et d\u00e9finir des fonctions diff\u00e9rentes pour chacune de ces recherches, en fonction du crit\u00e8re utilis\u00e9. L'algorithme g\u00e9n\u00e9ral qui sera utilis\u00e9 \u00e0 chaque fois est le suivant : Entr\u00e9e : la table Sortie : la s\u00e9lection sous la forme de liste selection <- liste vide pour chaque indice i de 1 \u00e0 la longueur de la table si l'\u00e9lement d'indice i de la table respecte le crit\u00e8re on l'ajoute \u00e0 selection Ecrire la fonction recherche_1 s\u00e9lectionnant les capitales situ\u00e9es sur le continent nord-am\u00e9ricain. Ecrire la fonction recherche_2 s\u00e9lectionnant les capitales dont la latitude est inf\u00e9rieure \u00e0 0. Note : N'oubliez pas la conversion de la latitude en float avec la syntaxe float(table[...]) . Ecrire la fonction recherche_3 s\u00e9lectionnant les capitales dont la latitude est inf\u00e9rieure \u00e0 0 et la longitude est sup\u00e9rieure \u00e0 0. On peut aller plus vite que d'\u00e9crire des fonctions, en utilisant la compr\u00e9hension. Ecrire les m\u00eames recherches que dans les questions 1, 2 et 3, mais avec une seule instruction, de la forme : recherche1 = [ capitales[i] for i in range(.........) if .........................] TP : Traitement de donn\u00e9es de s\u00e9ries \u00b6 T\u00e9l\u00e9charger les fichiers series_1.csv et series_2.csv stockant les donn\u00e9es, et le fichier Python TP_Series.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. On veut g\u00e9rer un r\u00e9pertoire de s\u00e9rie, permettant de stocker les s\u00e9ries visionn\u00e9es et jusqu'\u00e0 quel \u00e9pisode est-ce qu'elles ont \u00e9t\u00e9 regard\u00e9es. Voici un extrait de la table que nous allons traiter : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis 8, 7 8, 7 Kaamelott 2005 France 6, 10 5, 3 Sherlock 2010 Angleterre 4, 3 4, 3 Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode. A. Fusion de tables \u00b6 Importer les donn\u00e9es du fichier series_1.csv en appelant la fonction lecture_fichier et stocker le r\u00e9sultat dans une variable serie_1 . Visualiser le contenu de serie_1 avec la console. Avec quelle instruction acc\u00e8de-t-on aux descripteurs de la table ? Les lister ci-dessous. Importer les donn\u00e9es du fichier series_2.csv et les stocker dans une variable serie_2 . Visualiser son contenu avec la console. Ses descripteurs sont-ils les m\u00eames que ceux du premier fichier ? Si deux tables ont les m\u00eames descripteurs , et des valeurs coh\u00e9rentes , on peut les fusionner. On utilise pour cela l'op\u00e9rateur + qui permet de concatener des listes Python. Compl\u00e9ter la fonction fusionne(table1, table2) fusionnant deux tables table1 et table2 , sans recopier deux fois les descripteurs. Pour cela, ils faut enlever la premi\u00e8re ligne de table2 : on peut utiliser la syntaxe tab[ind:] ne prenant les lignes d'un tableau tab qu'\u00e0 partir de l'indice ind . def fusionne ( table1 , table2 ): return tab + ... Appeler la fonction fusionne pour obtenir la fusion de serie_1 et serie_2 , stock\u00e9e dans une variable series . B. Les doublons \u00b6 Qu'il y ait plusieurs fois les m\u00eames informations, entr\u00e9es par erreur, pose des probl\u00e8mes en terme de stockage et peut biaiser les statistiques faites sur les donn\u00e9es. Compl\u00e9ter la fonction trouve_doublons(table) prenant en param\u00e8tre une table sous la forme d'un tableau \u00e0 2 dimensions et renvoyant les lignes qui sont pr\u00e9sentes plusieurs fois : def trouve_doublons ( table ): doublons = [] for i in range ( ...... , ............ ): for j in range ( i + 1 , len ( table )): if ................................ : doublons . append ( .................... ) return doublons Appeler cette fonction sur la variable series pour obtenir les doublons de la table. Y en a-t-il ? L'instruction del table[i] permet de supprimer la ligne i de table . Utiliser cette instruction pour \u00e9crire une fonction supprime_doublons(table) parcourant les lignes de la derni\u00e8re \u00e0 la premi\u00e8re (sinon les valeurs prises par i dans la boucle ne correspondraient plus) et supprimant un doublon \u00e0 chaque fois qu'il est rencontr\u00e9. Appeler cette fonction pour supprimer le(s) doublon(s) trouv\u00e9s \u00e0 la question 2. Stocker le r\u00e9sultat dans une variable series_final . Nos donn\u00e9es sont maintenant plus coh\u00e9rentes, sauvegardons-les. Appeler la fonction exporte prenant en param\u00e8tre la table series_final qui sera stock\u00e9e dans un fichier dont le nom est series.csv . C. Tri des donn\u00e9es \u00b6 Pour visualiser les diff\u00e9rentes lignes de la table dans l'ordre que l'on veut, on peut appliquer un algorithme de tri , pour les trier en fonction d'une des colonnes . On peut vouloir ranger les s\u00e9ries en fonction de l'ordre alphab\u00e9tique de son nom, ou bien de son pays d'origine. On compare alors les caract\u00e8res, qui seront tri\u00e9s en utilisant le code ASCII de chacun. Appeler la fonction trie_caracteres prenant en param\u00e8tre la table et la colonne par rapport \u00e0 laquelle on souhaite faire le tri, pour trier la table par rapport au nom de la s\u00e9rie. Lorsque l'on veut trier par rapport \u00e0 un nombre (entier ou flottant), il faut convertir la valeur d'abord, qui est une cha\u00eene de caract\u00e8res . Nous allons le faire avec la fonction float (cela fonctionnera sur les entiers, et les flottants). Faire ce changement sur la condition du while pour obtenir la fonction trie_nombres . ... while j > 1 and ... : table [ j ] = table [ j - 1 ] j -= 1 Appeler la fonction pour trier les s\u00e9ries par rapport \u00e0 leur ann\u00e9e de cr\u00e9ation. Pour aller plus loin... Pour trier, on peut utiliser une fonction de fonction, sorted . Il faut lui pr\u00e9ciser en param\u00e8tre ce qu'il faut trier, et comment (en fonction de quoi). Dans l'exemple suivant, on l'utilise pour trier en fonction de l'ann\u00e9e de d\u00e9but, dans l'ordre croissant : sorted(table[1:], key = lambda item: int(item[1])) Quelle instruction utiliser pour trier en fonction du nom de la s\u00e9rie ?","title":"II. Traiter les donn\u00e9es en tables"},{"location":"1ere/seq10/traitement_tables/#traiter-les-donnees-en-tables","text":"","title":"Traiter les donn\u00e9es en tables"},{"location":"1ere/seq10/traitement_tables/#td-gerer-ses-series","text":"Mme NSI veut cr\u00e9er un r\u00e9pertoire pour stocker les s\u00e9ries qu'elle a visionn\u00e9es et jusqu'\u00e0 o\u00f9 est-ce qu'elle les a regard\u00e9es.","title":"TD : G\u00e9rer ses s\u00e9ries"},{"location":"1ere/seq10/traitement_tables/#cours","text":"Pour traiter des donn\u00e9es en grande quantit\u00e9, il faut qu'elles aient une structure : c'est-\u00e0-dire que l'on ait les m\u00eames informations, sous la m\u00eame forme, pour diff\u00e9rents objets. Que l'on regroupe des donn\u00e9es sur des animaux, des villes, des gens,... Cela permet de faire diff\u00e9rents types de traitements de mani\u00e8re automatique. Exemple Un ensemble de morceaux de musique est stock\u00e9 dans une table que l'on peut repr\u00e9senter comme ci-dessous. Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Blackbird The Beatles 1968 Smells like teen spirits Nirvana 1991","title":"Cours"},{"location":"1ere/seq10/traitement_tables/#tp-traitement-de-donnees-geographiques","text":"T\u00e9l\u00e9charger le fichier capitales.csv stockant les donn\u00e9es, et le fichier Python TP_Donnees_Geographiques.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. Dans ce TP, nous allons traiter des donn\u00e9es sur les capitales des pays du monde.","title":"TP: Traitement de donn\u00e9es g\u00e9ographiques"},{"location":"1ere/seq10/traitement_tables/#tp-traitement-de-donnees-de-series","text":"T\u00e9l\u00e9charger les fichiers series_1.csv et series_2.csv stockant les donn\u00e9es, et le fichier Python TP_Series.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. On veut g\u00e9rer un r\u00e9pertoire de s\u00e9rie, permettant de stocker les s\u00e9ries visionn\u00e9es et jusqu'\u00e0 quel \u00e9pisode est-ce qu'elles ont \u00e9t\u00e9 regard\u00e9es. Voici un extrait de la table que nous allons traiter : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis 8, 7 8, 7 Kaamelott 2005 France 6, 10 5, 3 Sherlock 2010 Angleterre 4, 3 4, 3 Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode.","title":"TP : Traitement de donn\u00e9es de s\u00e9ries"},{"location":"1ere/seq11/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq11/#programme","text":"","title":"Programme"},{"location":"1ere/seq11/knn/","text":"body { text-align: justify} II. L'algorithme des k plus proches voisins \u00b6 Cours \u00b6 L' intelligence artificielle est un domaine vaste de l'informatique, dans lequel on utilise des algorithmes pour faire des pr\u00e9dictions sur des donn\u00e9es. Nous allons voir un exemple d'un tel algorithme. Introduction \u00b6 Imaginons que l'on veuille d\u00e9terminer l'esp\u00e8ce d'un animal, en ayant \u00e0 notre disposition sa masse et sa taille . Quelles autres informations peuvent nous aider \u00e0 pr\u00e9dire son esp\u00e8ce - sans pouvoir avoir une autre de ses caract\u00e9ristiques - ? Si l'on a la masse, la taille et l'esp\u00e8ce associ\u00e9es \u00e0 d'autres animaux, on peut avoir une id\u00e9e des ordres de grandeur correspondant aux diff\u00e9rentes esp\u00e8ces. Comment, alors, faire la pr\u00e9diction ? On peut trouver un animal dont le masse et la taille sont les plus proches de ceux de notre animal, et en d\u00e9duire qu'ils sont de la m\u00eame esp\u00e8ce. Ou mieux encore, on peut se baser sur l'ensemble des animaux les plus proches. D\u00e9finition Les algorithmes qui se basent sur des donn\u00e9es disponibles pour en d\u00e9duire des informations sur de nouvelles donn\u00e9es sont appel\u00e9s des algorithmes d'apprentissage . Ces algorithmes apprennent sur des donn\u00e9es existantes, pour pr\u00e9dire des informations sur des donn\u00e9es nouvelles. A. Calculer la distance entre des donn\u00e9es \u00b6 A.I. Placer le jeu de donn\u00e9es dans un rep\u00e8re \u00b6 Pour trouver les animaux les plus proches du nouvel animal, on place les informations dont on dispose dans un rep\u00e8re , avec la masse en abscisse et la taille en ordonn\u00e9e, On repr\u00e9sente ici avec la couleur l'esp\u00e8ce de chaque animal : c'est-\u00e0-dire sa classification . A.II. La nouvelle donn\u00e9e \u00b6 La nouvelle donn\u00e9e, sur laquelle on veut faire une pr\u00e9diction, doit \u00eatre compar\u00e9e \u00e0 toutes les autres. On peut la placer sur le graphe fait pr\u00e9c\u00e9demment. La classification de celle-ci n'est pas connue , on se base sur la classification des donn\u00e9es du jeu de donn\u00e9es pour attribuer une esp\u00e8ce \u00e0 cette nouvelle donn\u00e9e. B. Classifier une nouvelle donn\u00e9e \u00b6 B.I. Mesure de distance \u00b6 Pour estimer si deux animaux \\(a_{1}\\) et \\(a_{2}\\) ayant les caract\u00e9ristiques respectives \\(m_{1}\\) , \\(t_{1}\\) et \\(m_{2}\\) , \\(t_{2}\\) sont \"proches\", on utilise la formule suivante calculant leur distance \\(d\\) : \\(d = \\sqrt{ (t_{1}-t_{2})^2 + (m_{1}-m_{2})^2 }\\) N.B.: Les points qui sont proches sont identifiables facilement sur le graphe, mais la distance doit \u00eatre quantifiable par l'ordinateur. On calcule donc la distance entre la nouvelle donn\u00e9e , et tous les autres points. B.II. Les k plus proches voisins \u00b6 L' algorithme des k plus proches voisins s\u00e9lectionne ensuite les \\(k\\) points les plus proches de notre donn\u00e9e. Graphiquement, on peut assez facilement identifier ces points. Comment le faire automatiquement, dans un programme ? On peut le faire en triant les distances entre la nouvelle donn\u00e9e et tous les autres points, et en s\u00e9lectionnant les k points dont la distance est la plus faible. Sur l'exemple, s\u00e9lectionner les 4 plus proches voisins de la donn\u00e9es \u00e0 classifier : B.III. Classification \u00b6 Ces \\(k\\) voisins sont associ\u00e9s \u00e0 une esp\u00e8ce. On regarde ensuite quelle est l'esp\u00e8ce la plus pr\u00e9sente parmi ceux-ci, et c'est avec celle-ci que l'on classe la nouvelle donn\u00e9e. Comment classifier la nouvelle donn\u00e9e, sur l'exemple ? En appliquant l'algorithme, on trouve que la nouvelle donn\u00e9e correspond \u00e0 un chat. Quels algorithmes faut-il appliquer sur les \\(k\\) plus proches voisins pour obtenir l'information qui nous int\u00e9resse ? Il faut compter les occurrences des diff\u00e9rentes esp\u00e8ces parmi ces k voisins, puis en s\u00e9lectionner le maximum. Quel type de donn\u00e9e faut-il utiliser ? Il faut utiliser un dictionnaire avec l'esp\u00e8ce comme cl\u00e9, et le nombre d'occurrences comme valeur. Conclusion \u00b6 On peut utiliser cet algorithme pour classifier n'importe quelles donn\u00e9es, en fonctions de caract\u00e9ristiques disponibles (au nombre de 2, ou bien plus !). Plus le jeu de test contient de donn\u00e9es, meilleure sera la pr\u00e9diction. Ce type d'algorithme est largement utilis\u00e9 par les GAFAM et autres entreprises du num\u00e9rique, qui disposent de tr\u00e8s grandes bases de donn\u00e9es pour construire des mod\u00e8les plus pr\u00e9cis. TP : Impl\u00e9mentation \u00b6 Nous allons impl\u00e9menter un algorithme d'apprentissage, permettant de faire des pr\u00e9dictions sur des donn\u00e9es. On veut identifier l'esp\u00e8ce d'un animal \u00e0 partir de sa masse et de sa taille , en se basant sur un jeu de donn\u00e9es disponibles : les donn\u00e9es d'autres animaux, pour lesquels on conna\u00eet la masse, la taille, et l'esp\u00e8ce. T\u00e9l\u00e9charger le fichier TP_KVoisins.py . Il contient du code \u00e0 compl\u00e9ter, correspondant aux diff\u00e9rentes parties du TP. A. Repr\u00e9sentation des donn\u00e9es \u00b6 Les donn\u00e9es sont stock\u00e9es dans une variable donnees_animaux . Quel est son type ? (soyez pr\u00e9cis) Quelle instruction permet d'acc\u00e9der \u00e0 la taille de l'animal d'indice 1 ? Note donnees_animaux` est une variable dite globale , c'est-\u00e0-dire que nous allons l'utiliser dans les diff\u00e9rentes fonctions du programme, sans avoir \u00e0 la mettre en param\u00e8tre des fonctions. B. Distance entre les donn\u00e9es \u00b6 On veut trouver l'esp\u00e8ce d'un animal myst\u00e8re, connaissant sa masse et sa taille. Pour cela, nous allons estimer de quels autres animaux du jeu de donn\u00e9es est-ce qu'il est le plus proche . On calcule pour cela la distance entre les animaux \u00e0 partir de leurs caract\u00e9ristiques, en utilisant la mesure de distance euclidienne. Compl\u00e9ter la fonction distance(donnee1, donnee2) , calculant la distance euclidienne entre donnee1 et donnee2 . Il faut stocker dans les variables x1 et y1 les caract\u00e9ristiques de donnee1 , et dans x2 et y2 celles de donnee2 . Note 1 La formule de la distance euclidienne \\(d\\) entre deux points \\((x_1, y_1)\\) et \\((x_2, y_2)\\) est \\(d = \\sqrt{ (x_{1}-x_{2})^2 + (y_{1}-y_{2})^2 }\\) Note 2 sqrt calcule la racine carr\u00e9e (\"root mean square\") . La fonction est import\u00e9e de la biblioth\u00e8que math tout en haut du programme. On ajoute ensuite une cl\u00e9 distance \u00e0 chaque dictionnaire de donnees_animaux , \u00e0 laquelle on associe la valeur renvoy\u00e9e par la fonction distance \u00e9crite dans la question 1, calcul\u00e9e avec la nouvelle donn\u00e9e. Ceci est fait dans la fonction calcule_distance(donnee) : la compl\u00e9ter. Ecrire l'appel de la fonction calcule_distance permettant d'actualiser les valeurs de donnees_animaux . C. Tri \u00b6 Pour d\u00e9duire l'esp\u00e8ce de l'animal myst\u00e8re, on regarde l'esp\u00e8ce de ses \\(k\\) voisins les plus proches. Il faut donc trier les voisins, en fonction de leur distance par rapport \u00e0 l'animal myst\u00e8re, et en retenir les \\(k\\) premiers. La fonction tri trie les animaux de donnees_animaux par valeur croissante de la valeur associ\u00e9e \u00e0 la cl\u00e9 distance . Quel est l'algorithme de tri utilis\u00e9 dans cette fonction ? Compl\u00e9ter la fonction (les ... ), pour comparer les bonnes valeurs. Attention, donnees_animaux a \u00e9t\u00e9 modifi\u00e9e dans la partie B ! Appeler la fonction et v\u00e9rifier que l'ordre de donnees_animaux a bien \u00e9t\u00e9 modifi\u00e9. D. K plus proches voisins \u00b6 Il reste \u00e0 analyser les esp\u00e8ces les plus pr\u00e9sentes dans les \\(k\\) plus proches voisins. Il faut : - compter le nombre d'occurrences des diff\u00e9rentes esp\u00e8ces, - s\u00e9lectionner le maximum parmi ces nombres d'occurrences. Ecrire la fonction compte_occurrences(k) , qui compte le nombre de fois que chaque esp\u00e8ce appara\u00eet dans les \\(k\\) premiers \u00e9l\u00e9ments de donnees_animaux . Cela revient \u00e0 faire un calcul d'occurrences sur une liste Python, sauf que ses \u00e9l\u00e9ments sont des dictionnaires plut\u00f4t que des types de base et que l'on ne va que jusqu'\u00e0 \\(k\\) \u00e8me \u00e9l\u00e9ment de la liste. Vous avez \u00e9crit une fonction qui y ressemble dans le TP \"Les r\u00e9sultats d'une \u00e9lection\" pour le d\u00e9pouillement des votes. Aide On peut utiliser le pseudo-code suivant (sans oublier de d\u00e9finir la fonction et de renvoyer le r\u00e9sultat) : Entr\u00e9e : l entier k Sortie : le dictionnaire occurrences occurrences <- dictionnaire vide pour un indice i variant de 0 \u00e0 k - 1 espece <- esp\u00e8ce du i\u00e8me \u00e9l\u00e9ment de donnees_animaux si espece est dans occurrences on incr\u00e9mente occurrences [ espece ] sinon on affecte 1 \u00e0 occurrences [ espece ] Ecrire la fonction maxi_occurrence(occurrences) prenant en param\u00e8tre un dictionnaire occurrences , comme celui obtenu en sortie de compte_occurrences et renvoyant la cl\u00e9 de la valeur maximale d' occurrences . Vous avez \u00e9crit une fonction qui y ressemble dans le TP \"Les r\u00e9sultats d'une \u00e9lection\" pour trouver le vainqueur. Appeler ces deux fonctions pour obtenir le r\u00e9sultat. Quel est-il ? ........................................... TD : Application de l'algorithme \u00b6 Exercice 1 : application de l'algorithme \u00b6 Quelle affirmation, parmi A, B, C ou D, est vraie ? (une seule est vraie) A- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer les k plus proches voisins d'une observation dans un ensemble de donn\u00e9es. B- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer la classe d'une observation \u00e0 partir des classes de ses k plus proches voisins. C- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer dans un ensemble de donn\u00e9es le sous-ensemble \u00e0 k \u00e9l\u00e9ments qui sont les plus proches les uns des autres. D- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer les \u00e9l\u00e9ments d'un ensemble de donn\u00e9es appartenant \u00e0 une m\u00eame classe. Remettre dans l'ordre les \u00e9tapes, not\u00e9es de a \u00e0 d, de cet algorithme : a. Trier les donn\u00e9es par distance croissante avec l'observation b. S\u00e9lectionner les k donn\u00e9es les plus proches c. Calculer la distance entre l'observation et le reste des donn\u00e9es d. D\u00e9duire de la classe majoritaire des k voisins la classe de l'observation On a repr\u00e9sent\u00e9 sur un quadrillage les \u00e9l\u00e9ments de quatre classes (chaque classe est repr\u00e9sent\u00e9e par un carr\u00e9, un triangle, un losange ou un disque) ainsi qu\u2019un nouvel \u00e9l\u00e9ment X. En appliquant l'algorithme des k plus proches voisins pour la distance usuelle dans le plan, avec k=3, \u00e0 quelle classe (parmi celle des carr\u00e9s, des triangles, des ronds ou des losanges) est affect\u00e9 le nouvel \u00e9l\u00e9ment X ? Obtient-on la m\u00eame chose pour k=5 ? Exercice 2: distance euclidienne \u00b6 L'algorithme des k plus proches voisins utilise une mesure de distance entre donn\u00e9es. (Re)voyons comment calculer cette distance. On utilise une fonction distance pour calculer la distance entre deux points. Compl\u00e9ter sa sp\u00e9cification. from math import sqrt # import de la fonction racine carree def distance ( point1 , point2 ): \"\"\" Entr\u00e9es : point1, point2 sont des ............... contenant 2 entiers Sortie : la distance euclidienne entre point1 et point2, de type ................. \"\"\" return sqrt (( point1 [ 0 ] - point2 [ 0 ]) ** 2 + (( point1 [ 1 ] - point2 [ 1 ])) ** 2 ) assert distance (( 1 , 0 ), ( 5 , 3 )) == 5.0 On d\u00e9finit une fonction plus_courte_distance , trouvant le point le plus proche d'un point de d\u00e9part, parmi un ensemble de points stock\u00e9s dans un tableau. Compl\u00e9ter cette fonction, ainsi que l'assertion permettant de la tester : def plus_courte_distance ( tab , depart ): \"\"\" Entr\u00e9es : un tableau de points tab de type liste de tuples et depart un point de type tuple Sortie : un point de type tuple \"\"\" point = tab [ 0 ] min_dist = ........................... for i in range ( 1 , len ( tab )): if distance ( tab [ i ], depart ) < min_dist : point = ....................... min_dist = distance ( tab [ i ], depart ) return point assert plus_courte_distance ([( 7 , 9 ), ( 2 , 5 ), ( 5 , 2 )], ( 0 , 0 )) == ................","title":"L'algorithme des k plus proches voisins"},{"location":"1ere/seq11/knn/#ii-lalgorithme-des-k-plus-proches-voisins","text":"","title":"II. L'algorithme des k plus proches voisins"},{"location":"1ere/seq11/knn/#cours","text":"L' intelligence artificielle est un domaine vaste de l'informatique, dans lequel on utilise des algorithmes pour faire des pr\u00e9dictions sur des donn\u00e9es. Nous allons voir un exemple d'un tel algorithme.","title":"Cours"},{"location":"1ere/seq11/knn/#tp-implementation","text":"Nous allons impl\u00e9menter un algorithme d'apprentissage, permettant de faire des pr\u00e9dictions sur des donn\u00e9es. On veut identifier l'esp\u00e8ce d'un animal \u00e0 partir de sa masse et de sa taille , en se basant sur un jeu de donn\u00e9es disponibles : les donn\u00e9es d'autres animaux, pour lesquels on conna\u00eet la masse, la taille, et l'esp\u00e8ce. T\u00e9l\u00e9charger le fichier TP_KVoisins.py . Il contient du code \u00e0 compl\u00e9ter, correspondant aux diff\u00e9rentes parties du TP.","title":"TP : Impl\u00e9mentation"},{"location":"1ere/seq11/knn/#td-application-de-lalgorithme","text":"","title":"TD : Application de l'algorithme"},{"location":"1ere/seq12/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq12/#programme","text":"","title":"Programme"},{"location":"1ere/seq12/os/","text":"body { text-align: justify} Le r\u00f4le des syst\u00e8mes d\u2019exploitation \u00b6 TD : Recherches \u00b6 Faire des recherches sur un moteur de recherche pour r\u00e9pondre aux questions suivantes sur les syst\u00e8mes d'exploitation. Qu'est-ce qu'un syst\u00e8me d'exploitation (ou OS pour \"Operating System\" en anglais) ? (\u00e0 quoi sert-il ?) Citer les 3 OS les plus connus. Quels sont les OS les plus plus utilis\u00e9s : sur les ordinateurs : sur les smartphones : sur les serveurs : Quelle est la diff\u00e9rence entre un OS libre et un OS propri\u00e9taire ? A quoi sert un terminal de commandes ? Les commandes suivantes sont des commandes utilis\u00e9es sur Linux. Rechercher ce qu'elles permettent de faire. Nom de la commande Action associ\u00e9e pwd ls cp mv rm cd cat touch mkdir","title":"Le r\u00f4le des syst\u00e8mes d'exploitation"},{"location":"1ere/seq12/os/#le-role-des-systemes-dexploitation","text":"","title":"Le r\u00f4le des syst\u00e8mes d\u2019exploitation"},{"location":"1ere/seq12/os/#td-recherches","text":"Faire des recherches sur un moteur de recherche pour r\u00e9pondre aux questions suivantes sur les syst\u00e8mes d'exploitation. Qu'est-ce qu'un syst\u00e8me d'exploitation (ou OS pour \"Operating System\" en anglais) ? (\u00e0 quoi sert-il ?) Citer les 3 OS les plus connus. Quels sont les OS les plus plus utilis\u00e9s : sur les ordinateurs : sur les smartphones : sur les serveurs : Quelle est la diff\u00e9rence entre un OS libre et un OS propri\u00e9taire ? A quoi sert un terminal de commandes ? Les commandes suivantes sont des commandes utilis\u00e9es sur Linux. Rechercher ce qu'elles permettent de faire. Nom de la commande Action associ\u00e9e pwd ls cp mv rm cd cat touch mkdir","title":"TD : Recherches"},{"location":"1ere/seq2/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq2/#programme","text":"","title":"Programme"},{"location":"1ere/seq2/entiers_positifs/","text":"body { text-align: justify} I. Les entiers positifs \u00b6 Cours \u00b6 Une machine n'utilise que des 0 et des 1. Il faut donc une m\u00e9thode pour repr\u00e9senter n'importe quel nombre, avec uniquement ces 2 valeurs. A. La base 10 (d\u00e9cimale) \u00b6 D\u00e9finitions Elle est constitu\u00e9e de 10 chiffres, de 0 \u00e0 9, et chacun des chiffres utilis\u00e9 a une valeur diff\u00e9rente en fonction de sa position , nomm\u00e9e rang du chiffre. A chaque rang est associ\u00e9e une puissance de 10 diff\u00e9rente. Exemples Prenons le nombre \\(2005_{10}\\) (la notation \\(nombre_{10}\\) indique que l'on consid\u00e8re sa repr\u00e9sentation dans la base 10). Rang Chiffre 3 2 2 0 1 0 0 5 On peut d\u00e9composer ce nombre de la mani\u00e8re suivante : \\(2005_{10} = 2\\times10^3 + 0\\times10^2 + 0\\times10^1 + 5\\times10^0 = 2000 + 5\\) Faire la m\u00eame chose avec le nombre \\(1990_{10}\\) . Solution \\(1990_{10} = 1\\times10^3 + 9\\times10^2 + 9\\times10^1 + 0\\times10^0 = 1000 + 900 + 90\\) Qu'a-t-on fait pour d\u00e9composer ces nombres dans la base 10 ? On a multipli\u00e9 chacun de ses chiffres par \\(10^{rang}\\) . B. La base 2 (binaire) \u00b6 D\u00e9finition La base binaire est constitu\u00e9e de 2 nombres : 0 et 1 (un bit ), et est tr\u00e8s utilis\u00e9e en informatique. B.1. Du binaire au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en binaire \u00e0 sa repr\u00e9sentation en base d\u00e9cimale, on multiplie chaque chiffre par la puissance de 2 associ\u00e9e \u00e0 son rang (comme pour la base d\u00e9cimale, mais avec 2 au lieu de 10). Les puissances de 2 usuelles sont \u00e0 conna\u00eetre et/ou \u00e0 savoir retrouver : Puissance de 2 \\(2^0\\) \\(2^1\\) \\(2^2\\) \\(2^3\\) \\(2^4\\) \\(2^5\\) \\(2^6\\) \\(2^7\\) \\(2^8\\) \\(2^9\\) \\(2^{10}\\) Valeur 1 2 4 8 16 32 64 128 256 512 1024 Exemples Pour convertir \\(1010_2\\) , remplir le tableau puis \u00e9crire sa d\u00e9composition en fonction des puissances de 2. Rang Chiffre 3 2 1 0 Solution Rang Chiffre 3 1 2 0 1 1 0 0 \\(1010_2 = 1\\times2^3 + 0\\times2^2 + 1\\times2^1 + 0\\times2^0 = 8 + 2 = 10_{10}\\) Faire la m\u00eame chose avec le nombre \\(0110 0100_2\\) . Solution \\(0110 0100_2 = 1\\times2^6 + 1\\times2^5 + 1\\times2^2 = 64+32+4 = 80_{10}\\) B.2. Du d\u00e9cimal au binaire \u00b6 Pour passer d'un nombre en \u00e9criture d\u00e9cimale \u00e0 sa repr\u00e9sentation en binaire, on utilise l' algorithme suivant : 1. On fait la division euclidienne ce nombre par 2 et on stocke le reste. 2. On remplace ce nombre par le quotient de sa division euclidienne par 2, et on revient \u00e0 l'\u00e9tape 1. 3. On s'arr\u00eate lorsque ce quotient devient 0. 4. Le nombre en repr\u00e9sentation binaire se lit en associant les restes des divisions successives, en commen\u00e7ant par la derni\u00e8re . Exemple On peut utiliser une autre m\u00e9thode : B.3. Nombre de bits n\u00e9cessaires \u00b6 Pour trouver le nombre de bits n\u00e9cessaires pour repr\u00e9senter un nombre d\u00e9cimal, on cherche la puissance de 2 sup\u00e9rieure ou \u00e9gale la plus proche de ce nombre. Le nombre de bits est donn\u00e9 par la puissance. Exemple Combien de bits faut-il pour repr\u00e9senter 9 ? Solution La puissance de 2 strictement sup\u00e9rieure est \\(16 = 2^4\\) . Il faut donc 4 bits pour repr\u00e9senter 9 en binaire. C. La base 16 (hexad\u00e9cimale) \u00b6 La base 2 est \u00e0 la base du fonctionnement de l'informatique, mais son utilisation peut \u00eatre laborieuse lorsque l'on veut manipuler des nombres relativement grands. On utilise alors la base 16 , ou base hexad\u00e9cimale . D\u00e9finition La base hexad\u00e9cimale est une base de 16 symboles, utilisant l'ensemble des chiffres de 0 \u00e0 9 pour coder ses 10 premiers \u00e9l\u00e9ments, et ensuite les lettres de A \u00e0 F, repr\u00e9sentant les nombres \\(10_{10}\\) \u00e0 \\(15_{10}\\) . Base 10 Base 16 10 A 11 B 12 C 13 D 14 E 15 F C.1. De l'hexad\u00e9cimal au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en hexad\u00e9cimal \u00e0 sa repr\u00e9sentation d\u00e9cimale, on multiplie chaque chiffre par la puissance de 16 associ\u00e9e \u00e0 son rang . Pour les lettres de A \u00e0 F, on utilise le nombre correspondant dans la base 10 (voir le tableau ci-dessus). Exemples \\(5_{16}\\) \\(5_{16} = 5\\times16^0 = 5_{16}\\) \\(2A_{16}\\) \\(2A_{16} = 2\\times16^1 + 10\\times16^0 = 32 + 10 = 42_{16}\\) \\(1BF_{16}\\) \\(1BF_{16} = 1\\times16^2 + 11\\times16^1 + 15\\times16^0 = 256 + 176 + 15 = 447_{16}\\) C.2. Du d\u00e9cimal \u00e0 l'hexad\u00e9cimal \u00b6 Pour passer d'un nombre en base 10 \u00e0 sa repr\u00e9sentation en base 16, on utilise le m\u00eame algorithme que pour passer de la base 10 \u00e0 la base 2, sauf que l'on divise successivement par 16. Exemple C.3. Hexad\u00e9cimal et binaire \u00b6 Cette base est facile d'utilisation de par sa relation avec la base binaire : il est facile de passer de l'une \u00e0 l'autre. Pour repr\u00e9senter une valeur de 0 \u00e0 15, il faut 4 bits, donc pour repr\u00e9senter 1 octet on utilise 2 nombres en hexad\u00e9cimal. Pour passer de l' hexad\u00e9cimal au binaire , on associe la repr\u00e9sentation binaire de chacun de ses symboles. Exemple \\(2A_{16} = 00101010_2\\) Pour passer du binaire \u00e0 l'hexad\u00e9cimal , on regroupe les bits par 4 (on ajoute des \\(0\\) si n\u00e9cessaire) et on convertit chaque groupe dans sa repr\u00e9sentation hexad\u00e9cimale. Exemple \\(10001110_{2} = 8E_{16}\\) Exercice Pour repr\u00e9senter la couleur des pixels d'une image, on utilise des valeurs allant de 0 \u00e0 255 pour chacune des composantes rouge, vert et bleu (R, V, B). Combien de bits faut-il pour repr\u00e9senter la valeur d'une composante ? \\(255 = 2^8-1\\) Il faut donc 8 bits pour repr\u00e9senter la valeur d'une composante. Pourquoi est-il int\u00e9ressant d'utiliser la base hexad\u00e9cimale ? Il est int\u00e9ressant d'utiliser la base hexad\u00e9cimale car il suffit de 2 valeurs pour repr\u00e9senter chaque composante R, V ou B. D. Une base quelconque \u00b6 Les principes de conversion entre les bases d\u00e9cimale, binaire et hexad\u00e9cimale sont les m\u00eames pour les autres bases (base 5, 7, 18, ou pourquoi pas 666...). Chaque nombre est d\u00e9composable dans n'importe quelle base comme la somme des puissances de la base coefficient\u00e9es . Exemple : Repr\u00e9senter \\(32_{10}\\) en base 5. TD : Repr\u00e9sentation des entiers positifs \u00b6 Exercice 1 : repr\u00e9sentation binaire des chiffres \u00b6 Calculer la repr\u00e9sentation binaire de l'ensemble des chiffres de \\(0_{10}\\) \u00e0 \\(9_{10}\\) . Exercice 2 : conversions binaire/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(11_2\\) \\(101_2\\) \\(1010_2\\) \\(100111_2\\) Convertir en binaire, et v\u00e9rifier que le r\u00e9sultat est correct : \\(13_{10}\\) \\(18_{10}\\) \\(26_{10}\\) Exercice 3 : nombre de bits n\u00e9cessaires \u00e0 l'\u00e9criture d'un entier \u00b6 Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(1111\\) . Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(111111\\) . Quelle est la valeur maximale repr\u00e9sentable sur 4 bits ? Sur 6 bits ? (les exprimer avec des puissances de 2) Comment peut-on g\u00e9n\u00e9raliser pour \\(n\\) bits ? En d\u00e9duire combien de nombres sont repr\u00e9sentables sur \\(n\\) bits. Je consid\u00e8re le nombre \\(35_{10}\\) . Comment savoir combien de bits est-ce qu'il faut utiliser pour le repr\u00e9senter en binaire ? Exercice 4 : addition d'entiers positifs (attention \u00e0 l' overflow !) \u00b6 Pour faire la somme de nombres binaires, on utilise les r\u00e8gles suivantes : Somme binaire \\(0_2+0_2 = 0_2\\) \\(0_2+1_2 = 1_2\\) \\(1_2 + 1_2 = 0_2\\) et on retient \\(1\\) Faire la somme des entiers binaires \\(0100 1101_2\\) et \\(11000110_2\\) , et v\u00e9rifier votre r\u00e9sultat en utilisant la base d\u00e9cimale. En machine, si on utilise uniquement 1 octet pour repr\u00e9senter chaque entier, que se passerait-il lorsqu'on ferait l'addition de la question pr\u00e9c\u00e9dente ? En pratique, il faut v\u00e9rifier que l'on dispose de suffisamment de bits avant de faire l'addition de 2 entiers. Exprimer en fonction de \\(n\\) le nombre maximal de bits n\u00e9cessaires pour faire l'addition de deux entiers de taille \\(n\\) . Exercice 5 : multiplication d'entiers positifs \u00b6 Pour faire la multiplication de nombres binaires, on utilise les r\u00e8gles suivantes : Multiplication binaire \\(0_2*0_2 = 0_2\\) \\(0_2*1_2 = 0_2\\) \\(1_2 *1_2 = 1_2\\) On proc\u00e8de de la m\u00eame mani\u00e8re qu'avec le syst\u00e8me d\u00e9cimal. Par exemple, \\(1100_2*1010_2=11000+1100000=1111000_2\\) Poser la multiplication de \\(1010_2\\) par \\(1110_2\\) . Sur combien de bits s'\u00e9crivent les r\u00e9sultats de ces deux exemples ? G\u00e9n\u00e9raliser en fonction de \\(n\\) , combien de bits sont n\u00e9cessaire au maximum pour effectuer la multiplication de deux entiers positifs cod\u00e9s sur \\(n\\) bits. Exercice 6 : repr\u00e9sentation hexad\u00e9cimale \u00b6 Calculer la repr\u00e9sentation hexad\u00e9cimale de l'ensemble des nombres de \\(0_{10}\\) \u00e0 \\(20_{10}\\) . Exercice 7 : conversions hexad\u00e9cimal/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(3_{16}\\) \\(1C_{16}\\) \\(2D_{16}\\) \\(B1_{16}\\) Convertir en hexad\u00e9cimal : \\(18_{10}\\) \\(75_{10}\\) \\(926_{10}\\) Exercice 8 : conversions hexad\u00e9cimal/binaire \u00b6 Convertir en hexad\u00e9cimal : \\(01000101_2\\) \\(11010000_2\\) Convertir en binaire : \\(16_{16}\\) \\(A5_{16}\\) Exercice 9 : adresses IP (bonus) \u00b6 Le format d'une adresse IPv4 est le suivant : a.b.c.d avec a, b, c et d des entiers allant de 0 \u00e0 255. Combien de bits faut-il pour repr\u00e9senter chacun de ces entiers ? A combien d'octets cela correspond-il en tout ? Repr\u00e9senter l'adresse suivante en \u00e9criture binaire : 192.168.10.1 Une adresse IPv6 est constitu\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, s\u00e9par\u00e9s par des \":\". Par exemple, celle du serveur de facebook.com est : 2a03:2880:f145:82:face:b00c:0:25de . Combien de bits faut-il pour repr\u00e9senter chaque champ ? Combien de bits faut-il en tout pour \u00e9crire une adresse au format IPv6 ?","title":"I. Les entiers positifs"},{"location":"1ere/seq2/entiers_positifs/#i-les-entiers-positifs","text":"","title":"I. Les entiers positifs"},{"location":"1ere/seq2/entiers_positifs/#cours","text":"Une machine n'utilise que des 0 et des 1. Il faut donc une m\u00e9thode pour repr\u00e9senter n'importe quel nombre, avec uniquement ces 2 valeurs.","title":"Cours"},{"location":"1ere/seq2/entiers_positifs/#td-representation-des-entiers-positifs","text":"","title":"TD : Repr\u00e9sentation des entiers positifs"},{"location":"1ere/seq2/entiers_relatifs/","text":"body { text-align: justify} II. Les entiers relatifs \u00b6 TD \u00b6 A. Une premi\u00e8re approche... \u00b6 Pour repr\u00e9senter des entiers relatifs en machine, on peut tout d'abord penser qu'un bit peut \u00eatre r\u00e9serv\u00e9 au signe : par exemple le premier bit d'un entier cod\u00e9 sur 4 bits sera \u00e0 1 si c'est un entier n\u00e9gatif, \u00e0 0 si c'est un entier positif. \\(0010_2\\) repr\u00e9senterait alors \\(2_{10}\\) , et \\(1010_2\\) repr\u00e9senterait \\(-2_{10}\\) . Quels seraient les nombres minimal et maximal qui pourraient \u00eatre repr\u00e9sent\u00e9s ? Quel nombre aurait 2 repr\u00e9sentations ? Que ferait l'addition de \\(0101_2\\) ( \\(5_{10}\\) ) et \\(1011_2\\) ( \\(-3_{10}\\) ) ? B. Le compl\u00e9ment \u00e0 2 puissance n \u00b6 On propose de coder les entiers sur 4 bits avec la m\u00e9thode d\u00e9crite sur le sch\u00e9ma ci-contre. Les calculs suivants sont-ils corrects ? Compl\u00e9ter le calcul avec les r\u00e9sultats et les conversions (ne pas compter l'overflow pour l'addition binaire !) . Binaire D\u00e9cimal Binaire D\u00e9cimal \\(0101_2\\) \\(5_{10}\\) \\(0011_2\\) \\(+1101_2\\) \\(-3_{10}\\) \\(+1001_2\\) Ce codage ne sort pas de nulle part : il s'agit de ce que l'on appelle de la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) . M\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) (compl\u00e9ment \u00e0 2) Pour repr\u00e9senter un entier positif sur \\(n\\) bits, on prend sa repr\u00e9sentation binaire en ajoutant autant de 0 que n\u00e9cessaire devant pour avoir au total \\(n\\) bits. Pour repr\u00e9senter un entier n\u00e9gatif \\(-m\\) sur \\(n\\) bits : On code en binaire l'entier positif \\(m\\) , On inverse tous les bits (on prend le compl\u00e9ment \u00e0 1 ), On additionne l'entier 1 au nombre obtenu. Si l'addition d\u00e9passe \\(n\\) bits, on ne conserve pas le bit suppl\u00e9mentaire ( \"overflow\" ). Exemple : Repr\u00e9senter -6 sur 4 bits. Entier 6 en binaire 0110 Compl\u00e9ment \u00e0 1 1001 Addition de 1 + 0001 Compl\u00e9ment \u00e0 \\(2^4\\) 1010 V\u00e9rifier avec le sch\u00e9ma \u00e0 quoi correspond la solution trouv\u00e9e. Utiliser la m\u00e9thode du compl\u00e9ment \u00e0 2 pour repr\u00e9senter : \\(-6_{10}\\) sur 8 bits, Entier 6 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) \\(-68_{10}\\) sur 8 bits. Entier 68 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) Faire l'addition de \\(-5_{10}\\) et \\(5_{10}\\) en binaire sur 4 bits (ne pas oublier de ne pas conserver l'\"overflow\") . Calculer le compl\u00e9ment \u00e0 \\(2^4\\) de \\(-5_{10}\\) . En d\u00e9duire comment obtenir la valeur d\u00e9cimale d'un entier n\u00e9gatif cod\u00e9 avec le compl\u00e9ment \u00e0 2. En d\u00e9duire la valeur d\u00e9cimale de l'entier repr\u00e9sent\u00e9 sur 4 bits par \\(1110_2\\) . Cours \u00b6 Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement. A. La m\u00e9thode \u00b6 La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) du TD est \u00e0 conna\u00eetre. Le nombre de bits utilis\u00e9s pour cette repr\u00e9sentation doit toujours \u00eatre pr\u00e9cis\u00e9 : 8, 16, 32, 64 bits sont des tailles couramment utilis\u00e9es. Le bit le plus \u00e0 gauche repr\u00e9sente le signe : il vaut 1 si l'entier est n\u00e9gatif, 0 s'il est positif . Par rapport aux entiers non-sign\u00e9s, il faut donc compter un bit suppl\u00e9mentaire pour le signe lorsque l'on \u00e9value le nombre de bits n\u00e9cessaire \u00e0 la repr\u00e9sentation du nombre. B. Les entiers repr\u00e9sentables \u00b6 Le nombre maximal repr\u00e9sentable sur 4 bits avec cette m\u00e9thode est \\(0111\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction du nombre de bits utilis\u00e9 \\(n\\) . Solution Sa valeur est de 7, soit \\(2^{n-1}-1\\) . De la m\u00eame mani\u00e8re, donner le nombre maximal repr\u00e9sentable sur 8 bits, en \u00e9criture binaire et d\u00e9cimale. Solution Ce nombre est 01111111, soit 127. Le nombre minimal repr\u00e9sentable sur 4 bits est \\(1000\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction de \\(n\\) . Solution Ce nombre est -8, soit \\(2^{n-1}\\) . Conclusion : Les valeurs pouvant \u00eatre repr\u00e9sent\u00e9es avec cette m\u00e9thode vont donc de \\(-2^{n-1}\\) \u00e0 \\(2^{n-1}-1\\) .","title":"II. Les entiers relatifs"},{"location":"1ere/seq2/entiers_relatifs/#ii-les-entiers-relatifs","text":"","title":"II. Les entiers relatifs"},{"location":"1ere/seq2/entiers_relatifs/#td","text":"","title":"TD"},{"location":"1ere/seq2/entiers_relatifs/#cours","text":"Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement.","title":"Cours"},{"location":"1ere/seq2/flottants/","text":"body { text-align: justify} III. Les flottants \u00b6 Cours \u00b6 En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom que le nom math\u00e9matique, comme pour les entiers ? Ces deux ensembles ne sont en fait pas tout \u00e0 fait \u00e9quivalents. A. Test d'\u00e9galit\u00e9 de flottants \u00b6 Que doit, a priori, renvoyer le test 0.1 + 0.2 == 0.3 ? Il devrait renvoyer True . Que renvoie-t-il en fait ? Il renvoie False . Quelle est en fait la valeur de 0.1 + 0.2 ? Sa valeur est 3.0000...00004 Cela s'explique par la repr\u00e9sentation de ces valeurs en machine. B. D\u00e9composition et conversion de la base 2 \u00e0 la base 10 \u00b6 Prenons le nombre \\(0.375\\) . On peut d\u00e9composer la partie apr\u00e8s la virgule dans la base 10 en fonction des puissances de 10, comme on l'a fait pour la partie enti\u00e8re : \\(0.375 = 3*10^{-1} + 7*10^{-2} + 5*10^{-3}\\) Les rangs des puissances de 10 sont num\u00e9rot\u00e9s n\u00e9gativement, celui du premier chiffre \u00e0 gauche \u00e9tant -1. De la m\u00eame fa\u00e7on, un nombre \u00e0 virgule \u00e9crit en binaire se d\u00e9compose en fonction de \\(2^{rang}\\) : \\(10.011_2 = 1*2^1+1*2^{-2}+2^{-3} = 2+0.25+0.125 = 2.380\\) C. Conversion de la base 10 \u00e0 la base 2 \u00b6 C.1. Cas g\u00e9n\u00e9ral \u00b6 M\u00e9thode : Conversion de la partie apr\u00e8s la virgule d'un nombre r\u00e9el de la base 10 \u00e0 la base 2 On la multiplie par 2. La partie enti\u00e8re de ce produit donne le premier coefficient apr\u00e8s la virgule. On garde la partie d\u00e9cimale du produit. On r\u00e9it\u00e8re l'algorithme avec cette valeur, jusqu'\u00e0 ce qu'elle devienne nulle . Le nombre converti se lit en combinant les parties enti\u00e8res du produit. Exemples : Remplir le tableau suivant, pour obtenir la conversion de \\(0.375\\) . Multiplication par 2 de la partie apr\u00e8s la virgule Partie enti\u00e8re du produit Partie apr\u00e8s la virgule du produit Solution Multiplication par 2 de la partie apr\u00e8s la virgule Partie enti\u00e8re du produit Partie apr\u00e8s la virgule du produit \\(0.375*2=0.750\\) \\(0\\) \\(0.750\\) \\(0.750*2=1.500\\) \\(1\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(3.375_{10} = 11.011_2\\) Trouver la repr\u00e9sentation binaire de \\(0.25_{10}\\) . Solution Multiplication par 2 de la partie apr\u00e8s la virgule Partie enti\u00e8re du produit Partie apr\u00e8s la virgule du produit \\(0.25*2=0.5\\) \\(0\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(0.25_{10}=0.01_2\\) R\u00e9capitulatif de la m\u00e9thode Pour convertir un r\u00e9el de la base 10 \u00e0 la base 2 : - On convertit sa partie enti\u00e8re en faisant des divisions euclidiennes successives par 2 , jusqu'\u00e0 obtenir un quotient de 0 , - On convertit sa partie apr\u00e8s la virgule en faisant des multiplications successives par 2 , jusqu'\u00e0 obtenir un produit qui vale 0 . Exemple Comment s'\u00e9crit le r\u00e9el \\(5.25_{10}\\) en binaire ? Solution \\(5.25_{10} = 101.01_2\\) C.2. Cas particuliers \u00b6 Que se passe-t-il lorsque l'on veut convertir la fraction \\(1/3\\) , qui a une \u00e9criture infinie quand il est \u00e9crit avec une virgule ? Solution Multiplication par 2 de la partie apr\u00e8s la virgule Partie enti\u00e8re du produit Partie apr\u00e8s la virgule du produit \\(1/3*2=2/3\\) \\(0\\) \\(2/3\\) \\(2/3*2=4/3\\) \\(1\\) \\(1/3\\) L'algorithme ne se termine pas. Ecrire les 5 premi\u00e8res \u00e9tapes de la conversion de \\(0.1_{10}\\) . Solution Multiplication par 2 de la partie apr\u00e8s la virgule Partie enti\u00e8re du produit Partie apr\u00e8s la virgule du produit \\(0.1*2=0.2\\) \\(0\\) \\(0.2\\) \\(0.2*2=0.4\\) \\(0\\) \\(0.4\\) \\(0.4*2=0.8\\) \\(0\\) \\(0.8\\) \\(0.8*2=1.6\\) \\(1\\) \\(0.6\\) \\(0.6*2=1.2\\) \\(1\\) \\(0.2\\) Que peut-on en d\u00e9duire sur la repr\u00e9sentation de \\(0.1_{10}\\) dans la machine ? Pourquoi le test 0.1 + 0.2 == 0.3 renvoie-t-il False ? L'algorithme ne s'arr\u00eate pas, donc 0.1 ne peut pas \u00eatre repr\u00e9sent\u00e9 de mani\u00e8re exacte. \\(0.1+0.2\\) ne fait pas exactement 0.3 \u00e0 cause de la repr\u00e9sentation approximative de ces nombres dans la machine. Conclusion \u00b6 En programmation, est-il pertinent de tester l'\u00e9galit\u00e9 entre deux flottants ? Comment peut-on faire alors ? Ce n'est pas pertinent, car on peut avoir des erreurs dues \u00e0 l'approximation de la repr\u00e9sentation. On peut, \u00e0 la place, tester si ces nombres sont suffisamment proches.","title":"III. Les flottants"},{"location":"1ere/seq2/flottants/#iii-les-flottants","text":"","title":"III. Les flottants"},{"location":"1ere/seq2/flottants/#cours","text":"En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom que le nom math\u00e9matique, comme pour les entiers ? Ces deux ensembles ne sont en fait pas tout \u00e0 fait \u00e9quivalents.","title":"Cours"},{"location":"1ere/seq3/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq3/#programme","text":"","title":"Programme"},{"location":"1ere/seq3/architecture/","text":"body { text-align: justify} II. L'architecture mat\u00e9rielle des ordinateurs \u00b6 Cours \u00b6 A. Les circuits \u00b6 Un ordinateur fonctionne avec des 0 et des 1 , qu'il faut repr\u00e9senter physiquement. Les ordinateurs \u00e9taient \u00e9quip\u00e9s de tubes \u00e0 vide (tous deux sont des composants \u00e9lectroniques), avant d'\u00eatre remplac\u00e9s par des transistors . Ce sont de tr\u00e8s petits composants \u00e9lectroniques, permettant de faire passer ou de bloquer un courant, qui ont permis de miniaturiser les machines. Le passage d'un courant repr\u00e9sente le 1 , alors que l'absence de courant repr\u00e9sente le 0 . Les transistors peuvent aujourd'hui \u00eatre aussi petit que 10 nanom\u00e8tres, on ne les distingue pas \u00e0 l'oeil nu. Ils sont agenc\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres et reli\u00e9s sur des circuits int\u00e9gr\u00e9s . Les circuits les plus simples sont les circuits logiques , faits \u00e0 partir de portes logiques qui permettent de r\u00e9aliser des op\u00e9rations bool\u00e9ennes. En combinant des circuits logiques, on parvient \u00e0 fabriquer les circuits essentiels au fonctionnement de l'ordinateur faisant de plus grands calculs, comme la m\u00e9moire et le processeur. B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Il existe diff\u00e9rents types de m\u00e9moires. Globalement, on regroupe : La m\u00e9moire vive ou RAM (Random Access Memory) : Elle peut se repr\u00e9senter comme des tableaux d\u2019octets, chacun identifi\u00e9 par une adresse. A cause des composants \u00e9lectroniques utilis\u00e9s, il faut une alimentation \u00e9lectrique pour conserver les donn\u00e9es. C\u2019est pour cela que la m\u00e9moire vive est volatile : les donn\u00e9es sont perdues en cas de coupure de courant. Elle permet d\u2019acc\u00e9der aux donn\u00e9es en lecture et en \u00e9criture avec une vitesse relativement rapide. la m\u00e9moire morte ou ROM (Read-Only Memory) : Elle sert \u00e0 stocker les programmes qui ne doivent pas \u00eatre modif\u00e9s et n'est donc accessible qu'en lecture . Elle contient le n\u00e9cessaire pour faire d\u00e9marrer un ordinateur, et est non-volatile . La m\u00e9moire de masse : C'est une m\u00e9moire non-volatile , \u00e0 laquelle on peut acc\u00e9der en lecture et en \u00e9criture . Elle permet de stocker une grande quantit\u00e9 de donn\u00e9es, mais n'y acc\u00e8de pas rapidement. Ce sont les disques durs SSD ou HDD ou bien les cl\u00e9s USB par exemple. Plus on s'\u00e9loigne du processeur, plus la capacit\u00e9 de la m\u00e9moire utilis\u00e9e augmente et plus le temps d'acc\u00e8s aux donn\u00e9es s'allonge. B.2. Le processeur \u00b6 Les instructions des programmes sont ex\u00e9cut\u00e9es par le processeur ou CPU (Central Processing Unit) en anglais. Il est qualifi\u00e9 de microprocesseur lorsque tous ses composants sont suffisamment petits pour \u00eatre regroup\u00e9s dans un m\u00eame bo\u00eetier. Il est constitu\u00e9 de 3 parties : - les registres qui correspondent \u00e0 une petite quantit\u00e9 de m\u00e9moire. Leur nombre et taille varient en fonction du type de CPU. Ils sont typiquement nomm\u00e9s R1, R2, R3,... - l\u2019 Unit\u00e9 Arithm\u00e9tique et Logique (UAL ou ALU en anglais), qui est charg\u00e9e de l\u2019ex\u00e9cution des calculs. Elle est compos\u00e9e de circuits comme l\u2019additionneur de la partie pr\u00e9c\u00e9dente. - l\u2019 unit\u00e9 de commande/de contr\u00f4le qui coordonne l\u2019ex\u00e9cution de toutes les op\u00e9rations. Le rythme auquel les instructions sont trait\u00e9es d\u00e9pend de la fr\u00e9quence de l'horloge du processeur. Une seule instruction peut \u00eatre trait\u00e9e \u00e0 chaque cycle, donc pour aller plus vite, il faut une grande fr\u00e9quence. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 La plupart des ordinateurs utilis\u00e9s aujourd'hui sont bas\u00e9s sur l' architecture de von Neumann , \u00e9labor\u00e9e en 1945. Il s'agit de la premi\u00e8re architecture stockant au m\u00eame endroit les donn\u00e9es et les programmes : dans la m\u00e9moire vive. Elle est constitu\u00e9e : - d'une m\u00e9moire , correspondant \u00e0 de la RAM, contenant programme et donn\u00e9es, - d'une UAL avec des registres comme un accumulateur , - d'une unit\u00e9 de commande , - d'un syst\u00e8me d\u2019 entr\u00e9es-sorties . Les entr\u00e9es et sorties permettent \u00e0 l\u2019ordinateur d\u2019interagir avec l\u2019ext\u00e9rieur. Chaque p\u00e9riph\u00e9rique est r\u00e9gi par un contr\u00f4leur (un ensemble de composants \u00e9lectroniques) adapt\u00e9, permettant d\u2019encoder et de d\u00e9coder les donn\u00e9es envoy\u00e9es et re\u00e7ues. Un p\u00e9riph\u00e9rique d'entr\u00e9e (comme une souris) permet d'obtenir des informations, alors qu'un p\u00e9riph\u00e9rique de sortie (comme un \u00e9cran) permet d'envoyer des informations vers l'ext\u00e9rieur. C.2. Connecter les composants \u00b6 Les donn\u00e9es circulent entre les composants de l\u2019ordinateur (principalement entre le processeur et la m\u00e9moire) gr\u00e2ce \u00e0 des bus. Il en existe 3 grands types : - les bus d\u2019adresse , transportant les adresses des cases m\u00e9moires auxquelles on veut acc\u00e9der, - les bus de donn\u00e9es , transportant les donn\u00e9es en elles-m\u00eames, - les bus de commande/contr\u00f4le synchronisant l\u2019ensemble (en indiquant le type d\u2019actions \u00e0 ex\u00e9cuter, comme la lecture ou l\u2019\u00e9criture d\u2019une donn\u00e9e en m\u00e9moire). Les diff\u00e9rents composants d\u00e9crits dans les parties pr\u00e9c\u00e9dentes, ainsi que d\u2019autres qui am\u00e9liorent les ordinateurs d\u2019aujourd\u2019hui, ont besoin d\u2019\u00eatre interconnect\u00e9s de mani\u00e8re fiable : ils sont regroup\u00e9s sur une carte m\u00e8re . Elle int\u00e8gre : le processeur, les barrettes de m\u00e9moire RAM, le(s) disque(s) dur(s), les ports d\u2019entr\u00e9e-sortie, les diff\u00e9rents p\u00e9riph\u00e9riques (lecteurs DVD, carte m\u00e9moire,...), la carte r\u00e9seau, la carte graphique, l\u2019alimentation, les syst\u00e8mes de refroidissement. C.2. Les architectures multiprocesseurs \u00b6 L\u2019architecture d\u00e9crite pr\u00e9c\u00e9demment est une architecture monoprocesseur : ne comportant qu\u2019un processeur. Pour augmenter la puissance des ordinateurs, on a mis\u00e9 pendant longtemps sur l\u2019augmentation de leur fr\u00e9quence d\u2019horloge. Celle-ci est cependant devenue de plus en plus difficile, comme illustr\u00e9 sur la figure ci-contre, \u00e0 cause d\u2019un probl\u00e8me de surchauffe. L\u2019id\u00e9e a depuis \u00e9t\u00e9 d\u2019utiliser plusieurs processeurs dans un seul ordinateur : on parle d\u2019 ordinateur multiprocesseur . Cela cr\u00e9e des probl\u00e8mes de partage de la m\u00e9moire, pour lesquels il a fallu \u00e9tablir des stat\u00e9gies. On utilise de la m\u00e9moire cache, d\u2019acc\u00e8s tr\u00e8s rapide, soit partag\u00e9e pour les diff\u00e9rents processeurs, soit d\u00e9di\u00e9e \u00e0 chacun. Il faut de plus adapter les programmes \u00e0 l'architecture. Aujourd\u2019hui, on ne se contente en fait pas de multiplier les processeurs, on utilise \u00e9galement des processeurs ayant plusieurs coeurs ( architecture multicoeur ) : plusieurs unit\u00e9s de traitement ind\u00e9pendantes. Questionnaire sur le cours \u00b6 A. Les circuits \u00b6 Ranger du plus petit au plus grand les \u00e9l\u00e9ments suivants : processeur , porte logique , transistor , additionneur . B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Par quelles caract\u00e9ristiques diff\u00e9rencie-t-on les diff\u00e9rents types de m\u00e9moires ? Faire un sch\u00e9ma (de type carte mentale) avec ces caract\u00e9ristiques et les types de m\u00e9moires associ\u00e9s. Dans quel type de m\u00e9moire faut-il stocker : Les donn\u00e9es en cours d'utilisation du programme : Des photos de vacances : Le BIOS ou UEFI : B.2. Le processeur \u00b6 Relever les diff\u00e9rents composants d'un processeur et leur fonction. Repr\u00e9senter des cycles d'horloge d'un processeur et indiquer \u00e0 quel moment de nouvelles op\u00e9rations sont faites. Rechercher l'ordre de grandeur en Hz de la fr\u00e9quence des processeurs actuels. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 Quelle est l'id\u00e9e nouvelle de John Von Neumann lorsqu'il propose son architecture ? Que faut-il donc ajouter aux principaux composants de l'ordinateur pour avoir une machine utilisable ? Les p\u00e9riph\u00e9riques suivants sont-ils des entr\u00e9es, des sorties, ou bien les deux ? Composant Entr\u00e9e Sortie Clavier Imprimante Scanner Disque Souris Ecran C.2. Connecter les composants \u00b6 Expliquer comment les diff\u00e9rents composants d'un ordinateurs sont connect\u00e9s. Compl\u00e9ter le sch\u00e9ma suivant avec des fl\u00e8ches repr\u00e9sentant les diff\u00e9rents types de bus, permettant la communication entre les composants. C.3. Les architectures multiprocesseurs \u00b6 Sur quel param\u00e8tre peut-on jouer pour augmenter la puissance des ordinateurs, sans toucher aux processeurs ? Pourquoi alors augmenter le nombre de processeurs ? A quel probl\u00e8me faut-il alors penser ? TD : Etude du Raspberry Pi \u00b6 > Diaporama < A. Pr\u00e9sentation \u00b6 B. Identification des composants \u00b6 Quels sont les composants essentiels qu'il faut rechercher ? Les identifier sur le sch\u00e9ma. Comment compl\u00e9ter l'architecture de von Neumann ? Identifier ces composants sur le sch\u00e9ma. TP : Programmer au plus pr\u00e8s de la machine \u00b6 La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : Code MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Rechercher ce que font les instructions CMP et BNE en langage assembleur. a. Saisir le programme suivant : Code MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT b. Identifier ce que font les diff\u00e9rentes parties du programme, et donner son \u00e9quivalent en Python.","title":"II. Architecture"},{"location":"1ere/seq3/architecture/#ii-larchitecture-materielle-des-ordinateurs","text":"","title":"II. L'architecture mat\u00e9rielle des ordinateurs"},{"location":"1ere/seq3/architecture/#cours","text":"","title":"Cours"},{"location":"1ere/seq3/architecture/#questionnaire-sur-le-cours","text":"","title":"Questionnaire sur le cours"},{"location":"1ere/seq3/architecture/#td-etude-du-raspberry-pi","text":"> Diaporama <","title":"TD : Etude du Raspberry Pi"},{"location":"1ere/seq3/architecture/#tp-programmer-au-plus-pres-de-la-machine","text":"La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : Code MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Rechercher ce que font les instructions CMP et BNE en langage assembleur. a. Saisir le programme suivant : Code MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT b. Identifier ce que font les diff\u00e9rentes parties du programme, et donner son \u00e9quivalent en Python.","title":"TP : Programmer au plus pr\u00e8s de la machine"},{"location":"1ere/seq3/logique/","text":"body { text-align: justify} I. La logique bool\u00e9enne \u00b6 Cours \u00b6 Introduction \u00b6 L'informatique est bas\u00e9e sur l'utilisation de 1 et de 0 : ils repr\u00e9sentent le vrai et le faux, True et False en Python, et correspondent au type bool\u00e9en . Pour combiner des expressions bool\u00e9ennes, on utilise des op\u00e9rateurs bool\u00e9ens . Ils servent : - en programmation , - dans la conception de circuits \u00e9lectroniques , - dans la r\u00e9solution de probl\u00e8mes de logique . A. Le NON \u00b6 D\u00e9finitions L'op\u00e9rateur \\(NON\\) (le \\(NOT\\) en anglais) inverse la valeur d'une variable bool\u00e9enne . Si l'expression bool\u00e9enne \\(A\\) est fausse, alors \\(NON(A)\\) est vraie et r\u00e9ciproquement. On r\u00e9sume cela avec une table, dite table de v\u00e9rit\u00e9 de l'op\u00e9rateur \\(not\\) : Notation standard \\(A\\) \\(NON(A)\\) Faux Vrai Vrai Faux Notation en Python A not(A) False True True False La table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne indique la valeur de l'expression pour chaque valeur possible de ses variables. En \u00e9lectronique, on repr\u00e9sente cette op\u00e9ration sous la forme d'une porte logique dont le symbole est le suivant : On symbolise la pr\u00e9sence d'un courant par un 1, et son absence par un 0. La table de v\u00e9rit\u00e9 peut donc aussi s'\u00e9crire sous la forme suivante : \\(A\\) \\(NON(A)\\) 0 1 1 0 B. Le ET \u00b6 D\u00e9finition L'op\u00e9rateur \\(ET\\) (le \\(AND\\) en anglais) permet d'associer deux expressions bool\u00e9ennes \\(A\\) et \\(B\\) de la mani\u00e8re suivante : \\(A\\) \\(ET\\) \\(B\\) est vraie si A est vraie et B est vraie. Cela donne la table de v\u00e9rit\u00e9 suivante : Notation standard \\(A\\) \\(B\\) \\(A\\) \\(ET\\) \\(B\\) Faux Faux Faux Vrai Faux Faux Faux Vrai Faux Vrai Vrai Vrai Notation en Python A B A and B False False False True False False False True False True True True Porte logique \u00e0 2 entr\u00e9es A et B : C. Le OU \u00b6 D\u00e9finition L'op\u00e9rateur \\(OU\\) ( le \\(OR\\) en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : \\(A\\) \\(OU\\) \\(B\\) est vrai si \\(A\\) est vraie, \\(B\\) est vraie, ou bien si les deux le sont. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A OU B False False False True False True False True True True True True Porte logique \u00e0 2 entr\u00e9es A et B : Conclusion \u00b6 Les portes logiques sont les \u00e9l\u00e9ments de base des circuits \u00e9lectroniques. Leur combinaison permet de r\u00e9aliser des circuits beaucoup plus complexes. TD : Les expressions bool\u00e9ennes \u00b6 Exercice 1 : Vrai ou Faux \u00b6 Si a vaut True et b vaut False , not(a or b) s'\u00e9value \u00e0 True . L'expression not(a or b) a la m\u00eame valeur que l'expression (not a) or (not b) . Si a vaut True et b vaut True , not(a and b) s'\u00e9value \u00e0 True . L'expression not(a and b) a la m\u00eame valeur que l'expression not(a) or not(b) . Exercice 2 : \u00b6 S\u00e9lectionner la(les) bonne(s) r\u00e9ponse(s) parmi les diff\u00e9rentes propositions. L'expression bool\u00e9enne a or not(b) s'\u00e9value \u00e0 True . Quelles peuvent \u00eatre les valeurs de a et de b ? a vaut True et b vaut True a vaut True et b vaut False a vaut False et b vaut True a vaut False et b vaut False Parmi les expressions suivantes, laquelle s'\u00e9value en True ? True and (False and True) True or (False and True) False and (False and True) False or (False and True) Exercice 3 \u00b6 On consid\u00e8re l'expression a and b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut False , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? On consid\u00e8re l'expression a or b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut True , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? Conclusion (\u00e0 retenir) : Exercice 4 \u00b6 On rappelle qu'un nombre est pair si son reste dans la division euclidienne par 2 vaut 0, et qu'il est impair sinon. Pour \u00e9crire une fonction indiquant si un entier n est pair ou non, on peut avoir envie de l'exprimer en Python avec des conditions : Code def pair ( n ): if n % 2 == 0 : return True else : return False Cette \u00e9criture est abusive, car l'expression n%2 == 0 renvoie d\u00e9j\u00e0 soit la valeur True , soit la valeur False . On pr\u00e9f\u00e8re l'\u00e9crire simplement avec une expression bool\u00e9enne : Code def pair ( n ): return n % 2 == 0 Se baser sur l'exemple donn\u00e9 pour \u00e9crire une fonction centaine(n) qui renvoie True si n est sup\u00e9rieur \u00e0 100 , et False sinon. La fonction n'utilisera pas de conditions, mais une expression bool\u00e9enne. Comment peut-on obtenir les nombres impairs \u00e0 partir de la fonction pair(n) ? M\u00eame question pour obtenir les nombres inf\u00e9rieurs \u00e0 100 . Trouver l'expression bool\u00e9enne pouvant remplacer le code suivant : Code if a == b : c = True elif a > b + 10 : c = True else : c = False TD : Probl\u00e8me de logique \u00b6 Au milieu du d\u00e9sert, vous cherchez une oasis. Vous arrivez \u00e0 un carrefour o\u00f9 votre chemin se divise en 2 : un chemin va vers la gauche, un autre vers la droite. Deux sphinx sont pos\u00e9s \u00e0 ce carrefour et savent quel est le chemin \u00e0 prendre. Ils vont vous donner des indications, mais attention ! Soit ils disent tous les deux la v\u00e9rit\u00e9, soit ils mentent tous les deux. Voici ce que vous disent les sphinx S1 et S2 : S1 : \"L'oasis se trouve sur la gauche.\" S2 : \"Non elle est \u00e0 droite.\" S1 : \"Ou alors sur la droite.\" Repr\u00e9senter ce qu'affirme S1 en fonction d'une variable bool\u00e9enne not\u00e9e G , valant True si le chemin menant \u00e0 l'oasis est celui de gauche, False s'il est \u00e0 droite. Repr\u00e9senter ce qu'affirme S2 en fonction de la m\u00eame variable G . Remplir la table de v\u00e9rit\u00e9 suivante : G S1 S2 True False En d\u00e9duire quel chemin est-ce qu'il faut prendre pour aller jusqu'\u00e0 l'oasis. TD : L'additionneur binaire \u00b6 On utilise des portes logiques (repr\u00e9sentation \u00e9lectronique des op\u00e9rateurs bool\u00e9ens) pour construire des circuits en assemblant ces portes. On rappelle leur repr\u00e9sentation classique : Op\u00e9rateur bool\u00e9en Porte logique NON( A ) A ET B A OU B A. L'op\u00e9rateur XOR \u00b6 Le XOR est un op\u00e9rateur renvoyant True si, et seulement si, une de ses deux entr\u00e9es A et B valent True . Il est appel\u00e9 OU EXCLUSIF , par opposition au OU du cours, qui est le OU INCLUSIF (il inclue le cas dans lequel les deux entr\u00e9es sont \u00e0 True ). On raisonne ici au niveau des circuits, on remplace donc les True et False par, respectivement, 1 et 0 . Compl\u00e9ter la table de v\u00e9rit\u00e9 du XOR donn\u00e9e ci-dessous : A B A XOR B 0 0 1 0 0 1 1 1 On peut le repr\u00e9senter \u00e9lectroniquement par la porte suivante : V\u00e9rifier que le circuit ci-dessous fait bien le calcul du XOR \u00e0 partir des op\u00e9rateurs bool\u00e9ens de base, en attribuant toutes les valeurs possibles (entre 0 et 1) aux entr\u00e9es A et B et en calculant la valeur de la sortie S. La valeur de S doit correspondre aux valeurs A XOR B obtenues dans la table de v\u00e9rit\u00e9 de la question 1. A partir de ce circuit, trouver l'expression bool\u00e9enne constitu\u00e9e des op\u00e9rateurs NON, ET et OU qui permet de calculer le XOR. Pour cela, il faut suivre les fils du circuit et faire l'op\u00e9ration correspondant \u00e0 chaque porte sur les entr\u00e9es exprim\u00e9es en fonction de A et B. Utiliser l'expression bool\u00e9enne obtenue \u00e0 la question 3 pour programmer une fonction xor prenant en param\u00e8tres deux bool\u00e9ens a et b et renvoyant un bool\u00e9en, en utilisant les op\u00e9rateurs bool\u00e9ens not , and et or . B. L'additionneur 1 bit \u00b6 Un additionneur 1 bit est un circuit permettant d'additionner deux bits entre eux. Il dispose de : Trois entr\u00e9es : - a : le premier bit, - b : le deuxi\u00e8me bit, - re : la retenue entrante (peut exister dans le cas o\u00f9 l'on combine les additionneurs) Deux sorties : - s : la somme des deux bits, - rs : la retenue sortante. Aller voir le circuit \u00e9lectronique correspondant \u00e0 l'URL suivante : https://www.cahier-nsi.fr/additionneur1bit/ Compl\u00e9ter les colonnes de s et de rs dans la table de v\u00e9rit\u00e9 de l'additionneur en changeant les valeurs d'entr\u00e9e du circuit : a b re s rs (a XOR b) XOR re 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 On donne l'expression bool\u00e9enne de (a XOR b) XOR re Compl\u00e9ter la table de v\u00e9rit\u00e9 de cette expression. A quelle autre colonne correspond-elle ? Retrouver l'expression \u00e0 partir du circuit \u00e9lectronique. Se baser sur le circuit pour obtenir l'expression bool\u00e9enne permettant de calculer rs . Programmer une fonction add1bit , prenant en param\u00e8tres trois entiers a , b et la retenue re , et renvoyant en sortie s et la retenue rs , dont les expressions bool\u00e9enne ont \u00e9t\u00e9 trouv\u00e9es aux questions 2 et 3. Utiliser la fonction xor d\u00e9finie Partie A, question 4. N.B.: Pour qu'une fonction renvoie 2 valeurs en sortie, il faut les s\u00e9parer par une , , apr\u00e8s le return .","title":"I. Logique bool\u00e9enne"},{"location":"1ere/seq3/logique/#i-la-logique-booleenne","text":"","title":"I. La logique bool\u00e9enne"},{"location":"1ere/seq3/logique/#cours","text":"","title":"Cours"},{"location":"1ere/seq3/logique/#td-les-expressions-booleennes","text":"","title":"TD : Les expressions bool\u00e9ennes"},{"location":"1ere/seq3/logique/#td-probleme-de-logique","text":"Au milieu du d\u00e9sert, vous cherchez une oasis. Vous arrivez \u00e0 un carrefour o\u00f9 votre chemin se divise en 2 : un chemin va vers la gauche, un autre vers la droite. Deux sphinx sont pos\u00e9s \u00e0 ce carrefour et savent quel est le chemin \u00e0 prendre. Ils vont vous donner des indications, mais attention ! Soit ils disent tous les deux la v\u00e9rit\u00e9, soit ils mentent tous les deux. Voici ce que vous disent les sphinx S1 et S2 : S1 : \"L'oasis se trouve sur la gauche.\" S2 : \"Non elle est \u00e0 droite.\" S1 : \"Ou alors sur la droite.\" Repr\u00e9senter ce qu'affirme S1 en fonction d'une variable bool\u00e9enne not\u00e9e G , valant True si le chemin menant \u00e0 l'oasis est celui de gauche, False s'il est \u00e0 droite. Repr\u00e9senter ce qu'affirme S2 en fonction de la m\u00eame variable G . Remplir la table de v\u00e9rit\u00e9 suivante : G S1 S2 True False En d\u00e9duire quel chemin est-ce qu'il faut prendre pour aller jusqu'\u00e0 l'oasis.","title":"TD : Probl\u00e8me de logique"},{"location":"1ere/seq3/logique/#td-ladditionneur-binaire","text":"On utilise des portes logiques (repr\u00e9sentation \u00e9lectronique des op\u00e9rateurs bool\u00e9ens) pour construire des circuits en assemblant ces portes. On rappelle leur repr\u00e9sentation classique : Op\u00e9rateur bool\u00e9en Porte logique NON( A ) A ET B A OU B","title":"TD : L'additionneur binaire"},{"location":"1ere/seq4/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq4/#programme","text":"","title":"Programme"},{"location":"1ere/seq4/caracteres/","text":"body { text-align: justify} II. Les cha\u00eenes de caract\u00e8res en Python \u00b6 Cours \u00b6 A. Les op\u00e9rateurs \u00b6 Certains op\u00e9rateurs utilisables sur les entiers et flottants sont aussi utilisables sur des cha\u00eenes de caract\u00e8res. Op\u00e9rateur Signification + Concat\u00e9nation * R\u00e9p\u00e9tition in Inclusion Exemples \"abc\"+\"def\" vaut \"abcdef\" \"abc\"*3 vaut \"abcabcabc\" \"bc\" in \"abc\" vaut True B. Comparer des cha\u00eenes de caract\u00e8res \u00b6 La comparaison de cha\u00eenes avec les op\u00e9rateurs inf\u00e9rieur ( < ) ou sup\u00e9rieur ( > ) est possible car chacun des caract\u00e8res est repr\u00e9sent\u00e9 dans la machine par un nombre, son code Unicode. On compare donc le code de 2 caract\u00e8res pour d\u00e9terminer celui qui est inf\u00e9rieur \u00e0 l'autre. Exemple a est inf\u00e9rieur \u00e0 m car son code ASCII est inf\u00e9rieur. L'ordre des caract\u00e8res dans le code ASCII respecte l'ordre alphab\u00e9tique, et c'est la m\u00eame chose avec les majuscules. 1 est inf\u00e9rieur \u00e0 9 pour la m\u00eame raison. Le code ASCII respecte l'ordre croissant des chiffres. Une cha\u00eene de caract\u00e8res est une s\u00e9quence , c'est-\u00e0-dire qu'elle comprend plusieurs \u00e9l\u00e9ments qui sont ici de type caract\u00e8res. il n'y a donc g\u00e9n\u00e9ralement pas qu'une valeur \u00e0 comparer avec une autre. L' algorithme appliqu\u00e9 pour d\u00e9terminer quelle chaine est inf\u00e9rieure (ou sup\u00e9rieure) \u00e0 l'autre est le suivant : - On compare les premiers caract\u00e8res de chaque cha\u00eene. - S'ils n'ont pas le m\u00eame code ASCII, l'un est inf\u00e9rieur \u00e0 l'autre. L'algorithme s'arr\u00eate, cette relation d'ordre est valable pour la cha\u00eene enti\u00e8re. - Sinon, on compare les caract\u00e8res suivant de chaque cha\u00eene, et on r\u00e9applique l'algorithme. Au maximum, on va jusqu'au bout de chaque cha\u00eene. Exemple On compare abracadabra \u00e0 abc : - a et a sont identiques, on regarde les caract\u00e8res suivants. - b et b sont identiques, on regarde les caract\u00e8res suivants. - r et c sont diff\u00e9rents, le code ASCII de c est inf\u00e9rieur \u00e0 celui de r . L'algorithme s'arr\u00eate, et abc est inf\u00e9rieur \u00e0 abracadabra . C. Indexation des cha\u00eenes de caract\u00e8res \u00b6 Une cha\u00eene de caract\u00e8res stocke plusieurs plusieurs caract\u00e8res. On acc\u00e8de \u00e0 chaque caract\u00e8re individuellement gr\u00e2ce \u00e0 leur position dans la cha\u00eene, appel\u00e9e leur indice (on dit que les caract\u00e8res sont index\u00e9s ). Exemple Le tableau suivant donne l'indice des diff\u00e9rents caract\u00e8res de la cha\u00eene caracteres = \"chaine\" : Caract\u00e8re Indice c 0 h 1 a 2 i 3 n 4 e 5 On acc\u00e8de \u00e0 un caract\u00e8re d'une cha\u00eene qui est d'indice indice avec la syntaxe caracteres[indice] . Exemple L'instruction caracteres[2] renvoie dans cet exemple la valeur a . Avec quelle instruction obtient-on la valeur n ? c ? Avec respectivement l'instruction caracteres[4] et caracteres[0] . L'indice du dernier \u00e9l\u00e9ment d'une cha\u00eene s'exprime en fonction de sa longueur , c'est-\u00e0-dire de son nombre de caract\u00e8res, que l'on obtient avec la fonction len qui prend un param\u00e8tre une cha\u00eene. Comme on commence \u00e0 0 , au va au maximum jusqu'\u00e0 l'indice len(caracteres)-1 . Exemple Dans notre cas, il y a 6 \u00e9l\u00e9ments dans caracteres , et l'indice du dernier \u00e9l\u00e9ment, le e , est 5 . On a en effet 5 qui vaut len(caracteres)-1 . D. Parcours des cha\u00eenes de caract\u00e8res \u00b6 Pour acc\u00e9der \u00e0 chacun des caract\u00e8res les uns \u00e0 la suite des autres, on peut utiliser une boucle born\u00e9e . Il y a deux mani\u00e8res de le faire : D.I. Parcours par indice \u00b6 Syntaxe for i in range ( len ( caracteres )): print ( caracteres [ i ]) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder D.II. Parcours par valeur \u00b6 Syntaxe for c in caracteres : # cette syntaxe est possible car caracteres est une s\u00e9quence print ( c ) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder","title":"II. Les cha\u00eenes de caract\u00e8res"},{"location":"1ere/seq4/caracteres/#ii-les-chaines-de-caracteres-en-python","text":"","title":"II. Les cha\u00eenes de caract\u00e8res en Python"},{"location":"1ere/seq4/caracteres/#cours","text":"","title":"Cours"},{"location":"1ere/seq4/texte_machine/","text":"body { text-align: justify} I. Repr\u00e9senter le texte en machine \u00b6 Cours \u00b6 A. Le code ASCII \u00b6 Le code ASCII (American Standard Code for Information Interchange) a \u00e9t\u00e9 propos\u00e9 dans les ann\u00e9es 60 pour standardiser la repr\u00e9sentation des caract\u00e8res. Les mots sont stock\u00e9s sur 1 octet, et seules les 128 premi\u00e8res valeurs sont utilis\u00e9es. Combien de bits sont utilis\u00e9s ? Pour coder 128 valeurs (de 0 \u00e0 127), il faut 7 bits car \\(2^7=128\\) . Il reste donc 1 bit non-utilis\u00e9 sur cet octet. Il ne permet que de repr\u00e9senter les caract\u00e8res principaux de la langue anglaise, ainsi que des caract\u00e8res non-imprimables (comme le retour \u00e0 la ligne). Il pose un probl\u00e8me pour repr\u00e9senter certains caract\u00e8res qui sont utilis\u00e9es dans les langues europ\u00e9ennes mais pas en anglais. Par exemple quels caract\u00e8res ne sont pas repr\u00e9sentables ? Les caract\u00e8res accentu\u00e9s, ou bien le \"\u00e7\" par exemple posent probl\u00e8me. Quel mot est repr\u00e9sent\u00e9 par la suite de nombres, \u00e9crits en d\u00e9cimal, suivante : 72 101 108 108 111 ? Le caract\u00e8re \"9\" est-il repr\u00e9sent\u00e9 par le chiffre 9 ? Identifier les diff\u00e9rentes cat\u00e9gories de caract\u00e8res. Sont-ils plac\u00e9s au hasard ? B. La norme ISO 8859-1 \u00b6 Pour pallier ce probl\u00e8me, la norme ISO 8859-1 , aussi appel\u00e9e Latin-1 a vu le jour pour repr\u00e9senter tous les caract\u00e8res de l' alphabet latin . On reprend le code ASCII (sur 7 bits) , et on lui ajoute des caract\u00e8res sp\u00e9ciaux (sur 1 octet) . Il y en a en fait diff\u00e9rentes versions (Latin-2, Latin-3, ... Latin-15) , pour les diff\u00e9rentes langues europ\u00e9ennes. Voici la table correspondant \u00e0 Latin-1, pour les langues europ\u00e9ennes occidentales : Gr\u00e2ce \u00e0 cette table, indiquer comment sont repr\u00e9sent\u00e9es les cha\u00eenes de caract\u00e8res \"\u00e9t\u00e9\" et \"F\u00caTE\" en machine, en utilisant la notation hexad\u00e9cimale. ....................................................................... Mais elle laisse de c\u00f4t\u00e9 d'autres alphabets, comme le cyrillique, ou bien les id\u00e9ogrammes utilis\u00e9s en chinois ou en japonais. Des normes sp\u00e9ciales pour ces langues sont d\u00e9velop\u00e9pes en parall\u00e8le. C. Unicode \u00b6 En 1991 voit le jour la norme qui est utilis\u00e9e aujourd'hui par plus de 95% des sites web : Unicode . Elle vise \u00e0 int\u00e9grer tous les codages existants, pour repr\u00e9senter tous les caract\u00e8res utilis\u00e9s dans le monde. Elle int\u00e8gre donc notamment le code ASCII . Les syst\u00e8mes de codage sont UTF-8 (utilis\u00e9e sur le Web), UTF-16, UTF-32 (des variations, utilisant plus de bits). Pour UTF-8 , les caract\u00e8res sont encod\u00e9s avec un nombre variable d'octets : - les caract\u00e8res les plus \"classiques\" sont cod\u00e9s sur 1 octet (ils correspondent au code ASCII) , - les caract\u00e8res moins classiques peuvent \u00eatre cod\u00e9s sur jusqu'\u00e0 4 octets . Dans un logiciel de traitement de texte, voici par exemple ce qui s'affiche lorsque l'on veut repr\u00e9senter des caract\u00e8res sp\u00e9ciaux : Entourer le code Unicode qui appara\u00eet. En programmation, on peut avoir l'\u00e9quivalence avec les fonctions ord et chr : Code >>> ord ( \"k\" ) 107 >>> chr ( 52 ) '4' TP : Afficher le texte sur le Web \u00b6 T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"I. Repr\u00e9sentation du texte en machine"},{"location":"1ere/seq4/texte_machine/#i-representer-le-texte-en-machine","text":"","title":"I. Repr\u00e9senter le texte en machine"},{"location":"1ere/seq4/texte_machine/#cours","text":"","title":"Cours"},{"location":"1ere/seq4/texte_machine/#tp-afficher-le-texte-sur-le-web","text":"T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"TP : Afficher le texte sur le Web"},{"location":"1ere/seq4_b/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq4_b/#programme","text":"","title":"Programme"},{"location":"1ere/seq4_b/bonnes_pratiques/","text":"body { text-align: justify} II. Bonnes pratiques de programmation \u00b6 Cours \u00b6 A. Sp\u00e9cification des fonctions \u00b6 A.1. Prototypage \u00b6 On d\u00e9finit est_majeur(age) qui prend en param\u00e8tre un entier age et renvoie un bool\u00e9en valant True si age est sup\u00e9rieur \u00e0 18 et False sinon. Pour avoir les informations sur le type des entr\u00e9es et des sorties , on ajoute l'information de la mani\u00e8re suivante : Code def est_majeur ( age : int ) -> bool : majeur = age >= 18 return majeur Cela correspond \u00e0 la signature de la fonction, que l'on peut aussi \u00e9crire sous la forme int -> bool . A.2. Pr\u00e9conditions et postconditions \u00b6 Dire qu' age doit \u00eatre un entier ne suffit pas \u00e0 d\u00e9crire les valeurs que la variable peut prendre. En effet, un age n\u00e9gatif n'a pas de sens... alors que le type int en Python peut stocker un entier n\u00e9gatif comme un entier positif. Il faut donc rajouter la condition que age doit \u00eatre positif (ou nul). Une condition que doit respecter une variable d'entr\u00e9e est une pr\u00e9condition , et une condition que doit respecter une variable de sortie est une postcondition . Indiquer le(s) pr\u00e9condition(s) et postcondition(s) de l'exemple sur le sch\u00e9ma ci-dessous : graph LR age --> F[est_majeur]; F --> majeur A.3. Documentation \u00b6 La documentation d'une fonction, aussi appel\u00e9e docstring (documentation \u00e9crite avec une cha\u00eene de caract\u00e8res) , pr\u00e9cise ce qu'elle doit faire. Elle rajoute des informations par rapport \u00e0 son nom (qui doit d\u00e9j\u00e0 \u00eatre bien choisi) , et peut contenir le type des variables si la signature de la fonction n'est pas \u00e9crite. Exemple Code def est_majeur ( age ): \"\"\" Renvoie True si l'entier age est sup\u00e9rieur \u00e0 18 et False sinon \"\"\" majeur = age >= 18 return majeur B. Utilisation de modules \u00b6 Une biblioth\u00e8que ou module est un ensemble de fonctions d\u00e9j\u00e0 \u00e9crites, et regroup\u00e9es ensemble car elle servent pour m\u00eame un domaine d'application. Exemples La biblioth\u00e8que random contient des fonctions permettant de simuler l'al\u00e9atoire, turtle des fonctions permettant de manipuler une tortue pour dessiner, matplotlib sert \u00e0 visualiser des donn\u00e9es. Il y a diff\u00e9rentes mani\u00e8res de faire un import des fonctions dans votre programme Python, en voici 2 \u00e0 retenir : - from bibliotheque import fonction1, fonction2 : importe seulement fonction1 et fonction2 de la biblioth\u00e8que, - from bibliotheque import * : importe toutes les fonctions de la biblioth\u00e8que. Attention ! si vous importez plusieurs biblioth\u00e8ques et qu'elles ont des fonctions du m\u00eame nom, celles du premier import seront \u00e9cras\u00e9es. C. Structure d'un programme \u00b6 Les diff\u00e9rents \u00e9l\u00e9ments d'un programme doivent conserver la structure suivante : Code # --------- Import des modules utilis\u00e9s --------- from bibli1 import fonction1 , fonction2 # --------- D\u00e9finition des fonctions --------- def ma_fonction1 (): ... def ma_fonction2 ( param ): ... # --------- Programme principal --------- # D\u00e9claration des variables a = 1 b = \"bonjour\" # Test des fonctions assert ma_fonction1 () == \"quelque chose\" assert ma_fonction2 ( b ) == 25 Il faut d'abord d\u00e9finir ce dont on a besoin (import des modules et d\u00e9finition des fonctions) , avant de l'utiliser (programme principal) . D. Test de programmes \u00b6 Tester un programme revient \u00e0 : - tester chacune de ses fonctions , - tester le fonctionnement global du programme. Pour tester une fonction, on d\u00e9finit plusieurs cas qui correspondent \u00e0 diff\u00e9rents comportements de la fonction. Par exemple, si on a une fonction avec plusieurs conditions comme la suivante : Code def nb_jours_debut_annee ( mois ): if mois == 2 : nb_jours = 28 elif mois % 2 == 0 : nb_jours = 30 else : nb_jours = 31 return nb_jours On teste alors ce qu'il se passe pour les cas o\u00f9 : - mois vaut 2 , - mois est pair, par exemple vaut 6 , - mois est impair, par exemple vaut 3 . Les tests peuvent se faire : - dans la console , - avec des assertions lorsque la fonction renvoie une valeur, dans le programme principal . Ils seront alors conserv\u00e9s dans le fichier .py . En pratique, commencez par faire les tests dans la console pour v\u00e9rifier que l'on obtient le r\u00e9sultat attendu, puis \u00e9crivez-les dans l'\u00e9diteur sous la forme d' assertion . Exemple Ecrire les appels de fonction \u00e0 faire dans la console, puis les assertions correspondante \u00e0 conserver dans le fichier .py . ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder TD : D\u00e9bogage et sp\u00e9cifications \u00b6 A. D\u00e9boguer un programme \u00b6 Pour chacun des exemples donn\u00e9s, indiquer : - l' erreur affich\u00e9e dans la console apr\u00e8s ex\u00e9cution ou bien le comportement du programme, - la signification de cette erreur, - comment corriger ce code pour qu'il fasse ce qui \u00e9tait attendu. Affichage de \"Bonjour, monde\" : Code print ( \"Bonjour, monde\" Calul de la somme des nombres de 1 \u00e0 10 compris : Code for i in range ( 1 , 11 ): total = total + i print ( \"La somme est :\" , total ) Affichage de chaque entier de 1 \u00e0 10 compris : Code i = 1 while i <= 10 : print ( i ) Affichage des carr\u00e9s des entiers de 1 \u00e0 5 : Code for i in range ( 1 , 6 ): print ( i ** 2 ) D\u00e9finition d'une fonction multiplier multipliant deux param\u00e8tres a et b : Code def multiplier ( a , b ): resultat = a * b return resultat x = 7 y = 2 print ( \"Le r\u00e9sultat de la multiplication est :\" , multiplier ()) D\u00e9finition d'une fonction ajouter_trois ajoutant 3 au param\u00e8tre x : Code def ajouter_trois ( x ): resultat = x + 3 nombre = 5 print ( \"Le r\u00e9sultat est :\" , resultat ) B. Sp\u00e9cifications \u00b6 R\u00e9\u00e9crire la fonction mystere du TP \"Fonctions et port\u00e9e d'une variable\" en : changeant son nom, pour en avoir un plus explicite, ajoutant sa signature, ajoutant sa documentation. Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p return p Un \u00e9l\u00e8ve de NSI veut pouvoir calculer sa moyenne en fonction des notes qu'il a d\u00e9j\u00e0, et de celle de la derni\u00e8re \u00e9valuation. Il a d\u00e9j\u00e0 eu 11.5, 15 et 14, de coefficients 1, 2 et 4. La prochaine \u00e9valuation aura un coefficient 4. Il veut pr\u00e9voir sa moyenne en fonction de sa derni\u00e8re note, et \u00e9crit une fonction moyenne(note) prenant en param\u00e8tre cette derni\u00e8re note. a. Donner le prototypage de sa fonction. b. D\u00e9crire les pr\u00e9conditions sur les param\u00e8tres et les postconditions sur le r\u00e9sultat. c. Ecrire la fonction moyenne(note) en ajoutant des assertions pour les pr\u00e9conditions et postconditions, et la signature de la fonction. TP : Prototypage et tests \u00b6 Cr\u00e9er un fichier TP_Prototypage.py dans votre dossier NSI , et dans le dossier seq4 . Ecrire les r\u00e9ponses aux questions sur votre cahier de TP. Vous \u00eates d\u00e9veloppeur Python et on vous demande d'\u00e9crire une fonction calculant la racine carr\u00e9e d'un nombre. On demande que chaque fonction soit document\u00e9e de la mani\u00e8re suivante (il n'est pour l'instant pas demand\u00e9 de remplir le tableau) : Etape Question R\u00e9ponse 1 Quel nom la fonction peut-elle avoir ? 2 Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? De quel type ? 3 Quels sont les valeurs accept\u00e9es en entr\u00e9e ? 4 Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser le type. 5 Quels sont les valeurs en sortie possibles ? N.B.: La racine carr\u00e9e d'un nombre est toujours positive ou nulle et n'est calcul\u00e9e que pour un nombre qui est aussi positif ou nul . Les informations demand\u00e9es permettent de prototyper la fonction. En d\u00e9duire ce que veut dire prototyper une fonction. Plus pr\u00e9cis\u00e9ment : L'\u00e9tape 3 d\u00e9crit les pr\u00e9conditions de la fonction : les conditions que doivent v\u00e9rifier ses entr\u00e9es , L'\u00e9tape 5 d\u00e9crit les postconditions de la fonction : les conditions que doivent v\u00e9rifier les sorties . Compl\u00e9ter le tableau. On donne le code suivant, impl\u00e9mentant la m\u00e9thode de H\u00e9ron pour trouver la racine carr\u00e9e d'un nombre : Code def racine ( x ): y = 1 for i in range ( 10 ): y = ( y + x / y ) / 2 return y R\u00e9\u00e9crire ce code dans l'\u00e9diteur et le compl\u00e9ter avec sa sp\u00e9cification sous la forme suivante (remplacer type_de_a par le type de a, type_de_x par le type de x, et la partie \"R\u00f4le de la fonction\" par ce qu'elle fait) : Code def racine ( x : type_de_x ) -> type_de_y : ''' R\u00f4le de la fonction ''' y = 1 for i in range ( 10 ): y = ( y + x / y ) / 2 return y Apr\u00e8s avoir ex\u00e9cut\u00e9 votre code, consulter sa documentation en tapant dans la console la commande : help(racine) Faites l'appel de racine(-1) dans la console . Que se passe-t-il ? Est-ce que le comportement de la fonction est clair pour l'utilisateur ? On ne peut pas toujours faire confiance \u00e0 l'utilisateur pour bien utiliser un code. Nous allons le forcer \u00e0 respecter le type de l'entr\u00e9e, avec une assertion . La syntaxe est la suivante : assert expression bool\u00e9enne testant ce qui nous int\u00e9resse , \"Message que l'on veut voir appara\u00eetre lorsque le test renvoie False\" Compl\u00e9ter votre fonction en ajoutant l'assertion avant les premi\u00e8res instructions de la fonction : Code def racine ( x : ... ) -> ... : \"\"\" Garder la documentation de la question pr\u00e9c\u00e9dente \"\"\" assert x >= 0 , \"\u00e0 compl\u00e9ter avec un message indiquant \u00e0 l'utilisateur quel est le probl\u00e8me\" ... Ex\u00e9cuter le code. Que se passe-t-il maintenant lorsque vous appelez la fonction (dans la console) avec l'argument -1 ? Les assertions peuvent aussi \u00eatre utilis\u00e9es pour v\u00e9rifier que l'on obtient le bon r\u00e9sultat en sortie d'une fonction. On teste donc si un appel de fonction donne le r\u00e9sultat attendu. Ajouter, dans le programme principal (donc en dehors de la d\u00e9finition de racine ) : Code assert round ( racine ( 4 )) == 2 , \"Erreur pour la valeur 4\" a. Ex\u00e9cuter le programme, et v\u00e9rifier que rien ne se passe (cela veut dire que le test fait dans l'assertion renvoie True ). b. La fonction round permet d'arrondir le r\u00e9sultat, pour qu'il soit un entier. Pourquoi fait-on cette op\u00e9rations ici (faire le lien avec le cours sur la repr\u00e9sentation des nombres) ? c. Rajouter 2 autres assertions, avec des tests diff\u00e9rents, pour v\u00e9rifier le bon fonctionnement de votre fonction. TP : Biblioth\u00e8que random et stockage dans des fichiers \u00b6 Code Questions Cr\u00e9er un fichier TP_Bibliotheque_Fichiers.py dans votre dossier NSI , et dans le dossier seq4 . Ecrire les r\u00e9ponses aux questions sur votre cahier de TP. A. Trouver le nombre \u00b6 L'objectif de cette partie est de programmer un jeu dans lequel on demande \u00e0 l'utilisateur de deviner un nombre, qui est choisi al\u00e9atoirement par l'ordinateur. Pour avoir ce nombre al\u00e9atoire, on utilise la biblioth\u00e8que random qui sert \u00e0 simuler l'al\u00e9atoire, et particuli\u00e8rement la fonction randint . On veut que le programme : stocke dans une variable nombre_mystere le nombre \u00e0 deviner compris entre 0 et 100 , demande \u00e0 l'utilisateur d'entrer un nouveau nombre (avec la fonction input ) tant qu 'il n'a pas trouv\u00e9 la solution ou qu'il a atteint le maximum de 10 essais , si l'utilisateur entre un nombre trop grand, l'ordinateur affiche \"Le nombre myst\u00e8re est inf\u00e9rieur\" , s'il est trop petit, l'ordinateur affiche \"Le nombre est sup\u00e9rieur\" , si l'utilisateur a devin\u00e9, le programme s'arr\u00eate et il affiche le nombre d'essais de l'utilisateur. Reformuler la description de l'algorithme utilis\u00e9 en faisant appara\u00eetre la structure du programme, et les instructions \u00e0 ex\u00e9cuter par l'ordinateur ligne apr\u00e8s ligne. Importer la fonction avec l'instruction suivante \u00e0 placer en d\u00e9but de programme from random import randint . Avec l'instruction help(randint) (tap\u00e9e dans la console) , on obtient sa documentation : son prototypage, et ce qu'elle fait. randint(a, b) method of random.Random instance Return random integer in range [a, b], including both end points. a. Quels sont ses param\u00e8tres ? b. Que renvoie-t-elle ? D\u00e9duire des questions pr\u00e9c\u00e9dentes comment utiliser randint pour que l'ordinateur choisisse le nombre myst\u00e8re. Impl\u00e9menter (traduire en programme) l'algorithme de la question 1. > N'oubliez pas que la valeur renvoy\u00e9e par input est une cha\u00eene de caract\u00e8res, que vous devez ici convertir en entier avec la fonction int . Tester le programme en : entrant 10 fois un mauvais nombre pour v\u00e9rifier que le programme s'arr\u00eate, essayant de bien deviner le nombre et en v\u00e9rifiant que le nombre de coups affich\u00e9 correspond au nombre de fois que vous avez propos\u00e9 un nombre. B. Stockage du score dans un fichier \u00b6 On veut maintenant sauvegarder le score de l'utilisateur dans un fichier. Pour ouvrir un fichier, on utilise la fonction open , et pour \u00e9crire la fonction write . open prend en param\u00e8tres un nom de fichier et un mode d'ouverture (et on peut ajouter d'autres param\u00e8tres) . Avec l'instruction help(open) , trouver \u00e0 quoi correspondent les diff\u00e9rents modes possibles. Pour \u00e9crire dans un fichier, il faut l'ouvrir puis \u00e9crire. Cela s'\u00e9crit avec une syntaxe proche de celle du code suivant : Code mot = \"ce que je veux stocker\" with open ( 'fichier.txt' , 'w' ) as f : f . write ( mot ) Ce code enregistre dans le fichier fichier.txt le contenu de la variable mot . Le fichier est accessible avec la variable nomm\u00e9e ici f . Pour \u00e9crire avec la fonction write , on utilise une syntaxe un peu particuli\u00e8re : f.write(...) Modifier ce code et le placer \u00e0 la fin de votre programme de mani\u00e8re \u00e0 stocker le score qui est le nombre de coups qu'a mis l'utilisateur pour trouver le nombre myst\u00e8re. Le fichier utilis\u00e9 se nommera score.txt . Ce qui est \u00e9crit dans le fichier doit \u00eatre de type cha\u00eene de caract\u00e8res, vous pouvez faire la conversion avec la fonction str() . Pour aller plus loin... (\u00e0 faire si vous avez le temps) Faire en sorte que lorsque l'utilisateur rejoue une partie, le score stock\u00e9 dans le fichier ne soit actualis\u00e9 que si le nouveau score est meilleur.","title":"II. Bonnes pratiques de programmation"},{"location":"1ere/seq4_b/bonnes_pratiques/#ii-bonnes-pratiques-de-programmation","text":"","title":"II. Bonnes pratiques de programmation"},{"location":"1ere/seq4_b/bonnes_pratiques/#cours","text":"","title":"Cours"},{"location":"1ere/seq4_b/bonnes_pratiques/#td-debogage-et-specifications","text":"","title":"TD : D\u00e9bogage et sp\u00e9cifications"},{"location":"1ere/seq4_b/bonnes_pratiques/#tp-prototypage-et-tests","text":"Cr\u00e9er un fichier TP_Prototypage.py dans votre dossier NSI , et dans le dossier seq4 . Ecrire les r\u00e9ponses aux questions sur votre cahier de TP. Vous \u00eates d\u00e9veloppeur Python et on vous demande d'\u00e9crire une fonction calculant la racine carr\u00e9e d'un nombre. On demande que chaque fonction soit document\u00e9e de la mani\u00e8re suivante (il n'est pour l'instant pas demand\u00e9 de remplir le tableau) : Etape Question R\u00e9ponse 1 Quel nom la fonction peut-elle avoir ? 2 Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? De quel type ? 3 Quels sont les valeurs accept\u00e9es en entr\u00e9e ? 4 Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser le type. 5 Quels sont les valeurs en sortie possibles ? N.B.: La racine carr\u00e9e d'un nombre est toujours positive ou nulle et n'est calcul\u00e9e que pour un nombre qui est aussi positif ou nul . Les informations demand\u00e9es permettent de prototyper la fonction. En d\u00e9duire ce que veut dire prototyper une fonction. Plus pr\u00e9cis\u00e9ment : L'\u00e9tape 3 d\u00e9crit les pr\u00e9conditions de la fonction : les conditions que doivent v\u00e9rifier ses entr\u00e9es , L'\u00e9tape 5 d\u00e9crit les postconditions de la fonction : les conditions que doivent v\u00e9rifier les sorties . Compl\u00e9ter le tableau. On donne le code suivant, impl\u00e9mentant la m\u00e9thode de H\u00e9ron pour trouver la racine carr\u00e9e d'un nombre : Code def racine ( x ): y = 1 for i in range ( 10 ): y = ( y + x / y ) / 2 return y R\u00e9\u00e9crire ce code dans l'\u00e9diteur et le compl\u00e9ter avec sa sp\u00e9cification sous la forme suivante (remplacer type_de_a par le type de a, type_de_x par le type de x, et la partie \"R\u00f4le de la fonction\" par ce qu'elle fait) : Code def racine ( x : type_de_x ) -> type_de_y : ''' R\u00f4le de la fonction ''' y = 1 for i in range ( 10 ): y = ( y + x / y ) / 2 return y Apr\u00e8s avoir ex\u00e9cut\u00e9 votre code, consulter sa documentation en tapant dans la console la commande : help(racine) Faites l'appel de racine(-1) dans la console . Que se passe-t-il ? Est-ce que le comportement de la fonction est clair pour l'utilisateur ? On ne peut pas toujours faire confiance \u00e0 l'utilisateur pour bien utiliser un code. Nous allons le forcer \u00e0 respecter le type de l'entr\u00e9e, avec une assertion . La syntaxe est la suivante : assert expression bool\u00e9enne testant ce qui nous int\u00e9resse , \"Message que l'on veut voir appara\u00eetre lorsque le test renvoie False\" Compl\u00e9ter votre fonction en ajoutant l'assertion avant les premi\u00e8res instructions de la fonction : Code def racine ( x : ... ) -> ... : \"\"\" Garder la documentation de la question pr\u00e9c\u00e9dente \"\"\" assert x >= 0 , \"\u00e0 compl\u00e9ter avec un message indiquant \u00e0 l'utilisateur quel est le probl\u00e8me\" ... Ex\u00e9cuter le code. Que se passe-t-il maintenant lorsque vous appelez la fonction (dans la console) avec l'argument -1 ? Les assertions peuvent aussi \u00eatre utilis\u00e9es pour v\u00e9rifier que l'on obtient le bon r\u00e9sultat en sortie d'une fonction. On teste donc si un appel de fonction donne le r\u00e9sultat attendu. Ajouter, dans le programme principal (donc en dehors de la d\u00e9finition de racine ) : Code assert round ( racine ( 4 )) == 2 , \"Erreur pour la valeur 4\" a. Ex\u00e9cuter le programme, et v\u00e9rifier que rien ne se passe (cela veut dire que le test fait dans l'assertion renvoie True ). b. La fonction round permet d'arrondir le r\u00e9sultat, pour qu'il soit un entier. Pourquoi fait-on cette op\u00e9rations ici (faire le lien avec le cours sur la repr\u00e9sentation des nombres) ? c. Rajouter 2 autres assertions, avec des tests diff\u00e9rents, pour v\u00e9rifier le bon fonctionnement de votre fonction.","title":"TP : Prototypage et tests"},{"location":"1ere/seq4_b/bonnes_pratiques/#tp-bibliotheque-random-et-stockage-dans-des-fichiers","text":"Code Questions Cr\u00e9er un fichier TP_Bibliotheque_Fichiers.py dans votre dossier NSI , et dans le dossier seq4 . Ecrire les r\u00e9ponses aux questions sur votre cahier de TP.","title":"TP : Biblioth\u00e8que random et stockage dans des fichiers"},{"location":"1ere/seq4_b/langages/","text":"body { text-align: justify} I. Les langages de programmation \u00b6 Cours \u00b6 A. Constructions \u00e9l\u00e9mentaires \u00b6 A.1. El\u00e9ments communs aux diff\u00e9rents langages \u00b6 Un programme est constitu\u00e9 d' \u00e9l\u00e9ments de base , aussi appel\u00e9es constructions \u00e9l\u00e9mentaires . les affectations les instructions conditionnelles les boucles non-born\u00e9es les boucles born\u00e9es les appels de fonctions Ces \u00e9l\u00e9ments de base sont identifi\u00e9s gr\u00e2ce \u00e0 des mots-cl\u00e9s du langage utilis\u00e9 et \u00e0 une syntaxe (une mani\u00e8re d'\u00e9crire) . A.2. Syntaxe de diff\u00e9rents langages \u00b6 Fonction renvoyant le maximum entre 2 nombres en langage C Code int maximum ( int a , int b ) { if ( a > b ) { return a ; } else { return b ; } } 1. Rappeler comment \u00e9crire la m\u00eame fonction en Python. Code def maximum ( a , b ): if a > b : return a else : return b 2. Identifier la syntaxe utilis\u00e9e en C pour \u00e9crire les \u00e9l\u00e9ments de programmation que vous connaissez. Les mots-cl\u00e9s if et else sont identiques mais le def n'est pas utilis\u00e9 en C. A la place, on donne le type du r\u00e9sultat, et le type des param\u00e8tres est indiqu\u00e9 aussi. On n'utilise pas l'indentation pour d\u00e9limiter les diff\u00e9rentes parties du code en C, mais des { et } . La fin d'une instruction est indiqu\u00e9e avec le ; . B. Le langage Python \u00b6 B.1. Syntaxe et \u00e9diteur \u00b6 Cette syntaxe est connue des logiciels permettant de faire du Python, qui utilisent un code couleur pour identifier les diff\u00e9rents \u00e9l\u00e9ments d'un programme. Exemple : Affichage de caract\u00e8res repr\u00e9sentant une fl\u00e8che n fois avec une fonction affichage_fleches(n) , code enregistr\u00e9 dans l'\u00e9diteur de Thonny. Expliquer ce \u00e0 quoi correspond le code de couleur (quels \u00e9l\u00e9ments sont d'une m\u00eame couleur ? d'une couleur diff\u00e9rente ?). Les mots-cl\u00e9s sont identifi\u00e9s par une couleur, le nom d'une fonction dans sa d\u00e9finition aussi. Les diff\u00e9rents types de valeurs ont leur couleur (diff\u00e9rente ici pour les entiers et les caract\u00e8res), alors que les variables s'affichent en noir. C'est aussi le cas pour les appels de fonction. B.2. Caract\u00e9ristiques du langage \u00b6 B.2.a. Langages interpr\u00e9t\u00e9s et compil\u00e9s \u00b6 Python est un langage interpr\u00e9t\u00e9 : c'est-\u00e0-dire que le code est lu au fur et \u00e0 mesure, ex\u00e9cut\u00e9 au fur et \u00e0 mesure, jusqu'\u00e0 ce qu'une erreur soit rencontr\u00e9e qui arr\u00eate le programme, ou bien que l'on arrive \u00e0 la fin sans erreur. D'autres langages peuvent fonctionner diff\u00e9remment : par exemple en C, le programme est compil\u00e9 , c'est-\u00e0-dire qu'il est analys\u00e9 du d\u00e9but \u00e0 la fin, et la liste totale des erreurs trouv\u00e9es s'affiche \u00e0 la fin. Dans ce cas, le programme est traduit dans un langage que la machine comprend le langage machine . Quels avantages/inconv\u00e9nients y a-t-il \u00e0 utiliser un langage interpr\u00e9t\u00e9 ? Un langage interpr\u00e9t\u00e9 est plus simple \u00e0 ex\u00e9cuter (un seul fichier est manipul\u00e9), mais il est possible de devoir ex\u00e9cuter plusieurs fois un programme avant qu'il soit sans erreur, vu qu'on ne les a pas toutes en une fois. B.2.b. Langages de haut et bas niveau \u00b6 Plus le langage est proche du langage machine, plus il est dit \"de bas niveau\" . S'il est plus proche du langage naturel, il est dit \"de haut niveau\" . Python, comme le C, est un langage de haut niveau . B.3. Gestion des erreurs \u00b6 L'IDE Python donne des informations sur chaque erreur trouv\u00e9e : le num\u00e9ro de ligne sur laquelle elle devrait \u00eatre (ceci n'est pas toujours exact !) , et un message d'erreur donnant des indications est affich\u00e9. Exemple Expliquer l'erreur dans le programme qui a g\u00e9n\u00e9r\u00e9 l'ex\u00e9cution suivante : Solution La variable lignes n'est pas connue. Elle est utilis\u00e9e dans une variable ligne , il s'agit probablement d'une faute de frappe. L'erreur se trouve sur la ligne 4 de la fonction affichage_fleches , elle a \u00e9t\u00e9 provoqu\u00e9e lors de l'appel \u00e0 la fonction ligne 7. TP : Prise en main d'un IDE Python \u00b6 Code Questions Il est possible de faire du Python sur son ordinateur \u00e0 partir de diff\u00e9rents logiciels : de la console Python (disponible d\u00e8s qu'une version de Python a \u00e9t\u00e9 install\u00e9e sur l'ordinateur), d'un environnement de d\u00e9veloppement int\u00e9gr\u00e9 ( IDE ) : un logiciel qui rassemble tous les outils n\u00e9cessaires au d\u00e9veloppement de code sur une m\u00eame interface graphique. Par exemple : Thonny, Spyder, EduPython, Pyzo, etc. I. La console \u00b6 Une console permet d'ex\u00e9cuter du code ligne \u00e0 ligne. Elle se trouve en recherchant \"Python\" sur votre ordinateur, et se pr\u00e9sente ainsi : Il suffit d'\u00e9crire une instruction, et d'appuyer sur Entr\u00e9e pour que le code soit traduit dans un langage que la machine comprend, et directement ex\u00e9cut\u00e9. Ecrire l'instruction : a = 3 puis Entr\u00e9e . Taper a sur la ligne suivante, puis Entr\u00e9e . Vous visualisez le contenu de la variable a . Ecrire l'instruction qui permet d'affecter la valeur 0.14 \u00e0 une variable b . Ecrire l'instruction qui ajoute les valeurs de a et de b et stocke le r\u00e9sultat dans une variable pi . V\u00e9rifier que la variable pi contient bien la valeur 3.14 . Que faut-il faire si l'on veut en fait affecter 0.14 \u00e0 a , 3 \u00e0 b , et que l'on veut refaire le m\u00eame calcul pour le stocker dans pi ? II. Utilisation d'un IDE \u00b6 Pour \u00e9viter d'avoir toujours \u00e0 r\u00e9\u00e9crire les m\u00eames instructions d\u00e8s que l'on veut modifier quelque chose, on utilise un \u00e9diteur . Il permet d'\u00e9crire plusieurs lignes de code sans les ex\u00e9cuter directement, mais d'ex\u00e9cuter l'ensemble lorsqu'on veut le tester, et de sauvegarder le code. Les num\u00e9ros des lignes sont g\u00e9n\u00e9ralement indiqu\u00e9s sur la gauche : Dans un IDE, il y a une partie \u00e9diteur et une partie console . On \u00e9crit le code dans l' \u00e9diteur , et on peut faire des op\u00e9rations simples comme des tests (consulter le contenu d'une variable), avec la console . Recopier dans l'\u00e9diteur de votre IDE la fonction suivante : Code def addition ( a , b ): return a + b Enregistrer votre fichier avec Fichier > Enregistrer sous, dans votre r\u00e9pertoire personnel, dossier NSI. Son nom doit \u00eatre TP_IDE.py (l'extension .py correspond au format d'un fichier Python). Ex\u00e9cuter le code en cliquant sur la fl\u00e8che verte en haut du logiciel. Pour tester la fonction, \u00e9crire l'appel suivant dans la console et v\u00e9rifier que l'on obtient le bon r\u00e9sultat : addition(13, 24) >>> 37 Ecrire la fonction suivante dans l'\u00e9diteur , \u00e0 la suite de la premi\u00e8re, et ex\u00e9cuter le code : Code def soustraction ( a , b ): return a - b Pour tester la fonction, \u00e9crire l'appel suivant dans la console et v\u00e9rifier que l'on obtient le bon r\u00e9sultat : soustraction(13, 24) >>> - 11 A la suite de la d\u00e9finition des fonctions dans l'\u00e9diteur , ajouter un programme principal dans lequel on utilise les fonctions que l'on a d\u00e9finies, et ex\u00e9cuter le code : Code valeur = 4 somme = addition ( valeur , valeur ) difference = soustraction ( somme , valeur ) Rien ne doit s'afficher dans la console, mais les calculs ont \u00e9t\u00e9 faits. V\u00e9rifier le contenu des variables somme et difference en tappant leur nom dans la console . Ne pas oublier d'enregistrer votre travail. Conclusion \u00b6 Quel est l'int\u00e9r\u00eat d'utiliser un IDE Python pour \u00e9crire du code ? (\u00e0 \u00e9crire en conclusion du TP dans votre cahier de TP) . TP : Fonctions et port\u00e9e d'une variable \u00b6 Code Questions Cr\u00e9er un nouveau fichier dans votre dossier NSI , dossier seq4 , appel\u00e9 TP_Portee_Variable.py Ecrire les r\u00e9ponses aux questions dans votre cahier de TP. Ex\u00e9cuter le programme suivant, en \u00e9crivant le code dans l'\u00e9diteur : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p return p Essayer \u00e0 pr\u00e9sent de visualiser le contenu de la variable a avec la console . Que remarquez-vous ? Une variable utilis\u00e9e dans une fonction n'est pas accessible en dehors de la d\u00e9finition de la fonction . Elle n'existe que dans celle-ci ! C'est ce qu'on appelle une variable locale . Ex\u00e9cuter le programme suivant : Code a = 4 def mystere (): p = 1 for i in range ( a ): p = 2 * p return p Essayer \u00e0 nouveau d'acc\u00e9der \u00e0 la valeur de la variable a . Que constatez-vous ? Si une variable est d\u00e9finie en dehors d'une fonction, elle peut \u00eatre utilis\u00e9es dans celle-ci sans avoir besoin de la passer en param\u00e8tre de la fonction. C'est une variable globale . Attention ! Cette pratique a beaucoup d'inconv\u00e9nients (dur de ma\u00eetriser l'effet d'une fonction utilisant des variables pouvant \u00eatre modifi\u00e9es un peu partout...). Une variable a d\u00e9finie en dehors d'une fonction est donc diff\u00e9rente d'une variable a d\u00e9finie \u00e0 l'int\u00e9rieur de celle-ci. Pour appeler une fonction, ils y a donc diff\u00e9rentes possibilit\u00e9s dans l'appelation des variables utilis\u00e9es en param\u00e8tres. Tester le code suivant : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p return p a = 5 p1 = mystere ( a ) b = 5 p2 = mystere ( b ) Quelle est la diff\u00e9rence entre les deux appels de mystere ? On peut comprendre ce que fait une fonction en analysant son code, en observant ses r\u00e9sultats, ou bien en d\u00e9crivant pas \u00e0 pas ce qu'elle fait. Une premi\u00e8re mani\u00e8re assez simple de le faire est de rajouter des affichages dans le code \u00e0 des endroits strat\u00e9giques : classiquement \u00e0 l'int\u00e9rieur des boucles pour voir comment les valeurs des variables varient. Modifier votre code pour rajouter l'affichage de p comme ci-dessous : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p print ( p ) return p a = 5 p = mystere ( a ) Reporter la liste des valeurs prises par p , qui s'affichent dans la console apr\u00e8s ex\u00e9cution . Pour avoir une id\u00e9e plus pr\u00e9cise et plus compl\u00e8tes des valeurs prises par les variables, on utilise une table de trace. Sur ordinateur, des outils de visualisation existent, comme Pythontutor (le lien est cliquable) . Copier/coller votre code sur ce site (sans l'affichage de la question pr\u00e9c\u00e9dente) , et l'ex\u00e9cuter \u00e9tape par \u00e9tape (en cliquant sur \"Visualize Execution\", puis successivement sur \"Next\"). Utiliser cet outil pour remplir la table de trace de ce code, avec les diff\u00e9rentes valeurs des variables a , p , et i . En conclure ce que fait la fonction mystere .","title":"I. Les langages de programmation"},{"location":"1ere/seq4_b/langages/#i-les-langages-de-programmation","text":"","title":"I. Les langages de programmation"},{"location":"1ere/seq4_b/langages/#cours","text":"","title":"Cours"},{"location":"1ere/seq4_b/langages/#tp-prise-en-main-dun-ide-python","text":"Code Questions Il est possible de faire du Python sur son ordinateur \u00e0 partir de diff\u00e9rents logiciels : de la console Python (disponible d\u00e8s qu'une version de Python a \u00e9t\u00e9 install\u00e9e sur l'ordinateur), d'un environnement de d\u00e9veloppement int\u00e9gr\u00e9 ( IDE ) : un logiciel qui rassemble tous les outils n\u00e9cessaires au d\u00e9veloppement de code sur une m\u00eame interface graphique. Par exemple : Thonny, Spyder, EduPython, Pyzo, etc.","title":"TP : Prise en main d'un IDE Python"},{"location":"1ere/seq4_b/langages/#tp-fonctions-et-portee-dune-variable","text":"Code Questions Cr\u00e9er un nouveau fichier dans votre dossier NSI , dossier seq4 , appel\u00e9 TP_Portee_Variable.py Ecrire les r\u00e9ponses aux questions dans votre cahier de TP. Ex\u00e9cuter le programme suivant, en \u00e9crivant le code dans l'\u00e9diteur : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p return p Essayer \u00e0 pr\u00e9sent de visualiser le contenu de la variable a avec la console . Que remarquez-vous ? Une variable utilis\u00e9e dans une fonction n'est pas accessible en dehors de la d\u00e9finition de la fonction . Elle n'existe que dans celle-ci ! C'est ce qu'on appelle une variable locale . Ex\u00e9cuter le programme suivant : Code a = 4 def mystere (): p = 1 for i in range ( a ): p = 2 * p return p Essayer \u00e0 nouveau d'acc\u00e9der \u00e0 la valeur de la variable a . Que constatez-vous ? Si une variable est d\u00e9finie en dehors d'une fonction, elle peut \u00eatre utilis\u00e9es dans celle-ci sans avoir besoin de la passer en param\u00e8tre de la fonction. C'est une variable globale . Attention ! Cette pratique a beaucoup d'inconv\u00e9nients (dur de ma\u00eetriser l'effet d'une fonction utilisant des variables pouvant \u00eatre modifi\u00e9es un peu partout...). Une variable a d\u00e9finie en dehors d'une fonction est donc diff\u00e9rente d'une variable a d\u00e9finie \u00e0 l'int\u00e9rieur de celle-ci. Pour appeler une fonction, ils y a donc diff\u00e9rentes possibilit\u00e9s dans l'appelation des variables utilis\u00e9es en param\u00e8tres. Tester le code suivant : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p return p a = 5 p1 = mystere ( a ) b = 5 p2 = mystere ( b ) Quelle est la diff\u00e9rence entre les deux appels de mystere ? On peut comprendre ce que fait une fonction en analysant son code, en observant ses r\u00e9sultats, ou bien en d\u00e9crivant pas \u00e0 pas ce qu'elle fait. Une premi\u00e8re mani\u00e8re assez simple de le faire est de rajouter des affichages dans le code \u00e0 des endroits strat\u00e9giques : classiquement \u00e0 l'int\u00e9rieur des boucles pour voir comment les valeurs des variables varient. Modifier votre code pour rajouter l'affichage de p comme ci-dessous : Code def mystere ( a ): p = 1 for i in range ( a ): p = 2 * p print ( p ) return p a = 5 p = mystere ( a ) Reporter la liste des valeurs prises par p , qui s'affichent dans la console apr\u00e8s ex\u00e9cution . Pour avoir une id\u00e9e plus pr\u00e9cise et plus compl\u00e8tes des valeurs prises par les variables, on utilise une table de trace. Sur ordinateur, des outils de visualisation existent, comme Pythontutor (le lien est cliquable) . Copier/coller votre code sur ce site (sans l'affichage de la question pr\u00e9c\u00e9dente) , et l'ex\u00e9cuter \u00e9tape par \u00e9tape (en cliquant sur \"Visualize Execution\", puis successivement sur \"Next\"). Utiliser cet outil pour remplir la table de trace de ce code, avec les diff\u00e9rentes valeurs des variables a , p , et i . En conclure ce que fait la fonction mystere .","title":"TP : Fonctions et port\u00e9e d'une variable"},{"location":"1ere/seq5/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq5/#programme","text":"","title":"Programme"},{"location":"1ere/seq5/puplet/","text":"body { text-align: justify} III. Le type p-uplet \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 Un p-uplet est une collection ordonn\u00e9e de p \u00e9l\u00e9ments (un nombre donn\u00e9 d'\u00e9l\u00e9ments). Ils peuvent \u00eatre de diff\u00e9rents types . En Python, on utilise le type tuple (terme que l'on retrouve dans quintuple -5 \u00e9l\u00e9ments-, sextuple -6 \u00e9l\u00e9ments-,...). B. Cr\u00e9ation \u00b6 Diff\u00e9rents \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules permettent de cr\u00e9er un tuple . Pour la lisibilit\u00e9 du code, on encadre ces \u00e9l\u00e9ments par des parenth\u00e8ses . Exemple tuple1 = (0, 5, 2) C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un p-uplet tuple1 sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du p-uplet - 1 . L'acc\u00e8s \u00e0 un \u00e9l\u00e9ment d'un p-uplet fonctionne comme l'acc\u00e8s d'un \u00e9l\u00e9ment d'un tableau. Exemple tuple1[1] renvoie 5 . D. Modification \u00b6 C'est une sp\u00e9cificit\u00e9 du tuple , il n'est pas modifiable ! Il est dit non-muable . S'il est choisi au lieu d'un tableau, c'est souvent pour cette particularit\u00e9 : pour \u00e9viter que des valeurs soient modifi\u00e9e en cours de programme. E. Utilisation dans des fonctions \u00b6 Il est possible de faire renvoyer plusieurs valeurs \u00e0 une fonction. Ces valeurs sont alors renvoy\u00e9es sous la forme d'un tuple . Exemple Code def maximum ( t ): max_val = t [ 0 ] max_ind = 0 for i in range ( len ( t )): if t [ i ] > max_val : max_val = t [ i ] max_ind = i return max_val , max_ind 1. Ecrire l'appel de la fonction maximum pour t valant [-15, 7, 36, -1] , permettant de stocker la valeur et l'indice du maximum dans des variables. v , i = maximum ([ - 15 , 7 , 36 - 1 ]) 2. Ecrire le m\u00eame appel, mais stockant les valeurs de sortie dans une variable. Afficher ensuite ces valeurs s\u00e9par\u00e9ment. maxi = maximum ([ - 15 , 7 , 36 - 1 ]) print ( \"La valeur maximum est :\" , maxi [ 0 ]) print ( \"L'indice du maximum est :\" , maxi [ 1 ])","title":"III. Le type p-uplet"},{"location":"1ere/seq5/puplet/#iii-le-type-p-uplet","text":"","title":"III. Le type p-uplet"},{"location":"1ere/seq5/puplet/#cours","text":"","title":"Cours"},{"location":"1ere/seq5/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 TD : Exercices sur les types construits \u00b6 A. Les types \u00b6 1. On dispose d'une liste d\u00e9finie par L = [15,17,12,23] . Quelle est la valeur de L apr\u00e8s l'instruction L[2] = 25 ? A [15,25,12,23] B [15,17,25,12,23] C [15,17,25,23] D [15,17,12,25,23] 2. On d\u00e9finit ainsi une liste M : M = [['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L']] Quelle expression vaut la cha\u00eene de caract\u00e8res 'H' ? A M[1][3] B M[3][1] C M(7) D M(8) 3. Quel est le type de l'expression f(4) si la fonction f est d\u00e9finie par : def f ( x ): return ( x , x ** 2 ) A un entier B un flottant C une liste D un tuple 4. Que vaut l'expression [ 2*k for k in range(5) ] ? A [0,2,4,6,8] B [2,4,6,8,10] C [1,2,4,8,16] D [2,4,8,16,32] 5. On ex\u00e9cute le code suivant : A = [ [ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ] ] B = [ [ 0 , 0 , 0 ], [ 0 , 0 , 0 ], [ 0 , 0 , 0 ] ] for i in range ( 3 ): for j in range ( 3 ): B [ i ][ j ] = A [ j ][ i ] Que vaut B \u00e0 la fin de l'ex\u00e9cution ? A rien du tout, le programme d\u00e9clenche une erreur d'ex\u00e9cution B [ [3,2,1], [6,5,4], [9,8,7] ] C [ [1,4,7], [2,5,8], [3,6,9] ] D [ [7,8,9], [4,5,6], [1,2,3] ] B. Algorithmique \u00b6 1. On consid\u00e8re la fonction suivante : def f ( T , i ): indice = i m = T [ i ] for k in range ( i + 1 , len ( T )): if T [ k ] < m : indice = k m = T [ k ] return indice Quelle est la valeur de f([ 7, 3, 1, 8, 19, 9, 3, 5 ], 0) ? A 1 B 2 C 3 D 4 2. Quelle est la valeur de c \u00e0 la fin de l'ex\u00e9cution du code suivant : L = [ 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 0 , 2 ] c = 0 for k in L : if k == L [ 1 ]: c = c + 1 A 0 B 2 C 3 D 10 3. Un algorithme de calcul de moyenne est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def moyenne ( liste ) : t = 0 for e in liste : t = t + e # assertion vraie \u00e0 cet endroit return t / len ( liste ) Parmi les propositions suivantes, laquelle reste vraie \u00e0 la fin de chaque it\u00e9ration de la boucle ? A e vaut le nombre de passages dans la boucle B t vaut la somme des \u00e9l\u00e9ments visit\u00e9s de la liste C t vaut la moyenne des \u00e9l\u00e9ments visit\u00e9s de la liste D apr\u00e8s k passages dans la boucle la liste contient k termes 4. On ex\u00e9cute le script suivant : liste = [ 17 , 12 , 5 , 18 , 2 , 7 , 9 , 15 , 14 , 20 ] somme = 0 i = 0 while i < len ( liste ): somme = somme + liste [ i ] i = i + 1 resultat = somme / len ( liste ) Quelle affirmation est fausse parmi les suivantes ? A le corps de la boucle a \u00e9t\u00e9 ex\u00e9cut\u00e9 10 fois B \u00e0 la fin de l'ex\u00e9cution la valeur de i est 9 C resultat contient la moyenne des \u00e9l\u00e9ments de liste D len est une fonction 5. On d\u00e9finit la fonction suivante : def traitement ( liste ) : m = liste [ 0 ] for i in range ( len ( liste )) : if liste [ i ] > m : m = liste [ i ] return m Que vaut traitement([-2,5,6,-10,35]) ? A None B -10 C -6 D 35","title":"types construits"},{"location":"1ere/seq5/synthese/#synthese","text":"","title":"Synth\u00e8se"},{"location":"1ere/seq5/synthese/#td-exercices-sur-les-types-construits","text":"","title":"TD : Exercices sur les types construits"},{"location":"1ere/seq5/tableaux/","text":"body { text-align: justify} I. Le type tableau \u00b6 TP : Introduction aux tableaux \u00b6 Cr\u00e9er un nouveau fichier, et l'enregistrer dans votre dossier NSI , dans un nouveau dossier seq5 , sous le nom TP_Introduction_Tableaux.py . R\u00e9pondre aux questions dans votre cahier de TP. Jusqu'\u00e0 pr\u00e9sent, nous avons manipul\u00e9 des valeurs stock\u00e9es dans des variables une par une. Mais les programmes traitent en g\u00e9n\u00e9ral plus qu'une ou deux donn\u00e9es \u00e0 la fois. On veut stocker les moyennes d'un petit groupe de 5 \u00e9l\u00e8ves. Au lieu d'utiliser 5 variables de type float , on les regroupe dans une seule. Taper dans votre \u00e9diteur l'instruction initialisant la variable : moyennes = [ 10.2 , 15.7 , 7.3 , 18.1 , 9.5 ] Ex\u00e9cuter le code et v\u00e9rifier le contenu de moyennes en tapant son nom dans la console . Quel est le type de cette variable ? Appeler la fonction type dans la console avec la variable moyennes en entr\u00e9e pour le savoir. Ce type Python correspond en fait \u00e0 une structure de tableau. Pour acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments, on utilise leur indice , qui donne leur position par rapport aux autres. Pour avoir l'\u00e9l\u00e9ment d'indice 0, on \u00e9crit : >>> moyennes [ 0 ] Quel est-il ? Pour trouver l'indice des \u00e9l\u00e9ments, on compte de 1 en 1, donc en commen\u00e7ant \u00e0 0. a. Quel doit \u00eatre l'\u00e9l\u00e9ment d'indice 1 ? b. Le v\u00e9rifier en rempla\u00e7ant 0 par 1 dans l'instruction pr\u00e9c\u00e9dente. Pour l'exemple du tableau moyennes , remplir la correspondance entre la valeur de ses diff\u00e9rents \u00e9l\u00e9ments et leur indice (rajouter des lignes pour avoir tous les \u00e9l\u00e9ments) : indice moyennes[indice] 0 1 Quelle instruction faut-il taper pour obtenir la valeur 18.1 ? La fonction len(nom_du_tableau) donne le nombre d'\u00e9l\u00e9ment dans un tableau, autrement dit sa longueur . Que donne ici l'instruction suivante (dans la console) ? >>> len ( moyennes ) D\u00e9duire de la question 5 quel est l'indice du dernier \u00e9l\u00e9ment du tableau moyennes , en fonction de sa longueur donn\u00e9e par len(moyennes) . Taper l'instruction suivante : >>> moyennes [ - 1 ] a. Quelle valeur renvoie-t-elle ? b. En d\u00e9duire \u00e0 quel indice positif , l'indice -1 est-il \u00e9quivalent. On s'est tromp\u00e9 sur la valeur de la premi\u00e8re moyenne du tableau. La corriger avec l'instruction suivante (dans l'\u00e9diteur) : moyennes [ 0 ] = 11.0 V\u00e9rifier que la correction a \u00e9t\u00e9 faite. Dans un tableau, on peut stocker autre chose que des nombres. Cr\u00e9er le tableau suivant, en le d\u00e9clarant dans l'\u00e9diteur : fruits = [ 'poire' , 'cerise' , 'pomme' , 'abricot' ] Remplir la correspondance entre les \u00e9l\u00e9ments du tableau fruits et leurs indices (rajouter les lignes n\u00e9cessaires) : indice fruits[indice] 0 1 En d\u00e9duire l'instruction pour obtenir la valeur 'cerise' . Compl\u00e9ter le code suivant (le tester dans l'\u00e9diteur et compl\u00e9ter sur votre cahier) pour afficher la valeur de l'ensemble des \u00e9l\u00e9ments de fruits : for i in range ( ...... ): print ( fruits [ ...... ]) Quelle instruction permet de modifier le dernier \u00e9l\u00e9ment de fruits pour lui affecter la valeur 'p\u00eache' ? Cours \u00b6 Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau . A. D\u00e9finition \u00b6 Un tableau est une collection d'\u00e9l\u00e9ments de m\u00eame type, de taille fix\u00e9e , stock\u00e9s les uns \u00e0 la suite des autres, dont la valeur est accessible gr\u00e2ce \u00e0 leur indice . En Python, on utilise le terme plus g\u00e9n\u00e9ral de liste pour repr\u00e9senter des tableaux . B. Cr\u00e9ation \u00b6 On d\u00e9clare un nouveau tableau en s\u00e9parant ses \u00e9l\u00e9ments par des virgules , l'ensemble \u00e9tant entour\u00e9 de crochets . [] est un tableau vide . Exemple Pour stocker l'ensemble des nombres premiers inf\u00e9rieurs \u00e0 10, on peut utiliser un tableau appel\u00e9 ici tab_premiers : tab_premiers = [ 2 , 3 , 5 , 7 ] Les diff\u00e9rents \u00e9l\u00e9ments sont stock\u00e9s c\u00f4te \u00e0 c\u00f4te dans la m\u00e9moire. Compl\u00e9ter le sch\u00e9ma suivant avec les valeurs de tab_premiers : Solution C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un tableau tab sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du tableau - 1 (en Python : len(tab)-1 ). On acc\u00e8de \u00e0 l'\u00e9l\u00e9ment d'indice i avec la syntaxe tab[i] . Exemple : Pour l'exemple de tab_premiers , associer chaque \u00e9l\u00e9ment du tableau \u00e0 son indice. V\u00e9rifier que l'indice du dernier \u00e9l\u00e9ment correspond \u00e0 len(tab_premiers)-1 . \u00e9l\u00e9ment indice 2 3 5 7 Solution \u00e9l\u00e9ment indice 2 0 3 1 5 2 7 3 On a bien len(tab_premiers) -1 = 4-1 = 3, indice du dernier \u00e9l\u00e9ment de tab_premiers . Quelle instruction permet d'afficher la valeur 3 ? La valeur de l'\u00e9lement d'indice 2 ? Solution tab[1] affiche la valeur 3 . tab[2] affiche la valeur de l'\u00e9l\u00e9ment d'indice 2`. D. Modification \u00b6 Il est possible de modifier la valeur d'un \u00e9l\u00e9ment d'un tableau t apr\u00e8s sa cr\u00e9ation, en lui affectant une nouvelle valeur avec la syntaxe t[i] = v . Exemples Une erreur a \u00e9t\u00e9 faite lors de la d\u00e9claration de tab_premiers : tab_premiers = [ 1 , 3 , 5 , 7 ] Ecrire l'instruction permettant de rectifier cette erreur. tab_premiers [ 0 ] = 2 E. Parcours \u00b6 Pour acc\u00e9der \u00e0 chacun des \u00e9l\u00e9ments les uns \u00e0 la suite des autres, on peut utiliser une boucle born\u00e9e . Il y a deux mani\u00e8res de le faire : E.I. Parcours par indice \u00b6 Syntaxe for i in range ( len ( t )): print ( t [ i ]) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exemple Un tableau t de taille 10 a \u00e9t\u00e9 initialis\u00e9 avec uniquement des 0 . On veut en fait qu'il contienne l'ensemble des chiffres de 0 \u00e0 9. Ecrire une boucle permettant de modifier les valeurs de t . for i in range ( len ( t )): t [ i ] = i E.II. Parcours par valeur \u00b6 Syntaxe for e in t : # cette syntaxe est possible car caracteres est une s\u00e9quence print ( e ) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder F. Cr\u00e9ation par compr\u00e9hension \u00b6 Pour cr\u00e9er des tableaux dont la taille peut \u00eatre grande de mani\u00e8re automatique, on peut utiliser la cr\u00e9ation par compr\u00e9hension . Cette m\u00e9thode utilise une boucle et peut aussi int\u00e9grer une condition . Exemples t1 = [2**i for i in range(6)] cr\u00e9e un tableau avec les puissances de 2 de 0 \u00e0 5 . C'est-\u00e0-dire t1 vaut ... Solution t1 vaut [1, 2, 4, 8, 16] . Indiquer ce que contient t2 : t2 = [i+5 for i in range(5)] Solution t2 vaut [5, 6, 7, 8, 9] . Cr\u00e9er un tableau t3 par compr\u00e9hension stockant les valeurs au carr\u00e9 des nombres de 1 \u00e0 5 . Solution t3 = [i**2 for i in range(1,6)] Indiquer ce que contient t4 : t4 = [i for i in range(10) if i%2 == 0] Solution t4 vaut [0, 2, 4, 6, 8] . G. Les tableaux \u00e0 2-dimensions \u00b6 Un tableau \u00e0 deux dimensions , appel\u00e9 matrice , est un tableau dont chaque \u00e9l\u00e9ment est aussi un tableau. On acc\u00e8de \u00e0 un \u00e9l\u00e9ment par son num\u00e9ro de ligne i et son num\u00e9ro de colonne j : si elle s'appelle mat , cela correspond \u00e0 mat[i][j] . Exemple : mat = [[2,8,1], [3,9,0]] a deux \u00e9l\u00e9ments , d'indice 0 et 1. Ces \u00e9l\u00e9ments comportent eux trois \u00e9l\u00e9ments . Compl\u00e9ter le tableau suivant : indice \u00e9l\u00e9ment 0 1 Solution indice \u00e9l\u00e9ment 0 [2,8,1] 1 [3,9,0] Le repr\u00e9senter sur le sch\u00e9ma suivant, et ajouter les num\u00e9ros de ligne et de colonne : Solution Quelle instruction permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment 3 ? L'\u00e9l\u00e9ment 2 ? Solution mat[1][0] permet d'acc\u00e9der \u00e0 3 et mat[0][0] \u00e0 2 . TP : La biblioth\u00e8que matplotlib \u00b6 Pour ce TP, cr\u00e9er un dossier TP_Matplotlib dans votre dossier NSI , dossier seq5 , et enregistrer un nouveau fichier pour chaque trac\u00e9. La biblioth\u00e8que matplotlib (pour \"mathematic plot library\" ) sert \u00e0 repr\u00e9senter des donn\u00e9es sous la forme de graphiques, on utilise son module pyplot . Avant de commencer, \u00e9crire l'import de la librairie en haut du fichier Python : from matplotlib.pyplot import * A. Graphiques simples \u00b6 Pour repr\u00e9senter des abscisses, not\u00e9es x , en fonction d'ordonn\u00e9es, not\u00e9es y , on utilise des tableaux. Par exemple : Code x = [ 0 , 1 , 2 , 3 ] y = [ 3 , 4 , - 1 , 2 ] plot ( x , y ) # on trace x en fonction de y show () # on montre le graphique Ex\u00e9cuter ce code dans un fichier graphe1.py . Le graphique doit appara\u00eetre \u00e0 l'\u00e9cran. On peut changer l'apparence des points (couleur et forme) en rajoutant un param\u00e8tre \u00e0 la fonction plot . Essayez le code avec les diff\u00e9rents appels suivant de la fonction : Code plot ( x , y , 'r' ) plot ( x , y , 'rs' ) plot ( x , y , 'b' ) plot ( x , y , 'bo' ) Noter ce qui change \u00e0 chaque fois. Plut\u00f4t que de rentrer les valeurs des abscisses et ordonn\u00e9es \u00e0 la main dans le tableau, on peut cr\u00e9er des tableaux automatiquement avec la compr\u00e9hension . a. La compr\u00e9hension utilise une boucle entre les crochets pour affecter directement une valeur \u00e0 chaque \u00e9l\u00e9ment du tableau. [i for i in range(10)] cr\u00e9e le tableau [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] On peut manipuler les param\u00e8tres du range ou bien faire des op\u00e9rations sur la variable i pour cr\u00e9er d'autres tableau. Quelle instruction permet de cr\u00e9er par compr\u00e9hension le tableau [0, 2, 4, 6, 8, 10, 12, 14, 16, 18] ? La tester dans la console. b. On veut repr\u00e9senter la fonction \\(f(x) = 3x\\) . Recopier le code suivant dans un fichier graphe2.py et le compl\u00e9ter avec le tableau des y pour obtenir les bonnes valeurs. Code x = [ i for i in range ( 100 )] # permet de repr\u00e9senter 100 points y = ... # \u00e0 compl\u00e9ter - y doit \u00eatre de taille 100 aussi plot ( x , y ) # vous pouvez rajouter le 3\u00e8me param\u00e8tre qui vous convient le mieux show () Ne pas oublier de faire l'import de la biblioth\u00e8que en d\u00e9but de fichier. On peut repr\u00e9senter des fonctions plus complexes. Dans un fichier graphe_cos.py , importer la fonction cos de la biblioth\u00e8que math avec l'instruction from math import cos plac\u00e9e en d\u00e9but de fichier. Compl\u00e9ter l'instructions remplissant le tableaux ordonnees pour repr\u00e9senter la fonction \\(f(x) = cos(x)\\) . Code abscisses = [ i for i in range ( 100 )] ordonnees = ... # \u00e0 compl\u00e9ter - y doit \u00eatre de taille 100 aussi plot ( abscisses , ordonnees ) show () B. Diagramme en barres et histogrammes \u00b6 Le code est similaire pour repr\u00e9senter des diagrammes en barres : il faut une variable x associ\u00e9e \u00e0 une variable y qui correspond \u00e0 la hauteur des barres. On utilise la fonction bar \u00e0 la place de la fonction plot . Ex\u00e9cuter le code suviant, dans un fichier barres.py : Code x = [ 3 , 5 , 6 , 7 ] y = [ 4 , 1 , 3 , 4 ] bar ( x , y ) show () Le modifier pour avoir les valeurs 1 , 2 , 3 , 4 et 5 en ordonn\u00e9e y , associ\u00e9es aux abscisses x allant de 3 \u00e0 7 . La fonction hist permet de repr\u00e9senter des histogrammes. Il faut lui donner en param\u00e8tre une liste de valeurs, et le nombre de groupes \u00e0 tracer parmi ces valeurs, et la fonction repr\u00e9sente le nombre de fois qu'appara\u00eessent les diff\u00e9rentes valeurs dans chaque groupe. Par exemple, on peut tracer combien de fois on tombe sur chacun des chiffres de 1 \u00e0 6 en lan\u00e7ant un d\u00e9 \u00e0 6 faces 100 fois, en utilisant la fonction randint de la biblioth\u00e8que random (il faut rajouter from random import randint au d\u00e9but du fichier) . Compl\u00e9ter le code suivant, dans un fichier histogramme.py : Code liste = [ randint ( ... ) for _ in range ( 100 )] hist ( liste , 6 ) show () C. Nuage de points \u00b6 La fonction scatter permet de repr\u00e9senter des nuages de points, dont on donne l'abscisse x et l'ordonn\u00e9e y . Utiliser la compr\u00e9hension pour cr\u00e9er les 2 listes x et y de taille 1000 , en tirant \u00e0 chaque fois au hasard un nombre entre 1 et 100 . Enregistrer le code suivant dans un fichier nuage1.py . Code x = [ randint ( ... ) for i in range ( ... )] y = ... scatter ( x , y , c = 'red' ) # il faut ici rajouter le nom de param\u00e8tre c pour changer la couleur show () On peut faire plusieurs graphiques sur un seul, il suffit d'appeler plusieurs fois la fonction de trac\u00e9 (ici scatter ) avant de faire appel \u00e0 show . G\u00e9n\u00e9rer 3 tirages diff\u00e9rents pour x et y , et les repr\u00e9senter sur le m\u00eame graphique en utilisant des couleurs diff\u00e9rentes. L'enregistrer dans un fichier nuage2.py . D. Camemberts \u00b6 Les camemberts (fonction pie ) permettent de repr\u00e9senter la r\u00e9partition de donn\u00e9es entre diff\u00e9rentes cat\u00e9gories. Les cat\u00e9gories ont un nom et une taille (un nombre de donn\u00e9es). On veut repr\u00e9senter la r\u00e9partition d'animaux : 15 animaux dans la cat\u00e9gorie Loup , 30 dans la cat\u00e9gorie Renard , 45 pour Belette et 10 pour Jument . Compl\u00e9ter les listes noms et tailles pour obtenir le graphique demand\u00e9. Enregistrer le code sous camembert.py . Code noms = ... tailles = ... pie ( tailles , labels = noms ) show () TD \u00b6 Exercice 1 : \u00b6 Qu'affiche le programme suivant ? Code t = [ \"un\" , \"trois\" , \"deux\" ] print ( t [ 1 ], t [ 2 ]) Exercice 2 : \u00b6 Comment acc\u00e9der sans erreur au 5\u00e8me \u00e9l\u00e9ment d'un tableau t dont on ne conna\u00eet pas encore la taille ? Code # proposition a a = t [ 5 ] # proposition b if len ( t ) > 4 : a = t [ 4 ] # proposition c if len ( t ) >= 5 : a = t [ 4 ] # proposition d if len ( t ) > 4 : a = t [ 5 ] # proposition e if len ( t ) == 5 : a = t [ 4 ] # proposition f a = t [ 4 ] Exercice 3 : les jours \u00b6 Ecrire une instruction Python stockant le nom des sept jours de la semaine dans un tableau nomm\u00e9 jours . Ecrire un programme permettant d'afficher le noms des sept jours, en utilisant une boucle et la fonction renvoyant la longueur d'un tableau. Exercice 4 : ajouter des \u00e9l\u00e9ments \u00e0 un tableau (sur ordinateur) \u00b6 Un tableau est une structure de taille fixe . Dans certains cas, ce n'est pas pratique car on veut pouvoir rajouter des \u00e9l\u00e9ments au fur et \u00e0 mesure. Il est possible de le faire avec l'op\u00e9rateur + . Ex\u00e9cuter le code suivant : Code t = [ - 1 , 0 , 1 , 2 ] t = t + [ 3 ] Ecrire un programme cr\u00e9ant un tableau vide, et ajoutant successivement les valeurs 5 , 10 , 15 et 20 . Ecrire une fonction multiples1000(n) prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les multiples de n strictement inf\u00e9rieurs \u00e0 1000. Ecrire une fonction trie_pairs(t) prenant en param\u00e8tre un tableau d'entiers t et renvoyant un nouveau tableau ne contenant que les entiers pairs de t . Exercice 5 : la compr\u00e9hension \u00b6 Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension un tableau contenant la table de multiplication de 6 (donc les valeurs allant de 1*6 \u00e0 9*6 ). Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension un tableau \u00e0 2 dimensions contenant les tables de multiplication de tous les chiffres de 2 \u00e0 9. Code [[ 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 ], # table de 2 [ 3 , 6 , 9 , 12 , 15 , 18 , 21 , 24 , 27 ], # table de 3 ... # etc [ 9 , 18 , 27 , 36 , 45 , 54 , 63 , 72 , 81 ]] # table de 9 Exercice 6 : multiples \u00b6 Ecrire une fonction multiples10(n) prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les 10 premiers multiples non nuls de n . On utilisera un tableau de taille 10, initialis\u00e9 par compr\u00e9hension avec des 0. Exercice 7 : morpion \u00b6 Ecrire une instruction permettant de g\u00e9n\u00e9rer le tableau \u00e0 2 dimensions repr\u00e9sentant le jeu du morpion ci-dessous. C'est au joueur ayant les 'X' de jouer. Ecrire l'instruction qui lui permet de gagner (il faut qu'il aligne 3 'X' !) . Ecrire un programme parcourant tous les \u00e9l\u00e9ments du tableau \u00e0 2 dimensions les uns apr\u00e8s les autres (il faut utiliser 2 boucles imbriqu\u00e9es) . Exercice 8 : QCM \u00b6 On dispose d'une liste d\u00e9finie par L = [15,17,12,23] . Quelle est la valeur de L apr\u00e8s l'instruction L[2] = 25 ? A [15,25,12,23] B [15,17,25,12,23] C [15,17,25,23] D [15,17,12,25,23] On d\u00e9finit ainsi une liste M : M = [['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L']] Quelle expression vaut la cha\u00eene de caract\u00e8res 'H' ? A M[1][3] B M[3][1] C M(7) D M(8) Que vaut l'expression [ 2*k for k in range(5) ] ? A [0,2,4,6,8] B [2,4,6,8,10] C [1,2,4,8,16] D [2,4,8,16,32] On ex\u00e9cute le code suivant : Code A = [ [ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ] ] B = [ [ 0 , 0 , 0 ], [ 0 , 0 , 0 ], [ 0 , 0 , 0 ] ] for i in range ( 3 ): for j in range ( 3 ): B [ i ][ j ] = A [ j ][ i ] Que vaut B \u00e0 la fin de l'ex\u00e9cution ? A rien du tout, le programme d\u00e9clenche une erreur d'ex\u00e9cution B [ [3,2,1], [6,5,4], [9,8,7] ] C [ [1,4,7], [2,5,8], [3,6,9] ] D [ [7,8,9], [4,5,6], [1,2,3] ]","title":"I. Le type tableau"},{"location":"1ere/seq5/tableaux/#i-le-type-tableau","text":"","title":"I. Le type tableau"},{"location":"1ere/seq5/tableaux/#tp-introduction-aux-tableaux","text":"Cr\u00e9er un nouveau fichier, et l'enregistrer dans votre dossier NSI , dans un nouveau dossier seq5 , sous le nom TP_Introduction_Tableaux.py . R\u00e9pondre aux questions dans votre cahier de TP. Jusqu'\u00e0 pr\u00e9sent, nous avons manipul\u00e9 des valeurs stock\u00e9es dans des variables une par une. Mais les programmes traitent en g\u00e9n\u00e9ral plus qu'une ou deux donn\u00e9es \u00e0 la fois. On veut stocker les moyennes d'un petit groupe de 5 \u00e9l\u00e8ves. Au lieu d'utiliser 5 variables de type float , on les regroupe dans une seule. Taper dans votre \u00e9diteur l'instruction initialisant la variable : moyennes = [ 10.2 , 15.7 , 7.3 , 18.1 , 9.5 ] Ex\u00e9cuter le code et v\u00e9rifier le contenu de moyennes en tapant son nom dans la console . Quel est le type de cette variable ? Appeler la fonction type dans la console avec la variable moyennes en entr\u00e9e pour le savoir. Ce type Python correspond en fait \u00e0 une structure de tableau. Pour acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments, on utilise leur indice , qui donne leur position par rapport aux autres. Pour avoir l'\u00e9l\u00e9ment d'indice 0, on \u00e9crit : >>> moyennes [ 0 ] Quel est-il ? Pour trouver l'indice des \u00e9l\u00e9ments, on compte de 1 en 1, donc en commen\u00e7ant \u00e0 0. a. Quel doit \u00eatre l'\u00e9l\u00e9ment d'indice 1 ? b. Le v\u00e9rifier en rempla\u00e7ant 0 par 1 dans l'instruction pr\u00e9c\u00e9dente. Pour l'exemple du tableau moyennes , remplir la correspondance entre la valeur de ses diff\u00e9rents \u00e9l\u00e9ments et leur indice (rajouter des lignes pour avoir tous les \u00e9l\u00e9ments) : indice moyennes[indice] 0 1 Quelle instruction faut-il taper pour obtenir la valeur 18.1 ? La fonction len(nom_du_tableau) donne le nombre d'\u00e9l\u00e9ment dans un tableau, autrement dit sa longueur . Que donne ici l'instruction suivante (dans la console) ? >>> len ( moyennes ) D\u00e9duire de la question 5 quel est l'indice du dernier \u00e9l\u00e9ment du tableau moyennes , en fonction de sa longueur donn\u00e9e par len(moyennes) . Taper l'instruction suivante : >>> moyennes [ - 1 ] a. Quelle valeur renvoie-t-elle ? b. En d\u00e9duire \u00e0 quel indice positif , l'indice -1 est-il \u00e9quivalent. On s'est tromp\u00e9 sur la valeur de la premi\u00e8re moyenne du tableau. La corriger avec l'instruction suivante (dans l'\u00e9diteur) : moyennes [ 0 ] = 11.0 V\u00e9rifier que la correction a \u00e9t\u00e9 faite. Dans un tableau, on peut stocker autre chose que des nombres. Cr\u00e9er le tableau suivant, en le d\u00e9clarant dans l'\u00e9diteur : fruits = [ 'poire' , 'cerise' , 'pomme' , 'abricot' ] Remplir la correspondance entre les \u00e9l\u00e9ments du tableau fruits et leurs indices (rajouter les lignes n\u00e9cessaires) : indice fruits[indice] 0 1 En d\u00e9duire l'instruction pour obtenir la valeur 'cerise' . Compl\u00e9ter le code suivant (le tester dans l'\u00e9diteur et compl\u00e9ter sur votre cahier) pour afficher la valeur de l'ensemble des \u00e9l\u00e9ments de fruits : for i in range ( ...... ): print ( fruits [ ...... ]) Quelle instruction permet de modifier le dernier \u00e9l\u00e9ment de fruits pour lui affecter la valeur 'p\u00eache' ?","title":"TP : Introduction aux tableaux"},{"location":"1ere/seq5/tableaux/#cours","text":"Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau .","title":"Cours"},{"location":"1ere/seq5/tableaux/#tp-la-bibliotheque-matplotlib","text":"Pour ce TP, cr\u00e9er un dossier TP_Matplotlib dans votre dossier NSI , dossier seq5 , et enregistrer un nouveau fichier pour chaque trac\u00e9. La biblioth\u00e8que matplotlib (pour \"mathematic plot library\" ) sert \u00e0 repr\u00e9senter des donn\u00e9es sous la forme de graphiques, on utilise son module pyplot . Avant de commencer, \u00e9crire l'import de la librairie en haut du fichier Python : from matplotlib.pyplot import *","title":"TP : La biblioth\u00e8que matplotlib"},{"location":"1ere/seq5/tableaux/#td","text":"","title":"TD"},{"location":"1ere/seq5/tableaux_algo/","text":"body { text-align: justify} II. Algorithmique sur les tableaux \u00b6 Cours \u00b6 A. Recherche d'extremum \u00b6 Les tableaux permettent de regrouper plusieurs valeurs au m\u00eame endroit. De ces valeurs, on peut extraire des statistiques, comme trouver son minimum et son maximum . Consid\u00e9rons le tableau t = [2.4, 83.0, 17.1, -28.2, -5.9] . Il faut le parcourir pour obtenir son plus petit \u00e9l\u00e9ment. D\u00e9crire en quelques phrases comment trouver le minimum de l'ensemble du tableau. On parcourt ses \u00e9l\u00e9ments un par un. On stocke la valeur du minimum des \u00e9l\u00e9ments d\u00e9j\u00e0 parcourus dans une variable. Quand on trouve un \u00e9l\u00e9ment de t inf\u00e9rieur \u00e0 ce minimum, on actualise sa valeur. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Une boucle for parcourant l'ensemble du tableau, une variable stockant le minimum. Proposer un algorithme de recherche du minimum d'un tableau, renvoyant cette valeur minimale. entr\u00e9e : tableau t sortie : entier ou flottant mini on initialise une variable mini avec t [ 0 ] on parcourt un \u00e0 un le reste des \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i de t est inf\u00e9rieur \u00e0 mini on actualise mini avec t [ i ] on renvoie mini Comment faut-il le modifier pour obtenir la valeur maximale ? On remplace le \"inf\u00e9rieur \u00e0\" par \"sup\u00e9rieur \u00e0\". On change aussi le nom de la variable mini pour l'appeler maxi . Appliquer cet algorithme au tableau t , et compl\u00e9ter la table de trace suivante : it\u00e9ration variable mini condition init 2.4 x 1 2 3 4 B. Recherche d'occurrence \u00b6 D\u00e9finition Compter le nombre de fois qu'appara\u00eet une valeur dans un tableau s'appelle compter les occurrences de cette valeur. B.1. Compter les occurrences \u00b6 On consid\u00e8re t = ['chat', 'chien', 'rat', 'loup', 'chat'] , et on veut pouvoir compter le nombre d'occurrences d'une valeur dans t . D\u00e9crire en quelques phrases comment faire pour trouver le nombre d'occurrence d'une valeur v dans un tableau t . On parcourt les \u00e9l\u00e9ments de t un \u00e0 un, jusqu'au bout du tableau. Lorsque l'on trouve un \u00e9l\u00e9ment \u00e9gal \u00e0 v, on incr\u00e9mente une variable comptant les occurrences. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Il faut utiliser une boucle born\u00e9e (for), et une variable comptant les occurrences. Proposer un algorithme effectuant ce comptage : entr\u00e9e : tableau t sortie : entier nb_occ on initialise nb_occ \u00e0 0 on parcourt un \u00e0 un tous les \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i vaut v on incr\u00e9mente nb_occ Appliquer cet algorithme \u00e0 t pour la valeur chat , et remplir la table de trace suivante : it\u00e9ration variable condition init 0 x 1 2 3 4 5 B.2. Trouver une occurrence \u00b6 On veut cette fois-ci indiquer si une valeur est pr\u00e9sente dans le tableau ou non. Quel est le type du r\u00e9sultat ? C'est un bool\u00e9en. Que faut-il changer, par rapport \u00e0 l'algorithme pr\u00e9c\u00e9dent ? Il n'est pas n\u00e9cessaire de parcourir tout le tableau dans tous les cas : lorsqu'on trouve une fois l'\u00e9l\u00e9ment, l'algorithme peut s'arr\u00eater. Comment, alors, \u00e9crire l'algorithme ? entr\u00e9e : tableau t , valeur v sortie : bool\u00e9en trouve on initialise trouve \u00e0 False tant que trouve vaut False et qu il reste des \u00e9l\u00e9ments dans t on parcourt l \u00e9l\u00e9ment suivant de t d indice i si l \u00e9l\u00e9ment i de t vaut v on actualise trouve \u00e0 True C. Calcul de moyenne \u00b6 Comment obtenir la moyenne d'un tableau de nombres ? 1. Quelle est la formule pour calculer la moyenne qu'il va falloir utiliser ? moy = somme des \u00e9l\u00e9ments / nombre d'\u00e9l\u00e9ments 2. Identifier le type de parcours \u00e0 appliquer, et les variables \u00e0 utiliser. Il faut faire un parcours total, et utiliser une variable stockant la somme des \u00e9l\u00e9ments. Proposer un algorithme : entr\u00e9e : tableau t sortie : flottant moy on initialise somme \u00e0 0 on parcourt les \u00e9l\u00e9ments de t on ajoute la valeur de l \u00e9l\u00e9ment i de t \u00e0 somme moy vaut somme / ( longueur de t ) L'appliquer \u00e0 t = [2, 83, 17, -20, -5] it\u00e9ration variable somme variable moy init 0 x 1 2 3 4 5 fin TP : Algorithmique sur les tableaux 1 \u00b6 Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres. A. Un premier algorithme \u00b6 Sans l'ex\u00e9cuter , analyser le programme ci-dessous. A quel algorithme correspond-il ? def fonction1 ( tab ): var = tab [ 0 ] for i in range ( 1 , len ( tab )): if tab [ i ] > var : var = tab [ i ] return var a. Quel doit \u00eatre le r\u00e9sultat de l'appel fonction1([1, -5, 14, -2, 13]) ? b. Ecrire l'assertion correspondante. c. Quelle est la signature de la fonction ? R\u00e9ecrire la fonction en lui donnant un nom explicite, en renommant aussi var , et avec sa signature. L'enregistrer dans un fichier Python avec l'assertion de la question 2. Que faut-il modifier pour que l'on renvoie l'indice de l'\u00e9l\u00e9ment plut\u00f4t que sa valeur ? C'est \u00e0 dire que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 2 au lieu de 14 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 1 au lieu de 30 . Faire la modification ci-dessous, renommer la fonction et l'\u00e9crire dans le fichier Python avec les assertions v\u00e9rifiant les 2 tests donn\u00e9s. B. Un deuxi\u00e8me algorithme \u00b6 Que repr\u00e9sente -5 , comme caract\u00e9ristique de [1, -5, 14, -2, 13] ? Que repr\u00e9sente -10 , comme caract\u00e9ristique de [-10, 30, 4, 7, 16] ? Ecrire la fonction permettant d'extraire cette caract\u00e9ristique. On \u00e9crira sa signature et les assertions correspondant aux tests donn\u00e9s. De mani\u00e8re similaire \u00e0 la question A.4. , on veut pouvoir renvoyer l'indice. Ecrire une autre fonction donnant les r\u00e9sultats suivants : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 1 au lieu de -5 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 0 au lieu de -10 ? Ces algorithmes, avec leurs variations, sont \u00e0 savoir retrouver. TP : Algorithmique sur les tableaux 2 \u00b6 On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver. TP : Impl\u00e9mentation du calcul de la moyenne \u00b6 Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : Code from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : Code debut = time () m1 = moyenne ( t1 ) tps = ( time () - debut ) * 1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ? TD : Algorithmes sur les tableaux \u00b6 Exercice 1 : Recherche d'occurrence \u00b6 Ecrire un programme recherchant si la valeur 13 est pr\u00e9sente dans le tableau t . Elle renverra True si c'est le cas, et False sinon. On fera un parcours par valeur du tableau. Code t = [ 2 , - 6 , 0 , 12 , 28 , - 9 , 30 ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a. Transformer ce programme en une fonction recherche_occurrence(t, v) prenant en param\u00e8tre un tableau t et une valeur v , renvoyant True si v est pr\u00e9sente dans t , False sinon. b. Ecrire l' appel de fonction \u00e0 faire dans la console pour tester le programme sur le m\u00eame exemple que dans la question 1. Que doit-il renvoyer ? Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a. Ecrire une fonction indice_occurrence(t, v) prenant en param\u00e8tre un tableau t et une valeur v , renvoyant l'indice de l'occurrence de v dans t si elle est pr\u00e9sente, -1 sinon. Il faut faire un parcours par indice **. b. Ecrire l' assertion permettant de tester son bon fonctionnement. Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a. Ecrire une fonction compte_occurrence(t, v) prenant en param\u00e8tre un tableau t et une valeur v , et renvoyant le nombre d'occurrence de v dans t . b. Ecrire l' assertion permettant de tester son bon fonctionnement. Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exercice 2 : Recherche d'extrema \u00b6 Ecrire un programme permettant de trouver la valeur du minimum d'un tableau t . On fera un parcours par valeur du tableau. Code t = [ 2 , - 6 , 0 , 12 , 28 , - 9 , 30 ] ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a. Transformer ce programme en une fonction valeur_minimum(t) prenant en param\u00e8tre un tableau t et renvoyant sa valeur minimale. b. Ecrire l' appel de fonction \u00e0 faire dans la console pour tester le programme sur le m\u00eame exemple que dans la question 1. Que doit-il renvoyer ? Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a. Ecrire une fonction indice_minimum(t) prenant en param\u00e8tre un tableau t et renvoyant l'indice du minimum du tableau. S'il appara\u00eet 2 fois, l'indice de la premi\u00e8re occurrence du minimum est conserv\u00e9e. Il faut faire un parcours par indice . b. Ecrire l' assertion permettant de tester son bon fonctionnement. Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Ecrire une fonction indice_maximum(t) prenant en param\u00e8tre un tableau t et renvoyant l'indice du maximum du tableau. S'il appara\u00eet 2 fois, l'indice de la derni\u00e8re occurrence du minimum est conserv\u00e9e. Il faut faire un parcours par indice . Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exercice 3 : Calcul de moyenne \u00b6 Ecrire une fonction moyenne(tab) prenant en param\u00e8tre un tableau tab d'entiers ou de flottants et renvoyant la moyenne des \u00e9l\u00e9ments. On \u00e9crira la signature de la fonction, ainsi que plusieurs assertions permettant de v\u00e9rifier son fonctionnement. Code ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exercice 4 : QCM \u00b6 On consid\u00e8re la fonction suivante : Code def f ( T , i ): indice = i m = T [ i ] for k in range ( i + 1 , len ( T )): if T [ k ] < m : indice = k m = T [ k ] return indice Quelle est la valeur de f([ 7, 3, 1, 8, 19, 9, 3, 5 ], 0) ? A 1 | B 2 | C 3 | D 4 Quelle est la valeur de c \u00e0 la fin de l'ex\u00e9cution du code suivant : Code L = [ 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 0 , 2 ] c = 0 for k in L : if k == L [ 1 ]: c = c + 1 A 0 | B 2 | C 3 | D 10 On ex\u00e9cute le script suivant : Code liste = [ 17 , 12 , 5 , 18 , 2 , 7 , 9 , 15 , 14 , 20 ] somme = 0 i = 0 while i < len ( liste ): somme = somme + liste [ i ] i = i + 1 resultat = somme / len ( liste ) Quelle affirmation est fausse parmi les suivantes ? A le corps de la boucle a \u00e9t\u00e9 ex\u00e9cut\u00e9 10 fois B \u00e0 la fin de l'ex\u00e9cution la valeur de i est 9 C resultat contient la moyenne des \u00e9l\u00e9ments de liste D len est une fonction On d\u00e9finit la fonction suivante : Code def traitement ( liste ) : m = liste [ 0 ] for i in range ( len ( liste )) : if liste [ i ] > m : m = liste [ i ] return m Que vaut traitement([-2,5,6,-10,35]) ? A None | B -10 | C -6 | D 35 TP : Dessin automatique d'images \u00b6 R\u00e9pondre aux questions sur votre cahier de TP. Une image est un tableau \u00e0 2 dimensions , autrement dit une matrice . Chacun des points contient une valeur : sa couleur. A. Images en noir et blanc \u00b6 Pour cette partie, cr\u00e9er un fichier TP_Image_Bichrome.py . Nous allons commencer par manipuler des images n'ayant que deux couleurs, repr\u00e9sent\u00e9es par des 0 et des 1 . On commence par initialiser l'image avec des 0 . Compl\u00e9ter l'instruction suivante, cr\u00e9ant un tableau de taille 25x25 par compr\u00e9hension avec des 0 \u00e0 chaque coordonn\u00e9e : image = [ [... for i in range(...)] for j in range(...)] On veut dessiner un carr\u00e9, en mettant des 1 sur : la premi\u00e8re ligne , d'indice ...................... la derni\u00e8re ligne , d'indice ...................... la premi\u00e8re colonne , d'indice ...................... la derni\u00e8re colonne , d'indice ...................... a. Faire un parcours de tous les \u00e9l\u00e9ments de image et mettre \u00e0 1 les \u00e9l\u00e9ments ( image[i][j] ) identifi\u00e9s. On utilise 2 boucles imbriqu\u00e9es : Code for i in range ( len ( image )): for j in range ( len ( image [ 0 ])): # \u00e0 compl\u00e9ter b. Visualiser ensuite le r\u00e9sultat avec matplotlib . Pour cela, rajouter au d\u00e9but du fichier l'import : from matplotlib.pyplot import * , et ajouter \u00e0 la fin de votre code les instructions suivantes : Code imshow ( image ) # fonction affichant les images show () Ecrire le code permettant de g\u00e9n\u00e9rer les formes ci-dessous. Pour cela, identifier \u00e0 chaque fois pour quelles coordonn\u00e9es i et j il faut faire passer la valeur \u00e0 1 . B. Images en couleur \u00b6 La couleur est repr\u00e9sent\u00e9e par un triplet de nombres : un pour l'intensit\u00e9 du rouge , un pour le vert , et un pour le bleu (R, V, B). Ce nombre est stock\u00e9 sur 1 octet, donc varie entre 0 et 255 . Le sch\u00e9ma ci-contre indique comment coder les couleurs de base. Pour repr\u00e9senter le triplet, on utilise un tuple : un ensemble de valeurs s\u00e9par\u00e9es par des virgules. Cr\u00e9er un fichier TP_Image_Carre_Couleurs.py . Pour initialiser l'image avec du noir pour tous les pixels, on utilise l'instruction image = [ [(0, 0, 0) for i in range(...)] for j in range(...)] . Cr\u00e9er une fonction permettant de cr\u00e9er un carr\u00e9 soit rouge, soit vert, soit bleu, soit jaune : carre_couleur(image, c) prenant en param\u00e8tre l'image image dont on a initialis\u00e9 la couleur, et la couleur c \u00e9crite sous la forme d'une cha\u00eene de caract\u00e8res remplissant tous les pixels sauf les bords de cette couleur. Cr\u00e9er un fichier TP_Image_Carre_Multicolor.py . Ecrire le code permettant de cr\u00e9er l'image suivante :","title":"II. Algorithmes sur les tableaux"},{"location":"1ere/seq5/tableaux_algo/#ii-algorithmique-sur-les-tableaux","text":"","title":"II. Algorithmique sur les tableaux"},{"location":"1ere/seq5/tableaux_algo/#cours","text":"","title":"Cours"},{"location":"1ere/seq5/tableaux_algo/#tp-algorithmique-sur-les-tableaux-1","text":"Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres.","title":"TP : Algorithmique sur les tableaux 1"},{"location":"1ere/seq5/tableaux_algo/#tp-algorithmique-sur-les-tableaux-2","text":"On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver.","title":"TP : Algorithmique sur les tableaux 2"},{"location":"1ere/seq5/tableaux_algo/#tp-implementation-du-calcul-de-la-moyenne","text":"Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : Code from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : Code debut = time () m1 = moyenne ( t1 ) tps = ( time () - debut ) * 1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ?","title":"TP : Impl\u00e9mentation du calcul de la moyenne"},{"location":"1ere/seq5/tableaux_algo/#td-algorithmes-sur-les-tableaux","text":"","title":"TD : Algorithmes sur les tableaux"},{"location":"1ere/seq5/tableaux_algo/#tp-dessin-automatique-dimages","text":"R\u00e9pondre aux questions sur votre cahier de TP. Une image est un tableau \u00e0 2 dimensions , autrement dit une matrice . Chacun des points contient une valeur : sa couleur.","title":"TP : Dessin automatique d'images"},{"location":"1ere/seq6/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq6/#programme","text":"","title":"Programme"},{"location":"1ere/seq6/architecture/","text":"body { text-align: justify} I. Architecture des r\u00e9seaux informatiques \u00b6 Cours \u00b6 A. Les composants d'un r\u00e9seau \u00b6 On veut faire communiquer entre eux des ordinateurs. Le moyen de le faire va d\u00e9pendre du nombre de machines \u00e0 connecter. A.1. R\u00e9seau local \u00b6 Avec deux ordinateurs : ils peuvent \u00eatre simplement connect\u00e9s avec un c\u00e2ble Ethernet , ayant des prises RJ45 (rajouter la l\u00e9gende ci-dessous) : Les machines doivent \u00eatre \u00e9quip\u00e9es de carte (interface) r\u00e9seau : un ensemble de composants \u00e9lectroniques reli\u00e9s ensemble pour permettre la connexion de l'ordinateur \u00e0 un r\u00e9seau. Avec quelques ordinateurs : on utilise un commutateur ou switch en anglais, auquel tous les ordinateurs sont connect\u00e9s. Les machines sont alors connect\u00e9es au sein d'un r\u00e9seau local ou LAN (pour Local Area Network ). Les machines peuvent s'envoyer des informations sans utiliser d'acc\u00e8s \u00e0 Internet. A.2. Plusieurs r\u00e9seaux locaux \u00b6 Pour connecter plusieurs r\u00e9seaux entre eux, il faut utiliser un autre type de machines : des routeurs . Elles permettent de faire le lien entre diff\u00e9rents r\u00e9seaux locaux. B. Identification des composants d'un r\u00e9seau \u00b6 B.1. Les adresses IP \u00b6 D\u00e9finition Chaque machine connect\u00e9e \u00e0 un r\u00e9seau est identifi\u00e9e par une adresse IP (pour Internet Protocol ). C'est une suite de symboles (chiffres ou lettres) qui identiife de mani\u00e8re unique une machine sur un r\u00e9seau. Le format IPv4 est pris comme standard dans tout le cours, mais on utilise aujourd'hui 2 formats : Nom IPv4 IPv6 Forme 4 valeurs cod\u00e9es sur 1 octet (les valeurs vont de 0 \u00e0 255 ), \u00e9crites en d\u00e9cimal, s\u00e9par\u00e9es par des . 8 champs de 2 octets \u00e9crits en hexad\u00e9cimal, s\u00e9par\u00e9es par des : Exemple 178.160.1.0 2a03:2890:f145:82:face:b00c:0:25de Une partie de l\u2019adresse IP identifie le r\u00e9seau auquel appartient la machine, et une partie identifie la machine (l'\"h\u00f4te\") elle-m\u00eame sur le r\u00e9seau. Deux machines d\u2019un m\u00eame r\u00e9seau devront avoir une adresse IP avec la m\u00eame partie r\u00e9seau pour pouvoir communiquer. La partie r\u00e9seau de l'adresse IP est identifi\u00e9e gr\u00e2ce \u00e0 un masque de sous-r\u00e9seau , de la forme a.b.c.d, indiquant quels bits de l'adresse IP sont dans la partie r\u00e9seau (ils sont \u00e0 un dans le masque) et lesquels ne le sont pas (ils sont \u00e0 z\u00e9ro ) . On peut aussi noter, apr\u00e8s l'adresse IP, le nombre de bits \u00e0 1 dans le masque, apr\u00e8s un /. Exemple Une machine M1 a l'adresse IP 192.168.1.1 et son masque de sous-r\u00e9seau est 255.255.255.0 (ou bien 192.168.1.1/24). On veut savoir quelle est l'adresse de son sous-r\u00e9seau. On l'obtient en convertissant les adresses en binaire et en calculant le ET logique entre les deux. Adresse IP Masque Adresse IP ET Masque B.2. Les adresses MAC \u00b6 Les adresses IP identifient les machines sur un r\u00e9seau : cela signifie que si on les connecte sur un autre r\u00e9seau (local), cette adresse peut varier. D\u00e9finition Pour identifier une machine physique \u00e0 coup s\u00fbr, on utilise en plus une adresse MAC , unique \u00e0 chaque interface r\u00e9seau et fournie par son fabriquant. Elle est constitu\u00e9e de 6 octets (48 bits), repr\u00e9sent\u00e9s en g\u00e9n\u00e9ral en hexad\u00e9cimal, s\u00e9par\u00e9s par des :. Exemple 5C:FA:CE:D2:CF:36 est une adresse MAC valide. TD \u00b6 Exercice 1 : adresses valides \u00b6 Pour chacune des adresses suivantes, identiquer si elle correspond \u00e0 une adresse IP , une adresse MAC , ou bien si c'est une adresse non-valide. Dans ce cas, identifier quel est le probl\u00e8me. Adresse Adresse IPv4 valide Adresse MAC Adresse non-valide a. 20.1.13.10 b. 7D:A9:C5:67:E6:F3 c. 128.252.2.257 d. 200.200.200.200.200 e. 6A:A9:G4:10:EF:67 f. 4.5.6.7 Exercice 2 : adressage IP \u00b6 On consid\u00e8re le r\u00e9seau suivant : L'adresse IP 172.128.1.1 est attribu\u00e9e \u00e0 M1, et son masque de sous-r\u00e9seau est 255.255.255.0. 1.a. En faisant un ET logique entre l'adresse IP et le masque, obtenir l'adresse du sous-r\u00e9seau. 1.b. On donne \u00e0 M2 l'adresse IP 172.128.2.2. Les machines pourront-elles communiquer ? Justifier. 1.b. On donne \u00e0 M3 l'adresse IP 172.128.1.10. Les machines pourront-elles communiquer ? Justifier. On attribue \u00e0 M4 l'adresse IP 16.0.0.1/16. 2.a. Quel est le masque du sous-r\u00e9seau ? 2.b. Quelle est l'adresse du sous-r\u00e9seau ? 2.c. Quelle adresse IP peut-on attribuer \u00e0 M5 ? L'adresse IP du dernier sous-r\u00e9seau (avec M7, M8, R3 et RB) est 172.128.3.0/24. Cette adresse n'est pas attribuable \u00e0 une machine (c'est celle du r\u00e9seau) , ce qui est aussi le cas de l'adresse dans laquelle tous les bits de la machine (h\u00f4te) sont \u00e0 1 (c'est l'adresse de diffusion, permettant d'atteindre toutes les machines d'un sous-r\u00e9seau) . 3.a. Quelle est cette adresse de diffusion ? 3.b. En d\u00e9duire le nombre de machines qu'il est possible de connecter \u00e0 ce r\u00e9seau.","title":"I. Architecture des r\u00e9seaux"},{"location":"1ere/seq6/architecture/#i-architecture-des-reseaux-informatiques","text":"","title":"I. Architecture des r\u00e9seaux informatiques"},{"location":"1ere/seq6/architecture/#cours","text":"","title":"Cours"},{"location":"1ere/seq6/architecture/#td","text":"","title":"TD"},{"location":"1ere/seq6/tcpip/","text":"body { text-align: justify} II. Le mod\u00e8le TCP/IP \u00b6 Cours \u00b6 On consid\u00e8re le r\u00e9seau ci-dessous, et on veut savoir comment les diff\u00e9rentes machines peuvent communiquer entre elles. D\u00e9finition Elles utilisent des protocoles de communication : des ensembles de normes qui d\u00e9finissent comment \u00e9changer des informations entre machines. A. Communication dans un r\u00e9seau local \u00b6 On veut envoyer un message d'un ordinateur M1 un ordinateur M2 . Les deux machines sont dans le m\u00eame r\u00e9seau local. A.1. D\u00e9coupage des donn\u00e9es \u00b6 Pour faire un transfert de fichier, on utilise l'application FTP (File Transfer Protocol). Les donn\u00e9es ne peuvent pas transiter en une fois dans le r\u00e9seau : les connexions permettent de faire transiter un nombre limit\u00e9 de donn\u00e9es \u00e0 la fois. Cela a \u00e9t\u00e9 con\u00e7u ainsi pour fluidifier les \u00e9changes : s'il y a un probl\u00e8me \u00e0 un endroit du r\u00e9seau, il n'est pas n\u00e9cessaire de renvoyer toutes les donn\u00e9es mais seulement une partie. Les donn\u00e9es sont donc d\u00e9coup\u00e9es . Exemple : transmission d'un po\u00e8me de C. Baudelaire, dont voici une partie : A.2. TCP \u00b6 Les donn\u00e9es transitent sur le r\u00e9seau, et on observe qu'elles sont arriv\u00e9es ainsi \u00e0 M2 : Quels probl\u00e8mes y a-t-il ? Les donn\u00e9es sont arriv\u00e9es dans le d\u00e9sordre, et il en manque. Comment les r\u00e9soudre ? On peut les r\u00e9soudre en ajoutant un num\u00e9ro \u00e0 chaque partie, et en utilisant des accus\u00e9s de r\u00e9ception. D\u00e9finition C'est le r\u00f4le de TCP (Transmission Control Protocol) , un protocole de transport des donn\u00e9es. Si la fiabilit\u00e9 n'\u00e9tait pas le plus important mais la rapidit\u00e9 importait plus, on aurait pu utiliser UDP, qui est un autre protocole de transport. Les donn\u00e9es sont donc mises en forme par TCP, c'est-\u00e0-dire qu'on rajoute des informations dans l' ent\u00eate du segment TCP (on encapsule les donn\u00e9es) : A.3. IP \u00b6 Pour savoir o\u00f9 est ce qu'il faut acheminer les donn\u00e9es, il faut savoir, gr\u00e2ce \u00e0 l' adresse IP de l'\u00e9metteur et du destinataire, s'il sont sur le m\u00eame r\u00e9seau local ou non. On obtient l'information en faisant un ET logique entre l'adresse IP et le masque de sous-r\u00e9seau. D\u00e9finition L' Internet Protocol sert \u00e0 guider les donn\u00e9es dans le r\u00e9seau. L' ent\u00eate IP contient les adresses IP de l'\u00e9metteur et du destinataire. A.4. Acc\u00e8s \u00e0 la machine \u00b6 Dans notre cas, M1 et M2 sont sur le m\u00eame r\u00e9seau. Les donn\u00e9es parviennent \u00e0 M2 gr\u00e2ce au commutateur , qui sait associer adresse IP \u00e0 adresse MAC gr\u00e2ce \u00e0 l' Address Resolution Protocol (ARP) . Cela permet de savoir \u00e0 quelle machine physique est-ce qu'il faut envoyer les donn\u00e9es. Cette information est ajout\u00e9e \u00e0 l'ent\u00eate de la trame Ethernet , qui est le type de connexion le plus utilis\u00e9 (ce pourrait \u00eatre une trame Wifi par exemple si on utilisait ce type de connexion - il en existe d'autres types encore). Les trames parviennent alors \u00e0 M2, qui d\u00e9sencapsule les ent\u00eates une \u00e0 une pour acc\u00e9der aux donn\u00e9es. B. Le mod\u00e8le en couches \u00b6 Les diff\u00e9rents protocoles d\u00e9crits rajoutent, \u00e0 chaque \u00e9tape, des donn\u00e9es d'ent\u00eate. On dit que les donn\u00e9es sont, au fur et \u00e0 mesure, encapsul\u00e9es . Diff\u00e9rents protocoles peuvent \u00eatre utilis\u00e9s aux diff\u00e9rentes \u00e9tapes, mais leur fonction est similaire. Cela correspond au mod\u00e8le en couches TCP/IP : Le premier mod\u00e8le d\u00e9crit identifiait plus de couches, c'est le mod\u00e8le OSI . C'est un mod\u00e8le th\u00e9orique, qui n'a pas \u00e9t\u00e9 utilis\u00e9 en pratique, au contraire du mod\u00e8le TCP/IP, dont le nom vient des deux protocoles \u00e0 la base des communications sur Internet. C. Communication entre r\u00e9seaux locaux \u00b6 Si M1 veut envoyer des donn\u00e9es \u00e0 M4 , les donn\u00e9es doivent sortir du r\u00e9seau local. Gr\u00e2ce au protocole IP , on identifie qu'il faut sortir du r\u00e9seau car les adresses de sous-r\u00e9seau de l'\u00e9metteur et du destinataire ne correspondent pas. Les donn\u00e9es qui sortent du r\u00e9seau sont envoy\u00e9es vers une passerelle : une machine qui connecte un r\u00e9seau vers les autres. C'est ici le routeur RA . RA sait o\u00f9 envoyer les donn\u00e9es gr\u00e2ce \u00e0 sa table de routage . Il les dirige vers le switch R2. On est ensuite dans la premi\u00e8re configuration, les donn\u00e9es sont \u00e9chang\u00e9es dans un r\u00e9seau local, vers M4. D. R\u00e9cup\u00e9ration de paquets \u00b6 D\u00e9finition Le protocole du bit altern\u00e9 est un protocole de communication fonctionnant au niveau des trames (couche r\u00e9seau) . Il permet de retransmettre les trames qui ont \u00e9t\u00e9 perdues avec un syst\u00e8me d' acquittement cod\u00e9 sur 1 bit (dont la valeur va alterner entre les trames). sequenceDiagram participant c as Emetteur participant s as R\u00e9cepteur c->>s: Emission d'une trame avec le bit \u00e0 0 s->>c: C'est le bit attendu : ACK \u00e0 0 c->>s: Emission d'une trame avec le bit \u00e0 1 s->>c: C'est le bit attendu : ACK \u00e0 1 Si l'\u00e9metteur ne re\u00e7oit pas d'acquittement au bout d'un temps \\(t\\) , il renvoie la m\u00eame trame avant de passer \u00e0 la suivante.","title":"II. Le mod\u00e8le TCP/IP"},{"location":"1ere/seq6/tcpip/#ii-le-modele-tcpip","text":"","title":"II. Le mod\u00e8le TCP/IP"},{"location":"1ere/seq6/tcpip/#cours","text":"On consid\u00e8re le r\u00e9seau ci-dessous, et on veut savoir comment les diff\u00e9rentes machines peuvent communiquer entre elles. D\u00e9finition Elles utilisent des protocoles de communication : des ensembles de normes qui d\u00e9finissent comment \u00e9changer des informations entre machines.","title":"Cours"},{"location":"1ere/seq7/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq7/#programme","text":"","title":"Programme"},{"location":"1ere/seq7/complexite/","text":"body { text-align: justify} I. Complexit\u00e9 \u00b6 Cours \u00b6 A. La notion d'algorithme \u00b6 Rappel : Les algorithmes ont exist\u00e9 bien avant les programmes informatiques (cf Muhammad Al Khwarizmi, 9\u00e8me si\u00e8cle) . Ces deux notions, bien que li\u00e9es, sont donc diff\u00e9rentes. D\u00e9finition d'un algorithme suite d'instructions appliqu\u00e9e \u00e0 des donn\u00e9es, permettant de r\u00e9soudre un probl\u00e8me. Plus pr\u00e9cis\u00e9ment : on applique dans un ordre pr\u00e9cis des op\u00e9rations \u00e9l\u00e9mentaires \u00e0 des donn\u00e9es d'entr\u00e9e , pour obtenir un r\u00e9sultat en sortie . Compl\u00e9ter le sch\u00e9ma suivant : graph LR A[Valeurs d'entr\u00e9e] --> F[Suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires]; F --> G[Valeurs de sortie] Les valeurs d'entr\u00e9e sont aussi appel\u00e9es param\u00e8tres pour une fonction, et les valeurs de sortie correspondent au r\u00e9sultat de l'algorithme. La \"suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires\" est traditionnellement \u00e9crite en \"langage naturel\" ou pseudo-code : dans un format qui ressemble \u00e0 celui du code, mais n'utilisant pas la syntaxe d'un langage de programmation en particulier. Il peut alors \u00eatre traduit dans n'importe quel langage. B. Complexit\u00e9 d'un algorithme \u00b6 B.I. Co\u00fbt en temps et en m\u00e9moire \u00b6 L'informatique a longtemps \u00e9t\u00e9 limit\u00e9e par les ressources n\u00e9cessaires \u00e0 l'ex\u00e9cution des programmes : les ressources en m\u00e9moire et en temps . Un algorithme doit occuper de l'espace et met un certain temps \u00e0 s'ex\u00e9cuter : il est associ\u00e9 \u00e0 un co\u00fbt en m\u00e9moire et \u00e0 un co\u00fbt en temps . Les capacit\u00e9s en m\u00e9moire des ordinateurs d'aujourd'hui ont largement augment\u00e9 par rapport \u00e0 celles des machines du milieu du XX\u00e8me si\u00e8cle, elles ne limitent donc plus l'ex\u00e9cution d'algorithmes simples (elles restent cependant toujours d'actualit\u00e9 notamment pour les algorithmes d'apprentissage automatique, n\u00e9cessitant de grandes quantit\u00e9s de donn\u00e9es) . Dans ce cours, nous allons nous int\u00e9resser au co\u00fbt en temps des algorithmes. Le temps d'ex\u00e9cution d'un programme d\u00e9pend de la machine sur laquelle il est ex\u00e9cut\u00e9, et aussi du langage utilis\u00e9. Le co\u00fbt en temps d'un algorithme est calcul\u00e9 th\u00e9oriquement pour comparer les algorithmes, il ne d\u00e9pendra pas de ces choix techniques. Nous allons compter des op\u00e9rations \u00e9l\u00e9mentaires : toute op\u00e9ration faite par l'algorithme. B.II. Complexit\u00e9 en temps de la recherche d'occurrences \u00b6 Prenons pour exemples les algorithmes de comptage et de recherche d'occurrence. Exemple 1 fonction compte_occurrences ( tab , v ) 1 compteur <- 0 2 pour i allant de 0 \u00e0 longueur ( tab ) - 1 3 si tab [ i ] est \u00e9gal \u00e0 v : 4 compteur <- compteur + 1 renvoyer compteur Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme. La donner, quand cela est possible, en fonction de \\(n\\) : la longueur du tableau. Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 n 3 n 4 selon le nombre d'occurrences Quelles sont les instructions qui sont ex\u00e9cut\u00e9es le plus de fois ? Les lignes 2 et 3 sont ex\u00e9cut\u00e9es le plus de fois (incr\u00e9mentation de i et comparaison de tab[i] \u00e0 v ). La complexit\u00e9 en temps exacte de cet algorithme serait de \\(2n+compteur+1\\) , mais nous allons nous contenter d'un ordre de grandeur. Le co\u00fbt en temps de cet algorithme est proportionnel \u00e0 \\(n\\) : la longueur du tableau. Pour ex\u00e9cuter l'algorithme sur un tableau de taille 50, il faudra de l'ordre de 10 fois plus de temps que pour l'ex\u00e9cuter sur un tableau de taille 5. Exemple 2 fonction recherche_occurrence ( tab , v ): 1 trouve <- False 2 ind <- 0 3 tant que trouve est faux et ind < longueur ( tab ): 4 si tab [ ind ] est \u00e9gal \u00e0 v : 5 trouve <- True 6 sinon 7 ind <- ind + 1 renvoyer trouve Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme : Si v se trouve dans tab , en position j : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 j+1 4 j 5 1 6 j 7 j Si v ne se trouve pas dans tab : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 n+1 4 n 5 0 6 n 7 n Que peut-on en d\u00e9duire ? On peut en d\u00e9duire que le nombre d'op\u00e9rations \u00e9l\u00e9mentaires d\u00e9pend des donn\u00e9es. \\(j<=n\\) , donc on aura g\u00e9n\u00e9ralement beaucoup moins d'instructions ex\u00e9cut\u00e9e quand v est pr\u00e9sente dans tab . Pour conna\u00eetre les limites d'un algorithme, on s'int\u00e9resse \u00e0 la complexit\u00e9 dans le pire des cas (ici, le 2\u00e8me). Quel est l'ordre de grandeur de cette complexit\u00e9 dans le pire des cas ? Elle vaut 4n+3, elle est donc lin\u00e9aire par rapport \u00e0 \\(n\\) . Que peut-on conclure sur ces deux exemples (recherche et comptage d'occurrences) ? On peut en conclure que les deux algorithmes ont une complexit\u00e9 en temps similaire dans le pire des cas. B.III. Les types de complexit\u00e9 \u00b6 La complexit\u00e9 de l'algorithme impl\u00e9ment\u00e9 dans le programme suivant d\u00e9pend-elle de la taille des donn\u00e9es d'entr\u00e9e ? def mediane ( t ): ''' Entr\u00e9e t : liste d'entiers tri\u00e9e Sortie med : valeur m\u00e9diane, de type entier ''' med = t [ len ( t ) // 2 ] return med Solution La complexit\u00e9 ne d\u00e9pend pas de la taille des donn\u00e9es d'entr\u00e9e : dans tous les cas l'instruction ne sera ex\u00e9cut\u00e9e qu'une fois. La complexit\u00e9 est dite constante . Exprimer la complexit\u00e9 du programme suivant en fonction de \\(n\\) , la matrice m d'entr\u00e9e \u00e9tant de taille \\(n*n\\) . def somme_matrice ( m ): ''' Entr\u00e9e m : liste \u00e0 deux dimensions d'entiers Sortie : somme des \u00e9l\u00e9ments de m, de type entier ''' s = 0 n = len ( m ) for i in range ( n ): for j in range ( n ): s = s + m [ i ][ j ] return s Solution Pour chaque valeur de i, le corps de la boucle en j s'ex\u00e9cutera \\(n\\) fois. La boucle en i s'ex\u00e9cutant \\(n\\) fois aussi, l'instruction s=s+m[i][j] s'ex\u00e9cute \\(n^2\\) fois.*** La complexit\u00e9 est dite quadratique . B.IV. R\u00e9capitulatif \u00b6 On utilise la notation \"grand O\" pour indiquer que la complexit\u00e9 peut \u00eatre major\u00e9e par une fonction de r\u00e9f\u00e9rence, pour \\(n\\) suffisamment grand. Type Notation Exemple Constante \\(O(1)\\) renvoyer une valeur (sans parcours) Logarithmique \\(O(log(n))\\) exponentiation rapide Lin\u00e9aire \\(O(n)\\) parcours de tableau 1D Quadratique \\(O(n^2)\\) parcours de tableau 2D Les repr\u00e9senter sur le graphe suivant : TD : Complexit\u00e9 \u00b6 On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"I. Complexit\u00e9"},{"location":"1ere/seq7/complexite/#i-complexite","text":"","title":"I. Complexit\u00e9"},{"location":"1ere/seq7/complexite/#cours","text":"","title":"Cours"},{"location":"1ere/seq7/complexite/#td-complexite","text":"On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"TD : Complexit\u00e9"},{"location":"1ere/seq7/correction/","text":"body { text-align: justify} III. Correction d'un algorithme \u00b6 Cours \u00b6 Nous avons \u00e9tudi\u00e9 le co\u00fbt de deux algorithmes de tri, mais... font-ils bien ce qu'ils sont sens\u00e9s faire, c'est-\u00e0-dire trier ? A tous les coups ? L'\u00e9tude des algorithmes passe parce qu'on appelle la preuve de leur correction : qu'ils font le travail voulu ( preuve de correction ) et montrer qu'ils se terminent ( preuve de terminaison ) - sinon... aucune chance qu'ils fassent ce que l'on veut qu'ils fassent ! -. A. Correction \u00b6 D\u00e9finition Pour montrer qu'un algorithme est correct, on montre qu'une propri\u00e9t\u00e9 : - est vraie avant de rentrer dans la boucle, - reste vraie \u00e0 chaque it\u00e9ration de boucle. Si elle est vraie \u00e0 chaque fois, elle sera vraie... \u00e0 la fin. On parle d' invariant de boucle . La preuve de ces invariants se fait par r\u00e9currence qui est une notion math\u00e9matique que vous n'avez pas encore vue (nous n'allons donc pas faire les d\u00e9monstrations) . A.I. Algorithme de calcul de moyenne \u00b6 On consid\u00e8re la fonction suivante, qui doit calculer la moyenne des \u00e9l\u00e9ments de liste : def moyenne ( liste ) : t = 0 for i in range ( len ( liste )): t = t + liste [ i ] # assertion vraie \u00e0 cet endroit return t / len ( liste ) Que contient t apr\u00e8s chaque passage de boucle ? t contient les i+1 premiers \u00e9l\u00e9ments de liste . Que peut-on en conclure sur ce que contient t \u00e0 la fin de l'ex\u00e9cution de la boucle ? On peut en conclure qu'\u00e0 la fin de l'ex\u00e9cution de la boucle, t contient la somme des len(liste)-1+1 premiers \u00e9l\u00e9ments : donc tous les \u00e9l\u00e9ments de liste . t contient bien la valeur attendue, et on sait ce que renvoie len(liste) . Le r\u00e9sultat renvoy\u00e9 par la fonction est donc correct. L'invariant est qu'apr\u00e8s chaque it\u00e9ration de boucle i , t contient la somme des i+1 premiers \u00e9l\u00e9ments de liste . A.II. Les algorithmes de tri \u00b6 Exemple 1 : Le tri par s\u00e9lection On donne le code suivant, devant trier t avec l'algorithme du tri par s\u00e9lection : def tri_selection ( t ): n = len ( t ) for i in range ( n ): ind = i for j in range ( i + 1 , n ): if t [ j ] < t [ ind ]: ind = j if i != ind : tmp = t [ ind ] t [ ind ] = t [ i ] t [ i ] = tmp return t Les propri\u00e9t\u00e9s suivantes sont-elles vraies ou fausse ? A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 j est tri\u00e9. C'est faux, j sert \u00e0 trouver le minimum sur le sous-tableau i+1:n . A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i est tri\u00e9. C'est vrai, \u00e0 la fin de l'\u00e9tape i , on aura plac\u00e9 le minimum du sous-tableau i+1:n en position i , et les \u00e9l\u00e9ments d'avant seront tri\u00e9s. A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice i+1 \u00e0 n est tri\u00e9. C'est faux, ces indices sont parcourus dans la boucle en j , mais seul un \u00e9l\u00e9ment est s\u00e9lectionn\u00e9 : le minimum. Dans le cas particulier o\u00f9 i vaut n-1 , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9, donc tout le tableau est tri\u00e9 . Exemple 2 : Le tri par insertion On donne le code suivant, devant trier t avec l'algorithme du tri par insertion : def tri_insertion ( t ): n = len ( t ) for i in range ( 1 , n ): ref = t [ i ] j = i while j > 0 and ref < t [ j - 1 ]: t [ j ] = t [ j - 1 ] j = j - 1 t [ j ] = ref return t Les propri\u00e9t\u00e9s suivantes sont-elles vraies ou fausse ? A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i-1 est tri\u00e9. C'est vrai, les \u00e9l\u00e9ments d'indice inf\u00e9rieur \u00e0 i ont \u00e9t\u00e9 tri\u00e9s dans les \u00e9tapes pr\u00e9c\u00e9dentes. A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i est tri\u00e9. C'est vrai, l'\u00e9tape i sert \u00e0 placer l'\u00e9l\u00e9ments d'indice i . A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9. C'est faux, ce n'est pas valable pour chaque valeur de i mais uniquement lorsque i vaut n-1 . Dans le cas particulier o\u00f9 i vaut n-1 , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9, donc tout le tableau est tri\u00e9 . Conclusion \u00b6 Pour les deux algorithmes de tri, l' invariant est : \u00e0 la fin de chaque \u00e9tape i , le tableau est tri\u00e9 des indices 0 \u00e0 i . B. Terminaison \u00b6 Un algorithme ne peut pas \u00eatre correct, si on n'a pas l'assurance qu'il se termine . Pourquoi est-ce qu'on est s\u00fbr qu'un algorithme se termine lorsqu'il contient une boucle born\u00e9e ? Avec une boucle born\u00e9e, on ex\u00e9cute forc\u00e9ment la boucle un nombre fini de fois, connu \u00e0 l'avance. On sait que l'on va sortir de la boucle. Dans quel cas est-ce qu'on peut ne pas \u00eatre s\u00fbr de si un algorithme va se terminer ou non ? Lorsque l'on a une boucle non-born\u00e9e, on peut cr\u00e9er une boucle infinie. Que faut-il faire alors pour montrer que l'algorithme se termine bien ? Il faut montrer que l'on va sortir de la boucle non-born\u00e9e car, \u00e0 un moment donn\u00e9, sa condition ou une de ses conditions deviendra fausse. B.I. Tri par s\u00e9lection \u00b6 Nous avons vu que le tri par s\u00e9lection contenait 2 boucles born\u00e9es, donc il a toujours une complexit\u00e9 qui est du m\u00eame ordre de grandeur. Il se termine donc. B.II. Tri par insertion \u00b6 Le tri par insertion contient une boucle non-born\u00e9e, montrons qu'il se termine tout de m\u00eame. Extrait de son impl\u00e9mentation : ref = t [ i ] j = i while j > 0 and ref < t [ j - 1 ]: t [ j ] = t [ j - 1 ] j = j - 1 Quand est-ce que la condition j > 0 devient fausse ? Elle devient fausse lorsqu'on a parcouru tous les \u00e9l\u00e9ments de t jusqu'au premier : on arrive au bout du tableau. La valeur de j est d\u00e9cr\u00e9ment\u00e9e \u00e0 chaque it\u00e9ration de boucle, cette situation se produira donc si l'autre condition ne devient pas fausse avant. Quand est-ce que la condition ref < t[j-1] devient fausse ? Elle devient fausse lorsque l'on a trouv\u00e9 un \u00e9l\u00e9ment de t de valeur inf\u00e9rieure \u00e0 la r\u00e9f\u00e9rence t[i] . La valeur de t[j-1] est actualis\u00e9e \u00e0 chaque it\u00e9ration de boucle, car j est actualis\u00e9e. D\u00e9finition j est une valeur enti\u00e8re qui varie strictement \u00e0 chaque it\u00e9ration, c'est ce qu'on appelle un variant de boucle , qui permet de prouver la terminaison de l'algorithme. Ici, la premi\u00e8re condition deviendra forc\u00e9ment fausse si la deuxi\u00e8me condition n'est pas fausse avant : l'algorithme se termine. Synth\u00e8se \u00b6 Faire la preuve compl\u00e8te de la correction d'un algorithme sert \u00e0 prouver qu'il fait bien ce qu'on attend de lui dans tous les cas . Pour prouver : - sa correction , on cherche un invariant de boucle , - sa terminaison , on cherche un variant de boucle . TD \u00b6 La fonction suivante prend en arguments deux entiers positifs et renvoie leur produit. def produit ( a , b ): c = 0 i = 0 while i < b : # i = i + 1 c = c + a return c Quelle propri\u00e9t\u00e9 reste vraie \u00e0 chaque passage par la ligne marqu\u00e9e d'un # ? A \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 + 1) B \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 \u2212 1) C \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc56 D \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc4f On suppose qu'au d\u00e9but de l'ex\u00e9cution la variable K contient un entier positif non nul. Lequel des scripts suivants va boucler ind\u00e9finiment ? A i = K + 1 while i < K : i = i + 1 B i = K - 1 while i < K : i = i - 1 C i = K - 1 while i < K : i = i + 1 D i = K + 1 while i >= K : i = i - 1 \ud835\udc4e et \ud835\udc5a \u00e9tant deux entiers sup\u00e9rieurs \u00e0 1, la fonction suivante renvoie \\(a^m\\) . def puissance ( a , m ): p = 1 n = m q = a while n > 0 : # if n % 2 == 0 : q = q * q n = n // 2 else : p = q * p n = n - 1 return p Quelle est l'\u00e9galit\u00e9 qui est v\u00e9rifi\u00e9e \u00e0 chaque passage par la ligne marqu\u00e9e # ? A \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b\u22121 = \ud835\udc4e^\ud835\udc5a\\) B \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b = \ud835\udc4e^\ud835\udc5a\\) C \\(\ud835\udc5d \u00d7 \ud835\udc5e^{\ud835\udc5b+1} = \ud835\udc4e^\ud835\udc5a\\) D \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5a = \ud835\udc4e^\ud835\udc5b\\) Un algorithme de tri d\u2019une liste d\u2019entiers est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def trier ( L ) : for i in range ( len ( L )): indice_min = i for j in range ( i + 1 , len ( L )): if L [ j ] < L [ indice_min ] : indice_min = j L [ i ], L [ indice_min ] = L [ indice_min ], L [ i ] # assertion vraie \u00e0 cet endroit return L Parmi les assertions suivantes laquelle reste vraie \u00e0 chaque it\u00e9ration de la boucle, \u00e0 l'endroit indiqu\u00e9 ci-dessus ? A la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre d\u00e9croissant B la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre croissant C la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre d\u00e9croissant D la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre croissant","title":"III. Correction algorithmique"},{"location":"1ere/seq7/correction/#iii-correction-dun-algorithme","text":"","title":"III. Correction d'un algorithme"},{"location":"1ere/seq7/correction/#cours","text":"Nous avons \u00e9tudi\u00e9 le co\u00fbt de deux algorithmes de tri, mais... font-ils bien ce qu'ils sont sens\u00e9s faire, c'est-\u00e0-dire trier ? A tous les coups ? L'\u00e9tude des algorithmes passe parce qu'on appelle la preuve de leur correction : qu'ils font le travail voulu ( preuve de correction ) et montrer qu'ils se terminent ( preuve de terminaison ) - sinon... aucune chance qu'ils fassent ce que l'on veut qu'ils fassent ! -.","title":"Cours"},{"location":"1ere/seq7/correction/#td","text":"La fonction suivante prend en arguments deux entiers positifs et renvoie leur produit. def produit ( a , b ): c = 0 i = 0 while i < b : # i = i + 1 c = c + a return c Quelle propri\u00e9t\u00e9 reste vraie \u00e0 chaque passage par la ligne marqu\u00e9e d'un # ? A \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 + 1) B \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 \u2212 1) C \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc56 D \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc4f On suppose qu'au d\u00e9but de l'ex\u00e9cution la variable K contient un entier positif non nul. Lequel des scripts suivants va boucler ind\u00e9finiment ? A i = K + 1 while i < K : i = i + 1 B i = K - 1 while i < K : i = i - 1 C i = K - 1 while i < K : i = i + 1 D i = K + 1 while i >= K : i = i - 1 \ud835\udc4e et \ud835\udc5a \u00e9tant deux entiers sup\u00e9rieurs \u00e0 1, la fonction suivante renvoie \\(a^m\\) . def puissance ( a , m ): p = 1 n = m q = a while n > 0 : # if n % 2 == 0 : q = q * q n = n // 2 else : p = q * p n = n - 1 return p Quelle est l'\u00e9galit\u00e9 qui est v\u00e9rifi\u00e9e \u00e0 chaque passage par la ligne marqu\u00e9e # ? A \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b\u22121 = \ud835\udc4e^\ud835\udc5a\\) B \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b = \ud835\udc4e^\ud835\udc5a\\) C \\(\ud835\udc5d \u00d7 \ud835\udc5e^{\ud835\udc5b+1} = \ud835\udc4e^\ud835\udc5a\\) D \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5a = \ud835\udc4e^\ud835\udc5b\\) Un algorithme de tri d\u2019une liste d\u2019entiers est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def trier ( L ) : for i in range ( len ( L )): indice_min = i for j in range ( i + 1 , len ( L )): if L [ j ] < L [ indice_min ] : indice_min = j L [ i ], L [ indice_min ] = L [ indice_min ], L [ i ] # assertion vraie \u00e0 cet endroit return L Parmi les assertions suivantes laquelle reste vraie \u00e0 chaque it\u00e9ration de la boucle, \u00e0 l'endroit indiqu\u00e9 ci-dessus ? A la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre d\u00e9croissant B la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre croissant C la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre d\u00e9croissant D la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre croissant","title":"TD"},{"location":"1ere/seq7/tris/","text":"body { text-align: justify} II. Les algorithmes de tri \u00b6 TD : Trier un jeu de cartes \u00b6 La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Cours \u00b6 Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant . A. Le tri par s\u00e9lection \u00b6 A.I. Principe \u00b6 Le tri par s\u00e9lection consiste \u00e0 s\u00e9lectionner le minimum d'une partie du tableau de plus en plus petite \u00e0 chaque \u00e9tape, et \u00e0 l' \u00e9changer avec un \u00e9l\u00e9ment de r\u00e9f\u00e9rence. Principe Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 0 . On recherche le minimum de l'ensemble du tableau , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On recherche le minimum de l'ensemble du tableau moins celui d'indice 0 , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ainsi de suite jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment du tableau. A.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On fait une recherche de minimum \u00e0 chaque \u00e9tape sur une sous-partie du tableau. Il faut utiliser une autre boucle born\u00e9e, commen\u00e7ant juste apr\u00e8s l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence, et stocker l'indice du minimum trouv\u00e9 dans une variable. On formule le pseudo-code suivant : fonction tri_selection(tab) 1 pour i allant de 0 \u00e0 longueur(tab)-2 2 indice_minimum <- i 3 pour j allant de i+1 \u00e0 longueur(tab)-1 4 si tab[j] < tab[indice_minimum] 5 indice_minimum <- j 6 si indice_minimum est diff\u00e9rent de i 7 on \u00e9change tab[i] et tab[indice_minimum] renvoyer tab Entourer d'une couleur la partie qui permet de trouver, \u00e0 chaque it\u00e9ration, le minimum du sous-tableau, et d'une autre couleur celle qui fait l'\u00e9change entre l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence et le minimum trouv\u00e9. Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [1, 8, 10, 5, 2] Etape 2 : [1, 2, 10, 5, 8] Etape 3 : [1, 2, 5, 10, 8] Etape 4 : [1, 2, 5, 8, 10] A.III. Complexit\u00e9 \u00b6 Pour donner un ordre de grandeur de la complexit\u00e9, nous avons jusqu'\u00e0 pr\u00e9sent utilis\u00e9 l'instruction qui \u00e9t\u00e9 ex\u00e9cut\u00e9e le plus de fois. On compte traditionnellement l' op\u00e9ration qui est la plus effectu\u00e9e . Ici, il s'agit de l' op\u00e9ration de comparaison de la ligne 4. Sur notre exemple Etape 0 \u00e0 1 (i vaut 0) Il y a 4 comparaisons (5-8, 5-10, 5-1, 1-2). Etape 1 \u00e0 2 (i vaut 1) Il y a 3 comparaisons (8-10, 8-5, 5-2). Etape 2 \u00e0 3 (i vaut 2) Il y a 2 comparaisons (10-5, 5-8). Etape 3 \u00e0 4 (i vaut 3) Il y a 1 comparaison (10-8). En tout, il y a 1+2+3+4 comparaisons . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) comparaisons (vous pouvez faire le test pour un tableau de taille 6) . Une formule math\u00e9matique permet d'exprimer ce r\u00e9sultat plus simplement, retrouvons-la. Notons \\(S = 1+2+...+n-2+n-1\\) et notons \\(S' = n-1+n-2+...+2+1\\) Que vaut \\(S+S'\\) ? \\(n+n+...+n+n = n*(n-1)\\) Or \\(S+S'=2S\\) , donc \\(2S = n*(n-1)\\) et \\(S=n(n-1)/2\\) On peut donc dire que la complexit\u00e9 de ce tri est en \\((1/2)n^2-(1/2)n\\) . On obtient l' ordre de grandeur en ne retenant que la plus grande puissance de \\(n\\) . Complexit\u00e9 Le tri par s\u00e9lection a donc une complexit\u00e9 en \\(O(n^2)\\) , autrement dit quadratique . Nous avions dit que nous allions estimer la complexit\u00e9 dans le pire des cas , mais avons pris un cas quelconque pour tab dans notre exemple. Pourquoi ? Ici, on n'utilise que des boucles born\u00e9es. Il y a donc toujours autant de comparaisons, peu importe comment les valeurs sont plac\u00e9es dans le tableau. B. Tri par insertion \u00b6 B.I. Principe \u00b6 Le tri par insertion consiste \u00e0 ins\u00e9rer chaque \u00e9l\u00e9ment \u00e0 la bonne place dans une sous-partie du tableau d\u00e9j\u00e0 tri\u00e9e. Principe Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On le compare \u00e0 celui d'indice 0 et on les \u00e9change s'ils ne sont pas dans le bon ordre. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 2 . On le compare aux pr\u00e9c\u00e9dents, situ\u00e9s \u00e0 sa gauche, tant que l'on ne trouve pas d' \u00e9l\u00e9ment plus petit ou que l'on attend pas l'indice 0. Les \u00e9l\u00e9ments plus grands sont d\u00e9cal\u00e9s sur la droite, et on ins\u00e8re notre r\u00e9f\u00e9rence \u00e0 la bonne place dans le sous-tableau tri\u00e9. Ainsi de suite jusqu'au dernier \u00e9l\u00e9ment du tableau. B.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On compare la r\u00e9f\u00e9rence aux \u00e9l\u00e9ments \u00e0 sa gauche, tant que l'on n'a pas trouv\u00e9 sa bonne place. On utilise une boucle non-born\u00e9e qui s'arr\u00eate quand une des deux conditions n'est plus remplie. A ce moment, on a l'indice de la bonne place pour l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On formule le pseudo-code suivant : fonction tri_insertion(tab) 1 pour i allant de 1 \u00e0 longueur(tab)-1 2 val_i <- tab[i] 3 j <- i 4 tant que j>0 et tab[j-1] > val_i 5 tab[j] <- tab[j-1] 6 j <- j-1 7 tab[j] <- val_i renvoyer tab Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [5, 8, 10, 1, 2] Etape 2 : [5, 8, 10, 1, 2] Etape 3 : [1, 5, 8, 10, 2] Etape 4 : [1, 2, 5, 8, 10] B.III. Complexit\u00e9 \u00b6 Pour estimer la complexit\u00e9 de ce tri, nous allons compter le nombre de d\u00e9calages faits \"sur la droite\" (on ne compte pas le placement de la r\u00e9f\u00e9rence) . Le nombre est-il le m\u00eame, pour n'importe quel tableau que l'on trie ? Non, mieux le tableau d'entr\u00e9e est d\u00e9j\u00e0 tri\u00e9, moins il y aura de d\u00e9calage \u00e0 faire. Quel tableau correspond alors au pire des cas , celui qui n\u00e9cessite le plus d'op\u00e9rations ? Le tableau tri\u00e9 \"\u00e0 l'envers\" correspond au pire des cas. Prenons l'exemple du tri du tableau [5, 4, 3, 2, 1] Etape 0 \u00e0 1 (i vaut 1) -> [4, 5, 3, 2, 1] Il y a 1 d\u00e9calage (5->4). Etape 1 \u00e0 2 (i vaut 2) -> [3, 4, 5, 2, 1] Il y a 2 d\u00e9calages (5->3, 4->5). Etape 2 \u00e0 3 (i vaut 3) -> [2, 3, 4, 5, 1] Il y a 3 d\u00e9calages (5->2, 4->5, 3->4). Etape 3 \u00e0 4 (i vaut 4) -> [1, 2, 3, 4, 5] Il y a 4 d\u00e9calages (5->1, 4->5, 3->4, 2->3). En tout, il y a \\(1+2+3+4\\) d\u00e9calages . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) d\u00e9calages, donc le m\u00eame r\u00e9sultat que pour le premier tri. Complexit\u00e9 La complexit\u00e9 dans le pire des cas du tri par insertion est en \\(O(n^2)\\) , soit quadratique . Conclusion \u00b6 Ces deux algorithmes de tri sont donc comparables dans le pire des cas. Le tri par insertion sera tout de m\u00eame plus efficace pour des donn\u00e9es d\u00e9j\u00e0 partiellement tri\u00e9es, alors que ce param\u00e8tre ne change rien au co\u00fbt du tri par s\u00e9lection. La taille des tableaux en entr\u00e9e a donc un plus grand impact sur l'ex\u00e9cution de ces algorithmes que lorsque l'on veut simplement y rechercher une valeur (algorithme de complexit\u00e9 lin\u00e9aire). Si on multiple la taille d'un tableau par 2 , le trier prendra 4 fois plus de temps. TP : Les tris s\u00e9lection et insertion \u00b6 Echauffement \u00b6 Pour nous aider pour la suite, nous allons commencer par r\u00e9-impl\u00e9menter des algorithmes d\u00e9j\u00e0 vus. Ecrire une fonction prenant en param\u00e8tre un tableau t et renvoyant l'indice de son minimum : def mini ( t ): ind = ... #\u00e0 compl\u00e9ter return ind assert mini ([ 7 , 3 , 8 , 12 ]) == 1 Ecrire une fonction prenant en param\u00e8tres deux variables a et b et \u00e9changeant leurs valeurs ( a doit contenir la valeur de b , et b la valeur de a ) : def echange_valeurs ( a , b ): #\u00e0 compl\u00e9ter return a , b assert echange_valeurs ( 1 , 100 ) == ( 100 , 1 ) A. Le tri s\u00e9lection \u00b6 Le tri s\u00e9lection permet de trier un tableau de nombres (entiers ou flottants) quelconque, en appliquant l'algorithme suivant : On parcourt le tableau par indice de 0 \u00e0 la longueur du tableau-2 - on recherche le minimum du tableau entre cette position courante et la fin du tableau - on \u00e9change alors les 2 valeurs Visualiser cet algorithme sur un exemple en cliquant ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html puis sur \"Trier\". Pour impl\u00e9menter le tri par s\u00e9lection, nous allons d'abord coder des sous-fonctions qui vont faire une partie du travail, et qu'il faudra mettre ensemble. Modifier la fonction mini \u00e9crire en question 1 de l'\u00e9chauffement, pour \u00e9crire une fonction renvoyant l'indice du minimum d'un tableau t \u00e0 partir d'un indice debut : def minimum ( t , debut ): ind = ... #\u00e0 compl\u00e9ter return ind assert minimum ([ 7 , 1 , 8 , 12 ], 0 ) == 1 assert minimum ([ 7 , 1 , 8 , 12 ], 2 ) == 2 Modifier la fonction echange_valeurs \u00e9crite en question 2 de l'\u00e9chauffement pour obtenir une fonction \u00e9changeant les \u00e9l\u00e9ments situ\u00e9s aux indices ind1 et ind2 d'un tableau t . def echange ( t , ind1 , ind2 ): #\u00e0 compl\u00e9ter return t assert echange ([ 2 , 8 , 10 , 1 ], 0 , 2 ) == [ 10 , 8 , 2 , 1 ] Compl\u00e9ter la fonction selection effectuant le tri s\u00e9lection , impl\u00e9mentant l'algorithme \u00e9nonc\u00e9 plus haut en utilisant les fonctions minimum et echange . N.B.: Apr\u00e8s avoir ex\u00e9cut\u00e9 la d\u00e9finition de ces fonctions dans les cellules plus haut, vous pouvez utiliser les fonctions dans une autre cellule. def selection ( t ): for i in range ( len ( t ) - 1 ): #recherche du minimum \u00e0 partir de i - appeler la fonction minimum et stocker le r\u00e9sultat dans une variable min_ind ... #\u00e9change, si besoin if i != min_ind : ... # appeler la fonction echange return t assert selection ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] B. Le tri par insertion \u00b6 Le tri par insertion fonctionne selon l'algorithme suivant : On parcourt le tableau par indice de 1 \u00e0 la longueur du tableau-1 - on d\u00e9cale sur la droite tous les \u00e9l\u00e9ments sup\u00e9rieurs \u00e0 l'\u00e9l\u00e9ment \u00e0 l'indice consid\u00e9r\u00e9, - on trouve la position pour cet \u00e9l\u00e9ment, soit en arrivant au bout du tableau, soit lorsque l'on rencontre un \u00e9l\u00e9ment inf\u00e9rieur. On place alors notre \u00e9l\u00e9ment. Visualiser cet algorithme sur un exemple en cliquant ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html puis sur \"Trier\". Impl\u00e9menter la fonction tri_insertion \u00e0 partir du pseudo-code ci-dessous : pour i allant de 1 \u00e0 len ( tab ) - 1 val_i <- tab [ i ] j <- i tant que j est sup\u00e9rieur \u00e0 0 et val_i est inf\u00e9rieur \u00e0 tab [ j - 1 ] on d\u00e9place tab [ j - 1 ] \u00e0 la place de tab [ j ] # d\u00e9calage sur la droite on d\u00e9cr\u00e9mente j si j est diff\u00e9rent de i on d\u00e9place val_i \u00e0 la place de tab [ j ] def tri_insertion ( t ): #\u00e0 compl\u00e9ter return t assert tri_insertion ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] Pour aller plus loin... \u00b6 Impl\u00e9menter le tri s\u00e9lection sans utiliser de sous-fonctions, mais en \u00e9crivant tout le code dans le corps de tri_selection . def tri_selection ( t ): #\u00e0 compl\u00e9ter return t assert tri_selection ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] TP : Co\u00fbt en temps des tris par s\u00e9lection et par insertion \u00b6 Cr\u00e9er un nouveau fichier Python dans votre dossier NSI, et le nommer TP_Complexite_Tris.py . A. Le pire des cas \u00b6 Nous allons commencer par \u00e9tudier la complexit\u00e9 des tris dans le pire des cas : lors que le tableau est tri\u00e9 dans l'ordre inverse, ici l'ordre d\u00e9croissant. L'objectif est de comparer les deux algorithmes. A.I. Le tri par s\u00e9lection \u00b6 Utiliser une fonction impl\u00e9mentant le tri par s\u00e9lection . Cr\u00e9er un tableau t1 par compr\u00e9hension, de la mani\u00e8re suivante : t1 = [200-i for i in range(200)] . Importer la fonction time de la biblioth\u00e8que time en haut de votre programme pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction tri_selection lorsqu'elle prend t1 en param\u00e8tre, en millisecondes et reporter la valeur de tps sur le graphique ci-dessous : debut = time () r1 = tri_selection ( t1 ) tps = ( time () - debut ) * 1000 Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 400. Lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : pour chaque \u00e9l\u00e9ment d'indice i , affecter 400-i . Reporter la valeur de temps obtenue sur le graphique. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 600, 800, et 1000 (ils doivent \u00eatre non-tri\u00e9s comme t1 et t2 ) et tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Quel type de complexit\u00e9 a le tri par s\u00e9lection ? ......................................................... A.II. Le tri par insertion \u00b6 Refaire exactement la m\u00eame chose pour le tri par insertion et placer les points sur la courbe de la question A.I.4 en ajoutant une l\u00e9gende : - impl\u00e9menter l'algorithme (et garder la fonction dans votre script pour la suite) , - relever son temps d'ex\u00e9cution pour des tableaux non-tri\u00e9s d'une taille variant de 200 \u00e0 1000. B. Le meilleur des cas \u00b6 Faisons \u00e0 pr\u00e9sent les m\u00eames calculs, mais dans le meilleur des cas : lorsque le tableau est d\u00e9j\u00e0 tri\u00e9. A priori, nos algorithmes n'ont rien \u00e0 faire, mais l'ordinateur ne le sait pas. B.I. Le tri par s\u00e9lection \u00b6 Cr\u00e9er un tableau t1 par compr\u00e9hension, de la mani\u00e8re suivante : t1 = [i for i in range(200)] . Les valeurs de t1 seront alors rang\u00e9es dans l'ordre. Appliquer le m\u00eame script qu'\u00e0 la question A.I.4. pour obtenir la nouvelle valeur de tps et indiquer cette valeur sur le graphique suivant : R\u00e9it\u00e9rer les \u00e9tapes pour avoir les valeurs correspondant \u00e0 des tableaux de taille 400 , 600 , 800 et 1000 , comme dans la partie pr\u00e9c\u00e9dente. B.II. Le tri par insertion \u00b6 Refaire la m\u00eame chose pour le tri par insertion, et placer les points sur le graphique de la partie B.I.. Conclusion \u00b6 Que peut-on dire sur la performance de ces deux algorithmes de tri ?","title":"II. Les tris"},{"location":"1ere/seq7/tris/#ii-les-algorithmes-de-tri","text":"","title":"II. Les algorithmes de tri"},{"location":"1ere/seq7/tris/#td-trier-un-jeu-de-cartes","text":"La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e.","title":"TD : Trier un jeu de cartes"},{"location":"1ere/seq7/tris/#cours","text":"Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant .","title":"Cours"},{"location":"1ere/seq7/tris/#tp-les-tris-selection-et-insertion","text":"","title":"TP : Les tris s\u00e9lection et insertion"},{"location":"1ere/seq7/tris/#tp-cout-en-temps-des-tris-par-selection-et-par-insertion","text":"Cr\u00e9er un nouveau fichier Python dans votre dossier NSI, et le nommer TP_Complexite_Tris.py .","title":"TP : Co\u00fbt en temps des tris par s\u00e9lection et par insertion"},{"location":"1ere/seq8/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq8/#programme","text":"","title":"Programme"},{"location":"1ere/seq8/gloutons/","text":"body { text-align: justify} I. Les algorithmes gloutons \u00b6 TD : Le probl\u00e8me du rendu de monnaie \u00b6 Un distributeur automatique doit pouvoir rendre la monnaie sur une somme donn\u00e9e par un utilisateur. Pour arranger celui-ci, on veut rendre la monnaie avec un nombre minimal de pi\u00e8ces. On utilise un syst\u00e8me mon\u00e9taire simplifi\u00e9, constitu\u00e9 des pi\u00e8ces suivantes : 200, 100, 50, 20, 10, 5, 2, et 1 euro. A. Etude du probl\u00e8me \u00b6 Proposer deux fa\u00e7ons de rendre la monnaie sur la somme 43. Quelle solution est optimale ? Quelles sont les donn\u00e9es d'entr\u00e9e de notre probl\u00e8me ? La sortie ? Quel type de variable utiliser pour stocker ces informations ? Compl\u00e9ter le sch\u00e9ma suivant avec les entr\u00e9es et sorties du probl\u00e8me trait\u00e9. graph LR ....................... --> F[algorithme]; ........................ --> F; F --> ...................... B. Principe de l'algorithme \u00b6 D\u00e9finition La solution tr\u00e8s souvent utilis\u00e9e pour r\u00e9soudre ce probl\u00e8me est celle de l' algorithme glouton : un algorithme qui fait le \"meilleur\" choix \u00e0 chaque \u00e9tape . On esp\u00e8re qu'au final, on trouvera la meilleure solution globale . Compl\u00e9ter la description de l'algorithme qui convient \u00e0 notre cas : On cherche \u00e0 minimiser une quantit\u00e9 : le nombre de pi\u00e8ces . On choisit donc les pi\u00e8ces les plus petites / grandes possibles, de valeur inf\u00e9rieure \u00e0 la somme qu'il reste \u00e0 rendre, jusqu'\u00e0 avoir compl\u00e8tement rendu la monnaie. Le meilleur choix consiste donc ici \u00e0 minimiser / maximiser la valeur de la pi\u00e8ce choisie \u00e0 chaque \u00e9tape. V\u00e9rifier qu'en appliquant cet algorithme pour rendre la somme de 36, avec le syst\u00e8me mon\u00e9taire indiqu\u00e9 plus haut, on obtient une solution optimale. On consid\u00e8re les pi\u00e8ces de la plus grande \u00e0 la plus petite, donc dans l'ordre : [200, 100, 50, 20, 10, 5, 2, 1]. On commence par consid\u00e9rer la premi\u00e8re, et on passe \u00e0 la suivante si sa valeur d\u00e9passe celle de la somme \u00e0 rendre. D\u00e9tailler l'\u00e9volution des valeurs indiqu\u00e9es dans le tableau suivant, lorsqu'on applique l' algorithme glouton pour rendre la somme de 36 : Somme \u00e0 rendre Pi\u00e8ce Pi\u00e8ce <= Somme \u00e0 rendre Pi\u00e8ces utilis\u00e9es 46 200 False [] C. Formulation de l'algorithme \u00b6 Sait-on \u00e0 l'avance combien d'\u00e9tapes seront n\u00e9cessaires pour faire le rendu ? En d\u00e9duire l'\u00e9l\u00e9ment de programmation qu'il faut utiliser. A chaque \u00e9tape (comme celles d\u00e9taill\u00e9es dans la partie B) , on distingue deux cas. Quels sont-ils ? Que fait-on dans chacun de ces cas ? Proposer une formulation de l'algorithme glouton sous la forme d'un pseudo-code. Se connecter \u00e0 Capytale et entrer le code a716-1682862 . Compl\u00e9ter la fonction rendu_glouton prenant en param\u00e8tres les deux entr\u00e9es identifi\u00e9es, et renvoyant une sortie. V\u00e9rifier que l'assertion correspondant \u00e0 l'appel rendu_glouton(36, [200, 100, 50, 20, 10, 5, 2, 1]) fonctionne bien. Le syst\u00e8me imp\u00e9rial utilise les pi\u00e8ces de valeurs suivantes : 30, 24, 12, 6, 3, 1. Appeler rendu_glouton pour rendre la valeur 48 avec ce syst\u00e8me de monnaie. Obtient-on le r\u00e9sultat optimal ? TD : Le probl\u00e8me du sac \u00e0 dos \u00b6 Introduction \u00b6 Un voleur rentre dans une maison et dispose de peu de temps pour collecter son butin. Il dispose d'un sac \u00e0 dos pour mettre les objets qu'il trouvera, pouvant supporter une masse maximale de 10 kg. Il veut maximiser la valeur totale des objets mis dans son sac. L'objectif est de d\u00e9finir un algorithme permettant d'optimiser cette valeur totale , en respectant la contrainte de la masse maximale que le sac peut supporter. Objet Ordinateur Collier Guitare Vase Cha\u00eene Hi-Fi Num\u00e9ro 0 1 2 3 4 Valeur (euros) 800 100 500 60 500 Masse (kg) 4 0.15 4 1.85 7 ................................... (partie B) A. Un premier algorithme \u00b6 Une premi\u00e8re m\u00e9thode pour remplir le sac serait de tester toutes les possibilit\u00e9s et de s\u00e9lectionner la meilleure. Expliquer comment faire, en appliquant cette m\u00e9thode, pour trouver la solution optimale. Le choix de chaque objet est binaire : il est choisi ou il ne l'est pas. Combien de possibilit\u00e9s y a-t-il (sans consid\u00e9rer pour l'instant la contrainte de la masse totale) avec 5 objets ? Combien y en aurait-il avec 100 objets ? Que peut-on en conclure sur la dur\u00e9e d'ex\u00e9cution d'un tel algorithme ? Appliquer cet algorithme dans notre cas, en ne donnant que les possibilit\u00e9s permettant de rester en-dessous de la masse maximale de 10 kg. B. Un algorithme glouton \u00b6 Utiliser un algorithme glouton permet de limiter le nombre d'op\u00e9rations. Pourquoi peut-on dire cela ? Entre l'ordinateur et la guitare, quel choix conseilleriez-vous au voleur ? Pourquoi ? M\u00eame question pour choisir entre la guitare et la cha\u00eene hi-fi. Pour appliquer un algorithme glouton, il faut optimiser (maximiser ou minimiser) un crit\u00e8re. Plusieurs crit\u00e8res sont possibles ici, s\u00e9lectionner celui qui vous semble le plus pertinent dans la liste ci-dessous : Choisir d'abord l'objet ayant la plus grande / la plus petite valeur . Choisir d'abord l'objet le plus lourd / le plus l\u00e9ger . Choisir d'abord l'objet ayant la valeur massique, c'est-\u00e0-dire le rapport le plus grand / le plus petit . Prendre le plus d'objets possible. Rajouter, dans le tableau de l'introduction, sur la derni\u00e8re ligne, la valeur massique. Comment serait-il judicieux de classer les objets ? Associer chaque objet \u00e0 leur nouveau num\u00e9ro, apr\u00e8s avoir fait ce classement. Appliquer l'algorithme glouton ajoutant les objets un \u00e0 un, en maximisant le rapport de l'objet. Objets ajout\u00e9s en maximisant la valeur massique : C. Impl\u00e9mentation de l'algorithme \u00b6 Quelles sont les donn\u00e9es d'entr\u00e9e du probl\u00e8me qu'il faut stocker ? Quel type de variable utiliser pour le faire ? Jusqu'\u00e0 quand choisit-on un nouvel objet \u00e0 mettre dans le sac ? En d\u00e9duire l'\u00e9l\u00e9ment de programmation \u00e0 utiliser. Quel est le r\u00e9sultat qu'il faut renvoyer en sortie ? Comment stocker cette information ? En d\u00e9duire un pseudo-code de l'algorithme. On suppose les objets tri\u00e9s par valeur massique d\u00e9croissante. Se connecter \u00e0 Capytale et entrer le code a716-1682862 . Compl\u00e9ter la fonction sac_a_dos en traduisant ce pseudo-code en Python. Dans le test donn\u00e9, les valeurs et les masses de notre probl\u00e8me ont \u00e9t\u00e9 tri\u00e9es \u00e0 la main par valeur massique d\u00e9croissante. V\u00e9rifier que la fonction est correcte gr\u00e2ce \u00e0 l'assertion. Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Un algorithme glouton est un algorithme optimisant un crit\u00e8re \u00e0 chaque \u00e9tape, sans se soucier des cons\u00e9quences sur la solution globale obtenue quand l'algorithme se termine. Il fait le choix le plus optimis\u00e9 \u00e0 chaque \u00e9tape : cela peut consister \u00e0 maximiser une quantit\u00e9 ou \u00e0 la minimiser , en fonction du probl\u00e8me. La quantit\u00e9 consid\u00e9r\u00e9e d\u00e9pend aussi du probl\u00e8me, et plusieurs quantit\u00e9s peuvent \u00eatre choisies (comme dans le probl\u00e8me du sac \u00e0 dos) . B. Exemples de probl\u00e8mes \u00b6 B.1. Le probl\u00e8me du rendu de monnaie \u00b6 Formulation du probl\u00e8me \u00b6 On veut rendre la monnaie sur une somme donn\u00e9e, en utilisant le moins de pi\u00e8ces possible , dont les valeurs appartiennent \u00e0 un syst\u00e8me de monnaie . On suppose que l'on peut rendre la monnaie de mani\u00e8re exacte avec le syst\u00e8me de monnaie. Algorithme glouton pour le r\u00e9soudre \u00b6 Crit\u00e8re choisi On maximise la valeur de chaque pi\u00e8ce choisie, en restant en-dessous de la valeur \u00e0 rendre. Pseudo-code Entr\u00e9es : un entier somme un syst\u00e8me de monnaie pieces Sortie : un tableau de pieces pieces_rendues, tri\u00e9es par valeurs d\u00e9croissantes pieces_rendues <- liste vide i <- 0 # indice de la premi\u00e8re pi\u00e8ce somme_a_rendre <- somme # ce qu'il reste \u00e0 rendre tant que somme_a_rendre diff\u00e9rente de 0 si pieces[i] sup\u00e9rieure \u00e0 somme_a_rendre on incr\u00e9mente i sinon on ajoute pieces[i] au tableau pieces_rendues on enl\u00e8ve pieces[i] \u00e0 l'entier somme_a_rendre Cet algorithme se termine-t-il ? Justifier. Cet algorithme se termine car on a suppos\u00e9 que l'on pouvait rendre la monnaie avec notre syst\u00e8me de monnaie, donc somme_a_rendre va d\u00e9cr\u00e9menter jusqu'\u00e0 la valeur 0. Cet algorithme est-il toujours optimal ? De quoi cela d\u00e9pend-il ? Cet algorithme n'est pas toujours optimal, cela d\u00e9pend du syst\u00e8me de monnaie utilis\u00e9. Il est optimal pour le syst\u00e8me des euros. On appelle canonique un syst\u00e8me de monnaie qui permet de rendre une somme de mani\u00e8re optimale avec un algorithme glouton . B.2. Le probl\u00e8me du sac \u00e0 dos \u00b6 Formulation du probl\u00e8me \u00b6 On veut remplir un sac \u00e0 dos avec des objets ayant une valeur et une masse. On veut que le sac contienne la valeur totale la plus grande possible, et sa masse ne peut pas d\u00e9passer une masse maximale donn\u00e9e. Algorithme glouton pour le r\u00e9soudre \u00b6 Crit\u00e8re choisi On peut choisir de maximiser la valeur de chaque objet, ou bien (version plus optimale) de maximiser le rapport \\(valeur/masse\\) , soit la valeur massique. Pseudo-code On suppose les objets d\u00e9j\u00e0 tri\u00e9s selon le crit\u00e8re que l'on a choisi : les \u00e9l\u00e9ments des tableaux des masses et des valeurs sont rang\u00e9s dans l'ordre optimal pour note algorithme glouton. Entr\u00e9es : le tableau des valeurs des objets le tableau des masses des objets la masse_maximale du sac Sortie : le tableau des objets \u00e0 mettre dans le sac objets <- tableau vide masse_sac <- 0 pour chaque objet d'indice i si masses[i] + masse_sac inf\u00e9rieure \u00e0 masse_maximale on ajoute i au tableau objets on ajoute masse[i] \u00e0 masse_sac Complexit\u00e9 : Quelle est la complexit\u00e9 de cet algorithme ?\" Cet algorithme a une complexit\u00e9 lin\u00e9aire par rapport au nombre d'objets. Ce probl\u00e8me du sac \u00e0 dos est un probl\u00e8me particulier : c'est un probl\u00e8me difficile \u00e0 r\u00e9soudre de mani\u00e8re optimale, et plusieurs autres probl\u00e8mes peuvent se ramener \u00e0 lui. Exemples choisir les projets les plus rentables que doit choisir une entreprise (les projets n'ont pas une masse et une valeur mais un temps de r\u00e9alisation et un gain et la masse maximale correspond ici \u00e0 au temps de travail maximal ), dans la d\u00e9coupe de mat\u00e9riaux, pour minimiser les pertes (les mat\u00e9riaux ont eux une surface et une valeur ), charger une cargaison (avions, camions, bateaux...) de mani\u00e8re optimale. Conclusion \u00b6 Les algorithmes gloutons ne fournissent pas toujours une solution optimale \u00e0 un probl\u00e8me, mais s'en approchent souvent et permettent de r\u00e9duire la complexit\u00e9 d'algorithmes plus na\u00effs qui exploreraient toutes les possibilit\u00e9s.","title":"I. Les algorithmes gloutons"},{"location":"1ere/seq8/gloutons/#i-les-algorithmes-gloutons","text":"","title":"I. Les algorithmes gloutons"},{"location":"1ere/seq8/gloutons/#td-le-probleme-du-rendu-de-monnaie","text":"Un distributeur automatique doit pouvoir rendre la monnaie sur une somme donn\u00e9e par un utilisateur. Pour arranger celui-ci, on veut rendre la monnaie avec un nombre minimal de pi\u00e8ces. On utilise un syst\u00e8me mon\u00e9taire simplifi\u00e9, constitu\u00e9 des pi\u00e8ces suivantes : 200, 100, 50, 20, 10, 5, 2, et 1 euro.","title":"TD : Le probl\u00e8me du rendu de monnaie"},{"location":"1ere/seq8/gloutons/#td-le-probleme-du-sac-a-dos","text":"","title":"TD : Le probl\u00e8me du sac \u00e0 dos"},{"location":"1ere/seq8/gloutons/#cours","text":"","title":"Cours"},{"location":"1ere/seq8/recherche_dichotomique/","text":"body { text-align: justify} II. La recherche dichotomique \u00b6 Cours \u00b6 Nous avons vu un algorithme de recherche d'\u00e9l\u00e9ment dans un tableau, parcourant tous ces \u00e9l\u00e9ments jusqu'\u00e0 trouver celui qui est recherch\u00e9. Nous avons vu que sa complexit\u00e9 \u00e9tait en \\(O(n)\\) Cet algorithme n'a pas une complexit\u00e9 optimale. On suppose que l'on a appliqu\u00e9 un algorithme de tri au tableau, avant de faire la recherche. L'algorithme de recherche dichotomique permet de faire une recherche plus efficacement. A. Principe de l'algorithme \u00b6 Les \u00e9tapes de cet algorithme sont : Comparer l'\u00e9l\u00e9ment recherch\u00e9 avec la valeur du milieu du tableau : si les valeurs sont \u00e9gales , on a trouv\u00e9 l'indice de l'\u00e9l\u00e9ment recherch\u00e9, l'algorithme s'arr\u00eate. sinon si l'\u00e9l\u00e9ment recherch\u00e9 est plus grand que le milieu du tableau , on continue de chercher l'\u00e9l\u00e9ment dans la partie droite du tableau (o\u00f9 se trouvent les valeurs sup\u00e9rieures \u00e0 celle du milieu) . sinon , on continue de chercher l'\u00e9l\u00e9ment dans la partie gauche du tableau (o\u00f9 se trouvent les valeurs inf\u00e9rieures \u00e0 celle du milieu) . On consid\u00e8re le milieu de la partie du tableau qu'il nous reste, et on r\u00e9applique l'\u00e9tape 1, jusqu'\u00e0 ce qu'on ait trouv\u00e9 l'\u00e9l\u00e9ment ou que le tableau soit vide. Exemple La recherche de 8 dans le tableau [1, 3, 4, 8, 9, 10, 11, 16, 25] . Compl\u00e9ter le sch\u00e9ma suivant avec les comparaisons faites \u00e0 chaque \u00e9tape : B. Terminaison \u00b6 Nous avons vu le code de cet algorithme en TD. Pour montrer que l'algorithme se termine, il faut montrer que la boucle non-born\u00e9e va s'arr\u00eater. Extrait du pseudo-code tant que ind vaut -1 et debut inf\u00e9rieur ou \u00e9gal \u00e0 fin R\u00f4le de ind : stocker l'indice de l'\u00e9l\u00e9ment recherch\u00e9, ou bien -1 s'il n'est pas pr\u00e9sent. R\u00f4le de debut et fin : d\u00e9limiter les parties du tableau dans lesquelles on fait la recherche L'algorithme s'arr\u00eate si : - On trouve l'\u00e9l\u00e9ment , dans ce cas ind aura une valeur diff\u00e9rente de -1 et on sort de la boucle, - Dans le cas o\u00f9 l'\u00e9l\u00e9ment n'est pas pr\u00e9sent , il faut s'assurer que la quantit\u00e9 fin-debut devient strictement n\u00e9gative. Cette quantit\u00e9 est un variant de boucle , c'est-\u00e0-dire que sa valeur d\u00e9cro\u00eet \u00e0 chaque passage dans la boucle. Prenons l'exemple de la recherche de 7 dans le tableau de la partie A. Compl\u00e9ter comment la valeur des variables varie \u00e0 chaque \u00e9tape. fin-debut d\u00e9cro\u00eet \u00e0 chaque passage de boucle, et dans le pire des cas devient n\u00e9gative : on sort de la boucle. C. Complexit\u00e9 \u00b6 Lorsque la taille du tableau double, on ne fait qu'une seule comparaison en plus lorsque l'on fait la recherche d'\u00e9l\u00e9ment avec l' algorithme de recherche dichotomique . Exemple Recherche de 8 dans un tableau 2 fois plus grand que celui de la partie A. On ne rajoute qu'une \u00e9tape ! De mani\u00e8re g\u00e9n\u00e9rale, on cherche combien de fois il faut diviser par \\(2\\) pour n'avoir plus qu'une seule possibilit\u00e9 (c'est le pire des cas) . On cherche donc a tel que \\(n/2^a=1\\) . C'est-\u00e0-dire \\(2^a= n\\) La fonction \\(log_2\\) permet d'extraire \\(a\\) : \\(log_2(2^a) = log_2(n)\\) \\(a = log_2(n)\\) Sa complexit\u00e9 est donc en \\(O(log_2(n))\\) . Les donn\u00e9es devant \u00eatre tri\u00e9es avant d'appliquer l'algorithme de recherche dichotomique, la complexit\u00e9 totale de l'algorithme correspond au maximum des complexit\u00e9s entre celle de l'algorithme de tri utilis\u00e9 et \\(O(log_2(n))\\) .","title":"II. La recherche dichotomique"},{"location":"1ere/seq8/recherche_dichotomique/#ii-la-recherche-dichotomique","text":"","title":"II. La recherche dichotomique"},{"location":"1ere/seq8/recherche_dichotomique/#cours","text":"Nous avons vu un algorithme de recherche d'\u00e9l\u00e9ment dans un tableau, parcourant tous ces \u00e9l\u00e9ments jusqu'\u00e0 trouver celui qui est recherch\u00e9. Nous avons vu que sa complexit\u00e9 \u00e9tait en \\(O(n)\\) Cet algorithme n'a pas une complexit\u00e9 optimale. On suppose que l'on a appliqu\u00e9 un algorithme de tri au tableau, avant de faire la recherche. L'algorithme de recherche dichotomique permet de faire une recherche plus efficacement.","title":"Cours"},{"location":"1ere/seq9/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq9/#programme","text":"","title":"Programme"},{"location":"1ere/seq9/client_serveur/","text":"body { text-align: justify} II. Le mod\u00e8le client-serveur \u00b6 Cours \u00b6 A. D\u00e9finitions \u00b6 Pour obtenir une page Web, votre navigateur va faire une demande, une requ\u00eate au serveur Web sur lequel elle est stock\u00e9e. Qu'est-ce qu'un serveur Web ? C'est une machine capable de r\u00e9pondre \u00e0 des requ\u00eates de l'application Web. Elle stocke les pages Web d'un ou de plusieurs sites au(x)quel(s) des navigateurs peuvent se connecter. La page est localis\u00e9e, on sait o\u00f9 elle se trouve et sur quel serveur. Notre navigateur va entrer en connexion avec le serveur, selon le mod\u00e8le client-serveur : D\u00e9finitions Le client demande l'acc\u00e8s aux pages par une requ\u00eate. Le serveur r\u00e9pond \u00e0 cette requ\u00eate : si tout se passe bien il envoie le contenu des pages, sinon un message d'erreur. C'est une relation asym\u00e9trique, qui est la plus courante sur le Web. B. Exemples d'interactions entre client et serveur \u00b6 Il faut plusieurs \u00e9changes de requ\u00eates pour obtenir l'ensemble d'une page Web : sequenceDiagram participant c as Client participant s as Serveur c->>s: Puis-je avoir la ressource index.html ? s->>c: Oui, la voil\u00e0 c->>s: Il me faudrait aussi les images qui sont sur la page, svp s->>c: Ca arrive ! Ces \u00e9changes peuvent \u00eatre visualis\u00e9s gr\u00e2ce \u00e0 l' inspecteur de propri\u00e9t\u00e9s du navigateur (F12 sous Windows). C. Scripts c\u00f4t\u00e9 client et c\u00f4t\u00e9 serveur \u00b6 Un script c\u00f4t\u00e9 client sert \u00e0 rendre la page dynamique. Elle est ex\u00e9cut\u00e9e par le navigateur, pour ne pas surcharger de calculs le serveur. Le Javascript est le langage couramment utilis\u00e9. Un script c\u00f4t\u00e9 serveur est g\u00e9n\u00e9ralement utilis\u00e9 pour collecter ou modifier des donn\u00e9es qu'ils stocke dans une base. Le langage de programmation PHP est couramment utilis\u00e9. Les donn\u00e9es peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es par un formulaire, qui se d\u00e9clare en HTML avec la balise form , et contient des composants graphiques, comme par exemple : Voici un exemple de code PHP qui affiche les donn\u00e9es r\u00e9colt\u00e9es avec ce formulaire : <?php $login_connexion = $_GET [ 'login' ]; $mot_de_passe = $_GET [ 'password' ]; echo 'Les informations transmises au serveur sont :<br/>' ; echo $login_connexion ; echo '<br/>' ; echo $mot_de_passe ; ?> TP : Simulation d'un serveur Web \u00b6 En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher : A. Le r\u00e9seau \u00b6 a. Indiquer, parmi les diff\u00e9rents types de machines cit\u00e9es ci-dessous, si elles sont pr\u00e9sentes ou non sur notre r\u00e9seau : Ordinateur : Portable : Switch : Routeur : Modem : b. A quel type de machine correspond le serveur Web ? ...................................... Les configurations n\u00e9cessaires ont \u00e9t\u00e9 faites pour que l\u2019ordinateur \"Serveur Web\" soit connect\u00e9 aux autres r\u00e9seaux locaux. Obtenir l'adresse IP qui lui a \u00e9t\u00e9 attribu\u00e9e, en double-cliquant sur la machine : ...................................... Rappel SNT : L'adresse IP d'une machine sert \u00e0 l'identifier de mani\u00e8re unique sur un r\u00e9seau. Au format IPv4, elle est constitu\u00e9e de 4 nombres de 0 \u00e0 255. B. Mise en place du serveur \u00b6 Passer en mode simulation en cliquant sur la fl\u00e8che verte puis cliquer sur un des ordinateurs portables. Aller sur \"Installation des logiciels\", puis faire passer \"Ligne de commande\" dans la liste des logiciels install\u00e9s. Appliquer les modifications, puis cliquer sur ce logiciel \"Ligne de commande\". Tester la connexion entre cette machine et le serveur en tapant ping suivi de l'adresse IP du serveur Web relev\u00e9e dans la partie A. Cliquer sur \"Serveur Web\", puis sur Installation des logiciels. Dans la liste de droite, double-cliquer sur \"Explorateur de fichiers\" , \"Editeur de textes\" et \"Serveur web\" , puis sur \"Appliquer les modifications\". Double-cliquer sur l\u2019 explorateur de fichiers , aller dans le dossier webserver . C\u2019est ici que sont stock\u00e9s les fichiers codant la(les) page(s) web h\u00e9berg\u00e9e(s) sur le serveur. Noter le chemin d'acc\u00e8s \u00e0 index.html : .............................................................................. Quel autre fichier trouvez-vous ? ........................................................ Fermer l\u2019explorateur de fichiers et ouvrir l\u2019 \u00e9diteur de texte . Cliquer sur Fichier > Ouvrir et s\u00e9lectionner le fichier index.html dans le dossier webserver . La structure du contenu du fichier doit vous \u00eatre famili\u00e8re. Modifier le contenu de la page Web pour que s\u2019affiche : Dans le titre principal (balise <h2> ): \"La requ\u00eate HTTP\" Dans le premier paragraphe : \"Voici la page Web contenue sur le serveur. Nous allons y acc\u00e9der \u00e0 partir d'un client : un navigateur Web.\" Dans le deuxi\u00e8me paragraphe : \"Il faudra pour cela taper une URL commen\u00e7ant par le protocole utilis\u00e9 : http, puis indiquer l\u2019adresse IP du serveur\". Le reste peut rester inchang\u00e9. Cliquer sur Fichier > Enregistrer puis fermer l\u2019\u00e9diteur de texte. Double-cliquer sur le serveur web, puis sur D\u00e9marrer. La page Web sera alors accessible pour aux clients (les navigateurs). Fermer le logiciel. Double-cliquer sur un ordinateur portable puis sur \"Installation des logiciels\". Double-cliquer sur \"Navigateur Web\" dans la colonne \u00e0 droite, puis sur Appliquer les modifications. Double-cliquer sur le navigateur web, et entrer l\u2019 adresse IP du serveur web \u00e0 la suite du HTTP . Vous verrez interpr\u00e9t\u00e9e la page web dont le code se trouve dans le fichier index.html sur le serveur web. C. Visualisation des \u00e9changes \u00b6 En faisant un clic droit sur l\u2019ordinateur portable d\u2019o\u00f9 vous avez fait la requ\u00eate HTTP, cliquer sur \"Afficher les \u00e9changes de donn\u00e9es\" . Vous acc\u00e9dez \u00e0 une grande liste. Identifier une requ\u00eate HTTP : elle correspond \u00e0 la couche \u00ab Application \u00bb. Celles commen\u00e7ant par \u00ab GET /HTTP/\u00bb correspondent aux requ\u00eates du client , celles commen\u00e7ant par \u00ab HTTP \u00bb \u00e0 la r\u00e9ponse du serveur . Double-cliquer dessus pour voir le contenu des \u00e9changes.","title":"II. Le mod\u00e8le client-serveur"},{"location":"1ere/seq9/client_serveur/#ii-le-modele-client-serveur","text":"","title":"II. Le mod\u00e8le client-serveur"},{"location":"1ere/seq9/client_serveur/#cours","text":"","title":"Cours"},{"location":"1ere/seq9/client_serveur/#tp-simulation-dun-serveur-web","text":"En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher :","title":"TP\u00a0: Simulation d'un serveur Web"},{"location":"1ere/seq9/http_https/","text":"body { text-align: justify} Les requ\u00eates HTTP et HTTPS \u00b6 Cours \u00b6 Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS . A. Exemples de requ\u00eates utilis\u00e9es \u00b6 Exemple de requ\u00eate du client : GET index.html HTTP/1.1 Host : www.example.com Que demande le navigateur ? Il demande \u00e0 acc\u00e9der \u00e0 la page dont l'URL est http://www.example.com/index.html. Exemple de r\u00e9ponse du serveur : HTTP/1.1 200 OK Date : Tue, 2 Mar 2021 08:00:00 GMT Content-Type : text/html ; charset=UTF-8 Content-length : 983 Last-Modified : Wed, 1 Jan 2005 00:00:00 GMT < html > < head >< title > Une page de test </ title ></ head > < body > Un document tr\u00e8s simple. </ body > </ html > Que renvoie le serveur ? Il renvoie le code HTML de la page, ainsi que des informations compl\u00e9mentaires contenues dans l'ent\u00eate de la r\u00e9ponse : par exemple la date d'envoi, le type et la longueur du contenu, la date de sa derni\u00e8re modification. B. Les diff\u00e9rentes m\u00e9thodes \u00b6 Le GET est une m\u00e9thode : une demande au serveur d'effectuer une certaine action. Dans notre cas, d'acc\u00e9der \u00e0 une ressource. On peut demander diff\u00e9rentes actions au serveur : - POST permet d'envoyer des donn\u00e9es au serveur, pour qu'il les traite. - PUT permet de modifier des donn\u00e9es sur le serveur, - DELETE permet de supprimer des donn\u00e9es sur le serveur. Exemple de l'envoi d'un formulaire A partir des pages https://www.cahier-nsi.fr/formulaire1/ et /formulaire2/, r\u00e9cup\u00e9rant les informations suivantes : On peut envoyer des donn\u00e9es avec la m\u00e9thode GET. Cependant, celle-ci est \u00e0 la base faite pour en r\u00e9cup\u00e9rer (elle n'a pas de contenu !) . O\u00f9 les donn\u00e9es transmises apparaissent-elles alors ? Elles apparaissent dans l'URL. On envoie classiquement des donn\u00e9es avec la m\u00e9thode POST. Cette requ\u00eate a un contenu, qui peut stocker ces donn\u00e9es. Sont-elles accessibles ? Elles n'apparaissent pas dans l'URL, mais sont lisibles dans l'inspecteur de propri\u00e9t\u00e9s du navigateur. B. Le protocole HTTPS \u00b6 HTTPS est la version s\u00e9curis\u00e9e de HTTP. Comment remarque-t-on si la connexion avec un serveur web est s\u00e9curis\u00e9e ? On le remarque gr\u00e2ce au nom du protocole HTTPS indiqu\u00e9 dans l'URL, et \u00e0 l'apparition d'un cadenas dans le navigateur. Voici ce qu'il se passe lorsque l'on utilise HTTPS : sequenceDiagram participant c as Client participant s as Serveur c->>s: Je voudrais me connecter de mani\u00e8re s\u00e9curis\u00e9e. s->>c: D'accord, je vous envoie mon certificat SSL. c->>s: Ca me va, communiquons de mani\u00e8re chiffr\u00e9e. s->>c: C'est parti, maintenant que vous pouvez \u00eatre s\u00fbr que c'est bien moi. Qu'est-ce qu'une communication chiffr\u00e9e ? C'est une communication dont le contenu n'est pas imm\u00e9diatement d\u00e9chiffrable : il faut une information suppl\u00e9mentaire pour le comprendre, appel\u00e9e la cl\u00e9 de chiffrement.","title":"III. Les requ\u00eates HTTP et HTTPS"},{"location":"1ere/seq9/http_https/#les-requetes-http-et-https","text":"","title":"Les requ\u00eates HTTP et HTTPS"},{"location":"1ere/seq9/http_https/#cours","text":"Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS .","title":"Cours"},{"location":"1ere/seq9/interactions_js/","text":"body { text-align: justify} I. Interagir avec l'utilisateur \u00b6 Cours \u00b6 Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript . A. Int\u00e9grer du Javascript \u00e0 une page Web \u00b6 On a vu pr\u00e9c\u00e9demment que pour associer un fichier CSS \u00e0 un fichier HTML, il fallait ajouter la balise link dans l'ent\u00eate. Pour associer un fichier en Javascript , c'est-\u00e0-dire en .js , \u00e0 un fichier HTML, il faut aussi ajouter une balise dans ce fichier, comme sur l'exemple ci-dessous : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > </ body > < script src = \"script.js\" ></ script > </ html > Quel est le nom de la balise utilis\u00e9e ? La balise utilis\u00e9e est script . Quel est le nom du fichier \u00e9crit en Javascript ? Le nom du fichier est script.js . O\u00f9 se trouve la balise ? Elle se trouve ici apr\u00e8s la balise body (apr\u00e8s la balise fermante). B. R\u00e9pondre \u00e0 des \u00e9v\u00e8nements avec du Javascript \u00b6 B.I. Les \u00e9v\u00e8nements \u00b6 Le Javascript va nous permettre de r\u00e9pondre \u00e0 des \u00e9v\u00e8nements , c'est \u00e0 dire \u00e0 des actions de l'utilisateur . Comment l'utilisateur peut-il interagir avec une page ? Il peut interagir avec la souris ou le clavier (des p\u00e9riph\u00e9riques d'entr\u00e9e de la machine). Avec la souris, il peut cliquer, on passer sur un \u00e9l\u00e9ment d'une page. Il existe un certain nombre d' \u00e9v\u00e8nements en HTML, dont voici une liste non-exhaustive : Ev\u00e8nement Action onclick clic de souris sur un \u00e9l\u00e9ment onmouseover survol d'un \u00e9l\u00e9ment onmouseout fin du survol d'un \u00e9l\u00e9ment onkeydown appui d'une touche du clavier onload chargement de la page B.II. R\u00e9pondre aux \u00e9v\u00e8nements \u00b6 Pour r\u00e9pondre \u00e0 un \u00e9v\u00e8nement, comme un clic de souris sur un bouton, il faut associer l'\u00e9v\u00e8nement \u00e0 une action par l'interm\u00e9diaire d'une fonction \u00e9crite en Javascript . On ins\u00e8re un bouton sur la page HTML, et on l'associe \u00e0 une fonction : < button onclick = \"maFonction()\" > Cliquer ici </ button > Note : on peut aussi utiliser la balise input , associ\u00e9e au type button . La fonction maFonction doit \u00eatre \u00e9crite dans le fichier script.js . L'objectif de ce cours n'est pas que vous ma\u00eetrisiez le Javascript, mais que vous compreniez et sachiez modifier des codes simples. Note sur le Javascript : - Une variable var se d\u00e9clare avec le mot-cl\u00e9 let , et se modifie en utilisant var = expression . - On utilise la syntaxe suivante pour une condition : if (expression) {instructions} - Une fonction f se d\u00e9clare avec function f(param\u00e8tres) {instructions} Quelles diff\u00e9rences identifiez-vous avec la syntaxe utilis\u00e9e en Python ? Les blocs d'instructions ne sont pas rep\u00e9r\u00e9s par leur identation mais d\u00e9limit\u00e9s par des accolades. Les mots-cl\u00e9s utilis\u00e9s peuvent \u00eatre diff\u00e9rents, comme function \u00e0 la place de def en Python.*** B.III. Exemple d'action sur le HTML \u00b6 La fonction suivante est \u00e9crite en Javascript et permet de r\u00e9aliser une action sur notre page : function maFonction () { let maBalise = document . getElementById ( \"para1\" ); maBalise . classList . add ( \"special\" ); } Elle est associ\u00e9e au code HTML suivant (seul le body est repr\u00e9sent\u00e9) : < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > < p id = \"para1\" > Je veux changer l'apparence de ce paragraphe. </ p > < button onclick = \"maFonction()\" > Cliquer ici </ button > Le code HTML est associ\u00e9 au CSS suivant : h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } On a utilis\u00e9 la fonction getElementById pour s\u00e9lectionner un composant de la page HTML. Comment celui-ci est-il identifi\u00e9 ? Il est identifi\u00e9e par la valeur para1 , qui correspond \u00e0 l'identifiant d'un composant de notre page HTML. Analyser la deuxi\u00e8me ligne du corps de maFonction pour comprendre ce qu'elle fait (utiliser les noms des fonctions) . Elle ajoute le composant stock\u00e9 dans la variable maBalise \u00e0 la classe special . Que va-t-il se passer lorsque l'on cliquera sur le bouton ? La classe special \u00e9tant associ\u00e9e \u00e0 un style diff\u00e9rent, le contenu de para1 va alors s'afficher en bleu, italique, et en plus gros. C. Le Document Object Model (DOM) \u00b6 Si l'on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments d'une page HTML avec du Javascript, c'est gr\u00e2ce \u00e0 sa repr\u00e9sentation sous la forme d'une structure appel\u00e9e Document Object Model (DOM) . Il repr\u00e9sente hi\u00e9rarchiquement les diff\u00e9rentes balises d'une page HTML, qui deviennent, non plus juste du texte, mais un ensemble d'objets qui peuvent \u00eatre manipul\u00e9s. Ceux au-dessus des autres sont les \"parents\" des \u00e9l\u00e9ments \"enfants\". graph TB A(html) --> B(head) A --> C(body) B --> F(meta) C --> H(h1) C --> I(h2) C --> K(p) Gr\u00e2ce \u00e0 cette repr\u00e9sentation, on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments et les modifier gr\u00e2ce \u00e0 la biblioth\u00e8que JQuery (Javascript pour le Web). Remarque : Nous avons vu la fonction getElementById , permettant d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment par son id , mais il existe aussi : - getElementByClassName permettant d'acc\u00e9der aux \u00e9l\u00e9m\u00e9nts d'une classe , - getElementByTagName permettant d'acc\u00e9der \u00e0 tous les \u00e9l\u00e9ments d'un m\u00eame type ( p , h1 ,...) , - et encore d'autres. TP : Composants graphiques et interactions sur le Web \u00b6 Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques . A. Les composants graphiques \u00b6 Pour ins\u00e9rer des composants graphiques de diff\u00e9rents types, on utilise la balise <input type=...> dans le code HTML. Identifier les composants graphiques pr\u00e9sents dans la page, \u00e0 partir de la liste ci-dessous : Identifier comment chacun des composants sont cod\u00e9s dans le code HTML, et compl\u00e9ter, pour chacun, la valeur de leur attribut type et id : Composant graphique Valeur de l'attribut type Identifiant unique (attribut id ) Dans le composant graphique de zone de texte, entrer un entier en d\u00e9cimal, \u00e0 convertir. S\u00e9lectionner que vous voulez le convertir en binaire. a. Que faut-il faire pour que le calcul de conversion soit lanc\u00e9 ? b. En regardant le code HTML, identifier \u00e0 quel attribut du composant graphique identifi\u00e9 cette action peut \u00eatre associ\u00e9e. Rafra\u00eechir la page. a. Qu'est-ce qui a chang\u00e9 ? b. Quel est l'attribut de la balise body qui peut correspondre \u00e0 cette action ? Les attributs identifi\u00e9s dans les questions 3 et 4 correspondent \u00e0 des gestionnaires d'\u00e9v\u00e8nements , qui permettent l'ex\u00e9cution d'un code Javascript lorsqu'un \u00e9v\u00e8nement se produit. Cet \u00e9v\u00e8nement est d\u00e9clench\u00e9 par l'utilisateur. B. Le code Javascript \u00b6 Analysons le code Javascript de la fonction Calcul . getElementById(\"valeur_id\") permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment dont l'identifiant est \"valeur_id\" (c'est une fonction un peu particuli\u00e8re, appel\u00e9e \"m\u00e9thode\"). Celui-ci \u00e9tant unique, c'est une mani\u00e8re pratique d'acc\u00e9der directement \u00e0 un composant graphique par exemple. 1. D\u00e9composer la premi\u00e8re instruction de la fonction Calcul : entier = Number(document.getElementById(\"entier\").value); Partie de l'instruction qui renvoie la valeur du composant graphique ayant pour id la valeur \"entier\" : Conversion d'une cha\u00eene de caract\u00e8res en nombre : Stockage du nombre dans une variable : La fonction teste la condition suivante : document.getElementById(\"binaire\").checked . Quel est le type renvoy\u00e9 par cette expression ? Que teste-t-elle ? Entrer un entier en d\u00e9cimal \u00e0 convertir dans la zone de texte qui convient et cocher le bon bouton radio pour demander une conversion en hexad\u00e9cimal. a. Que se passe-t-il ? b. Lire le code Javascript de la fonction Calcul et expliquer ce qu'il s'est pass\u00e9. Modifier la fonction Calcul pour que l'on puisse aussi faire la conversion en hexad\u00e9cimal. Indications sur le Javascript En Javascript, la d\u00e9claration d'une variable se fait avec le mot-cl\u00e9 let suivi du nom de la variable. La m\u00e9thode nombre.toString(base) renvoie nombre sous la forme d'une cha\u00eene de caract\u00e8res, dans la base base . TP : De l'interaction \u00e0 votre site Web \u00b6 Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP. Exercices \u00b6 Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"I. Interagir avec l'utilisateur"},{"location":"1ere/seq9/interactions_js/#i-interagir-avec-lutilisateur","text":"","title":"I. Interagir avec l'utilisateur"},{"location":"1ere/seq9/interactions_js/#cours","text":"Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript .","title":"Cours"},{"location":"1ere/seq9/interactions_js/#tp-composants-graphiques-et-interactions-sur-le-web","text":"Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques .","title":"TP : Composants graphiques et interactions sur le Web"},{"location":"1ere/seq9/interactions_js/#tp-de-linteraction-a-votre-site-web","text":"Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP.","title":"TP : De l'interaction \u00e0 votre site Web"},{"location":"1ere/seq9/interactions_js/#exercices","text":"Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"Exercices"},{"location":"1ere/seq9/synthese/","text":"body { text-align: justify} TD : Exercices sur les interactions sur le Web \u00b6 Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"Pour s'entra\u00eener"},{"location":"1ere/seq9/synthese/#td-exercices-sur-les-interactions-sur-le-web","text":"Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"TD : Exercices sur les interactions sur le Web"},{"location":"1ere_22/","text":"Les cours de premi\u00e8re \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de premi\u00e8re"},{"location":"1ere_22/#les-cours-de-premiere","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de premi\u00e8re"},{"location":"1ere_22/seq1/archi/","text":"body { text-align: justify} II. L'architecture mat\u00e9rielle des ordinateurs \u00b6 Cours \u00b6 A. Les circuits \u00b6 Un ordinateur fonctionne avec des 0 et des 1 , qu'il faut repr\u00e9senter de mani\u00e8re physique. Avant d'utiliser des transistors, les ordinateurs \u00e9taient \u00e9quip\u00e9s de tubes \u00e0 vide (tous deux sont des composants \u00e9lectroniques). L'apparition des transistors a permis de miniaturiser les machines. Dans les diff\u00e9rents cas, le passage d'un courant repr\u00e9sente le 1 , alors que l'absence de courant repr\u00e9sente le 0 . Les transistors peuvent aujourd'hui \u00eatre aussi petit que 10 nanom\u00e8tres, on ne les distingue pas \u00e0 l'oeil nu. Ils sont agenc\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres et reli\u00e9s sur des circuits int\u00e9gr\u00e9s . Les circuits les plus simples sont les circuits logiques , faits \u00e0 partir de portes logiques qui permettent de r\u00e9aliser des op\u00e9rations bool\u00e9ennes. En combinant des circuits logiques, on parvient \u00e0 fabriquer les circuits essentiels au fonctionnement de l'ordinateur, comme la m\u00e9moire et le processeur. B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Il existe diff\u00e9rents types de m\u00e9moires. Globalement, on regroupe : La m\u00e9moire vive ou RAM (Random Access Memory) : Elle peut se repr\u00e9senter comme des tableaux d\u2019octets, chacun identifi\u00e9 par une adresse. A cause des composants \u00e9lectroniques utilis\u00e9s, il faut une alimentation \u00e9lectrique pour conserver les donn\u00e9es. C\u2019est pour cela que la m\u00e9moire vive est volatile : les donn\u00e9es sont perdues en cas de coupure de courant. Elle permet d\u2019acc\u00e9der aux donn\u00e9es en lecture et en \u00e9criture avec une vitesse relativement rapide. la m\u00e9moire morte ou ROM (Read-Only Memory) : Elle sert \u00e0 stocker les programmes qui ne doivent pas \u00eatre modif\u00e9s et n'est donc accessible qu'en lecture . Elle contient le n\u00e9cessaire pour faire d\u00e9marrer un ordinateur, et est non-volatile . La m\u00e9moire de masse : C'est une m\u00e9moire non-volatile , \u00e0 laquelle on peut acc\u00e9der en lecture et en \u00e9criture . Elle permet de stocker une grande quantit\u00e9 de donn\u00e9es, mais n'y acc\u00e8de pas rapidement. Ce sont les disques durs SSD ou HDD ou bien les cl\u00e9s USB par exemple. Plus on s'\u00e9loigne du processeur, plus la capacit\u00e9 de la m\u00e9moire utilis\u00e9e augmente et plus le temps d'acc\u00e8s aux donn\u00e9es s'allonge. B.2. Le processeur \u00b6 Les instructions des programmes sont ex\u00e9cut\u00e9es par le processeur ou CPU (Central Processing Unit) en anglais. Il est qualifi\u00e9 de microprocesseur lorsque tous ses composants sont suffisamment petits pour \u00eatre regroup\u00e9s dans un m\u00eame bo\u00eetier. Il est constitu\u00e9 de 3 parties : - les registres qui correspondent \u00e0 une petite quantit\u00e9 de m\u00e9moire. Leur nombre et taille varient en fonction du type de CPU. Ils sont typiquement nomm\u00e9s R1, R2, R3,... - l\u2019 Unit\u00e9 Arithm\u00e9tique et Logique (UAL ou ALU en anglais), qui est charg\u00e9e de l\u2019ex\u00e9cution des calculs. Elle est compos\u00e9e de circuits comme l\u2019additionneur de la partie pr\u00e9c\u00e9dente. - l\u2019 unit\u00e9 de commande/de contr\u00f4le qui coordonne l\u2019ex\u00e9cution de toutes les op\u00e9rations. Le rythme auquel les instructions sont trait\u00e9es d\u00e9pend de la fr\u00e9quence de l'horloge du processeur. Une seule instruction peut \u00eatre trait\u00e9e \u00e0 la fois, donc pour aller plus vite, il faut une grande fr\u00e9quence. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 La plupart des ordinateurs utilis\u00e9s aujourd'hui sont bas\u00e9s sur l' architecture de von Neumann , \u00e9labor\u00e9e en 1945. Il s'agit de la premi\u00e8re architecture stockant au m\u00eame endroit les donn\u00e9es et les programmes : dans la m\u00e9moire vive. Elle est constitu\u00e9e : - d'une m\u00e9moire , correspondant \u00e0 de la RAM, contenant programme et donn\u00e9es, - d'une UAL avec des registres comme un accumulateur , - d'une unit\u00e9 de commande , - d'un syst\u00e8me d\u2019 entr\u00e9es-sorties . Les entr\u00e9es et sorties permettent \u00e0 l\u2019ordinateur d\u2019interagir avec l\u2019ext\u00e9rieur. Chaque p\u00e9riph\u00e9rique est r\u00e9gi par un contr\u00f4leur (un ensemble de composants \u00e9lectroniques) adapt\u00e9, permettant d\u2019encoder et de d\u00e9coder les donn\u00e9es envoy\u00e9es et re\u00e7ues. Un p\u00e9riph\u00e9rique d'entr\u00e9e (comme une souris) permet d'obtenir des informations, alors qu'un p\u00e9riph\u00e9rique de sortie (comme un \u00e9cran) permet d'envoyer des informations vers l'ext\u00e9rieur. C.2. Connecter les composants \u00b6 Les donn\u00e9es circulent entre les composants de l\u2019ordinateur (principalement entre le processeur et la m\u00e9moire) gr\u00e2ce \u00e0 des bus. Il en existe 3 grands types : - les bus d\u2019adresse , transportant les adresses des cases m\u00e9moires auxquelles on veut acc\u00e9der, - les bus de donn\u00e9es , transportant les donn\u00e9es en elles-m\u00eames, - les bus de commande/contr\u00f4le synchronisant l\u2019ensemble (en indiquant le type d\u2019actions \u00e0 ex\u00e9cuter, comme la lecture ou l\u2019\u00e9criture d\u2019une donn\u00e9e en m\u00e9moire). Les diff\u00e9rents composants d\u00e9crits dans les parties pr\u00e9c\u00e9dentes, ainsi que d\u2019autres qui am\u00e9liorent les ordinateurs d\u2019aujourd\u2019hui, ont besoin d\u2019\u00eatre interconnect\u00e9s de mani\u00e8re fiable : ils sont regroup\u00e9s sur une carte m\u00e8re . Elle int\u00e8gre : le processeur, les barrettes de m\u00e9moire RAM, le(s) disque(s) dur(s), les ports d\u2019entr\u00e9e-sortie, les diff\u00e9rents p\u00e9riph\u00e9riques (lecteurs DVD, carte m\u00e9moire,...) la carte r\u00e9seau, la carte graphique, l\u2019alimentation, les syst\u00e8mes de refroidissement. C.2. Les architectures multiprocesseurs \u00b6 L\u2019architecture d\u00b4ecrite pr\u00e9c\u00e9demment est une architecture monoprocesseur : ne comportant qu\u2019un processeur. Pour augmenter la puissance des ordinateurs, on a mis\u00e9 pendant longtemps sur l\u2019augmentation de leur fr\u00e9quence d\u2019horloge. Celle-ci est cependant devenue de plus en plus difficile, comme illustr\u00e9 sur la figure ci-contre, \u00e0 cause d\u2019un probl\u00e8me de surchauffe. L\u2019id\u00e9e a depuis \u00e9t\u00e9 d\u2019utiliser plusieurs processeurs dans un seul ordinateur : on parle d\u2019 ordinateur multiprocesseur . Cela cr\u00e9e des probl\u00e8mes de partage de la m\u00e9moire, pour lesquels il a fallu \u00e9tablir des stat\u00e9gies. On utilise de la m\u00e9moire cache, d\u2019acc\u00e8s tr\u00e8s rapide, soit partag\u00e9e pour les diff\u00e9rents processeurs, soit d\u00e9di\u00e9e \u00e0 chacun. Il faut de plus adapter les programmes \u00e0 l'architecture. Aujourd\u2019hui, on ne se contente en fait pas de multiplier les processeurs, on utilise \u00e9galement des processeurs ayant plusieurs coeurs ( architecture multicoeur ) : plusieurs unit\u00e9s de traitement ind\u00e9pendantes. Questionnaire sur le cours \u00b6 A. Les circuits \u00b6 Faire un sch\u00e9ma permettant de placer les termes suivants : processeur, porte logique, transistor, additionneur. Votre sch\u00e9ma repr\u00e9sentera au centre le plus petit des \u00e9l\u00e9ments, et autour les \u00e9l\u00e9ments faits \u00e0 partir des autres. B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Par quelles caract\u00e9ristiques diff\u00e9rencie-t-on les diff\u00e9rents types de m\u00e9moires ? Faire un sch\u00e9ma avec ces caract\u00e9ristiques et les types de m\u00e9moires associ\u00e9s. Faire un sch\u00e9ma pouvant repr\u00e9senter la m\u00e9moire vive de l'ordinateur. B.2. Le processeur \u00b6 Relever les diff\u00e9rents composants d'un processeur. Lequel pourrait \u00eatre associ\u00e9, si on les comparait au corps humain, au cerveau, et lequel serait les mains ? Repr\u00e9senter des cycles d'horloge d'un processeur et indiquer \u00e0 quel moment de nouvelles op\u00e9rations sont faites. Rechercher l'ordre de grandeur en Hz de la fr\u00e9quence des processeurs actuels. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 Quelle est l'id\u00e9e nouvelle de John Von Neumann lorsqu'il propose son architecture ? Que faut-il donc ajouter aux principaux composants de l'ordinateur pour avoir une machine utilisable ? Les p\u00e9riph\u00e9riques suivants sont-ils des entr\u00e9es, des sorties, ou bien les deux ? Composant Entr\u00e9e Sortie Clavier Imprimante Scanner Disque Souris Ecran C.2. Connecter les composants \u00b6 Expliquer comment les diff\u00e9rents composants d'un ordinateurs sont connect\u00e9s. Compl\u00e9ter le sch\u00e9ma suivant avec des fl\u00e8ches repr\u00e9sentant les diff\u00e9rents types de bus, permettant la communication entre les composants. C.2. Les architectures multiprocesseurs \u00b6 Sur quel param\u00e8tre peut-on jouer pour augmenter la puissance des ordinateurs, sans toucher aux processeurs ? Pourquoi alors augmenter le nombre de processeurs ? A quel probl\u00e8me faut-il alors penser ? TD : L'additionneur binaire \u00b6 A. Repr\u00e9sentation \u00e9lectronique des op\u00e9rateurs bool\u00e9ens \u00b6 On repr\u00e9sente physiquement les bool\u00e9ens et leurs op\u00e9rateurs \u00e0 partir de transistors, de tr\u00e8s petits composants \u00e9lectroniques qui : - laissent passer le courant, qui est alors \u00e0 sa valeur maximale : c'est un 1 , qui repr\u00e9sente le True bool\u00e9en. - ou ne le laissent pas passer : c'est un 0 , qui repr\u00e9sente le False bool\u00e9en. L'impl\u00e9mentation physique des op\u00e9rateurs s'appelle des portes logiques , que l'on repr\u00e9sente classiquement de la mani\u00e8re suivante : Op\u00e9rateur bool\u00e9en Porte logique NON( A ) A ET B A OU B A XOR B En combinant ces portes logiques, on construit des circuits \u00e9lectroniques effectuant des op\u00e9rations. R\u00e9\u00e9crire la table de v\u00e9rit\u00e9 du XOR en utilisant les valeurs 0 et 1 \u00e0 la place de False et True . V\u00e9rifier que le circuit ci-dessous fait bien le calcul du XOR, en attribuant toutes les valeurs possibles (entre 0 et 1) aux entr\u00e9es A et B et en calculant la valeur de la sortie S. A partir de ce circuit, trouver l'expression bool\u00e9enne constitu\u00e9e des op\u00e9rateurs NON, ET et OU qui permet de calculer le XOR. Programmer une fonction xor prenant en param\u00e8tres deux bool\u00e9ens a et b et renvoyant un bool\u00e9en, en utilisant les op\u00e9rateurs bool\u00e9ens not , and et or . Utiliser l'expression obtenue \u00e0 la question 3. On veut programmer la fonction \u00e9quivalente xor1bit fonctionnant sur des entiers (ne prenant que les valeurs 0 ou 1 ). Pour cela : Ecrire une fonction non1bit(a) prenant un 0 ou un 1 en entr\u00e9e, et renvoyant l'oppos\u00e9. Ecrire la fonction xor1bit(a,b) , en utilisant non1bit \u00e0 la place du not , le & \u00e0 la place du and et le | \u00e0 la place du or . B. L'additionneur 1 bit \u00b6 Un additionneur 1 bit est un circuit permettant d'additionner deux bits entre eux. Il dispose de : Trois entr\u00e9es : - a : le premier bit, - b : le deuxi\u00e8me bit, - re : la retenue entrante (peut exister dans le cas o\u00f9 l'on combine les additionneurs) Deux sorties : - s : la somme des deux bits, - rs : la retenue sortante. Aller voir le circuit \u00e9lectronique correspondant \u00e0 l'URL suivante : https://www.cahier-nsi.fr/additionneur1bit/ Compl\u00e9ter la table de v\u00e9rit\u00e9 de l'additionneur en changeant les valeurs d'entr\u00e9e du circuit : a b re s rs 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 De cette table, d\u00e9duire combien fait 1 + 1 en binaire. On donne l'expression bool\u00e9enne de s = (a XOR b) XOR re V\u00e9rifier qu'elle convient en calculant sa valeur pour les 3 premi\u00e8res lignes de la table de v\u00e9rit\u00e9. Faire de m\u00eame avec rs = (a ET b) OU ((a XOR b) ET re) . Programmer une fonction add1bit , prenant en param\u00e8tres trois entiers a , b et la retenue re , et renvoyant en sortie s et la retenue rs . On utilisera la fonction xor1bit d\u00e9finie dans la partie A. N.B.: Pour qu'une fonction renvoie 2 valeurs en sortie, il faut les s\u00e9parer par une , , apr\u00e8s le return . TP : Programmer au plus pr\u00e8s de la machine \u00b6 La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Saisir le programme suivant : MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT Indiquer les cases m\u00e9moires qui sont modifi\u00e9es au fur et \u00e0 mesure : adresse valeur Que fait l'instruction STR R0,75 ? L'ensemble des lignes d'instructions est-il ex\u00e9cut\u00e9 ? Si non, lesquelles ne le sont pas ? Faire une hypoth\u00e8se sur ce que font les instructions CMP et BNE. V\u00e9rifier gr\u00e2ce \u00e0 une recherche Web. En d\u00e9duire ce que fait ce programme. Donner son code \u00e9quivalent en Python.","title":"Archi"},{"location":"1ere_22/seq1/archi/#ii-larchitecture-materielle-des-ordinateurs","text":"","title":"II. L'architecture mat\u00e9rielle des ordinateurs"},{"location":"1ere_22/seq1/archi/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq1/archi/#questionnaire-sur-le-cours","text":"","title":"Questionnaire sur le cours"},{"location":"1ere_22/seq1/archi/#td-ladditionneur-binaire","text":"","title":"TD : L'additionneur binaire"},{"location":"1ere_22/seq1/archi/#tp-programmer-au-plus-pres-de-la-machine","text":"La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Saisir le programme suivant : MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT Indiquer les cases m\u00e9moires qui sont modifi\u00e9es au fur et \u00e0 mesure : adresse valeur Que fait l'instruction STR R0,75 ? L'ensemble des lignes d'instructions est-il ex\u00e9cut\u00e9 ? Si non, lesquelles ne le sont pas ? Faire une hypoth\u00e8se sur ce que font les instructions CMP et BNE. V\u00e9rifier gr\u00e2ce \u00e0 une recherche Web. En d\u00e9duire ce que fait ce programme. Donner son code \u00e9quivalent en Python.","title":"TP : Programmer au plus pr\u00e8s de la machine"},{"location":"1ere_22/seq1/logique/","text":"body { text-align: justify} I. La logique bool\u00e9enne \u00b6 Cours \u00b6 Introduction \u00b6 L'informatique est bas\u00e9e sur l'utilisation de 1 et de 0 : ils repr\u00e9sentent le vrai et le faux, True et False en Python, et correspondent au type bool\u00e9en . Nous avons vu que les expressions bool\u00e9ennes permettent de diff\u00e9rencier diff\u00e9rents cas dans un programme. Nous avons vu des op\u00e9rateurs qui permettent de comparer des nombres ( int ou float ), et renvoient des bool\u00e9ens ( bool ). Pour combiner ces expressions bool\u00e9ennes, on utilise des op\u00e9rateurs bool\u00e9ens . Passons en revue ces op\u00e9rateurs, en consid\u00e9rant le probl\u00e8me suivant : Au milieu du d\u00e9sert, deux sphinx gardent chacun une porte. Une des deux portes continue dans le d\u00e9sert, l'autre m\u00e8ne vers une oasis. L'un des deux sphinx dit toujours la v\u00e9rit\u00e9, l'autre ment toujours. On veut savoir par o\u00f9 aller pour acc\u00e9der \u00e0 l'oasis. I.A. Le NON (NOT) \u00b6 L'op\u00e9rateur NON (NOT en anglais) inverse la valeur d'une variable bool\u00e9enne . Si A vaut False , non( A ) vaut True et r\u00e9ciproquement. On r\u00e9sume cela avec une table, dite table de v\u00e9rit\u00e9 de l'op\u00e9rateur NON : A NON( A ) False True True False La table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne indique la valeur de l'expression pour chaque valeur possible de ses variables. Application au probl\u00e8me : On veut demander l'information, si l'on s'adresse \u00e0 celui qui dit la v\u00e9rit\u00e9 - donc \u00e0 celui qui ne ment pas. On utilise une variable bool\u00e9enne menteur qui vaut True si le sphinx auquel on s'adresse ment, False s'il dit la v\u00e9rit\u00e9 : if not ( menteur ): print ( \"Pouvez-vous m'indiquer l'oasis ?\" ) I.B. Le ET (AND) \u00b6 L'op\u00e9rateur ET (AND en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A ET B est vrai si A est vraie et B est vraie. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A ET B False False False True False False False True False True True True Application au probl\u00e8me : Si le sphinx auquel on s'adresse n'est pas un menteur et s'il nous dit qu'il se trouve devant la porte menant \u00e0 l'oasis, on veut prendre ce chemin. On utilise une variable porte valant True si le sphinx dit qu'elle m\u00e8ne \u00e0 l'oasis, False sinon : if not ( menteur ) and porte : print ( \"Je prends ce chemin.\" ) I.C. Le OU (OR) \u00b6 L'op\u00e9rateur OU (OR en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A OU B est vrai si A est vraie, B est vraie, ou bien les deux le sont. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A OU B False False False True False True False True True True True True Application au probl\u00e8me : Si le sphinx auquel on s'adresse n'est pas un menteur et s'il nous dit qu'il se trouve devant la porte menant \u00e0 l'oasis ou s'il est un menteur et qu'il nous dit que la porte continue dans le d\u00e9sert, on veut prendre ce chemin. if ( not ( menteur ) and porte ) or ( menteur and not ( porte )): print ( \"Je prends ce chemin.\" ) I.D. Le OU exclusif (XOR) \u00b6 L'op\u00e9rateur OU EXCLUSIF (XOR en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A OU B est vrai si A est vraie ou bien B est vraie. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A OU B False False False True False True False True True True True False Application au probl\u00e8me : Si le sphinx auquel on s'adresse est un menteur ou (exclusif) s'il nous dit qu'il ne se trouve pas devant la porte menant \u00e0 l'oasis (et donc qu'il ne ment pas), on ne veut pas prendre ce chemin. from operator import xor if xor ( menteur , not ( porte )): print ( \"Je ne prends pas ce chemin.\" ) N.B. : L'utilisation de cette fonction n'est pas \u00e0 apprendre par coeur. Conclusion \u00b6 Une bonne utilisation des op\u00e9rateurs bool\u00e9ens permet notamment de mieux g\u00e9rer les diff\u00e9rentes conditions trait\u00e9es dans les programmes. La logique bool\u00e9enne trouve aussi des applications dans la conception de circuits \u00e9lectroniques. Nous ne savons en fait pas quel sphinx ment et lequel dit la v\u00e9rit\u00e9. Nous n'avons le droit de ne poser qu'une question \u00e0 un des deux sphinx pour savoir o\u00f9 aller. Laquelle devons-nous choisir pour aller \u00e0 coup s\u00fbr vers l'oasis ? Exercices : les expressions bool\u00e9ennes \u00b6 Exercice 0 (am\u00e9lioration du TP sur les fonctions) : \u00b6 On dispose d'une fonction pair(n) , renvoyant si un entier n est pair ou non : def pair ( n ): return n % 2 == 0 On consid\u00e8re une variable m repr\u00e9sentant un mois de l'ann\u00e9e. Quelle instruction \u00e9crire pour tester \"m est-t-il impair\" ? Ecrire le programme Python traduisant l'algorithme suivant : Si n est impair et qu il est un mois de la fin de l ann\u00e9e nb_jours vaut 30 Faire la m\u00eame chose avec l'algorithme suivant : Si n est pair et qu il est un mois du d\u00e9but de l ann\u00e9e nb_jours vaut 30 Comment combiner les conditions des questions 2 et 3 ? Compl\u00e9ter la fonction suivante, permettant de tester tous les mois de l'ann\u00e9e : def nombre_jours ( m ): if m == 2 : nb = 28 elif ... nb = 30 ... return nb Exercice 1 : Vrai ou Faux \u00b6 Si a vaut True et b vaut False , not(a or b) s'\u00e9value \u00e0 True . L'expression not(a or b) a la m\u00eame valeur que l'expression (not a) or (not b) . Si a vaut True et b vaut True , not(a and b) s'\u00e9value \u00e0 True . L'expression not(a and b) a la m\u00eame valeur que l'expression not(a) or not(b) . Exercice 2 : \u00b6 S\u00e9lectionner la(les) bonne(s) r\u00e9ponse(s) parmi les diff\u00e9rentes propositions. L'expression bool\u00e9enne a or not(b) s'\u00e9value \u00e0 True . Quelles peuvent \u00eatre les valeurs de a et de b ? a vaut True et b vaut True a vaut True et b vaut False a vaut False et b vaut True a vaut False et b vaut False Parmi les expressions suivantes, laquelle s'\u00e9value en True ? True and (False and True) True or (False and True) False and (False and True) False or (False and True) Exercice 3 : \u00b6 On consid\u00e8re l'expression a and b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut False , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? On consid\u00e8re l'expression a or b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut True , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? Conclusion (\u00e0 retenir) : TD : Qui faut-il croire ? \u00b6 A. Un village perdu \u00b6 Vous voyagez dans un endroit que vous ne connaissez pas, et demandez votre chemin \u00e0 deux locaux que vous croisez. Vous souhaitez savoir o\u00f9 se trouve le village qui est votre objectif. Ils d\u00e9cident de jouer \u00e0 un jeu avec vous : ils vont vous donner des informations, et soit toutes ces informations seront vraies, soit elles seront toutes fausses. En appliquant la logique bool\u00e9enne, vous devez \u00eatre capable d'obtenir l'information que vous recherchez. Voici leurs propos : X : \"Le village se trouve dans la vall\u00e9e.\" Y : \"Non, il ne s\u2019y trouve pas.\" X : \"Ou alors dans les collines.\" On mod\u00e9lise le probl\u00e8me avec les variables suivantes : - V et C qui valent True si, respectivement, le village se trouve dans la vall\u00e9e ou dans les collines, et False sinon, - X et Y qui valent True si respectivement les affirmations de X et de Y sont vraies, et False sinon. Traduire X et Y en fonction de V , C , et des op\u00e9rateurs bool\u00e9ens qui conviennent. Compl\u00e9ter la table de v\u00e9rit\u00e9 suivante (on part du principe que le village ne peut \u00eatre que soit dans la vall\u00e9e, soit dans la colline) : V C X Y False True True False En d\u00e9duire o\u00f9 se trouve le village. \\pagebreak B. Au tribunal \u00b6 Vous \u00eates dans le jury d'un tribunal et \u00e9coutez les t\u00e9moins d'une enqu\u00eate. On sait que chacun des t\u00e9moins soit toujours dit la v\u00e9rit\u00e9, soit ment toujours. Notre but est d'identifier ceux qui mentent et ceux qui ne mentent pas pour prononcer le verdict le plus juste possible. Les trois t\u00e9moins s'expriment : Ap : \"Personne ne doit croire C.\" Bp : \"A et C disent toujours la v\u00e9rit\u00e9.\" Cp : \"B dit la v\u00e9rit\u00e9.\" On mod\u00e9lise le probl\u00e8me avec les variables suivantes : A , B et C qui valent True si, respectivement, les t\u00e9moins A, B et C disent la v\u00e9rit\u00e9, et False sinon. Traduire Ap, Bp et Cp sous la forme d'expressions bool\u00e9ennes en utilisant les op\u00e9rateurs appropri\u00e9s. Compl\u00e9ter la table de v\u00e9rit\u00e9 suivante : A B C Ap Bp Cp False False False False False True False True False False True True True False False True False True True True False True True True Comment pouvez-vous en d\u00e9duire qui dit la v\u00e9rit\u00e9 et qui ment ?","title":"Logique"},{"location":"1ere_22/seq1/logique/#i-la-logique-booleenne","text":"","title":"I. La logique bool\u00e9enne"},{"location":"1ere_22/seq1/logique/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq1/logique/#exercices-les-expressions-booleennes","text":"","title":"Exercices : les expressions bool\u00e9ennes"},{"location":"1ere_22/seq1/logique/#td-qui-faut-il-croire","text":"","title":"TD : Qui faut-il croire ?"},{"location":"1ere_22/seq10/gloutons/","text":"body { text-align: justify} I. Les algorithmes gloutons \u00b6 TD : Le probl\u00e8me du rendu de monnaie \u00b6 Un distributeur automatique doit pouvoir rendre la monnaie sur une somme donn\u00e9e par un utilisateur. Pour arranger celui-ci, on veut rendre la monnaie avec un nombre minimal de pi\u00e8ces. On utilise un syst\u00e8me mon\u00e9taire simplifi\u00e9, constitu\u00e9 des pi\u00e8ces suivantes : 200, 100, 50, 20, 10, 5, 2, et 1 euro. A. Etude du probl\u00e8me \u00b6 Proposer deux fa\u00e7ons de rendre la monnaie sur la somme 43. Quelle solution est optimale ? Quelles sont les donn\u00e9es d'entr\u00e9e de notre probl\u00e8me ? La sortie ? Quel type de variable utiliser pour stocker ces informations ? Compl\u00e9ter le sch\u00e9ma suivant avec les entr\u00e9es et sorties du probl\u00e8me trait\u00e9. graph LR ....................... --> F[algorithme]; ........................ --> F; F --> ...................... B. Principe de l'algorithme \u00b6 D\u00e9finition La solution tr\u00e8s souvent utilis\u00e9e pour r\u00e9soudre ce probl\u00e8me est celle de l' algorithme glouton : un algorithme qui fait le \"meilleur\" choix \u00e0 chaque \u00e9tape . On esp\u00e8re qu'au final, on trouvera la meilleure solution globale . Compl\u00e9ter la description de l'algorithme qui convient \u00e0 notre cas : On cherche \u00e0 minimiser une quantit\u00e9 : le nombre de pi\u00e8ces . On choisit donc les pi\u00e8ces les plus petites / grandes possibles, de valeur inf\u00e9rieure \u00e0 la somme qu'il reste \u00e0 rendre, jusqu'\u00e0 avoir compl\u00e8tement rendu la monnaie. Le meilleur choix consiste donc ici \u00e0 minimiser / maximiser la valeur de la pi\u00e8ce choisie \u00e0 chaque \u00e9tape. V\u00e9rifier qu'en appliquant cet algorithme pour rendre la somme de 36, avec le syst\u00e8me mon\u00e9taire indiqu\u00e9 plus haut, on obtient une solution optimale. On consid\u00e8re les pi\u00e8ces de la plus grande \u00e0 la plus petite, donc dans l'ordre : [200, 100, 50, 20, 10, 5, 2, 1]. On commence par consid\u00e9rer la premi\u00e8re, et on passe \u00e0 la suivante si sa valeur d\u00e9passe celle de la somme \u00e0 rendre. D\u00e9tailler l'\u00e9volution des valeurs indiqu\u00e9es dans le tableau suivant, lorsqu'on applique l' algorithme glouton pour rendre la somme de 36 : Somme \u00e0 rendre Pi\u00e8ce Pi\u00e8ce <= Somme \u00e0 rendre Pi\u00e8ces utilis\u00e9es 46 200 False [] C. Formulation de l'algorithme \u00b6 Sait-on \u00e0 l'avance combien d'\u00e9tapes seront n\u00e9cessaires pour faire le rendu ? En d\u00e9duire l'\u00e9l\u00e9ment de programmation qu'il faut utiliser. A chaque \u00e9tape (comme celles d\u00e9taill\u00e9es dans la partie B) , on distingue deux cas. Quels sont-ils ? Que fait-on dans chacun de ces cas ? Proposer une formulation de l'algorithme glouton sous la forme d'un pseudo-code. Se connecter \u00e0 Capytale et entrer le code a716-1682862 . Compl\u00e9ter la fonction rendu_glouton prenant en param\u00e8tres les deux entr\u00e9es identifi\u00e9es, et renvoyant une sortie. V\u00e9rifier que l'assertion correspondant \u00e0 l'appel rendu_glouton(36, [200, 100, 50, 20, 10, 5, 2, 1]) fonctionne bien. Le syst\u00e8me imp\u00e9rial utilise les pi\u00e8ces de valeurs suivantes : 30, 24, 12, 6, 3, 1. Appeler rendu_glouton pour rendre la valeur 48 avec ce syst\u00e8me de monnaie. Obtient-on le r\u00e9sultat optimal ? TD : Le probl\u00e8me du sac \u00e0 dos \u00b6 Introduction \u00b6 Un voleur rentre dans une maison et dispose de peu de temps pour collecter son butin. Il dispose d'un sac \u00e0 dos pour mettre les objets qu'il trouvera, pouvant supporter une masse maximale de 10 kg. Il veut maximiser la valeur totale des objets mis dans son sac. L'objectif est de d\u00e9finir un algorithme permettant d'optimiser cette valeur totale , en respectant la contrainte de la masse maximale que le sac peut supporter. Objet Ordinateur Collier Guitare Vase Cha\u00eene Hi-Fi Num\u00e9ro 0 1 2 3 4 Valeur (euros) 800 100 500 60 500 Masse (kg) 4 0.15 4 1.85 7 ................................... (partie B) A. Un premier algorithme \u00b6 Une premi\u00e8re m\u00e9thode pour remplir le sac serait de tester toutes les possibilit\u00e9s et de s\u00e9lectionner la meilleure. Expliquer comment faire, en appliquant cette m\u00e9thode, pour trouver la solution optimale. Le choix de chaque objet est binaire : il est choisi ou il ne l'est pas. Combien de possibilit\u00e9s y a-t-il (sans consid\u00e9rer pour l'instant la contrainte de la masse totale) avec 5 objets ? Combien y en aurait-il avec 100 objets ? Que peut-on en conclure sur la dur\u00e9e d'ex\u00e9cution d'un tel algorithme ? Appliquer cet algorithme dans notre cas, en ne donnant que les possibilit\u00e9s permettant de rester en-dessous de la masse maximale de 10 kg. B. Un algorithme glouton \u00b6 Utiliser un algorithme glouton permet de limiter le nombre d'op\u00e9rations. Pourquoi peut-on dire cela ? Entre l'ordinateur et la guitare, quel choix conseilleriez-vous au voleur ? Pourquoi ? M\u00eame question pour choisir entre la guitare et la cha\u00eene hi-fi. Pour appliquer un algorithme glouton, il faut optimiser (maximiser ou minimiser) un crit\u00e8re. Plusieurs crit\u00e8res sont possibles ici, s\u00e9lectionner celui qui vous semble le plus pertinent dans la liste ci-dessous : Choisir d'abord l'objet ayant la plus grande / la plus petite valeur . Choisir d'abord l'objet le plus lourd / le plus l\u00e9ger . Choisir d'abord l'objet ayant la valeur massique, c'est-\u00e0-dire le rapport le plus grand / le plus petit . Prendre le plus d'objets possible. Rajouter, dans le tableau de l'introduction, sur la derni\u00e8re ligne, la valeur massique. Comment serait-il judicieux de classer les objets ? Associer chaque objet \u00e0 leur nouveau num\u00e9ro, apr\u00e8s avoir fait ce classement. Appliquer l'algorithme glouton ajoutant les objets un \u00e0 un, en maximisant le rapport de l'objet. Objets ajout\u00e9s en maximisant la valeur massique : C. Impl\u00e9mentation de l'algorithme \u00b6 Quelles sont les donn\u00e9es d'entr\u00e9e du probl\u00e8me qu'il faut stocker ? Quel type de variable utiliser pour le faire ? Jusqu'\u00e0 quand choisit-on un nouvel objet \u00e0 mettre dans le sac ? En d\u00e9duire l'\u00e9l\u00e9ment de programmation \u00e0 utiliser. Quel est le r\u00e9sultat qu'il faut renvoyer en sortie ? Comment stocker cette information ? En d\u00e9duire un pseudo-code de l'algorithme. On suppose les objets tri\u00e9s par valeur massique d\u00e9croissante. Se connecter \u00e0 Capytale et entrer le code a716-1682862 . Compl\u00e9ter la fonction sac_a_dos en traduisant ce pseudo-code en Python. Dans le test donn\u00e9, les valeurs et les masses de notre probl\u00e8me ont \u00e9t\u00e9 tri\u00e9es \u00e0 la main par valeur massique d\u00e9croissante. V\u00e9rifier que la fonction est correcte gr\u00e2ce \u00e0 l'assertion. Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Un algorithme glouton est un algorithme optimisant un crit\u00e8re \u00e0 chaque \u00e9tape, sans se soucier des cons\u00e9quences sur la solution globale obtenue quand l'algorithme se termine. Il fait le choix le plus optimis\u00e9 \u00e0 chaque \u00e9tape : cela peut consister \u00e0 maximiser une quantit\u00e9 ou \u00e0 la minimiser , en fonction du probl\u00e8me. La quantit\u00e9 consid\u00e9r\u00e9e d\u00e9pend aussi du probl\u00e8me, et plusieurs quantit\u00e9s peuvent \u00eatre choisies (comme dans le probl\u00e8me du sac \u00e0 dos) . B. Exemples de probl\u00e8mes \u00b6 B.1. Le probl\u00e8me du rendu de monnaie \u00b6 Formulation du probl\u00e8me \u00b6 On veut rendre la monnaie sur une somme donn\u00e9e, en utilisant le moins de pi\u00e8ces possible , dont les valeurs appartiennent \u00e0 un syst\u00e8me de monnaie . On suppose que l'on peut rendre la monnaie de mani\u00e8re exacte avec le syst\u00e8me de monnaie. Algorithme glouton pour le r\u00e9soudre \u00b6 Crit\u00e8re choisi On maximise la valeur de chaque pi\u00e8ce choisie, en restant en-dessous de la valeur \u00e0 rendre. Pseudo-code Entr\u00e9es : un entier somme un syst\u00e8me de monnaie pieces Sortie : un tableau de pieces pieces_rendues, tri\u00e9es par valeurs d\u00e9croissantes pieces_rendues <- liste vide i <- 0 # indice de la premi\u00e8re pi\u00e8ce somme_a_rendre <- somme # ce qu'il reste \u00e0 rendre tant que somme_a_rendre diff\u00e9rente de 0 si pieces[i] sup\u00e9rieure \u00e0 somme_a_rendre on incr\u00e9mente i sinon on ajoute pieces[i] au tableau pieces_rendues on enl\u00e8ve pieces[i] \u00e0 l'entier somme_a_rendre Cet algorithme se termine-t-il ? Justifier. Cet algorithme se termine car on a suppos\u00e9 que l'on pouvait rendre la monnaie avec notre syst\u00e8me de monnaie, donc somme_a_rendre va d\u00e9cr\u00e9menter jusqu'\u00e0 la valeur 0. Cet algorithme est-il toujours optimal ? De quoi cela d\u00e9pend-il ? Cet algorithme n'est pas toujours optimal, cela d\u00e9pend du syst\u00e8me de monnaie utilis\u00e9. Il est optimal pour le syst\u00e8me des euros. On appelle canonique un syst\u00e8me de monnaie qui permet de rendre une somme de mani\u00e8re optimale avec un algorithme glouton . B.2. Le probl\u00e8me du sac \u00e0 dos \u00b6 Formulation du probl\u00e8me \u00b6 On veut remplir un sac \u00e0 dos avec des objets ayant une valeur et une masse. On veut que le sac contienne la valeur totale la plus grande possible, et sa masse ne peut pas d\u00e9passer une masse maximale donn\u00e9e. Algorithme glouton pour le r\u00e9soudre \u00b6 Crit\u00e8re choisi On peut choisir de maximiser la valeur de chaque objet, ou bien (version plus optimale) de maximiser le rapport \\(valeur/masse\\) , soit la valeur massique. Pseudo-code On suppose les objets d\u00e9j\u00e0 tri\u00e9s selon le crit\u00e8re que l'on a choisi : les \u00e9l\u00e9ments des tableaux des masses et des valeurs sont rang\u00e9s dans l'ordre optimal pour note algorithme glouton. Entr\u00e9es : le tableau des valeurs des objets le tableau des masses des objets la masse_maximale du sac Sortie : le tableau des objets \u00e0 mettre dans le sac objets <- tableau vide masse_sac <- 0 pour chaque objet d'indice i si masses[i] + masse_sac inf\u00e9rieure \u00e0 masse_maximale on ajoute i au tableau objets on ajoute masse[i] \u00e0 masse_sac Complexit\u00e9 : Quelle est la complexit\u00e9 de cet algorithme ?\" Cet algorithme a une complexit\u00e9 lin\u00e9aire par rapport au nombre d'objets. Ce probl\u00e8me du sac \u00e0 dos est un probl\u00e8me particulier : c'est un probl\u00e8me difficile \u00e0 r\u00e9soudre de mani\u00e8re optimale, et plusieurs autres probl\u00e8mes peuvent se ramener \u00e0 lui. Exemples choisir les projets les plus rentables que doit choisir une entreprise (les projets n'ont pas une masse et une valeur mais un temps de r\u00e9alisation et un gain et la masse maximale correspond ici \u00e0 au temps de travail maximal ), dans la d\u00e9coupe de mat\u00e9riaux, pour minimiser les pertes (les mat\u00e9riaux ont eux une surface et une valeur ), charger une cargaison (avions, camions, bateaux...) de mani\u00e8re optimale. Conclusion \u00b6 Les algorithmes gloutons ne fournissent pas toujours une solution optimale \u00e0 un probl\u00e8me, mais s'en approchent souvent et permettent de r\u00e9duire la complexit\u00e9 d'algorithmes plus na\u00effs qui exploreraient toutes les possibilit\u00e9s.","title":"Les algorithmes gloutons"},{"location":"1ere_22/seq10/gloutons/#i-les-algorithmes-gloutons","text":"","title":"I. Les algorithmes gloutons"},{"location":"1ere_22/seq10/gloutons/#td-le-probleme-du-rendu-de-monnaie","text":"Un distributeur automatique doit pouvoir rendre la monnaie sur une somme donn\u00e9e par un utilisateur. Pour arranger celui-ci, on veut rendre la monnaie avec un nombre minimal de pi\u00e8ces. On utilise un syst\u00e8me mon\u00e9taire simplifi\u00e9, constitu\u00e9 des pi\u00e8ces suivantes : 200, 100, 50, 20, 10, 5, 2, et 1 euro.","title":"TD : Le probl\u00e8me du rendu de monnaie"},{"location":"1ere_22/seq10/gloutons/#td-le-probleme-du-sac-a-dos","text":"","title":"TD : Le probl\u00e8me du sac \u00e0 dos"},{"location":"1ere_22/seq10/gloutons/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq10/recherche_dichotomique/","text":"body { text-align: justify} II. La recherche dichotomique \u00b6 Cours \u00b6 Nous avons vu un algorithme de recherche d'\u00e9l\u00e9ment dans un tableau, parcourant tous ces \u00e9l\u00e9ments jusqu'\u00e0 trouver celui qui est recherch\u00e9. Nous avons vu que sa complexit\u00e9 \u00e9tait en \\(O(n)\\) Cet algorithme n'a pas une complexit\u00e9 optimale. On suppose que l'on a appliqu\u00e9 un algorithme de tri au tableau, avant de faire la recherche. L'algorithme de recherche dichotomique permet de faire une recherche plus efficacement. A. Principe de l'algorithme \u00b6 Les \u00e9tapes de cet algorithme sont : Comparer l'\u00e9l\u00e9ment recherch\u00e9 avec la valeur du milieu du tableau : si les valeurs sont \u00e9gales , on a trouv\u00e9 l'indice de l'\u00e9l\u00e9ment recherch\u00e9, l'algorithme s'arr\u00eate. sinon si l'\u00e9l\u00e9ment recherch\u00e9 est plus grand que le milieu du tableau , on continue de chercher l'\u00e9l\u00e9ment dans la partie droite du tableau (o\u00f9 se trouvent les valeurs sup\u00e9rieures \u00e0 celle du milieu) . sinon , on continue de chercher l'\u00e9l\u00e9ment dans la partie gauche du tableau (o\u00f9 se trouvent les valeurs inf\u00e9rieures \u00e0 celle du milieu) . On consid\u00e8re le milieu de la partie du tableau qu'il nous reste, et on r\u00e9applique l'\u00e9tape 1, jusqu'\u00e0 ce qu'on ait trouv\u00e9 l'\u00e9l\u00e9ment ou que le tableau soit vide. Exemple La recherche de 8 dans le tableau [1, 3, 4, 8, 9, 10, 11, 16, 25] . Compl\u00e9ter le sch\u00e9ma suivant avec les comparaisons faites \u00e0 chaque \u00e9tape : B. Terminaison \u00b6 Nous avons vu le code de cet algorithme en TD. Pour montrer que l'algorithme se termine, il faut montrer que la boucle non-born\u00e9e va s'arr\u00eater. Extrait du pseudo-code tant que ind vaut -1 et debut inf\u00e9rieur ou \u00e9gal \u00e0 fin R\u00f4le de ind : stocker l'indice de l'\u00e9l\u00e9ment recherch\u00e9, ou bien -1 s'il n'est pas pr\u00e9sent. R\u00f4le de debut et fin : d\u00e9limiter les parties du tableau dans lesquelles on fait la recherche L'algorithme s'arr\u00eate si : - On trouve l'\u00e9l\u00e9ment , dans ce cas ind aura une valeur diff\u00e9rente de -1 et on sort de la boucle, - Dans le cas o\u00f9 l'\u00e9l\u00e9ment n'est pas pr\u00e9sent , il faut s'assurer que la quantit\u00e9 fin-debut devient strictement n\u00e9gative. Cette quantit\u00e9 est un variant de boucle , c'est-\u00e0-dire que sa valeur d\u00e9cro\u00eet \u00e0 chaque passage dans la boucle. Prenons l'exemple de la recherche de 7 dans le tableau de la partie A. Compl\u00e9ter comment la valeur des variables varie \u00e0 chaque \u00e9tape. fin-debut d\u00e9cro\u00eet \u00e0 chaque passage de boucle, et dans le pire des cas devient n\u00e9gative : on sort de la boucle. C. Complexit\u00e9 \u00b6 Lorsque la taille du tableau double, on ne fait qu'une seule comparaison en plus lorsque l'on fait la recherche d'\u00e9l\u00e9ment avec l' algorithme de recherche dichotomique . Exemple Recherche de 8 dans un tableau 2 fois plus grand que celui de la partie A. On ne rajoute qu'une \u00e9tape ! De mani\u00e8re g\u00e9n\u00e9rale, on cherche combien de fois il faut diviser par \\(2\\) pour n'avoir plus qu'une seule possibilit\u00e9 (c'est le pire des cas) . On cherche donc a tel que \\(n/2^a=1\\) . C'est-\u00e0-dire \\(2^a= n\\) La fonction \\(log_2\\) permet d'extraire \\(a\\) : \\(log_2(2^a) = log_2(n)\\) \\(a = log_2(n)\\) Sa complexit\u00e9 est donc en \\(O(log_2(n))\\) . Les donn\u00e9es devant \u00eatre tri\u00e9es avant d'appliquer l'algorithme de recherche dichotomique, la complexit\u00e9 totale de l'algorithme correspond au maximum des complexit\u00e9s entre celle de l'algorithme de tri utilis\u00e9 et \\(O(log_2(n))\\) .","title":"La recherche dichotomique"},{"location":"1ere_22/seq10/recherche_dichotomique/#ii-la-recherche-dichotomique","text":"","title":"II. La recherche dichotomique"},{"location":"1ere_22/seq10/recherche_dichotomique/#cours","text":"Nous avons vu un algorithme de recherche d'\u00e9l\u00e9ment dans un tableau, parcourant tous ces \u00e9l\u00e9ments jusqu'\u00e0 trouver celui qui est recherch\u00e9. Nous avons vu que sa complexit\u00e9 \u00e9tait en \\(O(n)\\) Cet algorithme n'a pas une complexit\u00e9 optimale. On suppose que l'on a appliqu\u00e9 un algorithme de tri au tableau, avant de faire la recherche. L'algorithme de recherche dichotomique permet de faire une recherche plus efficacement.","title":"Cours"},{"location":"1ere_22/seq2/entiers_positifs/","text":"body { text-align: justify} I. Les entiers positifs \u00b6 Cours \u00b6 Le type de variables int pour \"integer\" de Python permet de manipuler des entiers. Ils sont ne sont en fait pas repr\u00e9sent\u00e9s comme nous en avons l'habitude : on utilise une autre base . A. La base 10 (d\u00e9cimale) \u00b6 La base 10 est celle que nous utilisons naturellement aujourd'hui. D\u00e9finitions Elle est constitu\u00e9e de 10 chiffres, de 0 \u00e0 9, et chacun des chiffres utilis\u00e9 a une valeur diff\u00e9rente en fonction de sa position (on parle de num\u00e9ration de position ), nomm\u00e9e rang du chiffre. A chaque rang est associ\u00e9e une puissance de 10 diff\u00e9rente. Exemples Prenons le nombre \\(2005_{10}\\) (la notation \\(nombre_{10}\\) indique que l'on consid\u00e8re sa repr\u00e9sentation dans la base 10). Rang Chiffre 3 2 2 0 1 0 0 5 On peut d\u00e9composer ce nombre de la mani\u00e8re suivante : \\(2005_{10} = 2\\times10^3 + 0\\times10^2 + 0\\times10^1 + 5\\times10^0 = 2000 + 5\\) Faire la m\u00eame chose avec le nombre \\(1990_{10}\\) . Solution \\(1990_{10} = 1\\times10^3 + 9\\times10^2 + 9\\times10^1 + 0\\times10^0 = 1000 + 900 + 90\\) Qu'a-t-on fait pour d\u00e9composer ces nombres dans la base 10 ? On a multipli\u00e9 chacun de ses chiffres par \\(10^{rang}\\) . B. La base 2 (binaire) \u00b6 D\u00e9finition La base binaire est constitu\u00e9e de 2 nombres : 0 et 1 (un bit ), et est tr\u00e8s utilis\u00e9e en informatique. B.1. Du binaire au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en binaire \u00e0 sa repr\u00e9sentation en base d\u00e9cimale, on multiplie chaque chiffre par la puissance de 2 associ\u00e9e \u00e0 son rang (comme pour la base d\u00e9cimale, mais avec 2 au lieu de 10). Les puissances de 2 usuelles sont \u00e0 conna\u00eetre et/ou \u00e0 savoir retrouver : Puissance de 2 Valeur \\(2^0\\) \\(1\\) \\(2^1\\) \\(2\\) \\(2^2\\) \\(4\\) \\(2^3\\) \\(8\\) \\(2^4\\) \\(16\\) \\(2^5\\) \\(32\\) \\(2^6\\) \\(64\\) \\(2^7\\) \\(128\\) \\(2^8\\) \\(256\\) \\(2^9\\) \\(512\\) \\(2^10\\) \\(1024\\) Exemples Pour convertir \\(1010_2\\) , remplir le tableau puis \u00e9crire sa d\u00e9composition en fonction des puissances de 2. Rang Chiffre 3 2 1 0 Solution Rang Chiffre 3 1 2 0 1 1 0 0 \\(1010_2 = 1\\times2^3 + 0\\times2^2 + 1\\times2^1 + 0\\times2^0 = 8 + 2 = 10_{10}\\) Faire la m\u00eame chose avec le nombre \\(0110 0100_2\\) . Solution \\(0110 0100_2 = 1\\times2^6 + 1\\times2^5 + 1\\times2^2 = 64+32+4 = 80_{10}\\) B.2. Du d\u00e9cimal au binaire \u00b6 Pour passer d'un nombre en \u00e9criture d\u00e9cimale \u00e0 sa repr\u00e9sentation en binaire, on utilise l' algorithme suivant : - On fait la division euclidienne ce nombre par 2 et on stocke le reste. - On remplace ce nombre par le quotient de sa division euclidienne par 2. - On s'arr\u00eate lorsque ce quotient devient 0. - Le nombre en repr\u00e9sentation binaire se lit en associant les restes des divisions successives, en commen\u00e7ant par la derni\u00e8re . Exemple B.3. Nombre de bits n\u00e9cessaires \u00b6 Pour trouver le nombre de bits n\u00e9cessaires pour repr\u00e9senter un nombre d\u00e9cimal, on cherche la puissance de 2 sup\u00e9rieure la plus proche \u00e0 ce nombre. Le nombre de bits est donn\u00e9 par la puissance. C. La base 16 (hexad\u00e9cimale) \u00b6 La base 2 est \u00e0 la base du fonctionnement de l'informatique, mais son utilisation peut \u00eatre laborieuse lorsque l'on veut manipuler des nombres relativement grands. On utilise alors la base 16 , ou base hexad\u00e9cimale . D\u00e9finition La base hexad\u00e9cimale est une base de 16 symboles, utilisant l'ensemble des chiffres de 0 \u00e0 9 pour coder ses 10 premiers \u00e9l\u00e9ments, et ensuite les lettres de A \u00e0 F, repr\u00e9sentant les nombres \\(10_{10}\\) \u00e0 \\(15_{10}\\) . Base 10 Base 16 10 A 11 B 12 C 13 D 14 E 15 F C.1. De l'hexad\u00e9cimal au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en hexad\u00e9cimal \u00e0 sa repr\u00e9sentation d\u00e9cimale, on multiplie chaque chiffre par la puissance de 16 associ\u00e9e \u00e0 son rang . Pour les lettres de A \u00e0 F, on utilise le nombre correspondant dans la base 10 (voir le tableau ci-dessus). Exemples \\(5_{16}\\) \\(5_{16} = 5\\times16^0 = 5_{16}\\) \\(2A_{16}\\) \\(2A_{16} = 2\\times16^1 + 10\\times16^0 = 32 + 10 = 42_{16}\\) \\(1BF_{16}\\) \\(1BF_{16} = 1\\times16^2 + 11\\times16^1 + 15\\times16^0 = 256 + 176 + 15 = 447_{16}\\) C.2. Du d\u00e9cimal \u00e0 l'hexad\u00e9cimal \u00b6 Pour passer d'un nombre en base 10 \u00e0 sa repr\u00e9sentation en base 16, on utilise le m\u00eame algorithme que pour passer de la base 10 \u00e0 la base 2, sauf que l'on divise successivement par 16. Exemple C.3. Hexad\u00e9cimal et binaire \u00b6 Cette base est facile d'utilisation de par sa relation avec la base binaire : il est facile de passer de l'une \u00e0 l'autre. Pour repr\u00e9senter une valeur de 0 \u00e0 15, il faut 4 bits, donc pour repr\u00e9senter 1 octet on utilise 2 nombres en hexad\u00e9cimal. Pour passer de l' hexad\u00e9cimal au binaire , on associe la repr\u00e9sentation binaire de chacun de ses symboles. Exemple \\(2A_{16} = 00101010_2\\) Pour passer du binaire \u00e0 l'hexad\u00e9cimal , on regroupe les bits par 4 (on ajoute des \\(0\\) si n\u00e9cessaire) et on convertit chaque groupe dans sa repr\u00e9sentation hexad\u00e9cimale. Exemple \\(10001110_{2} = 8E_{16}\\) Exercice Pour repr\u00e9senter la couleur des pixels d'une image, on utilise des valeurs allant de 0 \u00e0 255 pour chacune des composantes rouge, vert et bleu (R, V, B). Combien de bits faut-il pour repr\u00e9senter la valeur d'une composante ? \\(255 = 2^8-1\\) Il faut donc 8 bits pour repr\u00e9senter la valeur d'une composante. Pourquoi est-il int\u00e9ressant d'utiliser la base hexad\u00e9cimale ? Il est int\u00e9ressant d'utiliser la base hexad\u00e9cimale car il suffit de 2 valeurs pour repr\u00e9senter chaque composante R, V ou B. D. Une base quelconque \u00b6 Les principes de conversion entre les bases d\u00e9cimale, binaire et hexad\u00e9cimale sont les m\u00eames pour les autres bases (base 5, 7, 18, ou pourquoi pas 666...). Chaque nombre est d\u00e9composable dans n'importe quelle base comme la somme des puissances de la base coefficient\u00e9es . TD : Repr\u00e9sentation des entiers positifs \u00b6 Exercice 1 : repr\u00e9sentation binaire des chiffres \u00b6 Calculer la repr\u00e9sentation binaire de l'ensemble des chiffres de \\(0_{10}\\) \u00e0 \\(9_{10}\\) . Exercice 2 : conversions binaire/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(11_2\\) \\(101_2\\) \\(1010_2\\) \\(100111_2\\) Convertir en binaire, et v\u00e9rifier que le r\u00e9sultat est correct : \\(13_{10}\\) \\(18_{10}\\) \\(26_{10}\\) Exercice 3 : nombre de bits n\u00e9cessaires \u00e0 l'\u00e9criture d'un entier \u00b6 Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(1111\\) . Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(111111\\) . Quelle est la valeur maximale repr\u00e9sentable sur 4 bits ? Sur 6 bits ? (les exprimer avec des puissances de 2) Comment peut-on g\u00e9n\u00e9raliser pour \\(n\\) bits ? En d\u00e9duire combien de nombres sont repr\u00e9sentables sur \\(n\\) bits. Je consid\u00e8re le nombre \\(35_{10}\\) . Comment savoir combien de bits est-ce qu'il faut utiliser pour le repr\u00e9senter en binaire ? Exercice 4 : addition d'entiers positifs (attention \u00e0 l' overflow !) \u00b6 Pour faire la somme de nombres binaires, on utilise les r\u00e8gles suivantes : Somme binaire \\(0_2+0_2 = 0_2\\) \\(0_2+1_2 = 1_2\\) \\(1_2 + 1_2 = 0_2\\) et on retient \\(1\\) Faire la somme des entiers binaires \\(0100 1101_2\\) et \\(11000110_2\\) , et v\u00e9rifier votre r\u00e9sultat en utilisant la base d\u00e9cimale. En machine, si on utilise uniquement 1 octet pour repr\u00e9senter chaque entier, que se passerait-il lorsqu'on ferait l'addition de la question pr\u00e9c\u00e9dente ? En pratique, il faut v\u00e9rifier que l'on dispose de suffisamment de bits avant de faire l'addition de 2 entiers. Exprimer en fonction de \\(n\\) le nombre maximal de bits n\u00e9cessaires pour faire l'addition de deux entiers de taille \\(n\\) . Exercice 5 : multiplication d'entiers positifs \u00b6 Pour faire la multiplication de nombres binaires, on utilise les r\u00e8gles suivantes : Multiplication binaire \\(0_2*0_2 = 0_2\\) \\(0_2*1_2 = 0_2\\) \\(1_2 *1_2 = 1_2\\) On proc\u00e8de de la m\u00eame mani\u00e8re qu'avec le syst\u00e8me d\u00e9cimal. Par exemple, \\(1100_2*1010_2=11000+1100000=1111000_2\\) Poser la multiplication de \\(1010_2\\) par \\(1110_2\\) . Sur combien de bits s'\u00e9crivent les r\u00e9sultats de ces deux exemples ? G\u00e9n\u00e9raliser en fonction de \\(n\\) , combien de bits sont n\u00e9cessaire au maximum pour effectuer la multiplication de deux entiers positifs cod\u00e9s sur \\(n\\) bits. Exercice 6 : repr\u00e9sentation hexad\u00e9cimale \u00b6 Calculer la repr\u00e9sentation hexad\u00e9cimale de l'ensemble des nombres de \\(0_{10}\\) \u00e0 \\(20_{10}\\) . Exercice 7 : conversions hexad\u00e9cimal/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(3_{16}\\) \\(1C_{16}\\) \\(2D_{16}\\) \\(B1_{16}\\) Convertir en hexad\u00e9cimal : \\(18_{10}\\) \\(75_{10}\\) \\(926_{10}\\) Exercice 8 : conversions hexad\u00e9cimal/binaire \u00b6 Convertir en hexad\u00e9cimal : \\(01000101_2\\) \\(11010000_2\\) Convertir en binaire : \\(16_{16}\\) \\(A5_{16}\\) Exercice 9 : adresses IP \u00b6 Le format d'une adresse IPv4 est le suivant : a.b.c.d avec a, b, c et d des entiers allant de 0 \u00e0 255. Combien de bits faut-il pour repr\u00e9senter chacun de ces entiers ? A combien d'octets cela correspond-il en tout ? Repr\u00e9senter l'adresse suivante en \u00e9criture binaire : 192.168.10.1 Une adresse IPv6 est constitu\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, s\u00e9par\u00e9s par des \":\". Par exemple, celle du serveur de facebook.com est : 2a03:2880:f145:82:face:b00c:0:25de . Combien de bits faut-il pour repr\u00e9senter chaque champ ? Combien de bits faut-il en tout pour \u00e9crire une adresse au format IPv6 ? TP : Les entiers positifs en machine \u00b6 A. Les conversions en Python \u00b6 A.1. Vers le d\u00e9cimal \u00b6 Convertir \\(1001_2\\) en d\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console Python : >>> 0b1001 Convertir \\(5D_{16}\\) en d\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console python : >>> 0x5d A.2. Vers le binaire et l'hexad\u00e9cimal \u00b6 Les fonctions que vous allez utiliser sont des fonctions natives de Python, c'est-\u00e0-dire qu'il n'y a pas besoin d'importer de biblioth\u00e8ques pour les utiliser. 1. Convertir \\(11_{10}\\) en binaire. 2. V\u00e9rifier votre solution en tapant dans la console python : >>> bin(11) 3. Quel est le format de la sortie de cette fonction ? 4. Il est possible de la convertir en int avec la fonction int() dont un extrait de la documentation est donn\u00e9 ci-dessous. Utiliser cette documentation pour convertir la sortie de la fonction bin() en int . int(x, base=10) -> integer Convert a number or string to an integer (...) If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance (...) Convertir \\(195_{10}\\) en hexad\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console python : >>> hex(195) B. Le type int \u00b6 Dans certains langages informatiques, comme le C, il existe plusieurs types diff\u00e9rents d'entiers en fonction du nombre de bits n\u00e9cessaire pour repr\u00e9senter le nombre. En Python, il n'y a qu'un seul type. On peut donc penser que la taille des entiers qui peuvent \u00eatre manipul\u00e9s est infinie... mais l'infini n'existe pas en informatique. Si la taille maximale (souvent 32 ou 64 bits) utilisable par le processeur est d\u00e9pass\u00e9e, le nombre est d\u00e9coup\u00e9 en plusieurs parties. Cela a pour cons\u00e9quence un espace plus grand occup\u00e9 en m\u00e9moire et un ralentissement de l'ex\u00e9cution du programme. La biblioth\u00e8que time de Python permet de mesurer ce temps d'ex\u00e9cution. Dans le code suivant, on importe pour cela la fonction time : from time import time st = time () for i in range ( 50000 ): a = 2 ** i print ( time () - st ) range 0 \u00e0 49 999 50 000 \u00e0 99 999 200 000 \u00e0 249 999 temps d'ex\u00e9cution Ex\u00e9cuter ce programme et reporter dans le tableau la valeur qui s'affiche \u00e0 l'\u00e9cran. Changer les bornes du range pour avoir i variant de 50 000 \u00e0 99 999 . Reporter la valeur obtenue. Faire de m\u00eame pour faire varier i entre 200 000 et 249 999 et reporter le r\u00e9sultat. Qu'en concluez-vous ?","title":"Entiers positifs"},{"location":"1ere_22/seq2/entiers_positifs/#i-les-entiers-positifs","text":"","title":"I. Les entiers positifs"},{"location":"1ere_22/seq2/entiers_positifs/#cours","text":"Le type de variables int pour \"integer\" de Python permet de manipuler des entiers. Ils sont ne sont en fait pas repr\u00e9sent\u00e9s comme nous en avons l'habitude : on utilise une autre base .","title":"Cours"},{"location":"1ere_22/seq2/entiers_positifs/#td-representation-des-entiers-positifs","text":"","title":"TD : Repr\u00e9sentation des entiers positifs"},{"location":"1ere_22/seq2/entiers_positifs/#tp-les-entiers-positifs-en-machine","text":"","title":"TP : Les entiers positifs en machine"},{"location":"1ere_22/seq2/entiers_relatifs/","text":"body { text-align: justify} II. Les entiers relatifs \u00b6 TD \u00b6 A. Une premi\u00e8re approche... \u00b6 Pour repr\u00e9senter des entiers relatifs en machine, on peut tout d'abord penser qu'un bit peut \u00eatre r\u00e9serv\u00e9 au signe : par exemple le premier bit d'un entier cod\u00e9 sur 4 bits sera \u00e0 1 si c'est un entier n\u00e9gatif, \u00e0 0 si c'est un entier positif. \\(0010_2\\) repr\u00e9senterait alors \\(2_{10}\\) , et \\(1010_2\\) repr\u00e9senterait \\(-2_{10}\\) . Quels seraient les nombres minimal et maximal qui pourraient \u00eatre repr\u00e9sent\u00e9s ? Quel nombre aurait 2 repr\u00e9sentations ? Que ferait l'addition de \\(0101_2\\) ( \\(5_{10}\\) ) et \\(1011_2\\) ( \\(-3_{10}\\) ) ? B. Le compl\u00e9ment \u00e0 2 puissance n \u00b6 On propose de coder les entiers sur 4 bits avec la m\u00e9thode d\u00e9crite sur le sch\u00e9ma ci-contre. Les calculs suivants sont-ils corrects ? Compl\u00e9ter le calcul avec les r\u00e9sultats et les conversions (ne pas compter l'overflow pour l'addition binaire !) . Binaire D\u00e9cimal Binaire D\u00e9cimal \\(0101_2\\) \\(5_{10}\\) \\(0011_2\\) \\(+1101_2\\) \\(-3_{10}\\) \\(+1001_2\\) Ce codage ne sort pas de nulle part : il s'agit de ce que l'on appelle de la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) . M\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) (compl\u00e9ment \u00e0 2) Pour repr\u00e9senter un entier positif sur \\(n\\) bits, on prend sa repr\u00e9sentation binaire en ajoutant autant de 0 que n\u00e9cessaire devant pour avoir au total \\(n\\) bits. Pour repr\u00e9senter un entier n\u00e9gatif \\(-m\\) sur \\(n\\) bits : On code en binaire l'entier positif \\(m\\) , On inverse tous les bits (on prend le compl\u00e9ment \u00e0 1 ), On additionne l'entier 1 au nombre obtenu. Si l'addition d\u00e9passe \\(n\\) bits, on ne conserve pas le bit suppl\u00e9mentaire ( \"overflow\" ). Exemple : Repr\u00e9senter -6 sur 4 bits. Entier 6 en binaire 0110 Compl\u00e9ment \u00e0 1 1001 Addition de 1 + 0001 Compl\u00e9ment \u00e0 \\(2^4\\) 1010 V\u00e9rifier avec le sch\u00e9ma \u00e0 quoi correspond la solution trouv\u00e9e. Utiliser la m\u00e9thode du compl\u00e9ment \u00e0 2 pour repr\u00e9senter : \\(-6_{10}\\) sur 8 bits, Entier 6 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) \\(-68_{10}\\) sur 8 bits. Entier 68 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) Faire l'addition de \\(-5_{10}\\) et \\(5_{10}\\) en binaire sur 4 bits (ne pas oublier de ne pas conserver l'\"overflow\") . Calculer le compl\u00e9ment \u00e0 \\(2^4\\) de \\(-5_{10}\\) . En d\u00e9duire comment obtenir la valeur d\u00e9cimale d'un entier n\u00e9gatif cod\u00e9 avec le compl\u00e9ment \u00e0 2. En d\u00e9duire la valeur d\u00e9cimale de l'entier repr\u00e9sent\u00e9 sur 4 bits par \\(1110_2\\) . Cours \u00b6 Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement. A. La m\u00e9thode \u00b6 La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) du TD est \u00e0 conna\u00eetre. Le nombre de bits utilis\u00e9s pour cette repr\u00e9sentation doit toujours \u00eatre pr\u00e9cis\u00e9 : 8, 16, 32, 64 bits sont des tailles couramment utilis\u00e9es. Le bit le plus \u00e0 gauche repr\u00e9sente le signe : il vaut 1 si l'entier est n\u00e9gatif, 0 s'il est positif . Par rapport aux entiers non-sign\u00e9s, il faut donc compter un bit suppl\u00e9mentaire pour le signe lorsque l'on \u00e9value le nombre de bits n\u00e9cessaire \u00e0 la repr\u00e9sentation du nombre. B. Les entiers repr\u00e9sentables \u00b6 Le nombre maximal repr\u00e9sentable sur 4 bits avec cette m\u00e9thode est \\(0111\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction du nombre de bits utilis\u00e9 \\(n\\) . Solution Sa valeur est de 7, soit \\(2^{n-1}-1\\) . De la m\u00eame mani\u00e8re, donner le nombre maximal repr\u00e9sentable sur 8 bits, en \u00e9criture binaire et d\u00e9cimale. Solution Ce nombre est 01111111, soit 127. Le nombre minimal repr\u00e9sentable sur 4 bits est \\(1000\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction de \\(n\\) . Solution Ce nombre est -8, soit \\(2^{n-1}\\) . Conclusion : Les valeurs pouvant \u00eatre repr\u00e9sent\u00e9es avec cette m\u00e9thode vont donc de \\(-2^{n-1}\\) \u00e0 \\(2^{n-1}-1\\) .","title":"Entiers relatifs"},{"location":"1ere_22/seq2/entiers_relatifs/#ii-les-entiers-relatifs","text":"","title":"II. Les entiers relatifs"},{"location":"1ere_22/seq2/entiers_relatifs/#td","text":"","title":"TD"},{"location":"1ere_22/seq2/entiers_relatifs/#cours","text":"Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement.","title":"Cours"},{"location":"1ere_22/seq2/flottants/","text":"body { text-align: justify} III. Les flottants \u00b6 Cours \u00b6 En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom, comme pour les entiers ? Nous allons voir que ces deux ensembles ne sont pas tout \u00e0 fait \u00e9quivalents... Introduction \u00b6 Que doit, a priori, renvoyer le test 0.1 + 0.2 == 0.3 ? Il devrait renvoyer True . Que renvoie-t-il en fait ? Il renvoie False . Quelle est en fait la valeur de 0.1 + 0.2 ? Sa valeur est 3.0000...00004 Comprenons ce qu'il s'est pass\u00e9... A. D\u00e9composition et conversion de la base 2 \u00e0 la base 10 \u00b6 Prenons le nombre \\(3.375\\) . On sait \u00e9crire sa partie avant la virgule en binaire (qui vaut \\(11_2\\) ). Sa partie apr\u00e8s la virgule, on peut la d\u00e9composer dans la base 10, comme on l'a fait pour la partie enti\u00e8re : \\(0.375 = 3*10^{-1} + 7*10^{-2} + 5*10^{-3}\\) Les rangs des puissances de 10 sont ici n\u00e9gatifs (-1, -2 et -3). De la m\u00eame fa\u00e7on, un nombre \u00e0 virgule \u00e9crit en binaire se d\u00e9compose en fonction de 2 \u00e0 la puissance son rang : \\(10.011_2 = 1*2^1+1*2^{-2}+2^{-3} = 2+0.25+0.125 = 2.380\\) B. Conversion de la base 10 \u00e0 la base 2 \u00b6 Conversion de la partie d\u00e9cimale d'un nombre r\u00e9el de la base 10 \u00e0 la base 2 On multiplie cette partie par 2. La partie enti\u00e8re de ce produit donne le premier coefficient apr\u00e8s la virgule. On garde la partie d\u00e9cimale du produit. On r\u00e9it\u00e8re l'algorithme avec cette valeur, jusqu'\u00e0 ce qu'elle devienne nulle . Exemples : Remplir le tableau suivant, pour obtenir la conversion de \\(0.375\\) . Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.375*2=0.750\\) \\(0\\) \\(0.750\\) \\(0.750*2=1.500\\) \\(1\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(3.375_{10} = 11.011_2\\) Trouver la repr\u00e9sentation binaire de \\(0.25_{10}\\) . Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.25*2=0.5\\) \\(0\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(0.25_{10}=0.01_2\\) Que se passe-t-il lorsque l'on veut convertir la fraction \\(1/3\\) , qui a une \u00e9criture infinie en d\u00e9cimal ? Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(1/3*2=2/3\\) \\(0\\) \\(2/3\\) \\(2/3*2=4/3\\) \\(1\\) \\(1/3\\) L'algorithme ne se termine pas. Ecrire les 5 premi\u00e8res \u00e9tapes de la conversion de \\(0.1_{10}\\) . Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.1*2=0.2\\) \\(0\\) \\(0.2\\) \\(0.2*2=0.4\\) \\(0\\) \\(0.4\\) \\(0.4*2=0.8\\) \\(0\\) \\(0.8\\) \\(0.8*2=1.6\\) \\(1\\) \\(0.6\\) \\(0.6*2=1.2\\) \\(1\\) \\(0.2\\) Que se passe-t-il ? Que peut-on en d\u00e9duire sur la repr\u00e9sentation de \\(0.1_{10}\\) dans la machine ? Pourquoi le test 0.1 + 0.2 == 0.3 renvoie-t-il False ? L'algorithme ne s'arr\u00eate pas. 0.1 ne peut pas \u00eatre repr\u00e9sent\u00e9 de mani\u00e8re exacte, donc 0.1+0.2 ne fait pas exactement 0.3 avec la repr\u00e9sentation de la machine. D. La norme IEEE 754 (son d\u00e9tail n'est pas \u00e0 retenir) \u00b6 Le terme flottant vient du fait que l'on repr\u00e9sente ces nombres avec une virgule flottante . La norme IEEE 754 est la plus employ\u00e9e pour repr\u00e9senter ces nombres. On utilise soit 32 (version utilis\u00e9e ici pour l'exemple) , soit 64 bits pour stocker ces nombres. Le nombre est mis sous la forme : \\(signe*mantisse*base^{exposant}\\) , et on stocke : - son signe (1 bit) , - un exposant (8 bits) , - une mantisse (23 bits) . Exemple : \\(4,3125_{10}=100,0101_2\\) , qui doit \u00eatre transform\u00e9 pour correspondre \u00e0 cette norme, en \\(1,000101.2^2\\) . Il est stock\u00e9 sous la forme : \\(signe = 0\\) (nombre positif), \\(exposant = 10000001\\) (l'exposant est d\u00e9cal\u00e9), \\(mantisse = 0001010000000000000000\\) Conclusion \u00b6 En programmation, est-il pertinent de tester l'\u00e9galit\u00e9 entre deux flottants ? Comment peut-on faire alors ? Ce n'est pas pertinent, car on peut avoir des erreurs dues \u00e0 l'approximation de la repr\u00e9sentation, contrainte par un nombre de bits donn\u00e9. On peut, \u00e0 la place, tester si ces nombres sont suffisamment proches.","title":"Flottants"},{"location":"1ere_22/seq2/flottants/#iii-les-flottants","text":"","title":"III. Les flottants"},{"location":"1ere_22/seq2/flottants/#cours","text":"En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom, comme pour les entiers ? Nous allons voir que ces deux ensembles ne sont pas tout \u00e0 fait \u00e9quivalents...","title":"Cours"},{"location":"1ere_22/seq3/puplet/","text":"body { text-align: justify} III. Le type p-uplet \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 Un p-uplet est une collection ordonn\u00e9e de p \u00e9l\u00e9ments (un nombre donn\u00e9 d'\u00e9l\u00e9ments). Ils peuvent \u00eatre de diff\u00e9rents types . En Python, on utilise le type tuple (terme que l'on retrouve dans quintuple -5 \u00e9l\u00e9ments-, sextuple -6 \u00e9l\u00e9ments-,...). B. Cr\u00e9ation \u00b6 Diff\u00e9rents \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules permettent de cr\u00e9er un tuple . Pour la lisibilit\u00e9 du code, on encadre ces \u00e9l\u00e9ments par des parenth\u00e8ses . Exemple tuple1 = (0, 5, 2) C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un p-uplet tuple1 sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du p-uplet - 1 . L'acc\u00e8s \u00e0 un \u00e9l\u00e9ment d'un p-uplet fonctionne comme l'acc\u00e8s d'un \u00e9l\u00e9ment d'un tableau. Exemple tuple1[1] renvoie 5 . D. Modification \u00b6 C'est une sp\u00e9cificit\u00e9 du tuple , il n'est pas modifiable ! Il est dit non-muable . S'il est choisi au lieu d'un tableau, c'est souvent pour cette particularit\u00e9 : pour \u00e9viter que des valeurs soient modifi\u00e9e en cours de programme. E. Utilisation dans des fonctions \u00b6 Il est possible de faire renvoyer plusieurs valeurs \u00e0 une fonction. Ces valeurs sont alors renvoy\u00e9es sous la forme d'un tuple . Exemple def maximum ( t ): max_val = t [ 0 ] max_ind = 0 for i in range ( len ( t )): if t [ i ] > max_val : max_val = t [ i ] max_ind = i return max_val , max_ind 1. Ecrire l'appel de la fonction maximum pour t valant [-15, 7, 36, -1] , permettant de stocker la valeur et l'indice du maximum dans des variables. v , i = maximum ([ - 15 , 7 , 36 - 1 ]) 2. Ecrire le m\u00eame appel, mais stockant les valeurs de sortie dans une variable. Afficher ensuite ces valeurs s\u00e9par\u00e9ment. maxi = maximum ([ - 15 , 7 , 36 - 1 ]) print ( \"La valeur maximum est :\" , maxi [ 0 ]) print ( \"L'indice du maximum est :\" , maxi [ 1 ])","title":"Types Construits"},{"location":"1ere_22/seq3/puplet/#iii-le-type-p-uplet","text":"","title":"III. Le type p-uplet"},{"location":"1ere_22/seq3/puplet/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq3/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 TD : Exercices sur les types construits \u00b6 A. Les types \u00b6 1. On dispose d'une liste d\u00e9finie par L = [15,17,12,23] . Quelle est la valeur de L apr\u00e8s l'instruction L[2] = 25 ? A [15,25,12,23] B [15,17,25,12,23] C [15,17,25,23] D [15,17,12,25,23] 2. On d\u00e9finit ainsi une liste M : M = [['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L']] Quelle expression vaut la cha\u00eene de caract\u00e8res 'H' ? A M[1][3] B M[3][1] C M(7) D M(8) 3. Quel est le type de l'expression f(4) si la fonction f est d\u00e9finie par : def f ( x ): return ( x , x ** 2 ) A un entier B un flottant C une liste D un tuple 4. Que vaut l'expression [ 2*k for k in range(5) ] ? A [0,2,4,6,8] B [2,4,6,8,10] C [1,2,4,8,16] D [2,4,8,16,32] 5. On ex\u00e9cute le code suivant : A = [ [ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ] ] B = [ [ 0 , 0 , 0 ], [ 0 , 0 , 0 ], [ 0 , 0 , 0 ] ] for i in range ( 3 ): for j in range ( 3 ): B [ i ][ j ] = A [ j ][ i ] Que vaut B \u00e0 la fin de l'ex\u00e9cution ? A rien du tout, le programme d\u00e9clenche une erreur d'ex\u00e9cution B [ [3,2,1], [6,5,4], [9,8,7] ] C [ [1,4,7], [2,5,8], [3,6,9] ] D [ [7,8,9], [4,5,6], [1,2,3] ] B. Algorithmique \u00b6 1. On consid\u00e8re la fonction suivante : def f ( T , i ): indice = i m = T [ i ] for k in range ( i + 1 , len ( T )): if T [ k ] < m : indice = k m = T [ k ] return indice Quelle est la valeur de f([ 7, 3, 1, 8, 19, 9, 3, 5 ], 0) ? A 1 B 2 C 3 D 4 2. Quelle est la valeur de c \u00e0 la fin de l'ex\u00e9cution du code suivant : L = [ 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 0 , 2 ] c = 0 for k in L : if k == L [ 1 ]: c = c + 1 A 0 B 2 C 3 D 10 3. Un algorithme de calcul de moyenne est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def moyenne ( liste ) : t = 0 for e in liste : t = t + e # assertion vraie \u00e0 cet endroit return t / len ( liste ) Parmi les propositions suivantes, laquelle reste vraie \u00e0 la fin de chaque it\u00e9ration de la boucle ? A e vaut le nombre de passages dans la boucle B t vaut la somme des \u00e9l\u00e9ments visit\u00e9s de la liste C t vaut la moyenne des \u00e9l\u00e9ments visit\u00e9s de la liste D apr\u00e8s k passages dans la boucle la liste contient k termes 4. On ex\u00e9cute le script suivant : liste = [ 17 , 12 , 5 , 18 , 2 , 7 , 9 , 15 , 14 , 20 ] somme = 0 i = 0 while i < len ( liste ): somme = somme + liste [ i ] i = i + 1 resultat = somme / len ( liste ) Quelle affirmation est fausse parmi les suivantes ? A le corps de la boucle a \u00e9t\u00e9 ex\u00e9cut\u00e9 10 fois B \u00e0 la fin de l'ex\u00e9cution la valeur de i est 9 C resultat contient la moyenne des \u00e9l\u00e9ments de liste D len est une fonction 5. On d\u00e9finit la fonction suivante : def traitement ( liste ) : m = liste [ 0 ] for i in range ( len ( liste )) : if liste [ i ] > m : m = liste [ i ] return m Que vaut traitement([-2,5,6,-10,35]) ? A None B -10 C -6 D 35","title":"types construits"},{"location":"1ere_22/seq3/synthese/#synthese","text":"","title":"Synth\u00e8se"},{"location":"1ere_22/seq3/synthese/#td-exercices-sur-les-types-construits","text":"","title":"TD : Exercices sur les types construits"},{"location":"1ere_22/seq3/tableaux/","text":"body { text-align: justify} I. Le type tableau \u00b6 Cours \u00b6 Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau . A. D\u00e9finition \u00b6 Un tableau est une collection d'\u00e9l\u00e9ments de m\u00eame type, de taille fix\u00e9e , stock\u00e9s les uns \u00e0 la suite des autres, dont la valeur est accessible gr\u00e2ce \u00e0 leur indice . En Python, on utilise le terme plus g\u00e9n\u00e9ral de liste pour repr\u00e9senter des tableaux . B. Cr\u00e9ation \u00b6 On d\u00e9clare un nouveau tableau en s\u00e9parant ses \u00e9l\u00e9ments par des virgules , l'ensemble \u00e9tant entour\u00e9 de crochets . [] est un tableau vide . Exemple Pour stocker l'ensemble des nombres premiers inf\u00e9rieurs \u00e0 10, on peut utiliser un tableau appel\u00e9 ici tab_premiers : tab_premiers = [ 2 , 3 , 5 , 7 ] Les diff\u00e9rents \u00e9l\u00e9ments sont stock\u00e9s c\u00f4te \u00e0 c\u00f4te dans la m\u00e9moire. Compl\u00e9ter le sch\u00e9ma suivant avec les valeurs de tab_premiers : Solution C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un tableau tab sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du tableau - 1 (en Python : len(tab)-1 ). On acc\u00e8de \u00e0 l'\u00e9l\u00e9ment d'indice i avec la syntaxe tab[i] . Exemple : Pour l'exemple de tab_premiers , associer chaque \u00e9l\u00e9ment du tableau \u00e0 son indice. V\u00e9rifier que l'indice du dernier \u00e9l\u00e9ment correspond \u00e0 len(tab_premiers)-1 . \u00e9l\u00e9ment indice 2 3 5 7 Solution \u00e9l\u00e9ment indice 2 0 3 1 5 2 7 3 On a bien len(tab_premiers) -1 = 4-1 = 3, indice du dernier \u00e9l\u00e9ment de tab_premiers . Quelle instruction permet d'afficher la valeur 3 ? La valeur de l'\u00e9lement d'indice 2 ? Solution tab[1] affiche la valeur 3 . tab[2] affiche la valeur de l'\u00e9l\u00e9ment d'indice 2`. Comment afficher successivement la valeur des \u00e9l\u00e9ments de tab_premiers , avec une boucle ? Solution for i in range ( len ( tab_premiers )): print ( tab_premiers [ i ]) D. Modification \u00b6 Il est possible de modifier la valeur d'un \u00e9l\u00e9ment d'un tableau t apr\u00e8s sa cr\u00e9ation, en lui affectant une nouvelle valeur avec la syntaxe t[i] = v . Exemples Une erreur a \u00e9t\u00e9 faite lors de la d\u00e9claration de tab_premiers : tab_premiers = [ 1 , 3 , 5 , 7 ] Ecrire l'instruction permettant de rectifier cette erreur. tab_premiers [ 0 ] = 2 Un tableau t de taille 10 a \u00e9t\u00e9 initialis\u00e9 avec uniquement des 0 . On veut en fait qu'il contienne l'ensemble des chiffres de 0 \u00e0 9. Ecrire une boucle permettant de modifier les valeurs de t . for i in range ( len ( t )): t [ i ] = i E. Cr\u00e9ation par compr\u00e9hension \u00b6 Pour cr\u00e9er des tableaux dont la taille peut \u00eatre grande de mani\u00e8re automatique, on peut utiliser la cr\u00e9ation par compr\u00e9hension . Cette m\u00e9thode utilise une boucle et peut aussi int\u00e9grer une condition . Exemples t1 = [2**i for i in range(6)] cr\u00e9e un tableau avec les puissances de 2 de 0 \u00e0 5 . C'est-\u00e0-dire t1 vaut ... Solution t1 vaut [1, 2, 4, 8, 16] . Indiquer ce que contient t2 : t2 = [i+5 for i in range(5)] Solution t2 vaut [5, 6, 7, 8, 9] . Cr\u00e9er un tableau t3 par compr\u00e9hension stockant les valeurs au carr\u00e9 des nombres de 1 \u00e0 5 . Solution t3 = [i**2 for i in range(1,6)] Indiquer ce que contient t4 : t4 = [i for i in range(10) if i%2 == 0] Solution t4 vaut [0, 2, 4, 6, 8] . F. Les tableaux \u00e0 2-dimensions \u00b6 Un tableau \u00e0 deux dimensions , appel\u00e9 matrice , est un tableau dont chaque \u00e9l\u00e9ment est aussi un tableau. On acc\u00e8de \u00e0 un \u00e9l\u00e9ment par son num\u00e9ro de ligne i et son num\u00e9ro de colonne j : si elle s'appelle mat , cela correspond \u00e0 mat[i][j] . Exemple : mat = [[2,8,1], [3,9,0]] a deux \u00e9l\u00e9ments , d'indice 0 et 1. Ces \u00e9l\u00e9ments comportent eux trois \u00e9l\u00e9ments . Compl\u00e9ter le tableau suivant : indice \u00e9l\u00e9ment 0 1 Solution indice \u00e9l\u00e9ment 0 [2,8,1] 1 [3,9,0] Le repr\u00e9senter sur le sch\u00e9ma suivant, et ajouter les num\u00e9ros de ligne et de colonne : Solution Quelle instruction permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment 3 ? L'\u00e9l\u00e9ment 2 ? Solution mat[1,0] permet d'acc\u00e9der \u00e0 3 et mat[0,0] \u00e0 2 . Exercices sur les tableaux \u00b6 Exercice 1 : (sur feuille) \u00b6 Qu'affiche le programme suivant ? t = [ \"un\" , \"trois\" , \"deux\" ] print ( t [ 1 ], t [ 2 ]) Exercice 2 : (sur feuille) \u00b6 Comment acc\u00e9der sans erreur au 5\u00e8me \u00e9l\u00e9ment d'un tableau t dont on ne conna\u00eet pas encore la taille ? # proposition a a = t [ 5 ] # proposition b if len ( t ) > 4 : a = t [ 4 ] # proposition c if len ( t ) >= 5 : a = t [ 4 ] # proposition d if len ( t ) > 4 : a = t [ 5 ] # proposition e if len ( t ) == 5 : a = t [ 4 ] # proposition f a = t [ 4 ] Exercice 3 : les jours (sur ordinateur) \u00b6 Ecrire une instruction Python stockant le nom des sept jours de la semaine dans un tableau nomm\u00e9 jours . Ecrire un programme permettant d'afficher le noms des sept jours, en utilisant une boucle et la fonction renvoyant la longueur(taille) d'un tableau. Exercice 4 : multiples (sur ordinateur) \u00b6 Ecrire une fonction multiples10 prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les 10 premiers multiples non nuls de n . Ecrire une fonction multiples1000 prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les multiples de n strictement inf\u00e9rieurs \u00e0 1000. Exercice 5 : morpion (sur ordinateur) \u00b6 Ecrire une instruction permettant de g\u00e9n\u00e9rer le tableau \u00e0 2 dimensions repr\u00e9sentant le jeu du morpion ci-dessous. C'est au joueur ayant les 'X' de jouer. Ecrire l'instruction qui lui permet de gagner (il faut qu'il aligne 3 'X' !) . Exercice 6 : la compr\u00e9hension (sur ordinateur) \u00b6 Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension la table de multiplication de 6 (donc les valeurs allant de 1*6 \u00e0 9*6 ). Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension les tables de multiplication de tous les chiffres de 2 \u00e0 9. Toutes les tables sont stock\u00e9es dans une seule matrice : [[ 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 ], # table de 2 [ 3 , 6 , 9 , 12 , 15 , 18 , 21 , 24 , 27 ], # table de 3 ... # etc [ 9 , 18 , 27 , 36 , 45 , 54 , 63 , 72 , 81 ]] # table de 9 ``` ### Exercice 7 : ajouter des \u00e9l\u00e9ments \u00e0 un tableau *(sur ordinateur)* Un tableau est une structure de ** taille fixe **. Dans certains cas , ce n 'est pas pratique car on veut pouvoir rajouter des \u00e9l\u00e9ments au fur et \u00e0 mesure. Il faut pour cela utiliser des **tableaux dynamiques** : des tableaux dont la taille varie. Le type ` list ` de Python impl\u00e9mente cette structure . On peut appliquer des fonctions un peu sp\u00e9ciales , appel\u00e9es * m\u00e9thodes * , comme la fonction ` append ` qui ajoute un \u00e9l\u00e9ment \u00e0 la fin de la liste Python . 1. Ex\u00e9cuter le code suivant : ``` python t = [ - 1 , 0 , 1 , 2 ] t . append ( 3 ) # noter qu'on ne l'appelle pas comme une fonction usuelle! Que contient t apr\u00e8s son ex\u00e9cution ? Ecrire un programme cr\u00e9ant un tableau vide, et ajoutant successivement les valeurs 5 , 10 , 15 et 20 . Il est possible de faire la m\u00eame chose, mais avec l'op\u00e9rateur + . Ex\u00e9cuter le code suivant, et v\u00e9rifier que l'on obtient la m\u00eame chose que pour la question 1 : t = [ - 1 , 0 , 1 , 2 ] t = t + [ 3 ] Ecrire un programme faisant la m\u00eame chose que celui de la question 2, mais en utilisant l'op\u00e9rateur + \u00e0 la place de append .","title":"Types construits - Le type tableau"},{"location":"1ere_22/seq3/tableaux/#i-le-type-tableau","text":"","title":"I. Le type tableau"},{"location":"1ere_22/seq3/tableaux/#cours","text":"Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau .","title":"Cours"},{"location":"1ere_22/seq3/tableaux/#exercices-sur-les-tableaux","text":"","title":"Exercices sur les tableaux"},{"location":"1ere_22/seq3/tableaux_algo/","text":"body { text-align: justify} II. Algorithmique sur les tableaux \u00b6 Cours \u00b6 A. Recherche d'extremum \u00b6 Les tableaux permettent de regrouper plusieurs valeurs au m\u00eame endroit. De ces valeurs, on peut extraire des statistiques, comme trouver son minimum et son maximum . Consid\u00e9rons le tableau t = [2.4, 83.0, 17.1, -28.2, -5.9] . Il faut le parcourir pour obtenir son plus petit \u00e9l\u00e9ment. D\u00e9crire en quelques phrases comment trouver le minimum de l'ensemble du tableau. On parcourt ses \u00e9l\u00e9ments un par un. On stocke la valeur du minimum des \u00e9l\u00e9ments d\u00e9j\u00e0 parcourus dans une variable. Quand on trouve un \u00e9l\u00e9ment de t inf\u00e9rieur \u00e0 ce minimum, on actualise sa valeur. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Une boucle for parcourant l'ensemble du tableau, une variable stockant le minimum. Proposer un algorithme de recherche du minimum d'un tableau, renvoyant cette valeur minimale. param\u00e8tre : tableau t on initialise une variable mini avec t [ 0 ] on parcourt un \u00e0 un le reste des \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i de t est inf\u00e9rieur \u00e0 mini on actualise mini avec t [ i ] on renvoie mini r\u00e9sultat : mini Comment faut-il le modifier pour obtenir la valeur maximale ? On remplace le \"inf\u00e9rieur \u00e0\" par \"sup\u00e9rieur \u00e0\". Appliquer cet algorithme au tableau t , et compl\u00e9ter la table de trace suivante : it\u00e9ration variable mini init 2.4 1 2.4 2 2.4 3 -28.2 4 -28.2 B. Recherche d'occurrence \u00b6 Compter le nombre de fois qu'appara\u00eet une valeur dans un tableau s'appelle compter les occurrences de cette valeur. B.1. Compter les occurrences \u00b6 On consid\u00e8re t = ['chat', 'chien', 'rat', 'loup', 'chat'] , et on veut pouvoir compter le nombre d'occurrences d'une valeur dans t . D\u00e9crire en quelques phrases comment faire pour trouver le nombre d'occurrence d'une valeur v dans un tableau t . On parcourt les \u00e9l\u00e9ments de t un \u00e0 un, jusqu'au bout du tableau. Lorsque l'on trouve un \u00e9l\u00e9ment \u00e9gal \u00e0 v, on incr\u00e9mente une variable comptant les occurrences. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Il faut utiliser une boucle born\u00e9e (for), et une variable comptant les occurrences. Proposer un algorithme effectuant ce comptage : param\u00e8tre : tableau t on initialise nb_occ \u00e0 0 on parcourt un \u00e0 un tous les \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i vaut v on incr\u00e9mente nb_occ r\u00e9sultat : nb_occ Appliquer cet algorithme \u00e0 t pour la valeur chat , et remplir la table de trace suivante : it\u00e9ration variable init 0 1 1 2 1 3 1 4 1 5 2 B.2. Trouver une occurrence \u00b6 On veut cette fois-ci indiquer si une valeur est pr\u00e9sente dans le tableau ou non. Quel est le type du r\u00e9sultat ? C'est un bool\u00e9en. Que faut-il changer, par rapport \u00e0 l'algorithme pr\u00e9c\u00e9dent ? Il n'est pas n\u00e9cessaire de parcourir tout le tableau dans tous les cas : lorsqu'on trouve une fois l'\u00e9l\u00e9ment, l'algorithme peut s'arr\u00eater. Comment, alors, \u00e9crire l'algorithme ? param\u00e8tres : tableau t , valeur v on initialise trouve \u00e0 False tant que trouve vaut False et qu il reste des \u00e9l\u00e9ments dans t on parcourt l \u00e9l\u00e9ment suivant de t d indice i si l \u00e9l\u00e9ment i de t vaut v on actualise trouve \u00e0 True r\u00e9sultat : trouve B.3. Type de parcours \u00b6 On dit que l'on fait un parcours total lorsque l'algorithme utilis\u00e9 parcourt l'ensemble d'un tableau dans tous les cas. On a un parcours partiel quand le r\u00e9sultat peut \u00eatre trouv\u00e9, dans certains cas, on ne parcourant qu'une partie du tableau. C. Calcul de moyenne \u00b6 Comment obtenir la moyenne d'un tableau de nombres ? 1. Quelle est la formule pour calculer la moyenne qu'il va falloir utiliser ? moy = somme des \u00e9l\u00e9ments / nombre d'\u00e9l\u00e9ments 2. Identifier le type de parcours \u00e0 appliquer, et les variables \u00e0 utiliser. Il faut faire un parcours total, et utiliser une variable stockant la somme des \u00e9l\u00e9ments. Proposer un algorithme : param\u00e8tre : tableau t on initialise somme \u00e0 0 on parcourt les \u00e9l\u00e9ments de t on ajoute la valeur de l \u00e9l\u00e9ment i de t \u00e0 somme moy vaut somme / ( longueur de t ) r\u00e9sultat : moy L'appliquer \u00e0 t = [2, 83, 17, -20, -5] it\u00e9ration variable somme variable moy init 0 x 1 2 x 2 85 x 3 102 x 4 82 x 5 77 x fin 77 15.4 TP : Algorithmique sur les tableaux 1 \u00b6 Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres. A. Un premier algorithme \u00b6 Sans l'ex\u00e9cuter , analyser le programme ci-dessous, et pr\u00e9dire la valeur de sortie pour le test donn\u00e9. Ex\u00e9cuter ensuite le programme. Le r\u00e9sultat correspond-il \u00e0 ce que vous aviez pr\u00e9dit ? def fonction1 ( tab ): var = tab [ 0 ] for i in range ( 1 , len ( tab )): if tab [ i ] > var : var = tab [ i ] return var print ( \"Premier test :\" , fonction1 ([ 1 , - 5 , 14 , - 2 , 13 ])) Ajouter, dans la cellule pr\u00e9c\u00e9dente, un deuxi\u00e8me test pour tab valant [-10, 30, 4, 7, 16] . En d\u00e9duire ce que fait cette fonction. La copier ci-dessous, et la renommer, ainsi que la variable var pour que son nom soit plus explicite. #recopier et renommer la fonction ici Que faut-il modifier pour que l'on renvoie l'indice de l'\u00e9l\u00e9ment plut\u00f4t que sa valeur ? C'est \u00e0 dire que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 2 au lieu de 14 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 1 au lieu de 30 . Faire la modification ci-dessous, en renommant la fonction : #modifier et renommer la fonction ici B. Un deuxi\u00e8me algorithme \u00b6 Que faut-il modifier pour que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie -5 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie -10 ? Faire la modification ci-dessous, en choisissant un nom appropri\u00e9 pour la fonction : #modifier et renommer la fonction ici De mani\u00e8re similaire \u00e0 la question A.4., on veut pouvoir renvoyer l'indice. Modifier la fonction pour que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 1 au lieu de -5 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 0 au lieu de -10 ? #modifier et renommer la fonction ici Ces algorithmes, avec leurs variations, sont \u00e0 savoir retrouver. TP : Algorithmique sur les tableaux 2 \u00b6 On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver. TP : Impl\u00e9mentation du calcul de la moyenne \u00b6 Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : python from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : python debut = time() m1 = moyenne(t1) tps = (time()-debut)*1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ?","title":"Types Construits"},{"location":"1ere_22/seq3/tableaux_algo/#ii-algorithmique-sur-les-tableaux","text":"","title":"II. Algorithmique sur les tableaux"},{"location":"1ere_22/seq3/tableaux_algo/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq3/tableaux_algo/#tp-algorithmique-sur-les-tableaux-1","text":"Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres.","title":"TP : Algorithmique sur les tableaux 1"},{"location":"1ere_22/seq3/tableaux_algo/#tp-algorithmique-sur-les-tableaux-2","text":"On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver.","title":"TP : Algorithmique sur les tableaux 2"},{"location":"1ere_22/seq3/tableaux_algo/#tp-implementation-du-calcul-de-la-moyenne","text":"Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : python from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : python debut = time() m1 = moyenne(t1) tps = (time()-debut)*1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ?","title":"TP : Impl\u00e9mentation du calcul de la moyenne"},{"location":"1ere_22/seq4/bases_web/","text":"body { text-align: justify} II. L'hypertexte et les bases du web \u00b6 Cours \u00b6 A. D\u00e9finitions \u00b6 Le WWW ou World Wide Web est une application qui permet d'acc\u00e9der \u00e0 un r\u00e9seau de documents, reli\u00e9s entre eux par le principe de l' hypertexte . Quelle est la diff\u00e9rence entre Internet et le Web ? Internet est un r\u00e9seau de machines, sur lequel on peut utiliser diff\u00e9rentes applications comme le Web. C'est un r\u00e9seau d'informations, de documents stock\u00e9s dans des serveurs. On acc\u00e8de \u00e0 une page : - gr\u00e2ce \u00e0 son URL , qui localise sur le r\u00e9seau la machine h\u00e9bergeant la page et la page elle-m\u00eame sur la machine, - gr\u00e2ce \u00e0 un protocole HTTP ou HTTPS . - Cette page est \u00e9crite au minimum avec le langage de description HTML . Ces \u00e9l\u00e9ments forment la base du Web. Nous allons nous int\u00e9resser \u00e0 chacun d'entre eux, mais allons nous concentrer, dans cette s\u00e9quence, sur les langages HTML et CSS. B. Les langages HTML et CSS \u00b6 Le langage HTML (Hypertext Markup Language) structure la page Web, alors que le CSS (Cascading Style Sheet) le met en forme. Une page est imp\u00e9rativement constitu\u00e9e de HTML, et peut contenir sur CSS (aujourd'hui, c'est toujours le cas, pour des consid\u00e9rations graphiques). Elle peut \u00e9galement contenir un langage de programmation (Javascript, PHP,...) Diff\u00e9rence HTML/CSS : Quels \u00e9l\u00e9ments changent lorsqu\u2019on applique le code CSS 2 par rapport au code CSS 1 ? On change la couleur du fond (vert), la taille et la couleur du titre (noir, plus petit). C. Les logiciels du Web \u00b6 C.I. Lire des pages \u00b6 Une page en HTML est ouverte par un navigateur qui est le logiciel capable de lire les pages Web. Donner des exemples de navigateurs. Mozilla Firefox, Google Chrome, Microsoft Edge ou Safari sont des navigateurs. Quelle est la diff\u00e9rence entre navigateur et moteur de recherche ? Un moteur de recherche est un site Web, une application permettant de faire des recherches sur le Web, auquel on acc\u00e8de gr\u00e2ce au navigateur qui peut lire ses pages. C.II. Cr\u00e9er des pages \u00b6 Pour \u00e9crire des pages Web en manipulant HTML et CSS, il faut utiliser un \u00e9diteur de texte . Donner des exemples d'\u00e9diteurs de texte. Le Bloc-notes, Notepad++ sont des exemples d'\u00e9diteur de texte courants. TP : Afficher le texte sur le Web \u00b6 T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"Bases web"},{"location":"1ere_22/seq4/bases_web/#ii-lhypertexte-et-les-bases-du-web","text":"","title":"II. L'hypertexte et les bases du web"},{"location":"1ere_22/seq4/bases_web/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq4/bases_web/#tp-afficher-le-texte-sur-le-web","text":"T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"TP : Afficher le texte sur le Web"},{"location":"1ere_22/seq4/langages_web/","text":"body { text-align: justify} III. Les langages du Web \u00b6 Cours : le HTML \u00b6 Le langage HTML sert \u00e0 structurer le contenu d'une page Web. Son nom, \"hypertexte\" fait r\u00e9f\u00e9rence \u00e0 son r\u00f4le dans la pr\u00e9sentation de l'information, du texte jusqu'\u00e0 d'autres contenus multim\u00e9dias. A. Les bases du HTML \u00b6 A.1. Utilisation de balises \u00b6 C'est un langage de balisage , bas\u00e9 sur l'utilisation de balises ayant des fonctions diff\u00e9rentes. Il sert \u00e0 d\u00e9crire de l'information, pas \u00e0 faire des calculs comme Python ! Exemple : < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ strong > . </ p > Ce code utilise 3 balises : h1 indique un titre principal (il en existe pour diff\u00e9rents niveaux : h2 , h3 ,...), p correspond \u00e0 un paragraphe , strong fait appara\u00eetre le texte en gras ( italique : em ). Chacune est ouverte : <balise1> puis ferm\u00e9e </balise1> au fur et \u00e0 mesure. L'ordre dans lequel on ouvre et on ferme les balise a de l'importance. Il n'aurait pas \u00e9t\u00e9 possible, par exemple, d'\u00e9crire : < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ p > . </ strong > p ayant \u00e9t\u00e9 ouverte avant strong , elle doit \u00eatre referm\u00e9e avant \u00e9galement. A.2. Les attributs \u00b6 Il peut y avoir plusieurs paragraphes dans une page. Pour identifier un paragraphe en particulier, on peut lui ajouter un attribut id : Exemple : < h1 > Voici mon titre ! </ h1 > < p id = \"paragraphe1\" > J'\u00e9cris ensuite un < strong > paragraphe </ p > . </ strong > Cela va permettre, avec les autres langages du Web, de faire un traitement sur ce paragraphe uniquement. On peut aussi utiliser l'attribut class , qui peut \u00eatre utilis\u00e9 plusieurs fois, alors qu'un id est unique ! Les attributs servent en g\u00e9n\u00e9ral \u00e0 ajouter des propri\u00e9t\u00e9s aux balises. Exemples : la balise a pour les liens hypertextes, l'attribut href indiquant la localisation de la page \u00e0 lier : A compl\u00e9ter < a href = \"https://openclassrooms.com/fr/\" > OpenClassrooms </ a > la balise img pour ins\u00e9rer une image, l'attribut src indiquant o\u00f9 se trouve l'image \u00e0 afficher : A compl\u00e9ter < img src = \"ascii.png\" alt = \"code_ascii\" /> Remarque : img est une balise \u00e0 la fois ouvrante et fermante ( auto-fermante ). Il en existe d'autres, comme la balise br qui sert \u00e0 sauter des lignes, et s'utilise de la m\u00eame fa\u00e7on. B. Une page minimale \u00b6 <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > </ head > < body > < h1 > Le HTML </ h1 > < p > Voici le contenu de ma page sur le HTML. </ p > </ body > </ html > Relever les diff\u00e9rentes balises et indiquer leur fonction. Balise Fonction html d\u00e9limite le code en html head d\u00e9finit l'ent\u00eate du fichier meta permet de d\u00e9finir l'encodage utilis\u00e9 pour le texte avec l'attribut charset title d\u00e9finit le titre en haut de la barre de navigation body correspond au corps de la page Cours : Le CSS \u00b6 Le HTML permet de jouer un peu sur la forme du contenu affich\u00e9, mais c'est le CSS qui permet de faire beaucoup plus. A. Les bases du CSS \u00b6 Le code en CSS peut s'\u00e9crire \u00e0 l'int\u00e9rieur d'une page en HTML, ou bien dans un fichier s\u00e9par\u00e9. Pour plus de clart\u00e9, on pr\u00e9f\u00e8re cette deuxi\u00e8me solution. Dans un fichier en .css, on \u00e9crit le code suivant : h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } Il est associ\u00e9 au HTML suivant : < h1 > Pr\u00e9sentation </ h1 > < p > Voici ma page de pr\u00e9sentation. </ p > < br /> < p class = \"special\" > Elle est tr\u00e8s sp\u00e9ciale ! </ p > Quelle est la structure utilis\u00e9e ? A la suite soit du nom d'une balise , soit de celui d'une classe (pr\u00e9c\u00e9d\u00e9e d'un . ), on donne entre accolades des valeurs pour diff\u00e9rentes propri\u00e9t\u00e9s, qui modifient l'apparence du contenu de la balise. Comment s'attend-on \u00e0 voir appara\u00eetre les titres de niveau 1 ? Ils doivent appara\u00eetre centr\u00e9s et sur un fond de couleur rouge. Comment s'attend-on \u00e0 voir appara\u00eetre chacun des paragraphes ? Le premier doit appara\u00eetre dans la police Verdana, en noir. Le deuxi\u00e8me est associ\u00e9 \u00e0 la classe special et appara\u00eetra en bleu, en italique et en 25px. B. Lier CSS et HTML \u00b6 Pour que le code pr\u00e9c\u00e9dent s'applique \u00e0 notre texte, il faut lier le fichier HTML et le fichier CSS. On propose le fichier HTML suivant : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > Le CSS </ h1 > < p > Voici le contenu de ma page sur le CSS. </ p > </ body > </ html > Entourer la ligne qui a chang\u00e9, par rapport au fichier de base vu dans la partie sur le HTML. Il s'agit de la 3\u00e8me ligne de l'ent\u00eate. Quel est le nom de la balise utilis\u00e9e pour relier le fichier CSS au fichier HTML ? Quels sont ses attributs ? Il s'agit de la balise link dont les attributs sont rel (donne des informations sur le type de la ressource) et href qui indique le chemin vers le fichier .css. TP : HTML et CSS \u00b6 Pr\u00e9paration T\u00e9l\u00e9charger le fichier HTML qui servira de base \u00e0 vos pages : base.html L'enregistrer dans un dossier site_web , \u00e0 l'int\u00e9rieur de votre dossier NSI . Faire une copie du fichier et la renommer en presentation.html . Renommer le fichier initial et l'appeler critique.html , Ouvrir vos deux fichiers avec votre \u00e9diteur de texte (Notepad++ ou Bloc-notes). A. Les fichiers HTML \u00b6 Sur ces deux pages HTML, vous allez pr\u00e9senter un film de votre choix sur la page presentation.html , et donner un (court) avis sur le film sur la page critique.html . Vous allez remplir le corps de vos deux pages Web avec les \u00e9l\u00e9ments suivants : 1. Des titres de diff\u00e9rents niveaux (balises <h1> , <h2> ,...), du texte sous la forme de paragraphes ( <p> ) et de liste ( <ul> ) d'\u00e9l\u00e9ments. 2. Des images (balise auto-fermante <img .../> ). 3. Sur chaque page, un lien hypertexte vers l'autre page (balise <a href=...> ). 4. Un lien hypertexte vers un autre site web (idem). 5. Les mots-cl\u00e9s doivent \u00eatre en gras ou bien en italique ( <strong> et <em> ). 6. Une vid\u00e9o embarqu\u00e9e Youtube contenant la bande-annonce du film. Indications Pour la vid\u00e9o Youtube : - Aller sur le site de https://youtube.com et trouver la vid\u00e9o de votre choix, - cliquer sur \"Partager\" puis sur \"Int\u00e9grer\", - copier/coller le code HTML qui s'affiche (d\u00e9limit\u00e9 par une balise <iframe> ) dans le corps de votre page. Pour tout le reste, se r\u00e9f\u00e9rer \u00e0 la fiche memento distribu\u00e9e et, bien s\u00fbr, au cours . Exemple de rendu : B. La feuille de style \u00b6 Pr\u00e9paration A partir de votre \u00e9diteur de texte, cr\u00e9er un nouveau fichier. L'enregistrer sous style.css dans votre dossier site_web . Pour rajouter du style \u00e0 vos pages, il faut d\u00e9finir la feuille de style style.css . Rajouter la ligne qui permet de lier un fichier .html \u00e0 un fichier .css dans l'ent\u00eate de vos deux fichiers presentation.html et critique.html . D\u00e9finir un style pour vos pages. Vous allez utiliser au moins 5 des propri\u00e9t\u00e9s r\u00e9pertori\u00e9es dans le tableau suivant (libre \u00e0 vous d'en utiliser plus, ou d'autres !) : Propri\u00e9t\u00e9 Description Valeurs possibles font-family police du texte d'un \u00e9l\u00e9ment Arial, Verdana, Sans serif,... font-style permet de mettre en italique italic , oblique , normal color couleur du texte d'un \u00e9l\u00e9ment en anglais ( red ), en hexad\u00e9cimal ( #000000 ), en RGB ( rgb(255,255,255) ) background-color couleur de fond 'un \u00e9l\u00e9ment comme pour color width , height respectivement largeur et hauteur d'un \u00e9l\u00e9ment comme pour font-size background-image image d'arri\u00e8re-plan url(\"../chemin_vers_ressource\") Indications Rappelez-vous que vous pouvez s\u00e9lectionner les types de balises ( h1 , h2 , p ...) ou bien les \u00e9l\u00e9ments d'une classe en rajoutant cet attribut. Vous pouvez ensuite appliquer un style \u00e0 certains \u00e9l\u00e9ments d'un type, ou bien \u00e0 un seul \u00e9l\u00e9ment. Exemple de rendu :","title":"Langages web"},{"location":"1ere_22/seq4/langages_web/#iii-les-langages-du-web","text":"","title":"III. Les langages du Web"},{"location":"1ere_22/seq4/langages_web/#cours-le-html","text":"Le langage HTML sert \u00e0 structurer le contenu d'une page Web. Son nom, \"hypertexte\" fait r\u00e9f\u00e9rence \u00e0 son r\u00f4le dans la pr\u00e9sentation de l'information, du texte jusqu'\u00e0 d'autres contenus multim\u00e9dias.","title":"Cours : le HTML"},{"location":"1ere_22/seq4/langages_web/#cours-le-css","text":"Le HTML permet de jouer un peu sur la forme du contenu affich\u00e9, mais c'est le CSS qui permet de faire beaucoup plus.","title":"Cours : Le CSS"},{"location":"1ere_22/seq4/langages_web/#tp-html-et-css","text":"Pr\u00e9paration T\u00e9l\u00e9charger le fichier HTML qui servira de base \u00e0 vos pages : base.html L'enregistrer dans un dossier site_web , \u00e0 l'int\u00e9rieur de votre dossier NSI . Faire une copie du fichier et la renommer en presentation.html . Renommer le fichier initial et l'appeler critique.html , Ouvrir vos deux fichiers avec votre \u00e9diteur de texte (Notepad++ ou Bloc-notes).","title":"TP : HTML et CSS"},{"location":"1ere_22/seq4/texte_machine/","text":"body { text-align: justify} I. Repr\u00e9senter le texte en machine \u00b6 Cours \u00b6 A. Le code ASCII \u00b6 Le code ASCII (American Standard Code for Information Interchange) a \u00e9t\u00e9 propos\u00e9 dans les ann\u00e9es 60 pour standardiser la repr\u00e9sentation des caract\u00e8res. Les mots sont stock\u00e9s sur 1 octet, et seul les 128 premi\u00e8res valeurs sont utilis\u00e9es. Combien de bits sont utilis\u00e9s ? Pour coder 128 valeurs (de 0 \u00e0 127), il faut 7 bits car \\(2^7=128\\) . Il reste donc 1 bit non-utilis\u00e9 sur cet octet. Il ne permet que de repr\u00e9senter les caract\u00e8res principaux de la langue anglaise, ainsi que des caract\u00e8res non-imprimables (comme le retour \u00e0 la ligne). Il pose un probl\u00e8me pour repr\u00e9senter certains caract\u00e8res du fran\u00e7ais, qui n'existent pas dans la langue anglaise. Quels caract\u00e8res ne sont pas repr\u00e9sentables ? Les caract\u00e8res accentu\u00e9s, ou bien le \"\u00e7\" par exemple posent probl\u00e8me. En programmation, on peut avoir l'\u00e9quivalence avec les fonctions ord et chr : >>> ord ( \"k\" ) 107 >>> chr ( 52 ) '4' B. La norme ISO 8859-1 \u00b6 Pour pallier ce probl\u00e8me, la norme ISO 8859-1 , aussi appel\u00e9e Latin-1 a vu le jour pour repr\u00e9senter tous les caract\u00e8res de l'alphabet latin (au nombre de 191) en utilisant 8 bits. Pourquoi est-ce suffisant ? Sur 8 bits, on peut repr\u00e9senter $2^8=256 caract\u00e8res (de 0 \u00e0 255). C'est donc suffisant pour repr\u00e9senter 191 caract\u00e8res. Cette norme permet donc de repr\u00e9senter les caract\u00e8res utilis\u00e9s dans la plupart des langues europ\u00e9ennes. Mais elle laisse de c\u00f4t\u00e9 d'autres alphabets, comme le cyrillique, ou bien les id\u00e9ogrammes utilis\u00e9s en chinois ou en japonais. C. Unicode \u00b6 En 1991 voit le jour la norme qui est utilis\u00e9e aujourd'hui par plus de 95% des sites web : Unicode . Comme son nom l'indique, elle a pour vocation d'int\u00e9grer tous les caract\u00e8res existants, pour pouvoir lire n'importe quel texte sans avoir \u00e0 changer la configuration de son traitement de texte. C'est une table qui r\u00e9pertorie tous les codages existants : elle ne cr\u00e9e pas un nouveau codage. Elle int\u00e8gre donc notamment le code ASCII . Les syst\u00e8mes de codage sont UTF-8 (utilis\u00e9e sur le Web), UTF-16, UTF-32 (des variations, utilisant plus de bits). Pour UTF-8 , les caract\u00e8res sont encod\u00e9s avec un nombre variable d'octets : - les caract\u00e8res les plus \"classiques\" sont cod\u00e9s sur 1 octet (ils correspondent au code ASCII) , - les caract\u00e8res moins classiques peuvent \u00eatre cod\u00e9s sur jusqu'\u00e0 4 octets . Dans un logiciel de traitement de texte, voici par exemple ce qui s'affiche lorsque l'on veut repr\u00e9senter des caract\u00e8res sp\u00e9ciaux : Entourer le code Unicode qui appara\u00eet. TD : Utiliser les normes de repr\u00e9sentation du texte \u00b6 A. Le code ASCII \u00b6 Voil\u00e0 la table donnant l'\u00e9quivalence entre les diff\u00e9rents caract\u00e8res et leur code ASCII : Quel mot est repr\u00e9sent\u00e9 par la suite de nombres, \u00e9crits en d\u00e9cimal, suivante : 72 101 108 108 111 ? Donner son codage en hexad\u00e9cimal. Le caract\u00e8re \"9\" est-il repr\u00e9sent\u00e9 par le chiffre 9 ? Identifier les diff\u00e9rentes cat\u00e9gories de caract\u00e8res, et les associer aux bonnes plages de nombres. B. Norme ISO 8859-1 \u00b6 On donne la table suivante, indiquant comment sont cod\u00e9s les caract\u00e8res avec la norme ISO 8859-1 : Le nombre repr\u00e9sentant chaque symbole est donn\u00e9 en h\u00e9xad\u00e9cimal, \u00e9crit avec 2 symboles. Sur la colonne est indiqu\u00e9e le symbole de rang 1, sur la ligne le symbole de rang 0. Gr\u00e2ce \u00e0 cette table, indiquer comment est repr\u00e9sent\u00e9e les cha\u00eenes de caract\u00e8res \"\u00e9t\u00e9\" et \"F\u00caTE\" en machine, en utilisant la notation hexad\u00e9cimale. Convertir le r\u00e9sultat en d\u00e9cimal pour \"\u00e9t\u00e9\". Ces mots pourraient-ils \u00eatre repr\u00e9sent\u00e9s avec le code ASCII ? Justifier.","title":"Texte machine"},{"location":"1ere_22/seq4/texte_machine/#i-representer-le-texte-en-machine","text":"","title":"I. Repr\u00e9senter le texte en machine"},{"location":"1ere_22/seq4/texte_machine/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq4/texte_machine/#td-utiliser-les-normes-de-representation-du-texte","text":"","title":"TD : Utiliser les normes de repr\u00e9sentation du texte"},{"location":"1ere_22/seq5/client_serveur/","text":"body { text-align: justify} II. Le mod\u00e8le client-serveur \u00b6 Cours \u00b6 Pour obtenir une page Web, votre navigateur va faire une demande, une requ\u00eate au serveur Web sur lequel elle est stock\u00e9e. Qu'est-ce qu'un serveur Web ? C'est une machine capable de r\u00e9pondre \u00e0 des requ\u00eates de l'application Web. Elle stocke les pages Web d'un ou de plusieurs sites au(x)quel(s) des navigateurs peuvent se connecter. A. Localiser la page gr\u00e2ce \u00e0 l'URL \u00b6 Pour localiser une page Web, et le serveur sur lequel elle est stock\u00e9e, l' URL, pour Uniform Ressource Locator de la page est indispensable. Elle est construite selon une structure pr\u00e9d\u00e9finie. Exemple Prenons l'exemple suivant : https://pixees.fr/informatiquelycee/prem/index3.html https ou http, correspond au protocole de communication utilis\u00e9. pixees.fr est le nom de domaine, permettant d'identifier le serveur web qui stocke le site. Quel est le lien entre nom de domaine et adresse IP ? Un nom de domaine est associ\u00e9 \u00e0 une adresse IP via l'annuaire DNS. Comment est structur\u00e9e une adresse IP ? L'adresse IP, qui identifie de mani\u00e8re unique une machine sur le r\u00e9seau, est constitu\u00e9e au format IPv4 de 4 nombres cod\u00e9s sur 1 octet (de 0 \u00e0 255). /informatiquelycee/prem/index3.html est le chemin d'acc\u00e8s au fichier html, sur le serveur. Il suit une arborescence. Une arborescence de fichiers correspond \u00e0 la repr\u00e9sentation de leur hi\u00e9rarchie les uns par rapport aux autres. Sur notre exemple pr\u00e9c\u00e9dent, on peut la repr\u00e9senter la mani\u00e8re suivante. graph TB G[.] --> D G --> I[actualites] D[informatiquelycee] --> A A[sec] --> B(index1.html) D --> C[prem] C --> H(index2.html) D --> E[term] E --> F(index3.html) C'est une structure d' arbre , constitu\u00e9 de noeuds . Le noeud tout en haut est appel\u00e9 racine : de lui, on sait aller partout dans le reste de la structure. Un chemin depuis la racine est nomm\u00e9 chemin absolu . Donner le chemin de la racine au fichier index1.html . ./informatiquelycee/sec/index1.html En d\u00e9duire l'URL permettant d'acc\u00e9der \u00e0 cette page. https://pixees.fr/informatiquelycee/sec/index1.html On se trouve dans informatiquelycee . Quel est le chemin, \u00e0 partir de ce dossier, pour acc\u00e9der \u00e0 index3.html ? /term/index3.html On parle alors de chemin relatif . B. Le mod\u00e8le client-serveur \u00b6 La page est localis\u00e9e, on sait o\u00f9 elle se trouve et sur quel serveur. Notre navigateur va entrer en connexion avec le serveur, selon le mod\u00e8le client-serveur : D\u00e9finitions Le client demande l'acc\u00e8s aux pages par une requ\u00eate. Le serveur r\u00e9pond \u00e0 cette requ\u00eate : si tout se passe bien il envoie le contenu des pages, sinon un message d'erreur. C'est une relation asym\u00e9trique, qui est la plus courante sur le Web. B.I. Exemples d'interactions entre client et serveur \u00b6 Il faut plusieurs \u00e9changes de requ\u00eates pour obtenir l'ensemble d'une page Web : sequenceDiagram participant c as Client participant s as Serveur c->>s: Puis-je avoir la ressource index.html ? s->>c: Oui, la voil\u00e0 c->>s: Il me faudrait aussi les images qui sont sur la page, svp s->>c: Ca arrive ! Ces \u00e9changes peuvent \u00eatre visualis\u00e9s gr\u00e2ce \u00e0 l' inspecteur de propri\u00e9t\u00e9s du navigateur (F12 sous Windows). B.II. Scripts c\u00f4t\u00e9 client et c\u00f4t\u00e9 serveur \u00b6 Un script c\u00f4t\u00e9 client sert \u00e0 rendre la page dynamique. Elle est ex\u00e9cut\u00e9e par le navigateur, pour ne pas surcharger de calculs le serveur. Le Javascript est le langage couramment utilis\u00e9. Un script c\u00f4t\u00e9 serveur est g\u00e9n\u00e9ralement utilis\u00e9 pour collecter ou modifier des donn\u00e9es qu'ils stocke dans une base. Le langage de programmation PHP est couramment utilis\u00e9. Les donn\u00e9es peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es par un formulaire, qui se d\u00e9clare en HTML avec la balise form , et contient des composants graphiques, comme par exemple : Voici un exemple de code PHP qui affiche les donn\u00e9es r\u00e9colt\u00e9es avec ce formulaire : <?php $login_connexion = $_GET [ 'login' ]; $mot_de_passe = $_GET [ 'password' ]; echo 'Les informations transmises au serveur sont :<br/>' ; echo $login_connexion ; echo '<br/>' ; echo $mot_de_passe ; ?> TP : Simulation d'un serveur Web \u00b6 En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher : A. Le r\u00e9seau \u00b6 a. Indiquer, parmi les diff\u00e9rents types de machines cit\u00e9es ci-dessous, si elles sont pr\u00e9sentes ou non sur notre r\u00e9seau : Ordinateur : Portable : Switch : Routeur : Modem : b. A quel type de machine correspond le serveur Web ? ...................................... Les configurations n\u00e9cessaires ont \u00e9t\u00e9 faites pour que l\u2019ordinateur \"Serveur Web\" soit connect\u00e9 aux autres r\u00e9seaux locaux. Obtenir l'adresse IP qui lui a \u00e9t\u00e9 attribu\u00e9e, en double-cliquant sur la machine : ...................................... Rappel SNT : L'adresse IP d'une machine sert \u00e0 l'identifier de mani\u00e8re unique sur un r\u00e9seau. Au format IPv4, elle est constitu\u00e9e de 4 nombres de 0 \u00e0 255. B. Mise en place du serveur \u00b6 Passer en mode simulation en cliquant sur la fl\u00e8che verte puis cliquer sur un des ordinateurs portables. Aller sur \"Installation des logiciels\", puis faire passer \"Ligne de commande\" dans la liste des logiciels install\u00e9s. Appliquer les modifications, puis cliquer sur ce logiciel \"Ligne de commande\". Tester la connexion entre cette machine et le serveur en tapant ping suivi de l'adresse IP du serveur Web relev\u00e9e dans la partie A. Cliquer sur \"Serveur Web\", puis sur Installation des logiciels. Dans la liste de droite, double-cliquer sur \"Explorateur de fichiers\" , \"Editeur de textes\" et \"Serveur web\" , puis sur \"Appliquer les modifications\". Double-cliquer sur l\u2019 explorateur de fichiers , aller dans le dossier webserver . C\u2019est ici que sont stock\u00e9s les fichiers codant la(les) page(s) web h\u00e9berg\u00e9e(s) sur le serveur. Noter le chemin d'acc\u00e8s \u00e0 index.html : .............................................................................. Quel autre fichier trouvez-vous ? ........................................................ Fermer l\u2019explorateur de fichiers et ouvrir l\u2019 \u00e9diteur de texte . Cliquer sur Fichier > Ouvrir et s\u00e9lectionner le fichier index.html dans le dossier webserver . La structure du contenu du fichier doit vous \u00eatre famili\u00e8re. Modifier le contenu de la page Web pour que s\u2019affiche : Dans le titre principal (balise <h2> ): \"La requ\u00eate HTTP\" Dans le premier paragraphe : \"Voici la page Web contenue sur le serveur. Nous allons y acc\u00e9der \u00e0 partir d'un client : un navigateur Web.\" Dans le deuxi\u00e8me paragraphe : \"Il faudra pour cela taper une URL commen\u00e7ant par le protocole utilis\u00e9 : http, puis indiquer l\u2019adresse IP du serveur\". Le reste peut rester inchang\u00e9. Cliquer sur Fichier > Enregistrer puis fermer l\u2019\u00e9diteur de texte. Double-cliquer sur le serveur web, puis sur D\u00e9marrer. La page Web sera alors accessible pour aux clients (les navigateurs). Fermer le logiciel. Double-cliquer sur un ordinateur portable puis sur \"Installation des logiciels\". Double-cliquer sur \"Navigateur Web\" dans la colonne \u00e0 droite, puis sur Appliquer les modifications. Double-cliquer sur le navigateur web, et entrer l\u2019 adresse IP du serveur web \u00e0 la suite du HTTP . Vous verrez interpr\u00e9t\u00e9e la page web dont le code se trouve dans le fichier index.html sur le serveur web. C. Visualisation des \u00e9changes \u00b6 En faisant un clic droit sur l\u2019ordinateur portable d\u2019o\u00f9 vous avez fait la requ\u00eate HTTP, cliquer sur \"Afficher les \u00e9changes de donn\u00e9es\" . Vous acc\u00e9dez \u00e0 une grande liste. Identifier une requ\u00eate HTTP : elle correspond \u00e0 la couche \u00ab Application \u00bb. Celles commen\u00e7ant par \u00ab GET /HTTP/\u00bb correspondent aux requ\u00eates du client , celles commen\u00e7ant par \u00ab HTTP \u00bb \u00e0 la r\u00e9ponse du serveur . Double-cliquer dessus pour voir le contenu des \u00e9changes.","title":"Client serveur"},{"location":"1ere_22/seq5/client_serveur/#ii-le-modele-client-serveur","text":"","title":"II. Le mod\u00e8le client-serveur"},{"location":"1ere_22/seq5/client_serveur/#cours","text":"Pour obtenir une page Web, votre navigateur va faire une demande, une requ\u00eate au serveur Web sur lequel elle est stock\u00e9e. Qu'est-ce qu'un serveur Web ? C'est une machine capable de r\u00e9pondre \u00e0 des requ\u00eates de l'application Web. Elle stocke les pages Web d'un ou de plusieurs sites au(x)quel(s) des navigateurs peuvent se connecter.","title":"Cours"},{"location":"1ere_22/seq5/client_serveur/#tp-simulation-dun-serveur-web","text":"En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher :","title":"TP\u00a0: Simulation d'un serveur Web"},{"location":"1ere_22/seq5/http_https/","text":"body { text-align: justify} Les requ\u00eates HTTP et HTTPS \u00b6 Cours \u00b6 Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS . A. Exemples de requ\u00eates utilis\u00e9es \u00b6 Exemple de requ\u00eate du client : GET index.html HTTP/1.1 Host : www.example.com Que demande le navigateur ? Il demande \u00e0 acc\u00e9der \u00e0 la page dont l'URL est http://www.example.com/index.html. Exemple de r\u00e9ponse du serveur : HTTP/1.1 200 OK Date : Tue, 2 Mar 2021 08:00:00 GMT Content-Type : text/html ; charset=UTF-8 Content-length : 983 Last-Modified : Wed, 1 Jan 2005 00:00:00 GMT < html > < head >< title > Une page de test </ title ></ head > < body > Un document tr\u00e8s simple. </ body > </ html > Que renvoie le serveur ? Il renvoie le code HTML de la page, ainsi que des informations compl\u00e9mentaires contenues dans l'ent\u00eate de la r\u00e9ponse : par exemple la date d'envoi, le type et la longueur du contenu, la date de sa derni\u00e8re modification. B. Les diff\u00e9rentes m\u00e9thodes \u00b6 Le GET est une m\u00e9thode : une demande au serveur d'effectuer une certaine action. Dans notre cas, d'acc\u00e9der \u00e0 une ressource. On peut demander diff\u00e9rentes actions au serveur : - POST permet d'envoyer des donn\u00e9es au serveur, pour qu'il les traite. - PUT permet de modifier des donn\u00e9es sur le serveur, - DELETE permet de supprimer des donn\u00e9es sur le serveur. Exemple de l'envoi d'un formulaire A partir des pages https://www.cahier-nsi.fr/formulaire1/ et /formulaire2/, r\u00e9cup\u00e9rant les informations suivantes : On peut envoyer des donn\u00e9es avec la m\u00e9thode GET. Cependant, celle-ci est \u00e0 la base faite pour en r\u00e9cup\u00e9rer (elle n'a pas de contenu !) . O\u00f9 les donn\u00e9es transmises apparaissent-elles alors ? Elles apparaissent dans l'URL. On envoie classiquement des donn\u00e9es avec la m\u00e9thode POST. Cette requ\u00eate a un contenu, qui peut stocker ces donn\u00e9es. Sont-elles accessibles ? Elles n'apparaissent pas dans l'URL, mais sont lisibles dans l'inspecteur de propri\u00e9t\u00e9s du navigateur. B. Le protocole HTTPS \u00b6 HTTPS est la version s\u00e9curis\u00e9e de HTTP. Comment remarque-t-on si la connexion avec un serveur web est s\u00e9curis\u00e9e ? On le remarque gr\u00e2ce au nom du protocole HTTPS indiqu\u00e9 dans l'URL, et \u00e0 l'apparition d'un cadenas dans le navigateur. Voici ce qu'il se passe lorsque l'on utilise HTTPS : sequenceDiagram participant c as Client participant s as Serveur c->>s: Je voudrais me connecter de mani\u00e8re s\u00e9curis\u00e9e. s->>c: D'accord, je vous envoie mon certificat SSL. c->>s: Ca me va, communiquons de mani\u00e8re chiffr\u00e9e. s->>c: C'est parti, maintenant que vous pouvez \u00eatre s\u00fbr que c'est bien moi. Qu'est-ce qu'une communication chiffr\u00e9e ? C'est une communication dont le contenu n'est pas imm\u00e9diatement d\u00e9chiffrable : il faut une information suppl\u00e9mentaire pour le comprendre, appel\u00e9e la cl\u00e9 de chiffrement.","title":"Http https"},{"location":"1ere_22/seq5/http_https/#les-requetes-http-et-https","text":"","title":"Les requ\u00eates HTTP et HTTPS"},{"location":"1ere_22/seq5/http_https/#cours","text":"Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS .","title":"Cours"},{"location":"1ere_22/seq5/interactions_js/","text":"body { text-align: justify} I. Interagir avec l'utilisateur \u00b6 Cours \u00b6 Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript . A. Int\u00e9grer du Javascript \u00e0 une page Web \u00b6 On a vu pr\u00e9c\u00e9demment que pour associer un fichier CSS \u00e0 un fichier HTML, il fallait ajouter la balise link dans l'ent\u00eate. Pour associer un fichier en Javascript , c'est-\u00e0-dire en .js , \u00e0 un fichier HTML, il faut aussi ajouter une balise dans ce fichier, comme sur l'exemple ci-dessous : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > </ body > < script src = \"script.js\" ></ script > </ html > Quel est le nom de la balise utilis\u00e9e ? La balise utilis\u00e9e est script . Quel est le nom du fichier \u00e9crit en Javascript ? Le nom du fichier est script.js . O\u00f9 se trouve la balise ? Elle se trouve ici apr\u00e8s la balise body (apr\u00e8s la balise fermante). B. R\u00e9pondre \u00e0 des \u00e9v\u00e8nements avec du Javascript \u00b6 B.I. Les \u00e9v\u00e8nements \u00b6 Le Javascript va nous permettre de r\u00e9pondre \u00e0 des \u00e9v\u00e8nements , c'est \u00e0 dire \u00e0 des actions de l'utilisateur . Comment l'utilisateur peut-il interagir avec une page ? Il peut interagir avec la souris ou le clavier (des p\u00e9riph\u00e9riques d'entr\u00e9e de la machine). Avec la souris, il peut cliquer, on passer sur un \u00e9l\u00e9ment d'une page. Il existe un certain nombre d' \u00e9v\u00e8nements en HTML, dont voici une liste non-exhaustive : Ev\u00e8nement Action onclick clic de souris sur un \u00e9l\u00e9ment onmouseover survol d'un \u00e9l\u00e9ment onmouseout fin du survol d'un \u00e9l\u00e9ment onkeydown appui d'une touche du clavier onload chargement de la page B.II. R\u00e9pondre aux \u00e9v\u00e8nements \u00b6 Pour r\u00e9pondre \u00e0 un \u00e9v\u00e8nement, comme un clic de souris sur un bouton, il faut associer l'\u00e9v\u00e8nement \u00e0 une action par l'interm\u00e9diaire d'une fonction \u00e9crite en Javascript . On ins\u00e8re un bouton sur la page HTML, et on l'associe \u00e0 une fonction : < button onclick = \"maFonction()\" > Cliquer ici </ button > Note : on peut aussi utiliser la balise input , associ\u00e9e au type button . La fonction maFonction doit \u00eatre \u00e9crite dans le fichier script.js . L'objectif de ce cours n'est pas que vous ma\u00eetrisiez le Javascript, mais que vous compreniez et sachiez modifier des codes simples. Note sur le Javascript : - Une variable var se d\u00e9clare avec le mot-cl\u00e9 let , et se modifie en utilisant var = expression . - On utilise la syntaxe suivante pour une condition : if (expression) {instructions} - Une fonction f se d\u00e9clare avec function f(param\u00e8tres) {instructions} Quelles diff\u00e9rences identifiez-vous avec la syntaxe utilis\u00e9e en Python ? Les blocs d'instructions ne sont pas rep\u00e9r\u00e9s par leur identation mais d\u00e9limit\u00e9s par des accolades. Les mots-cl\u00e9s utilis\u00e9s peuvent \u00eatre diff\u00e9rents, comme function \u00e0 la place de def en Python.*** B.III. Exemple d'action sur le HTML \u00b6 La fonction suivante est \u00e9crite en Javascript et permet de r\u00e9aliser une action sur notre page : function maFonction () { let maBalise = document . getElementById ( \"para1\" ); maBalise . classList . add ( \"special\" ); } Elle est associ\u00e9e au code HTML suivant (seul le body est repr\u00e9sent\u00e9) : < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > < p id = \"para1\" > Je veux changer l'apparence de ce paragraphe. </ p > < button onclick = \"maFonction()\" > Cliquer ici </ button > Le code HTML est associ\u00e9 au CSS suivant : h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } On a utilis\u00e9 la fonction getElementById pour s\u00e9lectionner un composant de la page HTML. Comment celui-ci est-il identifi\u00e9 ? Il est identifi\u00e9e par la valeur para1 , qui correspond \u00e0 l'identifiant d'un composant de notre page HTML. Analyser la deuxi\u00e8me ligne du corps de maFonction pour comprendre ce qu'elle fait (utiliser les noms des fonctions) . Elle ajoute le composant stock\u00e9 dans la variable maBalise \u00e0 la classe special . Que va-t-il se passer lorsque l'on cliquera sur le bouton ? La classe special \u00e9tant associ\u00e9e \u00e0 un style diff\u00e9rent, le contenu de para1 va alors s'afficher en bleu, italique, et en plus gros. C. Le Document Object Model (DOM) \u00b6 Si l'on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments d'une page HTML avec du Javascript, c'est gr\u00e2ce \u00e0 sa repr\u00e9sentation sous la forme d'une structure appel\u00e9e Document Object Model (DOM) . Il repr\u00e9sente hi\u00e9rarchiquement les diff\u00e9rentes balises d'une page HTML, qui deviennent, non plus juste du texte, mais un ensemble d'objets qui peuvent \u00eatre manipul\u00e9s. Ceux au-dessus des autres sont les \"parents\" des \u00e9l\u00e9ments \"enfants\". graph TB A(html) --> B(head) A --> C(body) B --> F(meta) C --> H(h1) C --> I(h2) C --> K(p) Gr\u00e2ce \u00e0 cette repr\u00e9sentation, on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments et les modifier gr\u00e2ce \u00e0 la biblioth\u00e8que JQuery (Javascript pour le Web). Remarque : Nous avons vu la fonction getElementById , permettant d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment par son id , mais il existe aussi : - getElementByClassName permettant d'acc\u00e9der aux \u00e9l\u00e9m\u00e9nts d'une classe , - getElementByTagName permettant d'acc\u00e9der \u00e0 tous les \u00e9l\u00e9ments d'un m\u00eame type ( p , h1 ,...) , - et encore d'autres. TP : Composants graphiques et interactions sur le Web \u00b6 Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques . A. Les composants graphiques \u00b6 Pour ins\u00e9rer des composants graphiques de diff\u00e9rents types, on utilise la balise <input type=...> dans le code HTML. Identifier les composants graphiques pr\u00e9sents dans la page, \u00e0 partir de la liste ci-dessous : Identifier comment chacun des composants sont cod\u00e9s dans le code HTML, et compl\u00e9ter, pour chacun, la valeur de leur attribut type et id : Composant graphique Valeur de l'attribut type Identifiant unique (attribut id ) Dans le composant graphique de zone de texte, entrer un entier en d\u00e9cimal, \u00e0 convertir. S\u00e9lectionner que vous voulez le convertir en binaire. a. Que faut-il faire pour que le calcul de conversion soit lanc\u00e9 ? b. En regardant le code HTML, identifier \u00e0 quel attribut du composant graphique identifi\u00e9 cette action peut \u00eatre associ\u00e9e. Rafra\u00eechir la page. a. Qu'est-ce qui a chang\u00e9 ? b. Quel est l'attribut de la balise body qui peut correspondre \u00e0 cette action ? Les attributs identifi\u00e9s dans les questions 3 et 4 correspondent \u00e0 des gestionnaires d'\u00e9v\u00e8nements , qui permettent l'ex\u00e9cution d'un code Javascript lorsqu'un \u00e9v\u00e8nement se produit. Cet \u00e9v\u00e8nement est d\u00e9clench\u00e9 par l'utilisateur. B. Le code Javascript \u00b6 Analysons le code Javascript de la fonction Calcul . getElementById(\"valeur_id\") permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment dont l'identifiant est \"valeur_id\" (c'est une fonction un peu particuli\u00e8re, appel\u00e9e \"m\u00e9thode\"). Celui-ci \u00e9tant unique, c'est une mani\u00e8re pratique d'acc\u00e9der directement \u00e0 un composant graphique par exemple. 1. D\u00e9composer la premi\u00e8re instruction de la fonction Calcul : entier = Number(document.getElementById(\"entier\").value); Partie de l'instruction qui renvoie la valeur du composant graphique ayant pour id la valeur \"entier\" : Conversion d'une cha\u00eene de caract\u00e8res en nombre : Stockage du nombre dans une variable : La fonction teste la condition suivante : document.getElementById(\"binaire\").checked . Quel est le type renvoy\u00e9 par cette expression ? Que teste-t-elle ? Entrer un entier en d\u00e9cimal \u00e0 convertir dans la zone de texte qui convient et cocher le bon bouton radio pour demander une conversion en hexad\u00e9cimal. a. Que se passe-t-il ? b. Lire le code Javascript de la fonction Calcul et expliquer ce qu'il s'est pass\u00e9. Modifier la fonction Calcul pour que l'on puisse aussi faire la conversion en hexad\u00e9cimal. Indications sur le Javascript En Javascript, la d\u00e9claration d'une variable se fait avec le mot-cl\u00e9 let suivi du nom de la variable. La m\u00e9thode nombre.toString(base) renvoie nombre sous la forme d'une cha\u00eene de caract\u00e8res, dans la base base . TP : De l'interaction \u00e0 votre site Web \u00b6 Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP. Exercices \u00b6 Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"Interactions js"},{"location":"1ere_22/seq5/interactions_js/#i-interagir-avec-lutilisateur","text":"","title":"I. Interagir avec l'utilisateur"},{"location":"1ere_22/seq5/interactions_js/#cours","text":"Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript .","title":"Cours"},{"location":"1ere_22/seq5/interactions_js/#tp-composants-graphiques-et-interactions-sur-le-web","text":"Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques .","title":"TP : Composants graphiques et interactions sur le Web"},{"location":"1ere_22/seq5/interactions_js/#tp-de-linteraction-a-votre-site-web","text":"Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP.","title":"TP : De l'interaction \u00e0 votre site Web"},{"location":"1ere_22/seq5/interactions_js/#exercices","text":"Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"Exercices"},{"location":"1ere_22/seq5/programme/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere_22/seq5/programme/#programme","text":"","title":"Programme"},{"location":"1ere_22/seq5/synthese/","text":"body { text-align: justify} TD : Exercices sur les interactions sur le Web \u00b6 Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"Interagir sur le Web - TD"},{"location":"1ere_22/seq5/synthese/#td-exercices-sur-les-interactions-sur-le-web","text":"Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"TD : Exercices sur les interactions sur le Web"},{"location":"1ere_22/seq6/complexite/","text":"body { text-align: justify} I. Complexit\u00e9 \u00b6 Cours \u00b6 A. La notion d'algorithme \u00b6 Rappel : Les algorithmes ont exist\u00e9 bien avant les programmes informatiques (cf Muhammad Al Khwarizmi, 9\u00e8me si\u00e8cle) . Ces deux notions, bien que li\u00e9es, sont donc diff\u00e9rentes. D\u00e9finition d'un algorithme suite d'instructions appliqu\u00e9e \u00e0 des donn\u00e9es, permettant de r\u00e9soudre un probl\u00e8me. Plus pr\u00e9cis\u00e9ment : on applique dans un ordre pr\u00e9cis des op\u00e9rations \u00e9l\u00e9mentaires \u00e0 des donn\u00e9es d'entr\u00e9e , pour obtenir un r\u00e9sultat en sortie . Compl\u00e9ter le sch\u00e9ma suivant : graph LR A[Valeurs d'entr\u00e9e] --> F[Suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires]; F --> G[Valeurs de sortie] Les valeurs d'entr\u00e9e sont aussi appel\u00e9es param\u00e8tres pour une fonction, et les valeurs de sortie correspondent au r\u00e9sultat de l'algorithme. La \"suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires\" est traditionnellement \u00e9crite en \"langage naturel\" ou pseudo-code : dans un format qui ressemble \u00e0 celui du code, mais n'utilisant pas la syntaxe d'un langage de programmation en particulier. Il peut alors \u00eatre traduit dans n'importe quel langage. B. Complexit\u00e9 d'un algorithme \u00b6 B.I. Co\u00fbt en temps et en m\u00e9moire \u00b6 L'informatique a longtemps \u00e9t\u00e9 limit\u00e9e par les ressources n\u00e9cessaires \u00e0 l'ex\u00e9cution des programmes : les ressources en m\u00e9moire et en temps . Un algorithme doit occuper de l'espace et met un certain temps \u00e0 s'ex\u00e9cuter : il est associ\u00e9 \u00e0 un co\u00fbt en m\u00e9moire et \u00e0 un co\u00fbt en temps . Les capacit\u00e9s en m\u00e9moire des ordinateurs d'aujourd'hui ont largement augment\u00e9 par rapport \u00e0 celles des machines du milieu du XX\u00e8me si\u00e8cle, elles ne limitent donc plus l'ex\u00e9cution d'algorithmes simples (elles restent cependant toujours d'actualit\u00e9 notamment pour les algorithmes d'apprentissage automatique, n\u00e9cessitant de grandes quantit\u00e9s de donn\u00e9es) . Dans ce cours, nous allons nous int\u00e9resser au co\u00fbt en temps des algorithmes. Le temps d'ex\u00e9cution d'un programme d\u00e9pend de la machine sur laquelle il est ex\u00e9cut\u00e9, et aussi du langage utilis\u00e9. Le co\u00fbt en temps d'un algorithme est calcul\u00e9 th\u00e9oriquement pour comparer les algorithmes, il ne d\u00e9pendra pas de ces choix techniques. Nous allons compter des op\u00e9rations \u00e9l\u00e9mentaires : toute op\u00e9ration faite par l'algorithme. B.II. Complexit\u00e9 en temps de la recherche d'occurrences \u00b6 Prenons pour exemples les algorithmes de comptage et de recherche d'occurrence. Exemple 1 fonction compte_occurrences ( tab , v ) 1 compteur <- 0 2 pour i allant de 0 \u00e0 longueur ( tab ) - 1 3 si tab [ i ] est \u00e9gal \u00e0 v : 4 compteur <- compteur + 1 renvoyer compteur Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme. La donner, quand cela est possible, en fonction de \\(n\\) : la longueur du tableau. Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 n 3 n 4 selon le nombre d'occurrences Quelles sont les instructions qui sont ex\u00e9cut\u00e9es le plus de fois ? Les lignes 2 et 3 sont ex\u00e9cut\u00e9es le plus de fois (incr\u00e9mentation de i et comparaison de tab[i] \u00e0 v ). La complexit\u00e9 en temps exacte de cet algorithme serait de \\(2n+compteur+1\\) , mais nous allons nous contenter d'un ordre de grandeur. Le co\u00fbt en temps de cet algorithme est proportionnel \u00e0 \\(n\\) : la longueur du tableau. Pour ex\u00e9cuter l'algorithme sur un tableau de taille 50, il faudra de l'ordre de 10 fois plus de temps que pour l'ex\u00e9cuter sur un tableau de taille 5. Exemple 2 fonction recherche_occurrence ( tab , v ): 1 trouve <- False 2 ind <- 0 3 tant que trouve est faux et ind < longueur ( tab ): 4 si tab [ ind ] est \u00e9gal \u00e0 v : 5 trouve <- True 6 sinon 7 ind <- ind + 1 renvoyer trouve Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme : Si v se trouve dans tab , en position j : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 j+1 4 j 5 1 6 j 7 j Si v ne se trouve pas dans tab : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 n+1 4 n 5 0 6 n 7 n Que peut-on en d\u00e9duire ? On peut en d\u00e9duire que le nombre d'op\u00e9rations \u00e9l\u00e9mentaires d\u00e9pend des donn\u00e9es. \\(j<=n\\) , donc on aura g\u00e9n\u00e9ralement beaucoup moins d'instructions ex\u00e9cut\u00e9e quand v est pr\u00e9sente dans tab . Pour conna\u00eetre les limites d'un algorithme, on s'int\u00e9resse \u00e0 la complexit\u00e9 dans le pire des cas (ici, le 2\u00e8me). Quel est l'ordre de grandeur de cette complexit\u00e9 dans le pire des cas ? Elle vaut 4n+3, elle est donc lin\u00e9aire par rapport \u00e0 \\(n\\) . Que peut-on conclure sur ces deux exemples (recherche et comptage d'occurrences) ? On peut en conclure que les deux algorithmes ont une complexit\u00e9 en temps similaire dans le pire des cas. B.III. Les types de complexit\u00e9 \u00b6 La complexit\u00e9 de l'algorithme impl\u00e9ment\u00e9 dans le programme suivant d\u00e9pend-elle de la taille des donn\u00e9es d'entr\u00e9e ? def mediane ( t ): ''' Entr\u00e9e t : liste d'entiers tri\u00e9e Sortie med : valeur m\u00e9diane, de type entier ''' med = t [ len ( t ) // 2 ] return med Solution La complexit\u00e9 ne d\u00e9pend pas de la taille des donn\u00e9es d'entr\u00e9e : dans tous les cas l'instruction ne sera ex\u00e9cut\u00e9e qu'une fois. La complexit\u00e9 est dite constante . Exprimer la complexit\u00e9 du programme suivant en fonction de \\(n\\) , la matrice m d'entr\u00e9e \u00e9tant de taille \\(n*n\\) . def somme_matrice ( m ): ''' Entr\u00e9e m : liste \u00e0 deux dimensions d'entiers Sortie : somme des \u00e9l\u00e9ments de m, de type entier ''' s = 0 n = len ( m ) for i in range ( n ): for j in range ( n ): s = s + m [ i ][ j ] return s Solution Pour chaque valeur de i, le corps de la boucle en j s'ex\u00e9cutera \\(n\\) fois. La boucle en i s'ex\u00e9cutant \\(n\\) fois aussi, l'instruction s=s+m[i][j] s'ex\u00e9cute \\(n^2\\) fois.*** La complexit\u00e9 est dite quadratique . B.IV. R\u00e9capitulatif \u00b6 On utilise la notation \"grand O\" pour indiquer que la complexit\u00e9 peut \u00eatre major\u00e9e par une fonction de r\u00e9f\u00e9rence, pour \\(n\\) suffisamment grand. Type Notation Exemple Constante \\(O(1)\\) renvoyer une valeur (sans parcours) Logarithmique \\(O(log(n))\\) exponentiation rapide Lin\u00e9aire \\(O(n)\\) parcours de tableau 1D Quadratique \\(O(n^2)\\) parcours de tableau 2D Les repr\u00e9senter sur le graphe suivant : TD : Complexit\u00e9 \u00b6 On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"Introduction \u00e0 l'algorithmique et tris - Notions d'algo"},{"location":"1ere_22/seq6/complexite/#i-complexite","text":"","title":"I. Complexit\u00e9"},{"location":"1ere_22/seq6/complexite/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq6/complexite/#td-complexite","text":"On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"TD : Complexit\u00e9"},{"location":"1ere_22/seq6/correction/","text":"body { text-align: justify} III. Correction d'un algorithme \u00b6 Cours \u00b6 Nous avons \u00e9tudi\u00e9 le co\u00fbt de deux algorithmes de tri, mais... font-ils bien ce qu'ils sont sens\u00e9s faire, c'est-\u00e0-dire trier ? A tous les coups ? L'\u00e9tude des algorithmes passe parce qu'on appelle la preuve de leur correction : qu'ils font le travail voulu ( preuve de correction ) et montrer qu'ils se terminent ( preuve de terminaison ) - sinon... aucune chance qu'ils fassent ce que l'on veut qu'ils fassent ! -. A. Correction \u00b6 D\u00e9finition Pour montrer qu'un algorithme est correct, on montre qu'une propri\u00e9t\u00e9 : - est vraie avant de rentrer dans la boucle, - reste vraie \u00e0 chaque it\u00e9ration de boucle. Si elle est vraie \u00e0 chaque fois, elle sera vraie... \u00e0 la fin. On parle d' invariant de boucle . La preuve de ces invariants se fait par r\u00e9currence qui est une notion math\u00e9matique que vous n'avez pas encore vue (nous n'allons donc pas faire les d\u00e9monstrations) . A.I. Algorithme de calcul de moyenne \u00b6 On consid\u00e8re la fonction suivante, qui doit calculer la moyenne des \u00e9l\u00e9ments de liste : def moyenne ( liste ) : t = 0 for i in range ( len ( liste )): t = t + liste [ i ] # assertion vraie \u00e0 cet endroit return t / len ( liste ) Que contient t apr\u00e8s chaque passage de boucle ? t contient les i+1 premiers \u00e9l\u00e9ments de liste . Que peut-on en conclure sur ce que contient t \u00e0 la fin de l'ex\u00e9cution de la boucle ? On peut en conclure qu'\u00e0 la fin de l'ex\u00e9cution de la boucle, t contient la somme des len(liste)-1+1 premiers \u00e9l\u00e9ments : donc tous les \u00e9l\u00e9ments de liste . t contient bien la valeur attendue, et on sait ce que renvoie len(liste) . Le r\u00e9sultat renvoy\u00e9 par la fonction est donc correct. L'invariant est qu'apr\u00e8s chaque it\u00e9ration de boucle i , t contient la somme des i+1 premiers \u00e9l\u00e9ments de liste . A.II. Les algorithmes de tri \u00b6 Exemple 1 : Le tri par s\u00e9lection On donne le code suivant, devant trier t avec l'algorithme du tri par s\u00e9lection : def tri_selection ( t ): n = len ( t ) for i in range ( n ): ind = i for j in range ( i + 1 , n ): if t [ j ] < t [ ind ]: ind = j if i != ind : tmp = t [ ind ] t [ ind ] = t [ i ] t [ i ] = tmp return t Les propri\u00e9t\u00e9s suivantes sont-elles vraies ou fausse ? A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 j est tri\u00e9. C'est faux, j sert \u00e0 trouver le minimum sur le sous-tableau i+1:n . A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i est tri\u00e9. C'est vrai, \u00e0 la fin de l'\u00e9tape i , on aura plac\u00e9 le minimum du sous-tableau i+1:n en position i , et les \u00e9l\u00e9ments d'avant seront tri\u00e9s. A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice i+1 \u00e0 n est tri\u00e9. C'est faux, ces indices sont parcourus dans la boucle en j , mais seul un \u00e9l\u00e9ment est s\u00e9lectionn\u00e9 : le minimum. Dans le cas particulier o\u00f9 i vaut n-1 , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9, donc tout le tableau est tri\u00e9 . Exemple 2 : Le tri par insertion On donne le code suivant, devant trier t avec l'algorithme du tri par insertion : def tri_insertion ( t ): n = len ( t ) for i in range ( 1 , n ): ref = t [ i ] j = i while j > 0 and ref < t [ j - 1 ]: t [ j ] = t [ j - 1 ] j = j - 1 t [ j ] = ref return t Les propri\u00e9t\u00e9s suivantes sont-elles vraies ou fausse ? A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i-1 est tri\u00e9. C'est vrai, les \u00e9l\u00e9ments d'indice inf\u00e9rieur \u00e0 i ont \u00e9t\u00e9 tri\u00e9s dans les \u00e9tapes pr\u00e9c\u00e9dentes. A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 i est tri\u00e9. C'est vrai, l'\u00e9tape i sert \u00e0 placer l'\u00e9l\u00e9ments d'indice i . A la fin de l'\u00e9tape i , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9. C'est faux, ce n'est pas valable pour chaque valeur de i mais uniquement lorsque i vaut n-1 . Dans le cas particulier o\u00f9 i vaut n-1 , le sous-tableau des \u00e9l\u00e9ments d'indice 0 \u00e0 n-1 est tri\u00e9, donc tout le tableau est tri\u00e9 . Conclusion \u00b6 Pour les deux algorithmes de tri, l' invariant est : \u00e0 la fin de chaque \u00e9tape i , le tableau est tri\u00e9 des indices 0 \u00e0 i . B. Terminaison \u00b6 Un algorithme ne peut pas \u00eatre correct, si on n'a pas l'assurance qu'il se termine . Pourquoi est-ce qu'on est s\u00fbr qu'un algorithme se termine lorsqu'il contient une boucle born\u00e9e ? Avec une boucle born\u00e9e, on ex\u00e9cute forc\u00e9ment la boucle un nombre fini de fois, connu \u00e0 l'avance. On sait que l'on va sortir de la boucle. Dans quel cas est-ce qu'on peut ne pas \u00eatre s\u00fbr de si un algorithme va se terminer ou non ? Lorsque l'on a une boucle non-born\u00e9e, on peut cr\u00e9er une boucle infinie. Que faut-il faire alors pour montrer que l'algorithme se termine bien ? Il faut montrer que l'on va sortir de la boucle non-born\u00e9e car, \u00e0 un moment donn\u00e9, sa condition ou une de ses conditions deviendra fausse. B.I. Tri par s\u00e9lection \u00b6 Nous avons vu que le tri par s\u00e9lection contenait 2 boucles born\u00e9es, donc il a toujours une complexit\u00e9 qui est du m\u00eame ordre de grandeur. Il se termine donc. B.II. Tri par insertion \u00b6 Le tri par insertion contient une boucle non-born\u00e9e, montrons qu'il se termine tout de m\u00eame. Extrait de son impl\u00e9mentation : ref = t [ i ] j = i while j > 0 and ref < t [ j - 1 ]: t [ j ] = t [ j - 1 ] j = j - 1 Quand est-ce que la condition j > 0 devient fausse ? Elle devient fausse lorsqu'on a parcouru tous les \u00e9l\u00e9ments de t jusqu'au premier : on arrive au bout du tableau. La valeur de j est d\u00e9cr\u00e9ment\u00e9e \u00e0 chaque it\u00e9ration de boucle, cette situation se produira donc si l'autre condition ne devient pas fausse avant. Quand est-ce que la condition ref < t[j-1] devient fausse ? Elle devient fausse lorsque l'on a trouv\u00e9 un \u00e9l\u00e9ment de t de valeur inf\u00e9rieure \u00e0 la r\u00e9f\u00e9rence t[i] . La valeur de t[j-1] est actualis\u00e9e \u00e0 chaque it\u00e9ration de boucle, car j est actualis\u00e9e. D\u00e9finition j est une valeur enti\u00e8re qui varie strictement \u00e0 chaque it\u00e9ration, c'est ce qu'on appelle un variant de boucle , qui permet de prouver la terminaison de l'algorithme. Ici, la premi\u00e8re condition deviendra forc\u00e9ment fausse si la deuxi\u00e8me condition n'est pas fausse avant : l'algorithme se termine. Synth\u00e8se \u00b6 Faire la preuve compl\u00e8te de la correction d'un algorithme sert \u00e0 prouver qu'il fait bien ce qu'on attend de lui dans tous les cas . Pour prouver : - sa correction , on cherche un invariant de boucle , - sa terminaison , on cherche un variant de boucle . TD \u00b6 La fonction suivante prend en arguments deux entiers positifs et renvoie leur produit. def produit ( a , b ): c = 0 i = 0 while i < b : # i = i + 1 c = c + a return c Quelle propri\u00e9t\u00e9 reste vraie \u00e0 chaque passage par la ligne marqu\u00e9e d'un # ? A \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 + 1) B \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 \u2212 1) C \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc56 D \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc4f On suppose qu'au d\u00e9but de l'ex\u00e9cution la variable K contient un entier positif non nul. Lequel des scripts suivants va boucler ind\u00e9finiment ? A i = K + 1 while i < K : i = i + 1 B i = K - 1 while i < K : i = i - 1 C i = K - 1 while i < K : i = i + 1 D i = K + 1 while i >= K : i = i - 1 \ud835\udc4e et \ud835\udc5a \u00e9tant deux entiers sup\u00e9rieurs \u00e0 1, la fonction suivante renvoie \\(a^m\\) . def puissance ( a , m ): p = 1 n = m q = a while n > 0 : # if n % 2 == 0 : q = q * q n = n // 2 else : p = q * p n = n - 1 return p Quelle est l'\u00e9galit\u00e9 qui est v\u00e9rifi\u00e9e \u00e0 chaque passage par la ligne marqu\u00e9e # ? A \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b\u22121 = \ud835\udc4e^\ud835\udc5a\\) B \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b = \ud835\udc4e^\ud835\udc5a\\) C \\(\ud835\udc5d \u00d7 \ud835\udc5e^{\ud835\udc5b+1} = \ud835\udc4e^\ud835\udc5a\\) D \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5a = \ud835\udc4e^\ud835\udc5b\\) Un algorithme de tri d\u2019une liste d\u2019entiers est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def trier ( L ) : for i in range ( len ( L )): indice_min = i for j in range ( i + 1 , len ( L )): if L [ j ] < L [ indice_min ] : indice_min = j L [ i ], L [ indice_min ] = L [ indice_min ], L [ i ] # assertion vraie \u00e0 cet endroit return L Parmi les assertions suivantes laquelle reste vraie \u00e0 chaque it\u00e9ration de la boucle, \u00e0 l'endroit indiqu\u00e9 ci-dessus ? A la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre d\u00e9croissant B la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre croissant C la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre d\u00e9croissant D la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre croissant","title":"Cours - Correction et terminaison algorithmique"},{"location":"1ere_22/seq6/correction/#iii-correction-dun-algorithme","text":"","title":"III. Correction d'un algorithme"},{"location":"1ere_22/seq6/correction/#cours","text":"Nous avons \u00e9tudi\u00e9 le co\u00fbt de deux algorithmes de tri, mais... font-ils bien ce qu'ils sont sens\u00e9s faire, c'est-\u00e0-dire trier ? A tous les coups ? L'\u00e9tude des algorithmes passe parce qu'on appelle la preuve de leur correction : qu'ils font le travail voulu ( preuve de correction ) et montrer qu'ils se terminent ( preuve de terminaison ) - sinon... aucune chance qu'ils fassent ce que l'on veut qu'ils fassent ! -.","title":"Cours"},{"location":"1ere_22/seq6/correction/#td","text":"La fonction suivante prend en arguments deux entiers positifs et renvoie leur produit. def produit ( a , b ): c = 0 i = 0 while i < b : # i = i + 1 c = c + a return c Quelle propri\u00e9t\u00e9 reste vraie \u00e0 chaque passage par la ligne marqu\u00e9e d'un # ? A \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 + 1) B \ud835\udc50 = \ud835\udc4e \u00d7 (\ud835\udc56 \u2212 1) C \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc56 D \ud835\udc50 = \ud835\udc4e \u00d7 \ud835\udc4f On suppose qu'au d\u00e9but de l'ex\u00e9cution la variable K contient un entier positif non nul. Lequel des scripts suivants va boucler ind\u00e9finiment ? A i = K + 1 while i < K : i = i + 1 B i = K - 1 while i < K : i = i - 1 C i = K - 1 while i < K : i = i + 1 D i = K + 1 while i >= K : i = i - 1 \ud835\udc4e et \ud835\udc5a \u00e9tant deux entiers sup\u00e9rieurs \u00e0 1, la fonction suivante renvoie \\(a^m\\) . def puissance ( a , m ): p = 1 n = m q = a while n > 0 : # if n % 2 == 0 : q = q * q n = n // 2 else : p = q * p n = n - 1 return p Quelle est l'\u00e9galit\u00e9 qui est v\u00e9rifi\u00e9e \u00e0 chaque passage par la ligne marqu\u00e9e # ? A \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b\u22121 = \ud835\udc4e^\ud835\udc5a\\) B \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5b = \ud835\udc4e^\ud835\udc5a\\) C \\(\ud835\udc5d \u00d7 \ud835\udc5e^{\ud835\udc5b+1} = \ud835\udc4e^\ud835\udc5a\\) D \\(\ud835\udc5d \u00d7 \ud835\udc5e^\ud835\udc5a = \ud835\udc4e^\ud835\udc5b\\) Un algorithme de tri d\u2019une liste d\u2019entiers est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def trier ( L ) : for i in range ( len ( L )): indice_min = i for j in range ( i + 1 , len ( L )): if L [ j ] < L [ indice_min ] : indice_min = j L [ i ], L [ indice_min ] = L [ indice_min ], L [ i ] # assertion vraie \u00e0 cet endroit return L Parmi les assertions suivantes laquelle reste vraie \u00e0 chaque it\u00e9ration de la boucle, \u00e0 l'endroit indiqu\u00e9 ci-dessus ? A la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre d\u00e9croissant B la sous-liste L[0:i+1] contient les i plus grandes valeurs de L tri\u00e9es par ordre croissant C la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre d\u00e9croissant D la sous-liste L[0:i+1] contient les i plus petites valeurs de L tri\u00e9es par ordre croissant","title":"TD"},{"location":"1ere_22/seq6/tris/","text":"body { text-align: justify} II. Les algorithmes de tri \u00b6 TD : Trier un jeu de cartes \u00b6 La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Cours \u00b6 Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant . A. Le tri par s\u00e9lection \u00b6 A.I. Principe \u00b6 Le tri par s\u00e9lection consiste \u00e0 s\u00e9lectionner le minimum d'une partie du tableau de plus en plus petite \u00e0 chaque \u00e9tape, et \u00e0 l' \u00e9changer avec un \u00e9l\u00e9ment de r\u00e9f\u00e9rence. Principe Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 0 . On recherche le minimum de l'ensemble du tableau , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On recherche le minimum de l'ensemble du tableau moins celui d'indice 0 , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ainsi de suite jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment du tableau. A.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On fait une recherche de minimum \u00e0 chaque \u00e9tape sur une sous-partie du tableau. Il faut utiliser une autre boucle born\u00e9e, commen\u00e7ant juste apr\u00e8s l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence, et stocker l'indice du minimum trouv\u00e9 dans une variable. On formule le pseudo-code suivant : fonction tri_selection(tab) 1 pour i allant de 0 \u00e0 longueur(tab)-2 2 indice_minimum <- i 3 pour j allant de i+1 \u00e0 longueur(tab)-1 4 si tab[j] < tab[indice_minimum] 5 indice_minimum <- j 6 si indice_minimum est diff\u00e9rent de i 7 on \u00e9change tab[i] et tab[indice_minimum] renvoyer tab Entourer d'une couleur la partie qui permet de trouver, \u00e0 chaque it\u00e9ration, le minimum du sous-tableau, et d'une autre couleur celle qui fait l'\u00e9change entre l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence et le minimum trouv\u00e9. Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [1, 8, 10, 5, 2] Etape 2 : [1, 2, 10, 5, 8] Etape 3 : [1, 2, 5, 10, 8] Etape 4 : [1, 2, 5, 8, 10] A.III. Complexit\u00e9 \u00b6 Pour donner un ordre de grandeur de la complexit\u00e9, nous avons jusqu'\u00e0 pr\u00e9sent utilis\u00e9 l'instruction qui \u00e9t\u00e9 ex\u00e9cut\u00e9e le plus de fois. On compte traditionnellement l' op\u00e9ration qui est la plus effectu\u00e9e . Ici, il s'agit de l' op\u00e9ration de comparaison de la ligne 4. Sur notre exemple Etape 0 \u00e0 1 (i vaut 0) Il y a 4 comparaisons (5-8, 5-10, 5-1, 1-2). Etape 1 \u00e0 2 (i vaut 1) Il y a 3 comparaisons (8-10, 8-5, 5-2). Etape 2 \u00e0 3 (i vaut 2) Il y a 2 comparaisons (10-5, 5-8). Etape 3 \u00e0 4 (i vaut 3) Il y a 1 comparaison (10-8). En tout, il y a 1+2+3+4 comparaisons . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) comparaisons (vous pouvez faire le test pour un tableau de taille 6) . Une formule math\u00e9matique permet d'exprimer ce r\u00e9sultat plus simplement, retrouvons-la. Notons \\(S = 1+2+...+n-2+n-1\\) et notons \\(S' = n-1+n-2+...+2+1\\) Que vaut \\(S+S'\\) ? \\(n+n+...+n+n = n*(n-1)\\) Or \\(S+S'=2S\\) , donc \\(2S = n*(n-1)\\) et \\(S=n(n-1)/2\\) On peut donc dire que la complexit\u00e9 de ce tri est en \\((1/2)n^2-(1/2)n\\) . On obtient l' ordre de grandeur en ne retenant que la plus grande puissance de \\(n\\) . Complexit\u00e9 Le tri par s\u00e9lection a donc une complexit\u00e9 en \\(O(n^2)\\) , autrement dit quadratique . Nous avions dit que nous allions estimer la complexit\u00e9 dans le pire des cas , mais avons pris un cas quelconque pour tab dans notre exemple. Pourquoi ? Ici, on n'utilise que des boucles born\u00e9es. Il y a donc toujours autant de comparaisons, peu importe comment les valeurs sont plac\u00e9es dans le tableau. B. Tri par insertion \u00b6 B.I. Principe \u00b6 Le tri par insertion consiste \u00e0 ins\u00e9rer chaque \u00e9l\u00e9ment \u00e0 la bonne place dans une sous-partie du tableau d\u00e9j\u00e0 tri\u00e9e. Principe Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On le compare \u00e0 celui d'indice 0 et on les \u00e9change s'ils ne sont pas dans le bon ordre. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 2 . On le compare aux pr\u00e9c\u00e9dents, situ\u00e9s \u00e0 sa gauche, tant que l'on ne trouve pas d' \u00e9l\u00e9ment plus petit ou que l'on attend pas l'indice 0. Les \u00e9l\u00e9ments plus grands sont d\u00e9cal\u00e9s sur la droite, et on ins\u00e8re notre r\u00e9f\u00e9rence \u00e0 la bonne place dans le sous-tableau tri\u00e9. Ainsi de suite jusqu'au dernier \u00e9l\u00e9ment du tableau. B.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On compare la r\u00e9f\u00e9rence aux \u00e9l\u00e9ments \u00e0 sa gauche, tant que l'on n'a pas trouv\u00e9 sa bonne place. On utilise une boucle non-born\u00e9e qui s'arr\u00eate quand une des deux conditions n'est plus remplie. A ce moment, on a l'indice de la bonne place pour l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On formule le pseudo-code suivant : fonction tri_insertion(tab) 1 pour i allant de 1 \u00e0 longueur(tab)-1 2 val_i <- tab[i] 3 j <- i 4 tant que j>0 et tab[j-1] > val_i 5 tab[j] <- tab[j-1] 6 j <- j-1 7 tab[j] <- val_i renvoyer tab Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [5, 8, 10, 1, 2] Etape 2 : [5, 8, 10, 1, 2] Etape 3 : [1, 5, 8, 10, 2] Etape 4 : [1, 2, 5, 8, 10] B.III. Complexit\u00e9 \u00b6 Pour estimer la complexit\u00e9 de ce tri, nous allons compter le nombre de d\u00e9calages faits \"sur la droite\" (on ne compte pas le placement de la r\u00e9f\u00e9rence) . Le nombre est-il le m\u00eame, pour n'importe quel tableau que l'on trie ? Non, mieux le tableau d'entr\u00e9e est d\u00e9j\u00e0 tri\u00e9, moins il y aura de d\u00e9calage \u00e0 faire. Quel tableau correspond alors au pire des cas , celui qui n\u00e9cessite le plus d'op\u00e9rations ? Le tableau tri\u00e9 \"\u00e0 l'envers\" correspond au pire des cas. Prenons l'exemple du tri du tableau [5, 4, 3, 2, 1] Etape 0 \u00e0 1 (i vaut 1) -> [4, 5, 3, 2, 1] Il y a 1 d\u00e9calage (5->4). Etape 1 \u00e0 2 (i vaut 2) -> [3, 4, 5, 2, 1] Il y a 2 d\u00e9calages (5->3, 4->5). Etape 2 \u00e0 3 (i vaut 3) -> [2, 3, 4, 5, 1] Il y a 3 d\u00e9calages (5->2, 4->5, 3->4). Etape 3 \u00e0 4 (i vaut 4) -> [1, 2, 3, 4, 5] Il y a 4 d\u00e9calages (5->1, 4->5, 3->4, 2->3). En tout, il y a \\(1+2+3+4\\) d\u00e9calages . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) d\u00e9calages, donc le m\u00eame r\u00e9sultat que pour le premier tri. Complexit\u00e9 La complexit\u00e9 dans le pire des cas du tri par insertion est en \\(O(n^2)\\) , soit quadratique . Conclusion \u00b6 Ces deux algorithmes de tri sont donc comparables dans le pire des cas. Le tri par insertion sera tout de m\u00eame plus efficace pour des donn\u00e9es d\u00e9j\u00e0 partiellement tri\u00e9es, alors que ce param\u00e8tre ne change rien au co\u00fbt du tri par s\u00e9lection. La taille des tableaux en entr\u00e9e a donc un plus grand impact sur l'ex\u00e9cution de ces algorithmes que lorsque l'on veut simplement y rechercher une valeur (algorithme de complexit\u00e9 lin\u00e9aire). Si on multiple la taille d'un tableau par 2 , le trier prendra 4 fois plus de temps. TP : Les tris s\u00e9lection et insertion \u00b6 Echauffement \u00b6 Pour nous aider pour la suite, nous allons commencer par r\u00e9-impl\u00e9menter des algorithmes d\u00e9j\u00e0 vus. Ecrire une fonction prenant en param\u00e8tre un tableau t et renvoyant l'indice de son minimum : def mini ( t ): ind = ... #\u00e0 compl\u00e9ter return ind assert mini ([ 7 , 3 , 8 , 12 ]) == 1 Ecrire une fonction prenant en param\u00e8tres deux variables a et b et \u00e9changeant leurs valeurs ( a doit contenir la valeur de b , et b la valeur de a ) : def echange_valeurs ( a , b ): #\u00e0 compl\u00e9ter return a , b assert echange_valeurs ( 1 , 100 ) == ( 100 , 1 ) A. Le tri s\u00e9lection \u00b6 Le tri s\u00e9lection permet de trier un tableau de nombres (entiers ou flottants) quelconque, en appliquant l'algorithme suivant : On parcourt le tableau par indice de 0 \u00e0 la longueur du tableau-2 - on recherche le minimum du tableau entre cette position courante et la fin du tableau - on \u00e9change alors les 2 valeurs Visualiser cet algorithme sur un exemple en cliquant ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html puis sur \"Trier\". Pour impl\u00e9menter le tri par s\u00e9lection, nous allons d'abord coder des sous-fonctions qui vont faire une partie du travail, et qu'il faudra mettre ensemble. Modifier la fonction mini \u00e9crire en question 1 de l'\u00e9chauffement, pour \u00e9crire une fonction renvoyant l'indice du minimum d'un tableau t \u00e0 partir d'un indice debut : def minimum ( t , debut ): ind = ... #\u00e0 compl\u00e9ter return ind assert minimum ([ 7 , 1 , 8 , 12 ], 0 ) == 1 assert minimum ([ 7 , 1 , 8 , 12 ], 2 ) == 2 Modifier la fonction echange_valeurs \u00e9crite en question 2 de l'\u00e9chauffement pour obtenir une fonction \u00e9changeant les \u00e9l\u00e9ments situ\u00e9s aux indices ind1 et ind2 d'un tableau t . def echange ( t , ind1 , ind2 ): #\u00e0 compl\u00e9ter return t assert echange ([ 2 , 8 , 10 , 1 ], 0 , 2 ) == [ 10 , 8 , 2 , 1 ] Compl\u00e9ter la fonction selection effectuant le tri s\u00e9lection , impl\u00e9mentant l'algorithme \u00e9nonc\u00e9 plus haut en utilisant les fonctions minimum et echange . N.B.: Apr\u00e8s avoir ex\u00e9cut\u00e9 la d\u00e9finition de ces fonctions dans les cellules plus haut, vous pouvez utiliser les fonctions dans une autre cellule. def selection ( t ): for i in range ( len ( t ) - 1 ): #recherche du minimum \u00e0 partir de i - appeler la fonction minimum et stocker le r\u00e9sultat dans une variable min_ind ... #\u00e9change, si besoin if i != min_ind : ... # appeler la fonction echange return t assert selection ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] B. Le tri par insertion \u00b6 Le tri par insertion fonctionne selon l'algorithme suivant : On parcourt le tableau par indice de 1 \u00e0 la longueur du tableau-1 - on d\u00e9cale sur la droite tous les \u00e9l\u00e9ments sup\u00e9rieurs \u00e0 l'\u00e9l\u00e9ment \u00e0 l'indice consid\u00e9r\u00e9, - on trouve la position pour cet \u00e9l\u00e9ment, soit en arrivant au bout du tableau, soit lorsque l'on rencontre un \u00e9l\u00e9ment inf\u00e9rieur. On place alors notre \u00e9l\u00e9ment. Visualiser cet algorithme sur un exemple en cliquant ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html puis sur \"Trier\". Impl\u00e9menter la fonction tri_insertion \u00e0 partir du pseudo-code ci-dessous : pour i allant de 1 \u00e0 len ( tab ) - 1 val_i <- tab [ i ] j <- i tant que j est sup\u00e9rieur \u00e0 0 et val_i est inf\u00e9rieur \u00e0 tab [ j - 1 ] on d\u00e9place tab [ j - 1 ] \u00e0 la place de tab [ j ] # d\u00e9calage sur la droite on d\u00e9cr\u00e9mente j si j est diff\u00e9rent de i on d\u00e9place val_i \u00e0 la place de tab [ j ] def tri_insertion ( t ): #\u00e0 compl\u00e9ter return t assert tri_insertion ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] Pour aller plus loin... \u00b6 Impl\u00e9menter le tri s\u00e9lection sans utiliser de sous-fonctions, mais en \u00e9crivant tout le code dans le corps de tri_selection . def tri_selection ( t ): #\u00e0 compl\u00e9ter return t assert tri_selection ([ 2 , 8 , 7 , 1 , 9 ]) == [ 1 , 2 , 7 , 8 , 9 ] TP : Co\u00fbt en temps des tris par s\u00e9lection et par insertion \u00b6 Cr\u00e9er un nouveau fichier Python dans votre dossier NSI, et le nommer TP_Complexite_Tris.py . A. Le pire des cas \u00b6 Nous allons commencer par \u00e9tudier la complexit\u00e9 des tris dans le pire des cas : lors que le tableau est tri\u00e9 dans l'ordre inverse, ici l'ordre d\u00e9croissant. L'objectif est de comparer les deux algorithmes. A.I. Le tri par s\u00e9lection \u00b6 Utiliser une fonction impl\u00e9mentant le tri par s\u00e9lection . Cr\u00e9er un tableau t1 par compr\u00e9hension, de la mani\u00e8re suivante : t1 = [200-i for i in range(200)] . Importer la fonction time de la biblioth\u00e8que time en haut de votre programme pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction tri_selection lorsqu'elle prend t1 en param\u00e8tre, en millisecondes et reporter la valeur de tps sur le graphique ci-dessous : debut = time () r1 = tri_selection ( t1 ) tps = ( time () - debut ) * 1000 Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 400. Lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : pour chaque \u00e9l\u00e9ment d'indice i , affecter 400-i . Reporter la valeur de temps obtenue sur le graphique. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 600, 800, et 1000 (ils doivent \u00eatre non-tri\u00e9s comme t1 et t2 ) et tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Quel type de complexit\u00e9 a le tri par s\u00e9lection ? ......................................................... A.II. Le tri par insertion \u00b6 Refaire exactement la m\u00eame chose pour le tri par insertion et placer les points sur la courbe de la question A.I.4 en ajoutant une l\u00e9gende : - impl\u00e9menter l'algorithme (et garder la fonction dans votre script pour la suite) , - relever son temps d'ex\u00e9cution pour des tableaux non-tri\u00e9s d'une taille variant de 200 \u00e0 1000. B. Le meilleur des cas \u00b6 Faisons \u00e0 pr\u00e9sent les m\u00eames calculs, mais dans le meilleur des cas : lorsque le tableau est d\u00e9j\u00e0 tri\u00e9. A priori, nos algorithmes n'ont rien \u00e0 faire, mais l'ordinateur ne le sait pas. B.I. Le tri par s\u00e9lection \u00b6 Cr\u00e9er un tableau t1 par compr\u00e9hension, de la mani\u00e8re suivante : t1 = [i for i in range(200)] . Les valeurs de t1 seront alors rang\u00e9es dans l'ordre. Appliquer le m\u00eame script qu'\u00e0 la question A.I.4. pour obtenir la nouvelle valeur de tps et indiquer cette valeur sur le graphique suivant : R\u00e9it\u00e9rer les \u00e9tapes pour avoir les valeurs correspondant \u00e0 des tableaux de taille 400 , 600 , 800 et 1000 , comme dans la partie pr\u00e9c\u00e9dente. B.II. Le tri par insertion \u00b6 Refaire la m\u00eame chose pour le tri par insertion, et placer les points sur le graphique de la partie B.I.. Conclusion \u00b6 Que peut-on dire sur la performance de ces deux algorithmes de tri ?","title":"Algorithmique et tris"},{"location":"1ere_22/seq6/tris/#ii-les-algorithmes-de-tri","text":"","title":"II. Les algorithmes de tri"},{"location":"1ere_22/seq6/tris/#td-trier-un-jeu-de-cartes","text":"La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e.","title":"TD : Trier un jeu de cartes"},{"location":"1ere_22/seq6/tris/#cours","text":"Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant .","title":"Cours"},{"location":"1ere_22/seq6/tris/#tp-les-tris-selection-et-insertion","text":"","title":"TP : Les tris s\u00e9lection et insertion"},{"location":"1ere_22/seq6/tris/#tp-cout-en-temps-des-tris-par-selection-et-par-insertion","text":"Cr\u00e9er un nouveau fichier Python dans votre dossier NSI, et le nommer TP_Complexite_Tris.py .","title":"TP : Co\u00fbt en temps des tris par s\u00e9lection et par insertion"},{"location":"1ere_22/seq7/dico/","text":"body { text-align: justify} I. Les dictionnaires \u00b6 TP : Le type dictionnaire \u00b6 I. D\u00e9couverte de la structure \u00b6 Nous allons voir un nouveau type, le dictionnaire qui permet de regrouper des donn\u00e9es, mais auxquelles on acc\u00e8de gr\u00e2ce \u00e0 une cl\u00e9 plut\u00f4t que gr\u00e2ce \u00e0 un indice , comme pour les tableaux et p-uplets. Cr\u00e9er une variable dico , initialement vide, avec l'instruction : dico = {} . V\u00e9rifier son type, en tapant type(dico) dans la console. Ajouter un \u00e9l\u00e9ment au dictionnaire avec la syntaxe suivante : dico[\"nom\"] = \"Lennon\" , puis visualiser le contenu de la variable avec la console. \"nom\" est une cl\u00e9 du dictionnaire, et \"Lennon\" une valeur . Rajouter d'autres \u00e9l\u00e9ments au dictionnaire : dico [ \"pr\u00e9nom\" ] = \"John\" dico [ \"ann\u00e9e de naissance\" ] = 1940 On voit que le type des valeurs, comme celui des cl\u00e9s, peut varier (caract\u00e8res, entiers, ou d'autres) . Consulter le contenu de dico et v\u00e9rifier qu'il s'affiche sous la forme suivante : {'nom': 'Lennon', 'pr\u00e9nom': 'John', 'ann\u00e9e de naissance': 1940} Que renvoie l'instruction dico[0] ? Expliquer. ................................................................................ Que renvoie l'instruction dico[\"pr\u00e9nom\"] ? ...................................... C'est ainsi que l'on acc\u00e8de \u00e0 une valeur associ\u00e9e \u00e0 une cl\u00e9. Que renvoie l'instruction len(dico) ? ................. Quelles valeurs renvoient les instructions suivantes ? dico.keys() : .................................................................. dico.values() : ................................................................ dico.items() : ................................................................. On utilise ces fonctions pour faire des parcours de dictionnaire. Tester le code suivant : for k in dico . keys (): print ( dico [ k ]) Modifier ensuite le code pour afficher les cl\u00e9s du dictionnaire. On peut aussi cr\u00e9er un dictionnaire en utilisant la syntaxe suivante : dictionnaire = {cl\u00e91: valeur1, cl\u00e92: valeur2} . Cr\u00e9er un deuxi\u00e8me dictionnaire dico_2 avec cette m\u00e9thode, dans lequel on stocke les informations suivantes : le nom \"McCartney\" , le pr\u00e9nom \"Paul\" , et la date de naissance 1942 . II. Exercices \u00b6 Pour chacun des exercices, v\u00e9rifier la solution sur ordinateur, puis la noter sur votre feuille. Exercice 1 : les donn\u00e9es EXIF d'une image \u00b6 Les photos num\u00e9riques sont accompagn\u00e9es de m\u00e9tadonn\u00e9es, consultables dans leurs propri\u00e9t\u00e9s. Repr\u00e9senter les donn\u00e9es EXIF pr\u00e9sent\u00e9es ci-contre sous la forme d'un dictionnaire nomm\u00e9 exif . Quelle instruction permet d'afficher la hauteur de l'image ? Exercice 2 : un groupe de rock \u00b6 On veut stocker la liste des membres d'un groupe de rock dans un dictionnaire rockband , c'est-\u00e0-dire : Cl\u00e9 Valeur \"chanteur\" Julian Casablancas \"guitariste rythmique\" Albert Hammond Jr \"lead guitariste\" \"Nick Valensi\" \"bassiste\" \"Nikolai Fraiture\" \"batteur\" \"Fabrizio Moretti\" Ecrire l'instruction permettant de cr\u00e9er le dictionnaire correspondant. Ecrire l'instruction renvoyant les noms de tous les membres du groupe. Ecrire une fonction est_membre(rockband, nom) renvoyant True si nom est pr\u00e9sent dans le groupe, False sinon. On fera un parcours de dictionnaire. def est_membre ( rockband , nom ): Tester si \"Nick Valensi\" et \"Bjork\" appartiennent au groupe ou non. Cours \u00b6 Dans certains cas, on peut ne pas vouloir acc\u00e9der \u00e0 des donn\u00e9es par leur indice comme avec un tableau ou un p-uplet, car une autre information (souvent de type caract\u00e8res , mais les autres types sont possibles) aurait plus de sens. On utilise alors un dictionnaire . D\u00e9finition Un dictionnaire est une collection non-ordonn\u00e9e d'\u00e9l\u00e9ments. Ces \u00e9l\u00e9ments sont constitu\u00e9s d'une cl\u00e9 associ\u00e9e \u00e0 une valeur . A. Cr\u00e9ation \u00b6 Pour cr\u00e9er un dictionnaire vide , on utilise les accolades {} ou bien le mot-cl\u00e9 dict . Pour cr\u00e9er un dictionnaire non-vide , on utilise les accolades suivies de couples cle: valeur s\u00e9par\u00e9s par des virgules. Exemples d1 = dict () #d1 est un dictionnaire vide d2 = {} #d2 aussi dico = { \"algorithme\" : \"suite d'instructions\" , \"m\u00e9moire\" : \"espace de stockage des donn\u00e9es\" , \"processeur\" : \"unit\u00e9 de calcul\" } #dico a 3 couples cl\u00e9-valeur B. Modification \u00b6 On ajoute un \u00e9l\u00e9ment \u00e0 un dictionnaire avec la syntaxe : d[cle] = valeur o\u00f9 cle et valeur sont des \u00e9l\u00e9ments de n'importe quel type de base (entier, flottant, caract\u00e8res, bool\u00e9en) . On peut modifier la valeur associ\u00e9e \u00e0 une cl\u00e9 d\u00e9j\u00e0 existante en utilisant la m\u00eame syntaxe. Exemples dico [ \"programme\" ] = \"algorithme \u00e9crit dans un langage de programmation\" #ajoute un nouveau couple \u00e0 dico dico [ \"processeur\" ] = \"constitu\u00e9 d'une unit\u00e9 de calcul et une unit\u00e9 de commande\" #modifie la valeur associ\u00e9e \u00e0 la cl\u00e9 processeur C. Parcours \u00b6 On peut it\u00e9rer sur les \u00e9l\u00e9ments d'un dictionnaire, de la m\u00eame mani\u00e8re que l'on peut it\u00e9rer sur les \u00e9l\u00e9ments d'un tableau ou d'un p-uplet (les types construits) . Cela permet d'appliquer des algorithmes comme ceux vus sur ces autres types construits : recherche d'occurrences, calcul de statistiques, etc. On peut utiliser diff\u00e9rentes syntaxes : C.I. Parcourir les cl\u00e9s \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) keys() permet d'acc\u00e9der \u00e0 la liste des cl\u00e9s. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for cle in dico . keys (): print ( cle , dico [ cle ]) Si la m\u00e9thode n'est pas pr\u00e9cis\u00e9e, par d\u00e9faut le parcours se fera sur les cl\u00e9s : ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for cle in dico : print ( cle , dico [ cle ]) C.II. Parcourir les valeurs \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) values() permet d'acc\u00e9der \u00e0 la liste des valeurs. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for v in dico . values (): print ( v ) Attention ! On n'a alors pas acc\u00e8s \u00e0 la cl\u00e9 associ\u00e9e \u00e0 chaque valeur. C.III. Parcourir les couples cl\u00e9-valeur \u00b6 La m\u00e9thode (fonction qui s'applique sur les dictionnaires) items() permet d'acc\u00e9der aux couples cl\u00e9, valeur. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code for c , v in dico . items (): print ( c , v ) Conclusion \u00b6 Les dictionnaires compl\u00e8tent les tableaux et p-uplets en permettant de \"ranger\" diff\u00e9remment des \u00e9l\u00e9ments. Comme dans un dictionnaire au sens classique, on associe des valeurs (comme une d\u00e9finition) \u00e0 une information (comme un mot). Ces structures sont ensuite utilis\u00e9es par des algorithmes. TD : Dictionnaires et algorithmes \u00b6 Exercice 1 : manipulation de dictionnaires \u00b6 dico = { \"alexandre\" : 17 , \"mehdi\" : 18 , \"jeanne\" : 16 , \"charlotte\" : 19 , \"celina\" : 18 , \"no\u00e9\" : 19 } def f ( dic ): for cle , valeur in dic . items () : if valeur > 18 : return cle Que renvoie l'appel de f(dico) ? Quelle est la valeur affich\u00e9e \u00e0 l'ex\u00e9cution du programme Python suivant ? ports = { 'http' : 80 , 'imap' : 142 , 'smtp' : 25 } ports [ 'ftp' ] = 21 print ( ports [ 'ftp' ]) T = [{ 'fruit' : 'banane' , 'nombre' : 25 }, { 'fruit' : 'orange' , 'nombre' : 124 }, { 'fruit' : 'pomme' , 'nombre' : 75 }, { 'fruit' : 'kiwi' , 'nombre' : 51 }] Quelle expression utiliser pour afficher le nombre de pommes ? Par quelle expression remplacer les pointill\u00e9s dans le programme Python suivant, pour que son ex\u00e9cution affiche le num\u00e9ro de Dupond ? repertoire = [{ 'nom' : 'Dupont' , 'tel' : '5234' },{ 'nom' : 'Tournesol' , 'tel' : '5248' }, { 'nom' : 'Dupond' , 'tel' : '3452' }] for i in range ( len ( repertoire )): if ............................... : print ( repertoire [ i ][ 'tel' ]) Exercice 2 : recherche de maximum \u00b6 Que faut-il changer dans le programme ci-dessous, impl\u00e9mentant la recherche de l'indice du maximum dans un tableau, pour rechercher la cl\u00e9 associ\u00e9e \u00e0 la valeur maximale d'un dictionnaire non-vide d' entiers positifs ? V\u00e9rifier que le dictionnaire est bien non-vide. def maximum_tab ( tab ): assert tab != [] ind = 0 for i in range ( len ( tab )): if tab [ i ] > tab [ ind ]: ind = i return ind Exercice 3 : comptage d'occurrences \u00b6 On veut \u00e9crire une fonction compte_occurrences(chaine) qui compte les occurrences de toutes les lettres pr\u00e9sentes dans une cha\u00eene de caract\u00e8res chaine , et stocke le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont ces lettres, et les valeurs leur nombre d'occurrences. Ce dictionnaire est renvoy\u00e9 par la fonction. Par exemple : >>> compte_occurrences ( 'bonjour' ) {'b': 1, 'o': 2, 'n': 1, 'j': 1, 'u': 1, 'r': 1} Ecrire l'algorithme (pseudo-code) permettant de r\u00e9soudre ce probl\u00e8me. Note : on parcourt une cha\u00eene de caract\u00e8re comme on parcourt un tableau : chaque caract\u00e8re \u00e0 un indice indiquant sa position dans la cha\u00eene, on peut donc faire un parcours par indice ou par valeur . Traduire cet algorithme en programme. Note : Pour tester si une cl\u00e9 cle est pr\u00e9sente dans un dictionnaire dico , on peut utiliser la syntaxe cle in dico qui vaut True (est pr\u00e9sente) ou False (n'est pas pr\u00e9sente) (c'est une recherche d'occurrence). TP : Les r\u00e9sultats d'une \u00e9lection \u00b6 Une \u00e9lection est organis\u00e9e, pour laquelle les votes sont enregistr\u00e9s par une machine \u00e9lectronique. L'objectif de ce TP est d'\u00e9crire les fonctions qui vont permettre de comptabiliser automatiquement les votes et d\u00e9terminer le vainqueur de l'\u00e9lection. Introduction : repr\u00e9sentation des donn\u00e9es \u00b6 Les votes sont enregistr\u00e9s dans un tableau de cha\u00eenes de caract\u00e8res . Les \u00e9lecteurs peuvent s\u00e9lectionner parmi une liste de candidats, voter nul en entrant un nom qui ne fait pas parti des candidats ou bien voter blanc. Par exemple, \u00e0 la fin du vote, la machine a en m\u00e9moire le tableau suivant : votes = [\"Alan Turing\", \"Ada Lovelace\", \"Ada Lovelace\", \"\", \"George Boole\", \"Mark Zukerberg\", \"\"] Une cha\u00eene de caract\u00e8re vide correspond \u00e0 un vote blanc. Question Les candidats \u00e9tant Alan Turing, Ada Lovelace et George Boole, quel est le vainqueur ? Combien y a-t-il de votes pour les autres candidats, de votes nuls et de votes blancs ? Dans la suite, on stocke cette information dans une variable candidats = [\"Alan Turing\", \"Ada Lovelace\", \"George Boole\"] . A. D\u00e9pouillement \u00b6 On veut \u00e9crire une fonction depouillement qui prend en param\u00e8tres : - un tableau de cha\u00eenes de caract\u00e8res candidats , - un tableau de cha\u00eenes de caract\u00e8res votes , et qui renvoie un dictionnaire dont les cl\u00e9s sont les noms des candidats (stock\u00e9s dans candidats ) et les cha\u00eenes de caract\u00e8res \"Nul\" et \"Blanc\" , et les valeurs le nombre de bulletins associ\u00e9 (stock\u00e9s dans votes ) . Il faut commencer par cr\u00e9er un dictionnaire nomm\u00e9 occurrences , dont les cl\u00e9s sont les noms des candidats, ainsi que \"Nul\" et \"Blanc\" , et les valeurs sont initialis\u00e9es \u00e0 0 . Ecrire le code correspondant \u00e0 cette initialisation. On peut aussi utiliser la compr\u00e9hension sur les dictionnaires, avec la syntaxe suivante : d = {cle:valeur for cle in tableau} Ecrire une fonction est_present(tab, v) prenant en param\u00e8tres un tableau tab de type liste Python et une valeur v , et renvoyant True si v est pr\u00e9sente dans tab , False sinon. Ecrire la fonction depouillement , en se basant sur les questions pr\u00e9c\u00e9dentes et sur l'algorithme \u00e9crit ci-dessous : def depouillement ( candidats , votes ): 1 # initialisation du dictionnaire occurrences - question 1 2 pour chaque element v de votes 3 si v est pr\u00e9sent dans candidats # fonction \u00e9crite dans la question 2 4 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 v dans occurrences 5 sinon si v vaut \"\" 6 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 \"Blanc\" dans occurrences 7 sinon 8 incr\u00e9menter la valeur associ\u00e9e \u00e0 la cl\u00e9 \"Nul\" dans occurrences renvoyer occurrences Note La syntaxe if v in tab pourrait \u00eatre utilis\u00e9e ligne 3. Cela revient \u00e0 \u00e9crire une fonction de recherche d'occurrence dans un tableau renvoyant un bool\u00e9en. Vous pourrez l'utiliser par la suite, mais il faut savoir \u00e9crire la fonction de recherche d'occurrence . Tester cette fonction avec les variables candidats et votes d\u00e9finies dans l'introduction. V\u00e9rifier que l'on obtient bien le dictionnaire suivant : { 'Alan Turing' : 1 , 'Ada Lovelace' : 2 , 'George Boole' : 1 , 'Blanc' : 2 , 'Nul' : 1 } B. Trouver le vainqueur \u00b6 On consid\u00e8re qu'il n'y a qu'un seul vainqueur \u00e0 l'\u00e9lection. C'est-\u00e0-dire qu'un candidat a obtenu plus de votes que tous les autres. R\u00e9\u00e9crire ci-dessous un programme permettant de trouver le maximum d'un tableau de nombres t (vous n'avez pas besoin de l'\u00e9crire sur l'ordinateur) : Adapter ce code pour \u00e9crire une fonction qui recherche le maximum des valeurs stock\u00e9es cette fois-ci dans un dictionnaire : ce sera la fonction vainqueur(d) , avec d ayant pour cl\u00e9s les candidats (cha\u00eenes de caract\u00e8res) et pour valeurs le nombre de votes qui leur est associ\u00e9 (obtenu avec la fonction depouillement de la partie A). Cette fonction renvoie la cl\u00e9 associ\u00e9e \u00e0 la plus grande valeur. On prendra soin d'exclure les votes nuls et blancs. Appliquer la fonction vainqueur au dictionnaire obtenu \u00e0 la question A.4., et stocker le r\u00e9sultat du vote dans une variable resultat . V\u00e9rifier qu' Ada Lovelace est bien la grande gagnante de ce scrutin.","title":"Les dictionnaires"},{"location":"1ere_22/seq7/dico/#i-les-dictionnaires","text":"","title":"I. Les dictionnaires"},{"location":"1ere_22/seq7/dico/#tp-le-type-dictionnaire","text":"","title":"TP : Le type dictionnaire"},{"location":"1ere_22/seq7/dico/#cours","text":"Dans certains cas, on peut ne pas vouloir acc\u00e9der \u00e0 des donn\u00e9es par leur indice comme avec un tableau ou un p-uplet, car une autre information (souvent de type caract\u00e8res , mais les autres types sont possibles) aurait plus de sens. On utilise alors un dictionnaire . D\u00e9finition Un dictionnaire est une collection non-ordonn\u00e9e d'\u00e9l\u00e9ments. Ces \u00e9l\u00e9ments sont constitu\u00e9s d'une cl\u00e9 associ\u00e9e \u00e0 une valeur .","title":"Cours"},{"location":"1ere_22/seq7/dico/#td-dictionnaires-et-algorithmes","text":"","title":"TD : Dictionnaires et algorithmes"},{"location":"1ere_22/seq7/dico/#tp-les-resultats-dune-election","text":"Une \u00e9lection est organis\u00e9e, pour laquelle les votes sont enregistr\u00e9s par une machine \u00e9lectronique. L'objectif de ce TP est d'\u00e9crire les fonctions qui vont permettre de comptabiliser automatiquement les votes et d\u00e9terminer le vainqueur de l'\u00e9lection.","title":"TP : Les r\u00e9sultats d'une \u00e9lection"},{"location":"1ere_22/seq7/knn/","text":"body { text-align: justify} II. L'algorithme des k plus proches voisins \u00b6 Cours \u00b6 L' intelligence artificielle est un domaine vaste de l'informatique, dans lequel on utilise des algorithmes pour faire des pr\u00e9dictions sur des donn\u00e9es. Nous allons voir un exemple d'un tel algorithme. Introduction \u00b6 Imaginons que l'on veuille d\u00e9terminer l'esp\u00e8ce d'un animal, en ayant \u00e0 notre disposition sa masse et sa taille . Quelles autres informations peuvent nous aider \u00e0 pr\u00e9dire son esp\u00e8ce - sans pouvoir avoir une autre de ses caract\u00e9ristiques - ? Si l'on a la masse, la taille et l'esp\u00e8ce associ\u00e9es \u00e0 d'autres animaux, on peut avoir une id\u00e9e des ordres de grandeur correspondant aux diff\u00e9rentes esp\u00e8ces. Comment, alors, faire la pr\u00e9diction ? On peut trouver un animal dont le masse et la taille sont les plus proches de ceux de notre animal, et en d\u00e9duire qu'ils sont de la m\u00eame esp\u00e8ce. Ou mieux encore, on peut se baser sur l'ensemble des animaux les plus proches. D\u00e9finition Les algorithmes qui se basent sur des donn\u00e9es disponibles pour en d\u00e9duire des informations sur de nouvelles donn\u00e9es sont appel\u00e9s des algorithmes d'apprentissage . Ces algorithmes apprennent sur des donn\u00e9es existantes, pour pr\u00e9dire des informations sur des donn\u00e9es nouvelles. A. Calculer la distance entre des donn\u00e9es \u00b6 A.I. Placer le jeu de donn\u00e9es dans un rep\u00e8re \u00b6 Pour trouver les animaux les plus proches du nouvel animal, on place les informations dont on dispose dans un rep\u00e8re , avec la masse en abscisse et la taille en ordonn\u00e9e, On repr\u00e9sente ici avec la couleur l'esp\u00e8ce de chaque animal : c'est-\u00e0-dire sa classification . A.II. La nouvelle donn\u00e9e \u00b6 La nouvelle donn\u00e9e, sur laquelle on veut faire une pr\u00e9diction, doit \u00eatre compar\u00e9e \u00e0 toutes les autres. On peut la placer sur le graphe fait pr\u00e9c\u00e9demment. La classification de celle-ci n'est pas connue , on se base sur la classification des donn\u00e9es du jeu de donn\u00e9es pour attribuer une esp\u00e8ce \u00e0 cette nouvelle donn\u00e9e. B. Classifier une nouvelle donn\u00e9e \u00b6 B.I. Mesure de distance \u00b6 Pour estimer si deux animaux \\(a_{1}\\) et \\(a_{2}\\) ayant les caract\u00e9ristiques respectives \\(m_{1}\\) , \\(t_{1}\\) et \\(m_{2}\\) , \\(t_{2}\\) sont \"proches\", on utilise la formule suivante calculant leur distance \\(d\\) : \\(d = \\sqrt{ (t_{1}-t_{2})^2 + (m_{1}-m_{2})^2 }\\) N.B.: Les points qui sont proches sont identifiables facilement sur le graphe, mais la distance doit \u00eatre quantifiable par l'ordinateur. On calcule donc la distance entre la nouvelle donn\u00e9e , et tous les autres points. B.II. Les k plus proches voisins \u00b6 L' algorithme des k plus proches voisins s\u00e9lectionne ensuite les \\(k\\) points les plus proches de notre donn\u00e9e. Graphiquement, on peut assez facilement identifier ces points. Comment le faire automatiquement, dans un programme ? On peut le faire en triant les distances entre la nouvelle donn\u00e9e et tous les autres points, et en s\u00e9lectionnant les k points dont la distance est la plus faible. Sur l'exemple, s\u00e9lectionner les 4 plus proches voisins de la donn\u00e9es \u00e0 classifier : B.III. Classification \u00b6 Ces \\(k\\) voisins sont associ\u00e9s \u00e0 une esp\u00e8ce. On regarde ensuite quelle est l'esp\u00e8ce la plus pr\u00e9sente parmi ceux-ci, et c'est avec celle-ci que l'on classe la nouvelle donn\u00e9e. Comment classifier la nouvelle donn\u00e9e, sur l'exemple ? En appliquant l'algorithme, on trouve que la nouvelle donn\u00e9e correspond \u00e0 un chat. Quels algorithmes faut-il appliquer sur les \\(k\\) plus proches voisins pour obtenir l'information qui nous int\u00e9resse ? Il faut compter les occurrences des diff\u00e9rentes esp\u00e8ces parmi ces k voisins, puis en s\u00e9lectionner le maximum. Quel type de donn\u00e9e faut-il utiliser ? Il faut utiliser un dictionnaire avec l'esp\u00e8ce comme cl\u00e9, et le nombre d'occurrences comme valeur. Conclusion \u00b6 On peut utiliser cet algorithme pour classifier n'importe quelles donn\u00e9es, en fonctions de caract\u00e9ristiques disponibles (au nombre de 2, ou bien plus !). Plus le jeu de test contient de donn\u00e9es, meilleure sera la pr\u00e9diction. Ce type d'algorithme est largement utilis\u00e9 par les GAFAM et autres entreprises du num\u00e9rique, qui disposent de tr\u00e8s grandes bases de donn\u00e9es pour construire des mod\u00e8les plus pr\u00e9cis. TP : Impl\u00e9mentation \u00b6 Nous allons impl\u00e9menter un algorithme d'apprentissage, permettant de faire des pr\u00e9dictions sur des donn\u00e9es. On veut identifier l'esp\u00e8ce d'un animal \u00e0 partir de sa masse et de sa taille , en se basant sur un jeu de donn\u00e9es disponibles : les donn\u00e9es d'autres animaux, pour lesquels on conna\u00eet la masse, la taille, et l'esp\u00e8ce. T\u00e9l\u00e9charger le fichier TP_KVoisins.py . Il contient du code \u00e0 compl\u00e9ter, correspondant aux diff\u00e9rentes parties du TP. A. Repr\u00e9sentation des donn\u00e9es \u00b6 Les donn\u00e9es sont stock\u00e9es dans une variable donnees_animaux . Quel est son type ? (soyez pr\u00e9cis) Quelle instruction permet d'acc\u00e9der \u00e0 la taille de l'animal d'indice 1 ? Note donnees_animaux` est une variable dite globale , c'est-\u00e0-dire que nous allons l'utiliser dans les diff\u00e9rentes fonctions du programme, sans avoir \u00e0 la mettre en param\u00e8tre des fonctions. B. Distance entre les donn\u00e9es \u00b6 On veut trouver l'esp\u00e8ce d'un animal myst\u00e8re, connaissant sa masse et sa taille. Pour cela, nous allons estimer de quels autres animaux du jeu de donn\u00e9es est-ce qu'il est le plus proche . On calcule pour cela la distance entre les animaux \u00e0 partir de leurs caract\u00e9ristiques, en utilisant la mesure de distance euclidienne. Compl\u00e9ter la fonction distance(donnee1, donnee2) , calculant la distance euclidienne entre donnee1 et donnee2 . Il faut stocker dans les variables x1 et y1 les caract\u00e9ristiques de donnee1 , et dans x2 et y2 celles de donnee2 . Note 1 La formule de la distance euclidienne \\(d\\) entre deux points \\((x_1, y_1)\\) et \\((x_2, y_2)\\) est \\(d = \\sqrt{ (x_{1}-x_{2})^2 + (y_{1}-y_{2})^2 }\\) Note 2 sqrt calcule la racine carr\u00e9e (\"root mean square\") . La fonction est import\u00e9e de la biblioth\u00e8que math tout en haut du programme. On ajoute ensuite une cl\u00e9 distance \u00e0 chaque dictionnaire de donnees_animaux , \u00e0 laquelle on associe la valeur renvoy\u00e9e par la fonction distance \u00e9crite dans la question 1, calcul\u00e9e avec la nouvelle donn\u00e9e. Ceci est fait dans la fonction calcule_distance(donnee) : la compl\u00e9ter. Ecrire l'appel de la fonction calcule_distance permettant d'actualiser les valeurs de donnees_animaux . C. Tri \u00b6 Pour d\u00e9duire l'esp\u00e8ce de l'animal myst\u00e8re, on regarde l'esp\u00e8ce de ses \\(k\\) voisins les plus proches. Il faut donc trier les voisins, en fonction de leur distance par rapport \u00e0 l'animal myst\u00e8re, et en retenir les \\(k\\) premiers. La fonction tri trie les animaux de donnees_animaux par valeur croissante de la valeur associ\u00e9e \u00e0 la cl\u00e9 distance . Quel est l'algorithme de tri utilis\u00e9 dans cette fonction ? Compl\u00e9ter la fonction (les ... ), pour comparer les bonnes valeurs. Attention, donnees_animaux a \u00e9t\u00e9 modifi\u00e9e dans la partie B ! Appeler la fonction et v\u00e9rifier que l'ordre de donnees_animaux a bien \u00e9t\u00e9 modifi\u00e9. D. K plus proches voisins \u00b6 Il reste \u00e0 analyser les esp\u00e8ces les plus pr\u00e9sentes dans les \\(k\\) plus proches voisins. Il faut : - compter le nombre d'occurrences des diff\u00e9rentes esp\u00e8ces, - s\u00e9lectionner le maximum parmi ces nombres d'occurrences. Ecrire la fonction compte_occurrences(k) , qui compte le nombre de fois que chaque esp\u00e8ce appara\u00eet dans les \\(k\\) premiers \u00e9l\u00e9ments de donnees_animaux . Cela revient \u00e0 faire un calcul d'occurrences sur une liste Python, sauf que ses \u00e9l\u00e9ments sont des dictionnaires plut\u00f4t que des types de base et que l'on ne va que jusqu'\u00e0 \\(k\\) \u00e8me \u00e9l\u00e9ment de la liste. Vous avez \u00e9crit une fonction qui y ressemble dans le TP \"Les r\u00e9sultats d'une \u00e9lection\" pour le d\u00e9pouillement des votes. Aide On peut utiliser le pseudo-code suivant (sans oublier de d\u00e9finir la fonction et de renvoyer le r\u00e9sultat) : Entr\u00e9e : l entier k Sortie : le dictionnaire occurrences occurrences <- dictionnaire vide pour un indice i variant de 0 \u00e0 k - 1 espece <- esp\u00e8ce du i\u00e8me \u00e9l\u00e9ment de donnees_animaux si espece est dans occurrences on incr\u00e9mente occurrences [ espece ] sinon on affecte 1 \u00e0 occurrences [ espece ] Ecrire la fonction maxi_occurrence(occurrences) prenant en param\u00e8tre un dictionnaire occurrences , comme celui obtenu en sortie de compte_occurrences et renvoyant la cl\u00e9 de la valeur maximale d' occurrences . Vous avez \u00e9crit une fonction qui y ressemble dans le TP \"Les r\u00e9sultats d'une \u00e9lection\" pour trouver le vainqueur. Appeler ces deux fonctions pour obtenir le r\u00e9sultat. Quel est-il ? ........................................... TD : Application de l'algorithme \u00b6 Exercice 1 : application de l'algorithme \u00b6 Quelle affirmation, parmi A, B, C ou D, est vraie ? (une seule est vraie) A- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer les k plus proches voisins d'une observation dans un ensemble de donn\u00e9es. B- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer la classe d'une observation \u00e0 partir des classes de ses k plus proches voisins. C- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer dans un ensemble de donn\u00e9es le sous-ensemble \u00e0 k \u00e9l\u00e9ments qui sont les plus proches les uns des autres. D- L'algorithme des k plus proches voisins a pour but de d\u00e9terminer les \u00e9l\u00e9ments d'un ensemble de donn\u00e9es appartenant \u00e0 une m\u00eame classe. Remettre dans l'ordre les \u00e9tapes, not\u00e9es de a \u00e0 d, de cet algorithme : a. Trier les donn\u00e9es par distance croissante avec l'observation b. S\u00e9lectionner les k donn\u00e9es les plus proches c. Calculer la distance entre l'observation et le reste des donn\u00e9es d. D\u00e9duire de la classe majoritaire des k voisins la classe de l'observation On a repr\u00e9sent\u00e9 sur un quadrillage les \u00e9l\u00e9ments de quatre classes (chaque classe est repr\u00e9sent\u00e9e par un carr\u00e9, un triangle, un losange ou un disque) ainsi qu\u2019un nouvel \u00e9l\u00e9ment X. En appliquant l'algorithme des k plus proches voisins pour la distance usuelle dans le plan, avec k=3, \u00e0 quelle classe (parmi celle des carr\u00e9s, des triangles, des ronds ou des losanges) est affect\u00e9 le nouvel \u00e9l\u00e9ment X ? Obtient-on la m\u00eame chose pour k=5 ? Exercice 2: distance euclidienne \u00b6 L'algorithme des k plus proches voisins utilise une mesure de distance entre donn\u00e9es. (Re)voyons comment calculer cette distance. On utilise une fonction distance pour calculer la distance entre deux points. Compl\u00e9ter sa sp\u00e9cification. from math import sqrt # import de la fonction racine carree def distance ( point1 , point2 ): \"\"\" Entr\u00e9es : point1, point2 sont des ............... contenant 2 entiers Sortie : la distance euclidienne entre point1 et point2, de type ................. \"\"\" return sqrt (( point1 [ 0 ] - point2 [ 0 ]) ** 2 + (( point1 [ 1 ] - point2 [ 1 ])) ** 2 ) assert distance (( 1 , 0 ), ( 5 , 3 )) == 5.0 On d\u00e9finit une fonction plus_courte_distance , trouvant le point le plus proche d'un point de d\u00e9part, parmi un ensemble de points stock\u00e9s dans un tableau. Compl\u00e9ter cette fonction, ainsi que l'assertion permettant de la tester : def plus_courte_distance ( tab , depart ): \"\"\" Entr\u00e9es : un tableau de points tab de type liste de tuples et depart un point de type tuple Sortie : un point de type tuple \"\"\" point = tab [ 0 ] min_dist = ........................... for i in range ( 1 , len ( tab )): if distance ( tab [ i ], depart ) < min_dist : point = ....................... min_dist = distance ( tab [ i ], depart ) return point assert plus_courte_distance ([( 7 , 9 ), ( 2 , 5 ), ( 5 , 2 )], ( 0 , 0 )) == ................","title":"K plus proches voisins"},{"location":"1ere_22/seq7/knn/#ii-lalgorithme-des-k-plus-proches-voisins","text":"","title":"II. L'algorithme des k plus proches voisins"},{"location":"1ere_22/seq7/knn/#cours","text":"L' intelligence artificielle est un domaine vaste de l'informatique, dans lequel on utilise des algorithmes pour faire des pr\u00e9dictions sur des donn\u00e9es. Nous allons voir un exemple d'un tel algorithme.","title":"Cours"},{"location":"1ere_22/seq7/knn/#tp-implementation","text":"Nous allons impl\u00e9menter un algorithme d'apprentissage, permettant de faire des pr\u00e9dictions sur des donn\u00e9es. On veut identifier l'esp\u00e8ce d'un animal \u00e0 partir de sa masse et de sa taille , en se basant sur un jeu de donn\u00e9es disponibles : les donn\u00e9es d'autres animaux, pour lesquels on conna\u00eet la masse, la taille, et l'esp\u00e8ce. T\u00e9l\u00e9charger le fichier TP_KVoisins.py . Il contient du code \u00e0 compl\u00e9ter, correspondant aux diff\u00e9rentes parties du TP.","title":"TP : Impl\u00e9mentation"},{"location":"1ere_22/seq7/knn/#td-application-de-lalgorithme","text":"","title":"TD : Application de l'algorithme"},{"location":"1ere_22/seq8/programme/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere_22/seq8/programme/#programme","text":"","title":"Programme"},{"location":"1ere_22/seq8/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 On consid\u00e8re l\u2019extraction suivante d'une base de donn\u00e9es des d\u00e9partements fran\u00e7ais. Cette extraction a ensuite \u00e9t\u00e9 sauvegard\u00e9e dans un fichier texte. \"1\",\"01\",\"Ain\",\"AIN\",\"ain\",\"A500\" \"2\",\"02\",\"Aisne\",\"AISNE\",\"aisne\",\"A250\" \"3\",\"03\",\"Allier\",\"ALLIER\",\"allier\",\"A460\" \"4\",\"04\",\"Alpes-de-Haute-Provence\",\"ALPES-DE-HAUTE-PROVENCE\",\"alpes-de-haute-provence\",\"A412316152\" \"5\",\"05\",\"Hautes-Alpes\",\"HAUTES-ALPES\",\"hautes-alpes\",\"H32412\" On consid\u00e8re le code suivant : import csv with open ( 'departements.csv' , newline = '' ) as monFichier : lesLignes = csv . reader ( monFichier ) for uneLigne in lesLignes : print ( uneLigne [ 3 ]) Que va produire l'ex\u00e9cution de ce code ? A L'affichage de la troisi\u00e8me colonne \u00e0 savoir le nom du d\u00e9partement avec une majuscule initiale B L'affichage de tout le contenu du fichier C L'affichage du nombre total de d\u00e9partements figurant dans le fichier D L'affichage de la quatri\u00e8me colonne, \u00e0 savoir le nom du d\u00e9partement tout en majuscules On ex\u00e9cute le code suivant : table = [[ 'lovelace' , 'ada' , 1815 , 1852 ], [ 'von neumann' , 'john' , 1903 , 1957 ], [ 'turing' , 'alan' , 1912 , 1954 ], [ 'mccarthy' , 'john' , 1927 , 2011 ], [ 'floyd' , 'robert' , 1936 , 2001 ]] L = [] for index in range ( len ( table )): if table [ index ][ 3 ] > 1954 : L . append ( index ) Quelle est la valeur de la liste L \u00e0 la suite de cette ex\u00e9cution ? A ['von neumann','mccarthy','floyd'] B [1957,2011,2001] C [1,3,4] D ['lovelace','turing'] On consid\u00e8re une table de donn\u00e9es qui est une liste de dictionnaires \"Titre\", \"R\u00e9alisateur\",\"Date\". Un enregistrement de la table contient un titre de film, le nom de son r\u00e9alisateur et l'ann\u00e9e de sortie du film. films = [{ \"Titre\" : \"ET\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 1982 },{ \"Titre\" : \"Ready Player One\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 2018 },{ \"Titre\" : \"The Artist\" , \"R\u00e9alisateur\" : \"Hazanavicius\" , \"Date\" : 2011 }, ... ] On souhaite obtenir la liste des films r\u00e9alis\u00e9s par \"Spielberg\" ou par \"Hazanavicius\" depuis l'ann\u00e9e 2000. Quelle doit \u00eatre la condition utilis\u00e9e pour s\u00e9lectionner les enregistrements correspondants, lors du parcours de la table ? A (film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\") and film[\"Date\"] >= 2000 B film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\" and film[\"Date\"] >= 2000 C film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\" or film[\"Date\"] >= 2000 D (film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\") or film[\"Date\"] >= 2000 On d\u00e9finit une table d'\u00e9l\u00e8ves et une liste finale de la fa\u00e7on suivante : table_eleves = [{ \"prenom\" : \"Ada\" , \"nom\" : \"Lovelace\" , \"age\" : 17 }, { \"prenom\" : \"Charles\" , \"nom\" : \"Babbage\" , \"age\" : 18 }, ...... , { \"prenom\" : \"John\" , \"nom\" : \"Von Neumann\" , \"age\" : 16 }] liste_finale = [ eleve for eleve in table_eleves if eleve [ \"age\" ] >= 18 ] Que contient cette liste finale ? A La liste des pr\u00e9noms des \u00e9l\u00e8ves majeurs de la table. B La liste des \u00e2ges des \u00e9l\u00e8ves majeurs de la table. C La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par un dictionnaire. D La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par une liste. Laquelle de ces listes de cha\u00eenes de caract\u00e8res est tri\u00e9e en ordre croissant ? A [\"112\", \"19\", \"27\", \"45\", \"8\"] B [\"8\", \"19\", \"27\", \"45\", \"112\"] C [\"8\", \"112\", \"19\", \"27\", \"45\"] D [\"19\", \"112\", \"27\", \"45\", \"8\"]","title":"Traitement des donn\u00e9es en tables"},{"location":"1ere_22/seq8/synthese/#synthese","text":"On consid\u00e8re l\u2019extraction suivante d'une base de donn\u00e9es des d\u00e9partements fran\u00e7ais. Cette extraction a ensuite \u00e9t\u00e9 sauvegard\u00e9e dans un fichier texte. \"1\",\"01\",\"Ain\",\"AIN\",\"ain\",\"A500\" \"2\",\"02\",\"Aisne\",\"AISNE\",\"aisne\",\"A250\" \"3\",\"03\",\"Allier\",\"ALLIER\",\"allier\",\"A460\" \"4\",\"04\",\"Alpes-de-Haute-Provence\",\"ALPES-DE-HAUTE-PROVENCE\",\"alpes-de-haute-provence\",\"A412316152\" \"5\",\"05\",\"Hautes-Alpes\",\"HAUTES-ALPES\",\"hautes-alpes\",\"H32412\" On consid\u00e8re le code suivant : import csv with open ( 'departements.csv' , newline = '' ) as monFichier : lesLignes = csv . reader ( monFichier ) for uneLigne in lesLignes : print ( uneLigne [ 3 ]) Que va produire l'ex\u00e9cution de ce code ? A L'affichage de la troisi\u00e8me colonne \u00e0 savoir le nom du d\u00e9partement avec une majuscule initiale B L'affichage de tout le contenu du fichier C L'affichage du nombre total de d\u00e9partements figurant dans le fichier D L'affichage de la quatri\u00e8me colonne, \u00e0 savoir le nom du d\u00e9partement tout en majuscules On ex\u00e9cute le code suivant : table = [[ 'lovelace' , 'ada' , 1815 , 1852 ], [ 'von neumann' , 'john' , 1903 , 1957 ], [ 'turing' , 'alan' , 1912 , 1954 ], [ 'mccarthy' , 'john' , 1927 , 2011 ], [ 'floyd' , 'robert' , 1936 , 2001 ]] L = [] for index in range ( len ( table )): if table [ index ][ 3 ] > 1954 : L . append ( index ) Quelle est la valeur de la liste L \u00e0 la suite de cette ex\u00e9cution ? A ['von neumann','mccarthy','floyd'] B [1957,2011,2001] C [1,3,4] D ['lovelace','turing'] On consid\u00e8re une table de donn\u00e9es qui est une liste de dictionnaires \"Titre\", \"R\u00e9alisateur\",\"Date\". Un enregistrement de la table contient un titre de film, le nom de son r\u00e9alisateur et l'ann\u00e9e de sortie du film. films = [{ \"Titre\" : \"ET\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 1982 },{ \"Titre\" : \"Ready Player One\" , \"R\u00e9alisateur\" : \"Spielberg\" , \"Date\" : 2018 },{ \"Titre\" : \"The Artist\" , \"R\u00e9alisateur\" : \"Hazanavicius\" , \"Date\" : 2011 }, ... ] On souhaite obtenir la liste des films r\u00e9alis\u00e9s par \"Spielberg\" ou par \"Hazanavicius\" depuis l'ann\u00e9e 2000. Quelle doit \u00eatre la condition utilis\u00e9e pour s\u00e9lectionner les enregistrements correspondants, lors du parcours de la table ? A (film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\") and film[\"Date\"] >= 2000 B film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\" and film[\"Date\"] >= 2000 C film[\"R\u00e9alisateur\"] == \"Spielberg\" or film[\"R\u00e9alisateur\"] == \"Hazanavicius\" or film[\"Date\"] >= 2000 D (film[\"R\u00e9alisateur\"] == \"Spielberg\" and film[\"R\u00e9alisateur\"] == \"Hazanavicius\") or film[\"Date\"] >= 2000 On d\u00e9finit une table d'\u00e9l\u00e8ves et une liste finale de la fa\u00e7on suivante : table_eleves = [{ \"prenom\" : \"Ada\" , \"nom\" : \"Lovelace\" , \"age\" : 17 }, { \"prenom\" : \"Charles\" , \"nom\" : \"Babbage\" , \"age\" : 18 }, ...... , { \"prenom\" : \"John\" , \"nom\" : \"Von Neumann\" , \"age\" : 16 }] liste_finale = [ eleve for eleve in table_eleves if eleve [ \"age\" ] >= 18 ] Que contient cette liste finale ? A La liste des pr\u00e9noms des \u00e9l\u00e8ves majeurs de la table. B La liste des \u00e2ges des \u00e9l\u00e8ves majeurs de la table. C La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par un dictionnaire. D La liste des \u00e9l\u00e8ves majeurs de la table, chaque \u00e9l\u00e9ment de la liste \u00e9tant repr\u00e9sent\u00e9 par une liste. Laquelle de ces listes de cha\u00eenes de caract\u00e8res est tri\u00e9e en ordre croissant ? A [\"112\", \"19\", \"27\", \"45\", \"8\"] B [\"8\", \"19\", \"27\", \"45\", \"112\"] C [\"8\", \"112\", \"19\", \"27\", \"45\"] D [\"19\", \"112\", \"27\", \"45\", \"8\"]","title":"Synth\u00e8se"},{"location":"1ere_22/seq8/traitement_tables/","text":"body { text-align: justify} Traiter les donn\u00e9es en tables \u00b6 TD : G\u00e9rer ses s\u00e9ries \u00b6 Mme NSI veut cr\u00e9er un r\u00e9pertoire pour stocker les s\u00e9ries qu'elle a visionn\u00e9es et jusqu'\u00e0 o\u00f9 est-ce qu'elle les a regard\u00e9es. A. Repr\u00e9sentation des donn\u00e9es \u00b6 Voici les informations enregistr\u00e9es dans une table SERIES , stock\u00e9e dans un fichier CSV : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis (8, 7) (8, 7) Kaamelott 2005 France (6, 10) (5, 3) Sherlock 2010 Angleterre (4, 3) (4, 3) Peaky Blinders 2013 Angleterre (6, 6) (5, 6) Borgen 2010 Danemark (4, 8) (4, 7) Breaking Bad 2008 Etats-Unis (5, 16) (5, 16) Mad Men 2006 Etats-Unis (7, 14) (4, 3) La Casa de Papel 2017 Espagne (3, 10) (2, 16) Note : Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode. Quels sont les descripteurs (la liste des informations dont on dispose) de cette table ? Pour chacun d'entre eux, identifier quel type de valeur est-ce que l'on peut utiliser pour les stocker informatiquement. B. Recherches dans la table \u00b6 On veut pouvoir faire des recherches dans cette table, pour obtenir des informations plus pr\u00e9cises. Quels sont les noms des s\u00e9ries produites en Angleterre ? Quels sont les noms des s\u00e9ries produites aux Etats-Unis avant l'ann\u00e9e 2010 ? Comment obtenir les s\u00e9ries pour lesquelles il reste des \u00e9pisodes \u00e0 regarder ? Combien y-en a-t-il ? Informatiquement, on formule ces recherches sous la forme de requ\u00eates . Par exemple : s\u00e9lectionner nom dans la table SERIES o\u00f9 pays = France renvoie les noms des s\u00e9ries produites en France. Formuler la recherche de la question 2 sous la forme d'une requ\u00eate. Formuler la recherche de la question 3 sous la forme d'une requ\u00eate. C. Coh\u00e9rence des donn\u00e9es \u00b6 On veut rajouter \u00e0 la table l'enregistrement suivant : Succession, 2018, Etats-Unis, (3, 9), 4 . Quel probl\u00e8me cela pose-t-il ? On veut rajouter \u00e0 la table l'enregistrement suivant : Succession, 2018, Etats-Unis, (3, 9), (4, 9) . Quel probl\u00e8me cela pose-t-il ? De quoi faut-il donc s'assurer lorsque l'on ajoute de nouvelles donn\u00e9es ? D. Fusion de tables \u00b6 Elle veut fusionner sa base de donn\u00e9es avec celle d'une amie, qui est la suivante : nom annee dernier_diffuse dernier_vu Community 2009 (6, 13) (1, 23) House of the dragon 2022 (1, 10) (1, 10) Emily in Paris 2020 (3, 10) (3, 10) Quelle est la liste des descripteurs de cette table ? Quelle(s) modification(s) faut-il faire dans cette liste pour pouvoir la fusionner avec celle de Mme NSI ? Cours \u00b6 Pour traiter des donn\u00e9es en grande quantit\u00e9, il faut qu'elles aient une structure : c'est-\u00e0-dire que l'on ait les m\u00eames informations, sous la m\u00eame forme, pour diff\u00e9rents objets. Que l'on regroupe des donn\u00e9es sur des animaux, des villes, des gens,... Cela permet de faire diff\u00e9rents types de traitements de mani\u00e8re automatique. Exemple Un ensemble de morceaux de musique est stock\u00e9 dans une table que l'on peut repr\u00e9senter comme ci-dessous. Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Blackbird The Beatles 1968 Smells like teen spirits Nirvana 1991 A. Structurer les donn\u00e9es et les indexer dans une table \u00b6 A.1. Des donn\u00e9es en tables \u00b6 Les fichiers CSV Les donn\u00e9es peuvent \u00eatre structur\u00e9es dans des fichiers CSV , pour \"Comma-Separated Values\" : les donn\u00e9es (valeurs) ont un s\u00e9parateur , qui est souvent une virgule (mais peut \u00eatre autre chose, comme un point-virgule). Vocabulaire Les caract\u00e9ristiques qui d\u00e9crivent ces donn\u00e9es sont les descripteurs . Un \u00e9l\u00e9ment d'une table est un ensemble de valeurs , chacune associ\u00e9e \u00e0 \u00e0 un descripteur et ayant un type (entier, bool\u00e9en, caract\u00e8res, flottant,...). A.2. Importer et indexer les donn\u00e9es \u00b6 Les donn\u00e9es d'un fichier CSV peuvent \u00eatre import\u00e9es pour \u00eatre trait\u00e9es automatiquement en Python : with open ( nom_fichier , mode = 'r' ) as fichier : table = csv . reader ( fichier , delimiter = \",\" ) Le fichier est ouvert en mode lecture . La fonction reader de la biblioth\u00e8que csv s\u00e9pare les donn\u00e9es qui sont entre des , . Une table peut \u00eatre repr\u00e9sent\u00e9e en Python sous la forme d'un tableau de tableau , ou bien d'un tableau de p-uplets : Exemple # tableau \u00e0 deux dimensions titres = [[ 'Enjoy the silence' , 'Depeche Mode' , '1990' ], [ 'Blackbird' , 'The Beatles' , '1968' ], [ 'Smells like teen spirits' , 'Nirvana' , '1991' ]] # p-uplets titres = [( 'Enjoy the silence' , 'Depeche Mode' , 1990 ), ( 'Blackbird' , 'The Beatles' , 1968 ), ( 'Smells like teen spirits' , 'Nirvana' , 1991 )] Quel est l'int\u00e9r\u00eat de chacun des types utilis\u00e9 ? Un tableau de tableaux permet de modifier ses \u00e9l\u00e9ments apr\u00e8s les avoir d\u00e9clar\u00e9s, alors qu'un tableau de p-uplets permet de stocker diff\u00e9rents types de variables. Quelle instruction renvoie la valeur 'Nirvana' ? titres[2][1] renvoie 'Nirvana' . B. Recherche dans une table \u00b6 B.1. Coh\u00e9rence \u00b6 Avant de commencer les recherches dans une (ou des) table(s), il faut v\u00e9rifier que les donn\u00e9es sont de bonne qualit\u00e9, et rep\u00e9rer les probl\u00e8mes s'il y en a. Valeurs coh\u00e9rentes Chacune des valeurs a un type et une \u00e9tendue de valeurs . Exemple Que faut-il tester pour notre table ? Les valeurs des descripteurs Titre et Artiste sont des caract\u00e8res, et celles du descripteur Ann\u00e9e est un entier inf\u00e9rieur \u00e0 l'ann\u00e9e actuelle. Quel algorithme peut-on utiliser ? Entr\u00e9e : table Sortie : liste des erreurs erreurs <- liste vide on parcourt les lignes de la table avec l'indice i si l'\u00e9l\u00e9ment de la colonne test\u00e9e de table[i] ne respecte pas le critere on ajoute table[i] \u00e0 la liste des erreurs Il faut aussi v\u00e9rifier que l'on a pas enregistr\u00e9 plusieurs fois les m\u00eames informations, c'est-\u00e0-dire rechercher les doublons . Quel algorithme peut-on utiliser ? Entr\u00e9e : table Sortie : liste des doublons doublons <- liste vide on parcourt les lignes de la table avec l'indice i on parcourt \u00e0 nouveau les lignes de la table avec l'indice j, \u00e0 partir de i si table[j] est \u00e9gal \u00e0 table[i] on ajoute table[j] dans la liste des doublons B.2. S\u00e9lection \u00b6 S\u00e9lection de donn\u00e9es Filtrer des lignes des tables correspond \u00e0 une op\u00e9ration de s\u00e9lection . Pour s\u00e9lectionner ces lignes, on teste une condition exprim\u00e9e dans la logique bool\u00e9enne , c'est-\u00e0-dire avec les op\u00e9rateurs bool\u00e9ens et et ou . Exemple Ecrire en Python la condition permettant de s\u00e9lectionner les titres des Beatles parus avant 1970. titres[i][1] == 'Beatles' and titres[i][2]<1970 Ecrire en Python la condition permettant de s\u00e9lectionner les titres parus avant 1950 ou bien apr\u00e8s 1990. titres[i][2] < 1950 or titres[i][2] > 1990 C. Tri d'une table \u00b6 Pour faire appara\u00eetre les informations selon un ordre voulu, on peut trier les donn\u00e9es selon une colonne . Exemple Dans notre cas, on peut vouloir faire appara\u00eetre les titres : par ordre chronologique : Titre Artiste Ann\u00e9e Blackbird The Beatles 1968 Enjoy the silence Depeche Mode 1990 Smells like teen spirits Nirvana 1991 par ordre alphab\u00e9tique du nom de l'artiste : Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Smells like teen spirits Nirvana 1991 Blackbird The Beatles 1968 Comment peut-on trier des caract\u00e8res ? On peut les trier en utilisant leur code ASCII (Unicode). Table Pour faire le test 'mot' < 'tri' par exemple, m sera compar\u00e9 avec t , et cette expression renverra True . En d\u00e9duire ce que renvoient '123'<'234' et '123'<'23' . Les deux tests renvoient True . Il faut donc bien faire la conversion si on veut comparer des nombres (entiers ou flottant), car le r\u00e9sultat des tests sera diff\u00e9rent avec des caract\u00e8res. D. Fusion de tables \u00b6 On ne peut fusionner que deux tables qui ont les m\u00eames descripteurs , et que les valeurs sont compatibles entre elles . Exemple Est-ce le cas pour la table suivante ? Titre Artiste Ann\u00e9e Karma Police Radiohead 1997 Where is my mind Pixies 1988 This is love PJ Harvey 2000 Quel op\u00e9rateur peut-on utiliser en Python sur les tableaux pour faire cette fusion ? L'op\u00e9rateur de concat\u00e9nation + permet de fusionner des tableaux ou des p-uplets. TP: Traitement de donn\u00e9es g\u00e9ographiques \u00b6 T\u00e9l\u00e9charger le fichier capitales.csv stockant les donn\u00e9es, et le fichier Python TP_Donnees_Geographiques.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. Dans ce TP, nous allons traiter des donn\u00e9es sur les capitales des pays du monde. Introduction \u00b6 Ouvrir le fichier avec un tableur . L'ouvrir en parall\u00e8le avec un \u00e9diteur de texte . Quel symbole appara\u00eet dans le 2\u00e8me cas mais pas dans le 1er ? Relever les caract\u00e9ristiques qui se trouvent sur la premi\u00e8re ligne : ce sont les descripteurs des donn\u00e9es. Il est possible de visualiser ces donn\u00e9es sur une carte, avec le lien suivant : https://www.cahier-nsi.fr/livecsvmap2/?template=Seq4_exo1 A. Indexation des donn\u00e9es \u00b6 Ouvrir le fichier TP_Donnees_Geographiques.py dans votre IDE Python. L'instruction import csv sert \u00e0 importer des fonctions de la biblioth\u00e8que csv , permettant de lire et d'\u00e9crire dans des fichiers de ce format. Analyser la fonction lecture_fichier : elle ouvre le fichier avec open() : quels sont les param\u00e8tres utilis\u00e9s ? (faire une recherche Web si besoin) elle le convertit sous la forme de liste Python avec csv.reader : quels sont les param\u00e8tres de cette fonction ? Appeler cette fonction lecture_fichier pour charger les donn\u00e9es de capitales.csv , et stocker le r\u00e9sultat dans une variable capitales . Visualiser le contenu de capitales dans la console : quel est son type ? .......................................... Quelle information r\u00e9cup\u00e8re-t-on avec l'instruction capitales[0] ? ................................................................... Quelle instruction permet d'obtenir le nombre de capitales pr\u00e9sentes dans ces donn\u00e9es ? ............................................... B. Tests de coh\u00e9rence \u00b6 Avant de pouvoir faire des recherches dans ces donn\u00e9es, il faut v\u00e9rifier qu'elles sont de bonne qualit\u00e9, qu'elles sont coh\u00e9rentes . S'assurer que les donn\u00e9es sont coh\u00e9rentes, c'est s'assurer que les valeurs entr\u00e9es ne sont pas aberrantes. Par exemple, si on stocke la taille d'une personne en centim\u00e8tres, on ne veut pas avoir une valeur comme 1000 . La longitude varie entre -180 et +180, et la latitude entre -90 et 90 (ce sont des degr\u00e9s). V\u00e9rifions que les valeurs stock\u00e9es dans le v\u00e9rifier sont coh\u00e9rentes avec cela, en \u00e9crivant les fonctions test_latitude(table) et test_longitude(table) parcourant les lignes de table et v\u00e9rifiant que la colonne correspondant \u00e0 la latitude/la longitude contient une valeur dans les intervalles pr\u00e9cis\u00e9s. On se base sur l'algorithme suivant : Entr\u00e9e : la table Sortie : les enregistrement avec erreur sous la forme de liste erreur <- liste vide pour chaque indice i de 1 \u00e0 la longueur de la table si l'\u00e9lement d'indice i de la table ne respecte pas l'intervalle donn\u00e9 on l'ajoute \u00e0 erreur Note : Il faut convertir la latitude/longitude en float avec la syntaxe float(table[...]) . Tester la fonction. Trouvez-vous des erreurs ? ....................... C. S\u00e9lection \u00b6 Nous pouvons maintenant faire des recherches sur ces donn\u00e9es, et d\u00e9finir des fonctions diff\u00e9rentes pour chacune de ces recherches, en fonction du crit\u00e8re utilis\u00e9. L'algorithme g\u00e9n\u00e9ral qui sera utilis\u00e9 \u00e0 chaque fois est le suivant : Entr\u00e9e : la table Sortie : la s\u00e9lection sous la forme de liste selection <- liste vide pour chaque indice i de 1 \u00e0 la longueur de la table si l'\u00e9lement d'indice i de la table respecte le crit\u00e8re on l'ajoute \u00e0 selection Ecrire la fonction recherche_1 s\u00e9lectionnant les capitales situ\u00e9es sur le continent nord-am\u00e9ricain. Ecrire la fonction recherche_2 s\u00e9lectionnant les capitales dont la latitude est inf\u00e9rieure \u00e0 0. Note : N'oubliez pas la conversion de la latitude en float avec la syntaxe float(table[...]) . Ecrire la fonction recherche_3 s\u00e9lectionnant les capitales dont la latitude est inf\u00e9rieure \u00e0 0 et la longitude est sup\u00e9rieure \u00e0 0. On peut aller plus vite que d'\u00e9crire des fonctions, en utilisant la compr\u00e9hension. Ecrire les m\u00eames recherches que dans les questions 1, 2 et 3, mais avec une seule instruction, de la forme : recherche1 = [ capitales[i] for i in range(.........) if .........................] TP : Traitement de donn\u00e9es de s\u00e9ries \u00b6 T\u00e9l\u00e9charger les fichiers series_1.csv et series_2.csv stockant les donn\u00e9es, et le fichier Python TP_Series.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. On veut g\u00e9rer un r\u00e9pertoire de s\u00e9rie, permettant de stocker les s\u00e9ries visionn\u00e9es et jusqu'\u00e0 quel \u00e9pisode est-ce qu'elles ont \u00e9t\u00e9 regard\u00e9es. Voici un extrait de la table que nous allons traiter : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis 8, 7 8, 7 Kaamelott 2005 France 6, 10 5, 3 Sherlock 2010 Angleterre 4, 3 4, 3 Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode. A. Fusion de tables \u00b6 Importer les donn\u00e9es du fichier series_1.csv en appelant la fonction lecture_fichier et stocker le r\u00e9sultat dans une variable serie_1 . Visualiser le contenu de serie_1 avec la console. Avec quelle instruction acc\u00e8de-t-on aux descripteurs de la table ? Les lister ci-dessous. Importer les donn\u00e9es du fichier series_2.csv et les stocker dans une variable serie_2 . Visualiser son contenu avec la console. Ses descripteurs sont-ils les m\u00eames que ceux du premier fichier ? Si deux tables ont les m\u00eames descripteurs , et des valeurs coh\u00e9rentes , on peut les fusionner. On utilise pour cela l'op\u00e9rateur + qui permet de concatener des listes Python. Compl\u00e9ter la fonction fusionne(table1, table2) fusionnant deux tables table1 et table2 , sans recopier deux fois les descripteurs. Pour cela, ils faut enlever la premi\u00e8re ligne de table2 : on peut utiliser la syntaxe tab[ind:] ne prenant les lignes d'un tableau tab qu'\u00e0 partir de l'indice ind . def fusionne ( table1 , table2 ): return tab + ... Appeler la fonction fusionne pour obtenir la fusion de serie_1 et serie_2 , stock\u00e9e dans une variable series . B. Les doublons \u00b6 Qu'il y ait plusieurs fois les m\u00eames informations, entr\u00e9es par erreur, pose des probl\u00e8mes en terme de stockage et peut biaiser les statistiques faites sur les donn\u00e9es. Compl\u00e9ter la fonction trouve_doublons(table) prenant en param\u00e8tre une table sous la forme d'un tableau \u00e0 2 dimensions et renvoyant les lignes qui sont pr\u00e9sentes plusieurs fois : def trouve_doublons ( table ): doublons = [] for i in range ( ...... , ............ ): for j in range ( i + 1 , len ( table )): if ................................ : doublons . append ( .................... ) return doublons Appeler cette fonction sur la variable series pour obtenir les doublons de la table. Y en a-t-il ? L'instruction del table[i] permet de supprimer la ligne i de table . Utiliser cette instruction pour \u00e9crire une fonction supprime_doublons(table) parcourant les lignes de la derni\u00e8re \u00e0 la premi\u00e8re (sinon les valeurs prises par i dans la boucle ne correspondraient plus) et supprimant un doublon \u00e0 chaque fois qu'il est rencontr\u00e9. Appeler cette fonction pour supprimer le(s) doublon(s) trouv\u00e9s \u00e0 la question 2. Stocker le r\u00e9sultat dans une variable series_final . Nos donn\u00e9es sont maintenant plus coh\u00e9rentes, sauvegardons-les. Appeler la fonction exporte prenant en param\u00e8tre la table series_final qui sera stock\u00e9e dans un fichier dont le nom est series.csv . C. Tri des donn\u00e9es \u00b6 Pour visualiser les diff\u00e9rentes lignes de la table dans l'ordre que l'on veut, on peut appliquer un algorithme de tri , pour les trier en fonction d'une des colonnes . On peut vouloir ranger les s\u00e9ries en fonction de l'ordre alphab\u00e9tique de son nom, ou bien de son pays d'origine. On compare alors les caract\u00e8res, qui seront tri\u00e9s en utilisant le code ASCII de chacun. Appeler la fonction trie_caracteres prenant en param\u00e8tre la table et la colonne par rapport \u00e0 laquelle on souhaite faire le tri, pour trier la table par rapport au nom de la s\u00e9rie. Lorsque l'on veut trier par rapport \u00e0 un nombre (entier ou flottant), il faut convertir la valeur d'abord, qui est une cha\u00eene de caract\u00e8res . Nous allons le faire avec la fonction float (cela fonctionnera sur les entiers, et les flottants). Faire ce changement sur la condition du while pour obtenir la fonction trie_nombres . ... while j > 1 and ... : table [ j ] = table [ j - 1 ] j -= 1 Appeler la fonction pour trier les s\u00e9ries par rapport \u00e0 leur ann\u00e9e de cr\u00e9ation. Pour aller plus loin... Pour trier, on peut utiliser une fonction de fonction, sorted . Il faut lui pr\u00e9ciser en param\u00e8tre ce qu'il faut trier, et comment (en fonction de quoi). Dans l'exemple suivant, on l'utilise pour trier en fonction de l'ann\u00e9e de d\u00e9but, dans l'ordre croissant : sorted(table[1:], key = lambda item: int(item[1])) Quelle instruction utiliser pour trier en fonction du nom de la s\u00e9rie ?","title":"Traitement des donn\u00e9es en tables"},{"location":"1ere_22/seq8/traitement_tables/#traiter-les-donnees-en-tables","text":"","title":"Traiter les donn\u00e9es en tables"},{"location":"1ere_22/seq8/traitement_tables/#td-gerer-ses-series","text":"Mme NSI veut cr\u00e9er un r\u00e9pertoire pour stocker les s\u00e9ries qu'elle a visionn\u00e9es et jusqu'\u00e0 o\u00f9 est-ce qu'elle les a regard\u00e9es.","title":"TD : G\u00e9rer ses s\u00e9ries"},{"location":"1ere_22/seq8/traitement_tables/#cours","text":"Pour traiter des donn\u00e9es en grande quantit\u00e9, il faut qu'elles aient une structure : c'est-\u00e0-dire que l'on ait les m\u00eames informations, sous la m\u00eame forme, pour diff\u00e9rents objets. Que l'on regroupe des donn\u00e9es sur des animaux, des villes, des gens,... Cela permet de faire diff\u00e9rents types de traitements de mani\u00e8re automatique. Exemple Un ensemble de morceaux de musique est stock\u00e9 dans une table que l'on peut repr\u00e9senter comme ci-dessous. Titre Artiste Ann\u00e9e Enjoy the silence Depeche Mode 1990 Blackbird The Beatles 1968 Smells like teen spirits Nirvana 1991","title":"Cours"},{"location":"1ere_22/seq8/traitement_tables/#tp-traitement-de-donnees-geographiques","text":"T\u00e9l\u00e9charger le fichier capitales.csv stockant les donn\u00e9es, et le fichier Python TP_Donnees_Geographiques.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. Dans ce TP, nous allons traiter des donn\u00e9es sur les capitales des pays du monde.","title":"TP: Traitement de donn\u00e9es g\u00e9ographiques"},{"location":"1ere_22/seq8/traitement_tables/#tp-traitement-de-donnees-de-series","text":"T\u00e9l\u00e9charger les fichiers series_1.csv et series_2.csv stockant les donn\u00e9es, et le fichier Python TP_Series.py qui servira de base \u00e0 votre code. Stocker les deux fichiers dans votre dossier NSI. On veut g\u00e9rer un r\u00e9pertoire de s\u00e9rie, permettant de stocker les s\u00e9ries visionn\u00e9es et jusqu'\u00e0 quel \u00e9pisode est-ce qu'elles ont \u00e9t\u00e9 regard\u00e9es. Voici un extrait de la table que nous allons traiter : nom annee_debut pays dernier_diffuse dernier_vu Game of Thrones 2011 Etats-Unis 8, 7 8, 7 Kaamelott 2005 France 6, 10 5, 3 Sherlock 2010 Angleterre 4, 3 4, 3 Pour dernier_diffuse et dernier_vu , on indique le num\u00e9ro de la saison, suivi de celui de l'\u00e9pisode.","title":"TP : Traitement de donn\u00e9es de s\u00e9ries"},{"location":"1ere_22/seq9/architecture/","text":"body { text-align: justify} I. Architecture des r\u00e9seaux informatiques \u00b6 Cours \u00b6 A. Les composants d'un r\u00e9seau \u00b6 On veut faire communiquer entre eux des ordinateurs. Le moyen de le faire va d\u00e9pendre du nombre de machines \u00e0 connecter. A.1. R\u00e9seau local \u00b6 Avec deux ordinateurs : ils peuvent \u00eatre simplement connect\u00e9s avec un c\u00e2ble Ethernet , ayant des prises RJ45 (rajouter la l\u00e9gende ci-dessous) : Les machines doivent \u00eatre \u00e9quip\u00e9es de carte (interface) r\u00e9seau : un ensemble de composants \u00e9lectroniques reli\u00e9s ensemble pour permettre la connexion de l'ordinateur \u00e0 un r\u00e9seau. Avec quelques ordinateurs : on utilise un commutateur ou switch en anglais, auquel tous les ordinateurs sont connect\u00e9s. Les machines sont alors connect\u00e9es au sein d'un r\u00e9seau local ou LAN (pour Local Area Network ). Les machines peuvent s'envoyer des informations sans utiliser d'acc\u00e8s \u00e0 Internet. A.2. Plusieurs r\u00e9seaux locaux \u00b6 Pour connecter plusieurs r\u00e9seaux entre eux, il faut utiliser un autre type de machines : des routeurs . Elles permettent de faire le lien entre diff\u00e9rents r\u00e9seaux locaux. B. Identification des composants d'un r\u00e9seau \u00b6 B.1. Les adresses IP \u00b6 D\u00e9finition Chaque machine connect\u00e9e \u00e0 un r\u00e9seau est identifi\u00e9e par une adresse IP (pour Internet Protocol ). C'est une suite de symboles (chiffres ou lettres) qui identiife de mani\u00e8re unique une machine sur un r\u00e9seau. Le format IPv4 est pris comme standard dans tout le cours, mais on utilise aujourd'hui 2 formats : Nom IPv4 IPv6 Forme 4 valeurs cod\u00e9es sur 1 octet (les valeurs vont de 0 \u00e0 255 ), \u00e9crites en d\u00e9cimal, s\u00e9par\u00e9es par des . 8 champs de 2 octets \u00e9crits en hexad\u00e9cimal, s\u00e9par\u00e9es par des : Exemple 178.160.1.0 2a03:2890:f145:82:face:b00c:0:25de Une partie de l\u2019adresse IP identifie le r\u00e9seau auquel appartient la machine, et une partie identifie la machine (l'\"h\u00f4te\") elle-m\u00eame sur le r\u00e9seau. Deux machines d\u2019un m\u00eame r\u00e9seau devront avoir une adresse IP avec la m\u00eame partie r\u00e9seau pour pouvoir communiquer. La partie r\u00e9seau de l'adresse IP est identifi\u00e9e gr\u00e2ce \u00e0 un masque de sous-r\u00e9seau , de la forme a.b.c.d, indiquant quels bits de l'adresse IP sont dans la partie r\u00e9seau (ils sont \u00e0 un dans le masque) et lesquels ne le sont pas (ils sont \u00e0 z\u00e9ro ) . On peut aussi noter, apr\u00e8s l'adresse IP, le nombre de bits \u00e0 1 dans le masque, apr\u00e8s un /. Exemple Une machine M1 a l'adresse IP 192.168.1.1 et son masque de sous-r\u00e9seau est 255.255.255.0 (ou bien 192.168.1.1/24). On veut savoir quelle est l'adresse de son sous-r\u00e9seau. On l'obtient en convertissant les adresses en binaire et en calculant le ET logique entre les deux. Adresse IP Masque Adresse IP ET Masque B.2. Les adresses MAC \u00b6 Les adresses IP identifient les machines sur un r\u00e9seau : cela signifie que si on les connecte sur un autre r\u00e9seau (local), cette adresse peut varier. D\u00e9finition Pour identifier une machine physique \u00e0 coup s\u00fbr, on utilise en plus une adresse MAC , unique \u00e0 chaque interface r\u00e9seau et fournie par son fabriquant. Elle est constitu\u00e9e de 6 octets (48 bits), repr\u00e9sent\u00e9s en g\u00e9n\u00e9ral en hexad\u00e9cimal, s\u00e9par\u00e9s par des :. Exemple 5C:FA:CE:D2:CF:36 est une adresse MAC valide. TD \u00b6 Exercice 1 : adresses valides \u00b6 Pour chacune des adresses suivantes, identiquer si elle correspond \u00e0 une adresse IP , une adresse MAC , ou bien si c'est une adresse non-valide. Dans ce cas, identifier quel est le probl\u00e8me. Adresse Adresse IPv4 valide Adresse MAC Adresse non-valide a. 20.1.13.10 b. 7D:A9:C5:67:E6:F3 c. 128.252.2.257 d. 200.200.200.200.200 e. 6A:A9:G4:10:EF:67 f. 4.5.6.7 Exercice 2 : adressage IP \u00b6 On consid\u00e8re le r\u00e9seau suivant : L'adresse IP 172.128.1.1 est attribu\u00e9e \u00e0 M1, et son masque de sous-r\u00e9seau est 255.255.255.0. 1.a. En faisant un ET logique entre l'adresse IP et le masque, obtenir l'adresse du sous-r\u00e9seau. 1.b. On donne \u00e0 M2 l'adresse IP 172.128.2.2. Les machines pourront-elles communiquer ? Justifier. 1.b. On donne \u00e0 M3 l'adresse IP 172.128.1.10. Les machines pourront-elles communiquer ? Justifier. On attribue \u00e0 M4 l'adresse IP 16.0.0.1/16. 2.a. Quel est le masque du sous-r\u00e9seau ? 2.b. Quelle est l'adresse du sous-r\u00e9seau ? 2.c. Quelle adresse IP peut-on attribuer \u00e0 M5 ? L'adresse IP du dernier sous-r\u00e9seau (avec M7, M8, R3 et RB) est 172.128.3.0/24. Cette adresse n'est pas attribuable \u00e0 une machine (c'est celle du r\u00e9seau) , ce qui est aussi le cas de l'adresse dans laquelle tous les bits de la machine (h\u00f4te) sont \u00e0 1 (c'est l'adresse de diffusion, permettant d'atteindre toutes les machines d'un sous-r\u00e9seau) . 3.a. Quelle est cette adresse de diffusion ? 3.b. En d\u00e9duire le nombre de machines qu'il est possible de connecter \u00e0 ce r\u00e9seau.","title":"Traitement des donn\u00e9es en tables"},{"location":"1ere_22/seq9/architecture/#i-architecture-des-reseaux-informatiques","text":"","title":"I. Architecture des r\u00e9seaux informatiques"},{"location":"1ere_22/seq9/architecture/#cours","text":"","title":"Cours"},{"location":"1ere_22/seq9/architecture/#td","text":"","title":"TD"},{"location":"1ere_22/seq9/tcpip/","text":"body { text-align: justify} II. Le mod\u00e8le TCP/IP \u00b6 Cours \u00b6 On consid\u00e8re le r\u00e9seau ci-dessous, et on veut savoir comment les diff\u00e9rentes machines peuvent communiquer entre elles. D\u00e9finition Elles utilisent des protocoles de communication : des ensembles de normes qui d\u00e9finissent comment \u00e9changer des informations entre machines. A. Communication dans un r\u00e9seau local \u00b6 On veut envoyer un message d'un ordinateur M1 un ordinateur M2 . Les deux machines sont dans le m\u00eame r\u00e9seau local. A.1. D\u00e9coupage des donn\u00e9es \u00b6 Pour faire un transfert de fichier, on utilise l'application FTP (File Transfer Protocol). Les donn\u00e9es ne peuvent pas transiter en une fois dans le r\u00e9seau : les connexions permettent de faire transiter un nombre limit\u00e9 de donn\u00e9es \u00e0 la fois. Cela a \u00e9t\u00e9 con\u00e7u ainsi pour fluidifier les \u00e9changes : s'il y a un probl\u00e8me \u00e0 un endroit du r\u00e9seau, il n'est pas n\u00e9cessaire de renvoyer toutes les donn\u00e9es mais seulement une partie. Les donn\u00e9es sont donc d\u00e9coup\u00e9es . Exemple : transmission d'un po\u00e8me de C. Baudelaire, dont voici une partie : A.2. TCP \u00b6 Les donn\u00e9es transitent sur le r\u00e9seau, et on observe qu'elles sont arriv\u00e9es ainsi \u00e0 M2 : Quels probl\u00e8mes y a-t-il ? Les donn\u00e9es sont arriv\u00e9es dans le d\u00e9sordre, et il en manque. Comment les r\u00e9soudre ? On peut les r\u00e9soudre en ajoutant un num\u00e9ro \u00e0 chaque partie, et en utilisant des accus\u00e9s de r\u00e9ception. D\u00e9finition C'est le r\u00f4le de TCP (Transmission Control Protocol) , un protocole de transport des donn\u00e9es. Si la fiabilit\u00e9 n'\u00e9tait pas le plus important mais la rapidit\u00e9 importait plus, on aurait pu utiliser UDP, qui est un autre protocole de transport. Les donn\u00e9es sont donc mises en forme par TCP, c'est-\u00e0-dire qu'on rajoute des informations dans l' ent\u00eate du segment TCP (on encapsule les donn\u00e9es) : A.3. IP \u00b6 Pour savoir o\u00f9 est ce qu'il faut acheminer les donn\u00e9es, il faut savoir, gr\u00e2ce \u00e0 l' adresse IP de l'\u00e9metteur et du destinataire, s'il sont sur le m\u00eame r\u00e9seau local ou non. On obtient l'information en faisant un ET logique entre l'adresse IP et le masque de sous-r\u00e9seau. D\u00e9finition L' Internet Protocol sert \u00e0 guider les donn\u00e9es dans le r\u00e9seau. L' ent\u00eate IP contient les adresses IP de l'\u00e9metteur et du destinataire. A.4. Acc\u00e8s \u00e0 la machine \u00b6 Dans notre cas, M1 et M2 sont sur le m\u00eame r\u00e9seau. Les donn\u00e9es parviennent \u00e0 M2 gr\u00e2ce au commutateur , qui sait associer adresse IP \u00e0 adresse MAC gr\u00e2ce \u00e0 l' Address Resolution Protocol (ARP) . Cela permet de savoir \u00e0 quelle machine physique est-ce qu'il faut envoyer les donn\u00e9es. Cette information est ajout\u00e9e \u00e0 l'ent\u00eate de la trame Ethernet , qui est le type de connexion le plus utilis\u00e9 (ce pourrait \u00eatre une trame Wifi par exemple si on utilisait ce type de connexion - il en existe d'autres types encore). Les trames parviennent alors \u00e0 M2, qui d\u00e9sencapsule les ent\u00eates une \u00e0 une pour acc\u00e9der aux donn\u00e9es. B. Le mod\u00e8le en couches \u00b6 Les diff\u00e9rents protocoles d\u00e9crits rajoutent, \u00e0 chaque \u00e9tape, des donn\u00e9es d'ent\u00eate. On dit que les donn\u00e9es sont, au fur et \u00e0 mesure, encapsul\u00e9es . Diff\u00e9rents protocoles peuvent \u00eatre utilis\u00e9s aux diff\u00e9rentes \u00e9tapes, mais leur fonction est similaire. Cela correspond au mod\u00e8le en couches TCP/IP : Le premier mod\u00e8le d\u00e9crit identifiait plus de couches, c'est le mod\u00e8le OSI . C'est un mod\u00e8le th\u00e9orique, qui n'a pas \u00e9t\u00e9 utilis\u00e9 en pratique, au contraire du mod\u00e8le TCP/IP, dont le nom vient des deux protocoles \u00e0 la base des communications sur Internet. C. Communication entre r\u00e9seaux locaux \u00b6 Si M1 veut envoyer des donn\u00e9es \u00e0 M4 , les donn\u00e9es doivent sortir du r\u00e9seau local. Gr\u00e2ce au protocole IP , on identifie qu'il faut sortir du r\u00e9seau car les adresses de sous-r\u00e9seau de l'\u00e9metteur et du destinataire ne correspondent pas. Les donn\u00e9es qui sortent du r\u00e9seau sont envoy\u00e9es vers une passerelle : une machine qui connecte un r\u00e9seau vers les autres. C'est ici le routeur RA . RA sait o\u00f9 envoyer les donn\u00e9es gr\u00e2ce \u00e0 sa table de routage . Il les dirige vers le switch R2. On est ensuite dans la premi\u00e8re configuration, les donn\u00e9es sont \u00e9chang\u00e9es dans un r\u00e9seau local, vers M4. D. R\u00e9cup\u00e9ration de paquets \u00b6 D\u00e9finition Le protocole du bit altern\u00e9 est un protocole de communication fonctionnant au niveau des trames (couche r\u00e9seau) . Il permet de retransmettre les trames qui ont \u00e9t\u00e9 perdues avec un syst\u00e8me d' acquittement cod\u00e9 sur 1 bit (dont la valeur va alterner entre les trames). sequenceDiagram participant c as Emetteur participant s as R\u00e9cepteur c->>s: Emission d'une trame avec le bit \u00e0 0 s->>c: C'est le bit attendu : ACK \u00e0 0 c->>s: Emission d'une trame avec le bit \u00e0 1 s->>c: C'est le bit attendu : ACK \u00e0 1 Si l'\u00e9metteur ne re\u00e7oit pas d'acquittement au bout d'un temps \\(t\\) , il renvoie la m\u00eame trame avant de passer \u00e0 la suivante.","title":"Les r\u00e9seaux informatiques"},{"location":"1ere_22/seq9/tcpip/#ii-le-modele-tcpip","text":"","title":"II. Le mod\u00e8le TCP/IP"},{"location":"1ere_22/seq9/tcpip/#cours","text":"On consid\u00e8re le r\u00e9seau ci-dessous, et on veut savoir comment les diff\u00e9rentes machines peuvent communiquer entre elles. D\u00e9finition Elles utilisent des protocoles de communication : des ensembles de normes qui d\u00e9finissent comment \u00e9changer des informations entre machines.","title":"Cours"},{"location":"2nde/","text":"Les cours de seconde \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de seconde"},{"location":"2nde/#les-cours-de-seconde","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de seconde"},{"location":"2nde/introduction/","text":"body { text-align: justify} Sciences Num\u00e9riques et Technologie \u00b6 A. Brainstorming \u00b6 A quoi le mot \"num\u00e9rique\" vous fait-il penser ? B. D\u00e9finitions \u00b6 D\u00e9finition Num\u00e9rique : qui est repr\u00e9sent\u00e9 par un nombre. On repr\u00e9sente par des nombres toutes sortes de donn\u00e9es (texte, image, son, etc). En SNT, nous allons \u00e9tudier diff\u00e9rents domaines dans lesquels on utilise des donn\u00e9es (\"num\u00e9rique\") qui sont utilis\u00e9es par des machines (\"technologie\"). Quel est le langage utilis\u00e9 par un ordinateur ? Il ne comprend que les 0 et les 1 : le langage binaire. Un chiffre qui vaut soit 0 soit 1 est un bit. C. Les th\u00e9matiques \u00b6 Entourer en bleu les mots-cl\u00e9s qui font r\u00e9f\u00e9rence aux donn\u00e9es , en rouge ceux qui font r\u00e9f\u00e9rence aux machines . Internet Les donn\u00e9es structur\u00e9es Le Web Les R\u00e9seaux Sociaux R\u00e9seau mondial Bases de donn\u00e9es Navigateur, serveur Donn\u00e9es personnelles Smartphones, ordinateurs Serveurs, cloud Fichiers texte, son, image, vid\u00e9o Application Web La photographie num\u00e9rique Localisation, cartographie Informatique embarqu\u00e9e Image num\u00e9rique Satellites Capteurs Appareil photo, smartphone Carte num\u00e9rique, coordonn\u00e9es GPS Objets connect\u00e9s D. La programmation \u00b6 Nous allons aussi apprendre les bases de la programmation. Algorithme suite d\u2019instructions/d\u2019op\u00e9rations permettant de r\u00e9soudre un probl\u00e8me. Programme traduction d\u2019un algorithme dans un langage de programmation. Python est le langage de programmation que nous allons \u00e9tudier. E. Le monde du num\u00e9rique et de l'informatique \u00b6 E.1. Les secteurs d'activit\u00e9 \u00b6 Regarder la vid\u00e9o suivante : Relever les diff\u00e9rentes cat\u00e9gories d'entreprises dans lesquelles on retrouve diff\u00e9rents m\u00e9tiers du num\u00e9rique et indiquer ce \u00e0 quoi elles correspondent. Relever diff\u00e9rents m\u00e9tiers entrant dans ces diff\u00e9rentes cat\u00e9gories. E.2. Les m\u00e9tiers \u00b6 A partir de la vid\u00e9o suivante, indiquer en quoi consistent les m\u00e9tiers list\u00e9s ci-dessous : Architecte technique ? Data scientist ? D\u00e9veloppeur ?","title":"Introduction"},{"location":"2nde/introduction/#sciences-numeriques-et-technologie","text":"","title":"Sciences Num\u00e9riques et Technologie"},{"location":"2nde/internet/communiquer/","text":"body { text-align: justify} II. Communiquer sur Internet \u00b6 Introduction \u00b6 Quel type de mat\u00e9riel faut-il pour faire communiquer deux ordinateurs ? Que faut-il en plus pour que les machines puissent \"se comprendre\" ? Cours : Le mat\u00e9riel \u00b6 A compl\u00e9ter. Les machines utilis\u00e9es pour former un r\u00e9seau informatique sont les suivantes : les commutateurs ou switch : les routeurs : Exemple de r\u00e9seau local (partie d'un plus grand r\u00e9seau) Pour les activit\u00e9s 1 et 2 , on consid\u00e8re le r\u00e9seau suivant : Activit\u00e9 1 : l'Internet Protocol \u00b6 A faire sur feuille. Nous avons sur ce sch\u00e9ma les \u00e9l\u00e9ments suivants : - 15 ordinateurs : M1 \u00e0 M15 - 6 switchs : R1 \u00e0 R6 - 8 routeurs : A, B, C, D, E, F, G et H Quels sont les diff\u00e9rents r\u00e9seaux locaux ? Compl\u00e9ter le tableau. R\u00e9seau local 1 2 3 4 5 6 Ordinateurs Sur Internet, les donn\u00e9es \u00e0 envoyer sont d\u00e9coup\u00e9es en plusieurs morceaux, appel\u00e9s paquets . Indiquer, dans chacun des cas suivant, par quelles machines est-ce que les paquets vont transiter. a. M1 veut communiquer avec M3 : b. M1 veut communiquer avec M6 : Guider les paquets dans un r\u00e9seau s'appelle le routage des paquets. a. On s'int\u00e9resse aux \u00e9changes entre M4 et M14 . Donner un chemin (la liste des machines travers\u00e9es) fonctionnant m\u00eame en cas de lorsque le routeur D est satur\u00e9 (il a trop de donn\u00e9es \u00e0 traiter) . b. 5 paquets, num\u00e9rot\u00e9s de 1 \u00e0 5, sont \u00e9mis par M4 et envoy\u00e9s vers M14 . Tout fonctionne bien pour l'acheminement des paquets 1 et 2, mais le routeur D sature ensuite. De plus, avant que le paquet 5 n'arrive au routeur B , celui-ci tombe en panne. D\u00e9crire par quel chemin peut passer chacun des paquets de 1 \u00e0 5. c. Quel est l\u2019int\u00e9r\u00eat d\u2019avoir diff\u00e9rents chemins dans un r\u00e9seau ? d. Est-on assur\u00e9 que tous les paquets vont arriver \u00e0 destination ? Note : Plusieurs machines pourraient avoir le nom M5, M11 ou M14, donc en r\u00e9alit\u00e9 elles sont identifi\u00e9es autrement : on utilise des adresses IP qui ont la forme suivante : 196.128.1.15 Activit\u00e9 2 : Transmission Control Protocol \u00b6 A faire sur feuille. Pour s'assurer de la fiabilit\u00e9 de la transmission de paquets d'un exp\u00e9diteur \u00e0 un destinataire, il faut rajouter des informations aux donn\u00e9es envoy\u00e9es. Un paquet IP est en fait constitu\u00e9 de 3 parties : Des donn\u00e9es d\u00e9coup\u00e9es en 5 paquets transitent de M4 \u00e0 M14. a. Les paquets arrivent dans l'ordre 4, 3, 1, 5, 2. Quelle information faut-il ajouter dans l'ent\u00eate TCP pour que les donn\u00e9es puissent \u00eatre lues correctement ? b. Les paquets suivant arrivent 4, 3, 1, 5. Que faut-il faire pour avoir l'ensemble des donn\u00e9es ? c. Remplir le sch\u00e9ma donn\u00e9 en introduction avec ce que doit contenir l'ent\u00eate TCP, et l'ent\u00eate IP (se r\u00e9f\u00e9rer \u00e0 l'activit\u00e9 1 pour rep\u00e9rer les informations correspondant \u00e0 IP) . a. Si toutes les r\u00e8gles identifi\u00e9es dans la question 1 sont mises en place, peut-on dire que la transmission est fiable ? *(que chaque paquet arrive \u00e0 destination)* b. Sait-on \u00e0 l'avance combien de temps il faudra pour acheminer tous les paquets ? Cours : Les protocoles de communication \u00b6 A compl\u00e9ter. Les donn\u00e9es sont d\u00e9coup\u00e9es en ...................................... de ...................................... . Des machines appel\u00e9es ...................................... servent \u00e0 guider les donn\u00e9es d\u2019un r\u00e9seau \u00e0 un autre jusqu\u2019\u00e0 leur destinataire. Le temps pour atteindre la destination n\u2019est pas connu \u00e0 l\u2019avance. Les transferts de donn\u00e9es peuvent se faire gr\u00e2ce \u00e0 des ...................................... ............... ...................................... qui d\u00e9finissent les r\u00e8gles de transport des donn\u00e9es. Le protocole TCP (...................................... ...................................... ......................................) d\u00e9coupe les donn\u00e9es et s\u2019assure de leur bonne transmission. Pour cela, il ajoute un ...................................... dans l'...................................... de chaque ...................................... pour pouvoir ensuite les r\u00e9assembler dans le bon ordre. L'IP (...................................... ......................................) ajoute les adresses IP de l'...................................... et du ...................................... \u00e0 l\u2019ent\u00eate et se charge du ...................................... des donn\u00e9es.","title":"II. Communiquer sur Internet"},{"location":"2nde/internet/communiquer/#ii-communiquer-sur-internet","text":"","title":"II. Communiquer sur Internet"},{"location":"2nde/internet/communiquer/#introduction","text":"Quel type de mat\u00e9riel faut-il pour faire communiquer deux ordinateurs ? Que faut-il en plus pour que les machines puissent \"se comprendre\" ?","title":"Introduction"},{"location":"2nde/internet/communiquer/#cours-le-materiel","text":"A compl\u00e9ter. Les machines utilis\u00e9es pour former un r\u00e9seau informatique sont les suivantes : les commutateurs ou switch : les routeurs : Exemple de r\u00e9seau local (partie d'un plus grand r\u00e9seau) Pour les activit\u00e9s 1 et 2 , on consid\u00e8re le r\u00e9seau suivant :","title":"Cours : Le mat\u00e9riel"},{"location":"2nde/internet/communiquer/#activite-1-linternet-protocol","text":"A faire sur feuille. Nous avons sur ce sch\u00e9ma les \u00e9l\u00e9ments suivants : - 15 ordinateurs : M1 \u00e0 M15 - 6 switchs : R1 \u00e0 R6 - 8 routeurs : A, B, C, D, E, F, G et H Quels sont les diff\u00e9rents r\u00e9seaux locaux ? Compl\u00e9ter le tableau. R\u00e9seau local 1 2 3 4 5 6 Ordinateurs Sur Internet, les donn\u00e9es \u00e0 envoyer sont d\u00e9coup\u00e9es en plusieurs morceaux, appel\u00e9s paquets . Indiquer, dans chacun des cas suivant, par quelles machines est-ce que les paquets vont transiter. a. M1 veut communiquer avec M3 : b. M1 veut communiquer avec M6 : Guider les paquets dans un r\u00e9seau s'appelle le routage des paquets. a. On s'int\u00e9resse aux \u00e9changes entre M4 et M14 . Donner un chemin (la liste des machines travers\u00e9es) fonctionnant m\u00eame en cas de lorsque le routeur D est satur\u00e9 (il a trop de donn\u00e9es \u00e0 traiter) . b. 5 paquets, num\u00e9rot\u00e9s de 1 \u00e0 5, sont \u00e9mis par M4 et envoy\u00e9s vers M14 . Tout fonctionne bien pour l'acheminement des paquets 1 et 2, mais le routeur D sature ensuite. De plus, avant que le paquet 5 n'arrive au routeur B , celui-ci tombe en panne. D\u00e9crire par quel chemin peut passer chacun des paquets de 1 \u00e0 5. c. Quel est l\u2019int\u00e9r\u00eat d\u2019avoir diff\u00e9rents chemins dans un r\u00e9seau ? d. Est-on assur\u00e9 que tous les paquets vont arriver \u00e0 destination ? Note : Plusieurs machines pourraient avoir le nom M5, M11 ou M14, donc en r\u00e9alit\u00e9 elles sont identifi\u00e9es autrement : on utilise des adresses IP qui ont la forme suivante : 196.128.1.15","title":"Activit\u00e9 1 : l'Internet Protocol"},{"location":"2nde/internet/communiquer/#activite-2-transmission-control-protocol","text":"A faire sur feuille. Pour s'assurer de la fiabilit\u00e9 de la transmission de paquets d'un exp\u00e9diteur \u00e0 un destinataire, il faut rajouter des informations aux donn\u00e9es envoy\u00e9es. Un paquet IP est en fait constitu\u00e9 de 3 parties : Des donn\u00e9es d\u00e9coup\u00e9es en 5 paquets transitent de M4 \u00e0 M14. a. Les paquets arrivent dans l'ordre 4, 3, 1, 5, 2. Quelle information faut-il ajouter dans l'ent\u00eate TCP pour que les donn\u00e9es puissent \u00eatre lues correctement ? b. Les paquets suivant arrivent 4, 3, 1, 5. Que faut-il faire pour avoir l'ensemble des donn\u00e9es ? c. Remplir le sch\u00e9ma donn\u00e9 en introduction avec ce que doit contenir l'ent\u00eate TCP, et l'ent\u00eate IP (se r\u00e9f\u00e9rer \u00e0 l'activit\u00e9 1 pour rep\u00e9rer les informations correspondant \u00e0 IP) . a. Si toutes les r\u00e8gles identifi\u00e9es dans la question 1 sont mises en place, peut-on dire que la transmission est fiable ? *(que chaque paquet arrive \u00e0 destination)* b. Sait-on \u00e0 l'avance combien de temps il faudra pour acheminer tous les paquets ?","title":"Activit\u00e9 2 : Transmission Control Protocol"},{"location":"2nde/internet/communiquer/#cours-les-protocoles-de-communication","text":"A compl\u00e9ter. Les donn\u00e9es sont d\u00e9coup\u00e9es en ...................................... de ...................................... . Des machines appel\u00e9es ...................................... servent \u00e0 guider les donn\u00e9es d\u2019un r\u00e9seau \u00e0 un autre jusqu\u2019\u00e0 leur destinataire. Le temps pour atteindre la destination n\u2019est pas connu \u00e0 l\u2019avance. Les transferts de donn\u00e9es peuvent se faire gr\u00e2ce \u00e0 des ...................................... ............... ...................................... qui d\u00e9finissent les r\u00e8gles de transport des donn\u00e9es. Le protocole TCP (...................................... ...................................... ......................................) d\u00e9coupe les donn\u00e9es et s\u2019assure de leur bonne transmission. Pour cela, il ajoute un ...................................... dans l'...................................... de chaque ...................................... pour pouvoir ensuite les r\u00e9assembler dans le bon ordre. L'IP (...................................... ......................................) ajoute les adresses IP de l'...................................... et du ...................................... \u00e0 l\u2019ent\u00eate et se charge du ...................................... des donn\u00e9es.","title":"Cours : Les protocoles de communication"},{"location":"2nde/internet/identifier/","text":"body { text-align: justify} Identifier les machines sur Internet \u00b6 Activit\u00e9 1 : Le Domain Name System (DNS) \u00b6 A faire sur feuille. Une machine est identifi\u00e9e de mani\u00e8re unique par une adresse IP. Il existe actuellement 2 formats pour ces adresses, le format IPv4 et le format IPv6. Au format IPv4 , l'adresse s'\u00e9crit sous la forme de 4 nombres compris entre 0 et 255 s\u00e9par\u00e9s par des points. Identifier, dans la liste suivante, les adresses IPv4 valides : 20.1.13.10 128.252.2.257 200.200.200.200.200 4.5.6.7 Valide ou non valide Les adresses IP identifient les machines qui utilisent Internet. C'est le cas des serveurs Web, les machines qui stockent les pages des sites Web. On n'utilise pourtant pas d'adresse IP pour les identifier (elles sont difficiles \u00e0 retenir !) mais une adresse symbolique , ou nom de domaine . Pour identifier l'adresse symbolique, il faut prendre l'URL \u00e9crite dans la barre d'adresse du navigateur, et s\u00e9lectionner la partie apr\u00e8s les //, et avant un autre / s'il y en a un. Exemple : l'adresse symbolique de https://pixees.fr/informatiquelycee/ est pixees.fr Quelle est l'adresse symbolique du serveur h\u00e9bergeant l'ENT, sachant que son URL est https://ent.iledefrance.fr/ ? A partir du sch\u00e9ma ci-dessous, expliquer le r\u00f4le jou\u00e9 par les serveurs DNS (Domain Name System) . graph LR A(Client) -- Requ\u00eate : Quelle est l'adresse IP de pixees.fr ? --> B(Serveur DNS Racine) B -- Demandez au serveur DNS .fr --> A A -- Requ\u00eate : Quelle est l'adresse IP de pixees.fr ? --> C(Serveur DNS .fr) C -- L'adresse IP est 128.93.162.128 --> A A -- Requ\u00eate HTTP \u00e0 128.93.162.128 --> E(Serveur Web) E -- Voici la page Web --> A Quel est l'int\u00e9r\u00eat d'avoir plusieurs serveurs DNS ? Activit\u00e9 2 : Travail Pratique \u00b6 A faire sur ordinateur. Ouvrir l'interface de commandes Windows en tapant cmd dans la barre de recherche de l'ordinateur. Taper la commande ipconfig . Cette commande vous donne la ou les adresses IP associ\u00e9es aux cartes r\u00e9seaux de l'ordinateur qui sont connect\u00e9es \u00e0 un r\u00e9seau. Relever l'adresse IP qui s'affiche : ...................................... On veut tester la connexion entre votre ordinateur et le site de l'ENT. Pour cela, taper la commande ping ent.iledefrance.fr . a. Relever l'adresse IP du site de l'ENT : ...................................... b. 4 paquets de donn\u00e9es (32 octets) ont \u00e9t\u00e9 envoy\u00e9s vers l'ENT. Sont-ils tous bien arriv\u00e9s ? .............. c. Combien de temps a-t-il fallu pour les transmettre ? .............. d. Le TTL signifie \"Time To Live\", il correspond au nombre de routeurs maximal par lesquels un paquet peut passer avant d'\u00eatre consid\u00e9r\u00e9 perdu, et donc d\u00e9truit. Quel est sa valeur ? .............. Ouvrir un navigateur (Mozilla Firefox de pr\u00e9f\u00e9rence). a. Taper ent.iledefrance.fr dans la barre d'adresse. b. Ouvrir un nouvel onglet, et taper l'adresse IP relev\u00e9e \u00e0 la question 3.a. Que se passe-t-il ? .................................................................................................................. Pour savoir quel trajet a \u00e9t\u00e9 fait par les diff\u00e9rents paquet pour acc\u00e9der \u00e0 l'ENT, on utilise la commande tracert sur Windows. Taper la commande tracert ent.iledefrance.fr . Un \"saut\" correspond au passage par un routeur. a. Par combien de routeurs est-ce que le paquet est pass\u00e9 ? .............. b. Reconnaissez-vous certains routeurs ? ................................................................................................................ Cours \u00b6 A compl\u00e9ter. Chaque machine connect\u00e9e \u00e0 un r\u00e9seau est identifi\u00e9e gr\u00e2ce \u00e0 une ...................................... . Elle est constitu\u00e9e de .............. nombres (pour l'IPv4) compris entre .............. et ............... . Pour plus facilement retenir les noms des sites Internet, on utilise des ...................................... ...................................... . La correspondance entre ces derni\u00e8res et les adresses des machines est faite gr\u00e2ce \u00e0 l\u2019annuaire .............. (pour ............................ ............................ ............................). L'annuaire DNS est r\u00e9parti sur plusieurs machines compte-tenu de la quantit\u00e9 d\u2019adresses d\u2019Internet. Pour obtenir l'............................ .............. de la machine o\u00f9 se trouve une page Web recherch\u00e9e, les ............................ .............. communiquent entre eux en s\u2019envoyant des ............................. . Questionnaire r\u00e9capitulatif \u00b6 R\u00e9pondre aux questions apr\u00e8s avoir regard\u00e9 la vid\u00e9o suivante : A quoi sert l\u2019adresse IP d\u2019une machine ? Comment est-elle cod\u00e9e ? Quel est le nom du format qui correspond \u00e0 ce codage de l\u2019adresse ? Pourquoi va-t-on devoir changer de codage ? Quel est le r\u00f4le du DNS ? Quelle est le lien entre URL et serveur ? Quel est le r\u00f4le de l'Internet Protocol ? Sous quelle forme les donn\u00e9es d'un fichier sont-elles transmises sur Internet ? Quel est le r\u00f4le de TCP ?","title":"IV. S'identifier sur Internet"},{"location":"2nde/internet/identifier/#identifier-les-machines-sur-internet","text":"","title":"Identifier les machines sur Internet"},{"location":"2nde/internet/identifier/#activite-1-le-domain-name-system-dns","text":"A faire sur feuille. Une machine est identifi\u00e9e de mani\u00e8re unique par une adresse IP. Il existe actuellement 2 formats pour ces adresses, le format IPv4 et le format IPv6. Au format IPv4 , l'adresse s'\u00e9crit sous la forme de 4 nombres compris entre 0 et 255 s\u00e9par\u00e9s par des points. Identifier, dans la liste suivante, les adresses IPv4 valides : 20.1.13.10 128.252.2.257 200.200.200.200.200 4.5.6.7 Valide ou non valide Les adresses IP identifient les machines qui utilisent Internet. C'est le cas des serveurs Web, les machines qui stockent les pages des sites Web. On n'utilise pourtant pas d'adresse IP pour les identifier (elles sont difficiles \u00e0 retenir !) mais une adresse symbolique , ou nom de domaine . Pour identifier l'adresse symbolique, il faut prendre l'URL \u00e9crite dans la barre d'adresse du navigateur, et s\u00e9lectionner la partie apr\u00e8s les //, et avant un autre / s'il y en a un. Exemple : l'adresse symbolique de https://pixees.fr/informatiquelycee/ est pixees.fr Quelle est l'adresse symbolique du serveur h\u00e9bergeant l'ENT, sachant que son URL est https://ent.iledefrance.fr/ ? A partir du sch\u00e9ma ci-dessous, expliquer le r\u00f4le jou\u00e9 par les serveurs DNS (Domain Name System) . graph LR A(Client) -- Requ\u00eate : Quelle est l'adresse IP de pixees.fr ? --> B(Serveur DNS Racine) B -- Demandez au serveur DNS .fr --> A A -- Requ\u00eate : Quelle est l'adresse IP de pixees.fr ? --> C(Serveur DNS .fr) C -- L'adresse IP est 128.93.162.128 --> A A -- Requ\u00eate HTTP \u00e0 128.93.162.128 --> E(Serveur Web) E -- Voici la page Web --> A Quel est l'int\u00e9r\u00eat d'avoir plusieurs serveurs DNS ?","title":"Activit\u00e9 1 : Le Domain Name System (DNS)"},{"location":"2nde/internet/identifier/#activite-2-travail-pratique","text":"A faire sur ordinateur. Ouvrir l'interface de commandes Windows en tapant cmd dans la barre de recherche de l'ordinateur. Taper la commande ipconfig . Cette commande vous donne la ou les adresses IP associ\u00e9es aux cartes r\u00e9seaux de l'ordinateur qui sont connect\u00e9es \u00e0 un r\u00e9seau. Relever l'adresse IP qui s'affiche : ...................................... On veut tester la connexion entre votre ordinateur et le site de l'ENT. Pour cela, taper la commande ping ent.iledefrance.fr . a. Relever l'adresse IP du site de l'ENT : ...................................... b. 4 paquets de donn\u00e9es (32 octets) ont \u00e9t\u00e9 envoy\u00e9s vers l'ENT. Sont-ils tous bien arriv\u00e9s ? .............. c. Combien de temps a-t-il fallu pour les transmettre ? .............. d. Le TTL signifie \"Time To Live\", il correspond au nombre de routeurs maximal par lesquels un paquet peut passer avant d'\u00eatre consid\u00e9r\u00e9 perdu, et donc d\u00e9truit. Quel est sa valeur ? .............. Ouvrir un navigateur (Mozilla Firefox de pr\u00e9f\u00e9rence). a. Taper ent.iledefrance.fr dans la barre d'adresse. b. Ouvrir un nouvel onglet, et taper l'adresse IP relev\u00e9e \u00e0 la question 3.a. Que se passe-t-il ? .................................................................................................................. Pour savoir quel trajet a \u00e9t\u00e9 fait par les diff\u00e9rents paquet pour acc\u00e9der \u00e0 l'ENT, on utilise la commande tracert sur Windows. Taper la commande tracert ent.iledefrance.fr . Un \"saut\" correspond au passage par un routeur. a. Par combien de routeurs est-ce que le paquet est pass\u00e9 ? .............. b. Reconnaissez-vous certains routeurs ? ................................................................................................................","title":"Activit\u00e9 2 : Travail Pratique"},{"location":"2nde/internet/identifier/#cours","text":"A compl\u00e9ter. Chaque machine connect\u00e9e \u00e0 un r\u00e9seau est identifi\u00e9e gr\u00e2ce \u00e0 une ...................................... . Elle est constitu\u00e9e de .............. nombres (pour l'IPv4) compris entre .............. et ............... . Pour plus facilement retenir les noms des sites Internet, on utilise des ...................................... ...................................... . La correspondance entre ces derni\u00e8res et les adresses des machines est faite gr\u00e2ce \u00e0 l\u2019annuaire .............. (pour ............................ ............................ ............................). L'annuaire DNS est r\u00e9parti sur plusieurs machines compte-tenu de la quantit\u00e9 d\u2019adresses d\u2019Internet. Pour obtenir l'............................ .............. de la machine o\u00f9 se trouve une page Web recherch\u00e9e, les ............................ .............. communiquent entre eux en s\u2019envoyant des ............................. .","title":"Cours"},{"location":"2nde/internet/identifier/#questionnaire-recapitulatif","text":"R\u00e9pondre aux questions apr\u00e8s avoir regard\u00e9 la vid\u00e9o suivante : A quoi sert l\u2019adresse IP d\u2019une machine ? Comment est-elle cod\u00e9e ? Quel est le nom du format qui correspond \u00e0 ce codage de l\u2019adresse ? Pourquoi va-t-on devoir changer de codage ? Quel est le r\u00f4le du DNS ? Quelle est le lien entre URL et serveur ? Quel est le r\u00f4le de l'Internet Protocol ? Sous quelle forme les donn\u00e9es d'un fichier sont-elles transmises sur Internet ? Quel est le r\u00f4le de TCP ?","title":"Questionnaire r\u00e9capitulatif"},{"location":"2nde/internet/pair_a_pair/","text":"body { text-align: justify} III. Les r\u00e9seaux pair-\u00e0-pair \u00b6 Activit\u00e9 1 : Partage de photos \u00b6 A faire sur feuille. Les \u00e9l\u00e8ves de la sp\u00e9cialit\u00e9 NSI sont partis en voyage scolaire dans la Silicon Valley, en Californie. A leur retour, Paul a \u00e9t\u00e9 en charge de r\u00e9cup\u00e9rer les photos faites pendant le voyage et a demand\u00e9 \u00e0 les mettre sur le site web du lyc\u00e9e. Les photos sont stock\u00e9es sur un serveur web et tous les \u00e9l\u00e8ves (les clients ) se connectant au site avec un navigateur peuvent essayer de les t\u00e9l\u00e9charger. Cela correspond au mod\u00e8le client-serveur : graph TB A(client 1) <--> B(Serveur) C(client 2) <--> B D(client 2) <--> B E(client 2) <--> B F(client 2) <--> B Le dossier de photos p\u00e8se 10 Go. 100 \u00e9l\u00e8ves se connectent avec une connexion transmettant 100 Mb/s. Le serveur web du lyc\u00e9e a la m\u00eame bande passante, qu'il est r\u00e9partie \u00e9quitablement entre les \u00e9l\u00e8ves. a. Quel est le d\u00e9bit moyen de chacune des connexions des \u00e9l\u00e8ves ? b. Combien de temps faudra-t-il pour que chaque \u00e9l\u00e8ve obtienne le dossier de photos ? Pour aller plus vite, Paul d\u00e9cide d'utiliser un r\u00e9seau pair-\u00e0-pair ( p2p ), dans lequel chaque machine qui a d\u00e9j\u00e0 r\u00e9cup\u00e9r\u00e9 le fichier peut le transmettre \u00e0 son tour. Il n'y a plus besoin d'un serveur web central, il faut juste que toutes les machines utilisent un logiciel de pair-\u00e0-pair. Les diff\u00e9rentes machines peuvent communiquer entre elles, comme repr\u00e9sent\u00e9 ci-dessous : flowchart TB A(client/serveur 1) <--> B(client/serveur 2) C(client/serveur 3) <--> B D(client/serveur 4) <--> C E(client/serveur 5) <--> A E <--> D A <--> C Quelques heures plus tard, 50 \u00e9l\u00e8ves se sont connect\u00e9s au r\u00e9seau et ont r\u00e9cup\u00e9r\u00e9 les fichiers. a. Comment la bande passante des 50 autres \u00e9l\u00e8ves change-t-elle alors ? b. Combien de temps faudra-t-il, dans cette nouvelle situation, pour t\u00e9l\u00e9charger le dossier de photos ? a. D'apr\u00e8s vos r\u00e9ponses aux questions pr\u00e9c\u00e9dente, trouver un avantage du pair-\u00e0-pair par rapport au mod\u00e8le client-serveur. b. Quel(s) inconv\u00e9nient(s) peut-il y avoir \u00e0 utiliser ce type de r\u00e9seau ? Activit\u00e9 2 : Utilisation du pair-\u00e0-pair \u00b6 A faire sur ordinateur, et r\u00e9pondre sur feuille. Pour r\u00e9pondre aux questions, vous pouvez vous aider d'une recherche sur le Web. Dans quels cas l'utilisation d'un r\u00e9seau pair-\u00e0-pair est-elle ill\u00e9gale ? Citer 3 pratiques l\u00e9gales du pair-\u00e0-pair. Citer des logiciels permettant de faire du pair-\u00e0-pair. Quel est l'organisme sanctionnant l'usage ill\u00e9gal du pair-\u00e0-pair en France ? Cours \u00b6 A compl\u00e9ter. Un ordinateur demandant une ressource (faisant une requ\u00eate ) \u00e0 un autre appel\u00e9 un ....................................... , et un qui r\u00e9pond est appel\u00e9 un ...................................... . Les ordinateurs d\u2019un r\u00e9seau pair-\u00e0-pair sont \u00e0 la fois ...................................... et ...................................... . Cela acc\u00e9l\u00e8re les \u00e9changes de donn\u00e9es. Il existe plusieurs logiciels et protocoles pour faire du pair-\u00e0-pair comme le ....................................... . Il permet \u00e0 des ordinateurs en r\u00e9seau d'\u00e9mettre et de recevoir des fichiers. Le pair-\u00e0-pair est couramment utilis\u00e9 pour l\u2019\u00e9change, parfois ...................................... de fichiers de musique, vid\u00e9os, jeux, etc. ...................................... est l\u2019organisme luttant contre cette fraude en France. Mais il y a aussi des usages l\u00e9gaux, par exemple : .................................................................................................................. .","title":"III. Les r\u00e9seaux pair-\u00e0-pair"},{"location":"2nde/internet/pair_a_pair/#iii-les-reseaux-pair-a-pair","text":"","title":"III. Les r\u00e9seaux pair-\u00e0-pair"},{"location":"2nde/internet/pair_a_pair/#activite-1-partage-de-photos","text":"A faire sur feuille. Les \u00e9l\u00e8ves de la sp\u00e9cialit\u00e9 NSI sont partis en voyage scolaire dans la Silicon Valley, en Californie. A leur retour, Paul a \u00e9t\u00e9 en charge de r\u00e9cup\u00e9rer les photos faites pendant le voyage et a demand\u00e9 \u00e0 les mettre sur le site web du lyc\u00e9e. Les photos sont stock\u00e9es sur un serveur web et tous les \u00e9l\u00e8ves (les clients ) se connectant au site avec un navigateur peuvent essayer de les t\u00e9l\u00e9charger. Cela correspond au mod\u00e8le client-serveur : graph TB A(client 1) <--> B(Serveur) C(client 2) <--> B D(client 2) <--> B E(client 2) <--> B F(client 2) <--> B Le dossier de photos p\u00e8se 10 Go. 100 \u00e9l\u00e8ves se connectent avec une connexion transmettant 100 Mb/s. Le serveur web du lyc\u00e9e a la m\u00eame bande passante, qu'il est r\u00e9partie \u00e9quitablement entre les \u00e9l\u00e8ves. a. Quel est le d\u00e9bit moyen de chacune des connexions des \u00e9l\u00e8ves ? b. Combien de temps faudra-t-il pour que chaque \u00e9l\u00e8ve obtienne le dossier de photos ? Pour aller plus vite, Paul d\u00e9cide d'utiliser un r\u00e9seau pair-\u00e0-pair ( p2p ), dans lequel chaque machine qui a d\u00e9j\u00e0 r\u00e9cup\u00e9r\u00e9 le fichier peut le transmettre \u00e0 son tour. Il n'y a plus besoin d'un serveur web central, il faut juste que toutes les machines utilisent un logiciel de pair-\u00e0-pair. Les diff\u00e9rentes machines peuvent communiquer entre elles, comme repr\u00e9sent\u00e9 ci-dessous : flowchart TB A(client/serveur 1) <--> B(client/serveur 2) C(client/serveur 3) <--> B D(client/serveur 4) <--> C E(client/serveur 5) <--> A E <--> D A <--> C Quelques heures plus tard, 50 \u00e9l\u00e8ves se sont connect\u00e9s au r\u00e9seau et ont r\u00e9cup\u00e9r\u00e9 les fichiers. a. Comment la bande passante des 50 autres \u00e9l\u00e8ves change-t-elle alors ? b. Combien de temps faudra-t-il, dans cette nouvelle situation, pour t\u00e9l\u00e9charger le dossier de photos ? a. D'apr\u00e8s vos r\u00e9ponses aux questions pr\u00e9c\u00e9dente, trouver un avantage du pair-\u00e0-pair par rapport au mod\u00e8le client-serveur. b. Quel(s) inconv\u00e9nient(s) peut-il y avoir \u00e0 utiliser ce type de r\u00e9seau ?","title":"Activit\u00e9 1 : Partage de photos"},{"location":"2nde/internet/pair_a_pair/#activite-2-utilisation-du-pair-a-pair","text":"A faire sur ordinateur, et r\u00e9pondre sur feuille. Pour r\u00e9pondre aux questions, vous pouvez vous aider d'une recherche sur le Web. Dans quels cas l'utilisation d'un r\u00e9seau pair-\u00e0-pair est-elle ill\u00e9gale ? Citer 3 pratiques l\u00e9gales du pair-\u00e0-pair. Citer des logiciels permettant de faire du pair-\u00e0-pair. Quel est l'organisme sanctionnant l'usage ill\u00e9gal du pair-\u00e0-pair en France ?","title":"Activit\u00e9 2 : Utilisation du pair-\u00e0-pair"},{"location":"2nde/internet/pair_a_pair/#cours","text":"A compl\u00e9ter. Un ordinateur demandant une ressource (faisant une requ\u00eate ) \u00e0 un autre appel\u00e9 un ....................................... , et un qui r\u00e9pond est appel\u00e9 un ...................................... . Les ordinateurs d\u2019un r\u00e9seau pair-\u00e0-pair sont \u00e0 la fois ...................................... et ...................................... . Cela acc\u00e9l\u00e8re les \u00e9changes de donn\u00e9es. Il existe plusieurs logiciels et protocoles pour faire du pair-\u00e0-pair comme le ....................................... . Il permet \u00e0 des ordinateurs en r\u00e9seau d'\u00e9mettre et de recevoir des fichiers. Le pair-\u00e0-pair est couramment utilis\u00e9 pour l\u2019\u00e9change, parfois ...................................... de fichiers de musique, vid\u00e9os, jeux, etc. ...................................... est l\u2019organisme luttant contre cette fraude en France. Mais il y a aussi des usages l\u00e9gaux, par exemple : .................................................................................................................. .","title":"Cours"},{"location":"2nde/internet/reseaux_informatiques/","text":"body { text-align: justify} Internet et les r\u00e9seaux informatiques \u00b6 Introduction \u00b6 Qu'est-ce qu'Internet ? Que peut-on faire sur Internet ? Activit\u00e9 1 : Le codage de l'information \u00b6 Internet permet de transmettre des informations, qui sont cod\u00e9es dans l'ordinateur en binaire : avec des 0 et des 1, que l'on appelle des bits . Par exemple, le nombre \\(154\\) s'\u00e9crit \\(10011010\\) en binaire, ou base 2 . On le note \\(154_{10} = 10011010_2\\) pour identifier si on \u00e9crit le nombre en d\u00e9cimal ou en binaire. On remarque qu'il faut 8 bits pour l'\u00e9crire. Pour coder tout un fichier, il faut donc beaucoup de 0 et 1 ... Pour compter plus rapidement, on utilise des octets , sachant que 1 octet = 8 bits . \\(154\\) peut donc \u00eatre cod\u00e9 sur... 1 octet ! a. On veut repr\u00e9senter 10 en binaire, et on sait que \\(10_{10} = 1010_2\\) . Combien d'octet(s) faudra-t-il utiliser ? b. On veut repr\u00e9senter 15 064, et on sait que \\(15 064_{10} = 11101011011000_2\\) . Combien d'octet(s) faudra-t-il utiliser ? c. On a un fichier PDF qui p\u00e8se 100 000 octets. Combien de bits sont utilis\u00e9s pour stocker ces donn\u00e9es ? En pratique, il faut beaucoup d'octets pour transmettre des fichiers textes, du son, des vid\u00e9os, etc. Dans le tableau suivant, on indique \u00e0 combien d'octets correspondent les Ko, Mo, Go et To. A retenir 1 Ko (kilooctet) 1 Mo (m\u00e9gaoctet) 1 Go (gigaoctet) 1 To (t\u00e9raoctet) en octets 1 000 1 000 000 1 000 000 000 1 000 000 000 000 en puissances de 10 a. En 2017, \\(122*10^{12}\\) Go \u00e9taient \u00e9chang\u00e9s par mois sur Internet. Combien cela fait-il de To ? b. Ce nombre a doubl\u00e9 entre 2017 et 2020. De combien est-il en 2020, en To ? c. En 2022, ce nombre \u00e9tait de \\(396*10^9\\) To. Placer ce nombre sur le graphique suivant, ainsi que ceux correspondant aux ann\u00e9es 2017 et 2020. d. Conclure sur l'\u00e9volution du traffic sur Internet ces 5 derni\u00e8res ann\u00e9es. Activit\u00e9 2 : Diff\u00e9rents r\u00e9seaux physiques \u00b6 Dans le tableau suivant sont indiqu\u00e9s les diff\u00e9rents r\u00e9seaux physiques majoritairement utilis\u00e9s. R\u00e9seaux physiques Pour quel p\u00e9riph\u00e9rique Filaire ou sans fil Ordre de grandeur du d\u00e9bit en bits/s Ordre de grandeur du d\u00e9bit en octets/s Lent ou rapide 4G sans fil 100 Mbits/s 5G 1 Gbits/s ADSL 25 Mbits/s Bluetooth 2 Mbits/s Ethernet (RJ45) 1 Gbit/s Fibre optique 1 Gbit/s Wi-Fi 0,1 Gbits/s Remplir la 2\u00e8me colonne en indiquant quel type de p\u00e9riph\u00e9rique, entre les smartphones, les ordinateurs et les objets connect\u00e9s, utilise principalement ce type de r\u00e9seau. Remplir la 3\u00e8me colonne en distinguant les r\u00e9seaux sans fil des r\u00e9seaux filaires. Un octet est compos\u00e9 de 8 bits. Compl\u00e9ter la 5\u00e8me colonne pour avoir le d\u00e9bit de chaque r\u00e9seau en octets/s. Un r\u00e9seau est aujourd'hui consid\u00e9r\u00e9 lent s'il met plus d'1 seconde \u00e0 transf\u00e9rer une vid\u00e9o de 100 Mo. Compl\u00e9ter la 6\u00e8me colonne en indiquant si le r\u00e9seau est lent ou rapide. Quel type de r\u00e9seau physique (colonne 1 du tableau) utilisez-vous pour vous connecter \u00e0 Internet chez vous ? Quel type de r\u00e9seau utilisez-vous pour vous connecter \u00e0 Internet depuis les machines du lyc\u00e9e ? Activit\u00e9 3 : Internet dans le monde \u00b6 Visualiser la vid\u00e9o suivante, et r\u00e9pondre aux questions : Quelle technologie permet de connecter les diff\u00e9rents continents ? Quel pourcentage du trafic total de donn\u00e9es transporte-t-elle ? Qu'est-ce qui montre que ce sont des ressources strat\u00e9giques pour les Etats ? Quel effet aurait la d\u00e9connexion des c\u00e2bles d'un pays ? Cours \u00b6 A compl\u00e9ter. Internet est un ...................................... de ............................................................................ dans lequel circulent des donn\u00e9es (environ 168 millions de To par mois) repr\u00e9sent\u00e9es en ...................................... (1 octet = .............. bits). Diff\u00e9rentes technologies permettent d\u2019y acc\u00e9der : filaires (..........................................................................) ou sans fil (..........................................................................). Sur un t\u00e9l\u00e9phone, on peut utiliser la ................... ou la ................... Pour communiquer \u00e0 l\u2019autre bout du monde, ce sont majoritairement des c\u00e2bles ...................................... transoc\u00e9aniques qui font passer les donn\u00e9es gr\u00e2ce \u00e0 la ............................................................................ . Internet est ...................................... du r\u00e9seau physique utilis\u00e9 : on peut passer d'un r\u00e9seau \u00e0 un autre.","title":"I. Internet et les r\u00e9seaux informatiques"},{"location":"2nde/internet/reseaux_informatiques/#internet-et-les-reseaux-informatiques","text":"","title":"Internet et les r\u00e9seaux informatiques"},{"location":"2nde/internet/reseaux_informatiques/#introduction","text":"Qu'est-ce qu'Internet ? Que peut-on faire sur Internet ?","title":"Introduction"},{"location":"2nde/internet/reseaux_informatiques/#activite-1-le-codage-de-linformation","text":"Internet permet de transmettre des informations, qui sont cod\u00e9es dans l'ordinateur en binaire : avec des 0 et des 1, que l'on appelle des bits . Par exemple, le nombre \\(154\\) s'\u00e9crit \\(10011010\\) en binaire, ou base 2 . On le note \\(154_{10} = 10011010_2\\) pour identifier si on \u00e9crit le nombre en d\u00e9cimal ou en binaire. On remarque qu'il faut 8 bits pour l'\u00e9crire. Pour coder tout un fichier, il faut donc beaucoup de 0 et 1 ... Pour compter plus rapidement, on utilise des octets , sachant que 1 octet = 8 bits . \\(154\\) peut donc \u00eatre cod\u00e9 sur... 1 octet ! a. On veut repr\u00e9senter 10 en binaire, et on sait que \\(10_{10} = 1010_2\\) . Combien d'octet(s) faudra-t-il utiliser ? b. On veut repr\u00e9senter 15 064, et on sait que \\(15 064_{10} = 11101011011000_2\\) . Combien d'octet(s) faudra-t-il utiliser ? c. On a un fichier PDF qui p\u00e8se 100 000 octets. Combien de bits sont utilis\u00e9s pour stocker ces donn\u00e9es ? En pratique, il faut beaucoup d'octets pour transmettre des fichiers textes, du son, des vid\u00e9os, etc. Dans le tableau suivant, on indique \u00e0 combien d'octets correspondent les Ko, Mo, Go et To. A retenir 1 Ko (kilooctet) 1 Mo (m\u00e9gaoctet) 1 Go (gigaoctet) 1 To (t\u00e9raoctet) en octets 1 000 1 000 000 1 000 000 000 1 000 000 000 000 en puissances de 10 a. En 2017, \\(122*10^{12}\\) Go \u00e9taient \u00e9chang\u00e9s par mois sur Internet. Combien cela fait-il de To ? b. Ce nombre a doubl\u00e9 entre 2017 et 2020. De combien est-il en 2020, en To ? c. En 2022, ce nombre \u00e9tait de \\(396*10^9\\) To. Placer ce nombre sur le graphique suivant, ainsi que ceux correspondant aux ann\u00e9es 2017 et 2020. d. Conclure sur l'\u00e9volution du traffic sur Internet ces 5 derni\u00e8res ann\u00e9es.","title":"Activit\u00e9 1 : Le codage de l'information"},{"location":"2nde/internet/reseaux_informatiques/#activite-2-differents-reseaux-physiques","text":"Dans le tableau suivant sont indiqu\u00e9s les diff\u00e9rents r\u00e9seaux physiques majoritairement utilis\u00e9s. R\u00e9seaux physiques Pour quel p\u00e9riph\u00e9rique Filaire ou sans fil Ordre de grandeur du d\u00e9bit en bits/s Ordre de grandeur du d\u00e9bit en octets/s Lent ou rapide 4G sans fil 100 Mbits/s 5G 1 Gbits/s ADSL 25 Mbits/s Bluetooth 2 Mbits/s Ethernet (RJ45) 1 Gbit/s Fibre optique 1 Gbit/s Wi-Fi 0,1 Gbits/s Remplir la 2\u00e8me colonne en indiquant quel type de p\u00e9riph\u00e9rique, entre les smartphones, les ordinateurs et les objets connect\u00e9s, utilise principalement ce type de r\u00e9seau. Remplir la 3\u00e8me colonne en distinguant les r\u00e9seaux sans fil des r\u00e9seaux filaires. Un octet est compos\u00e9 de 8 bits. Compl\u00e9ter la 5\u00e8me colonne pour avoir le d\u00e9bit de chaque r\u00e9seau en octets/s. Un r\u00e9seau est aujourd'hui consid\u00e9r\u00e9 lent s'il met plus d'1 seconde \u00e0 transf\u00e9rer une vid\u00e9o de 100 Mo. Compl\u00e9ter la 6\u00e8me colonne en indiquant si le r\u00e9seau est lent ou rapide. Quel type de r\u00e9seau physique (colonne 1 du tableau) utilisez-vous pour vous connecter \u00e0 Internet chez vous ? Quel type de r\u00e9seau utilisez-vous pour vous connecter \u00e0 Internet depuis les machines du lyc\u00e9e ?","title":"Activit\u00e9 2 : Diff\u00e9rents r\u00e9seaux physiques"},{"location":"2nde/internet/reseaux_informatiques/#activite-3-internet-dans-le-monde","text":"Visualiser la vid\u00e9o suivante, et r\u00e9pondre aux questions : Quelle technologie permet de connecter les diff\u00e9rents continents ? Quel pourcentage du trafic total de donn\u00e9es transporte-t-elle ? Qu'est-ce qui montre que ce sont des ressources strat\u00e9giques pour les Etats ? Quel effet aurait la d\u00e9connexion des c\u00e2bles d'un pays ?","title":"Activit\u00e9 3 : Internet dans le monde"},{"location":"2nde/internet/reseaux_informatiques/#cours","text":"A compl\u00e9ter. Internet est un ...................................... de ............................................................................ dans lequel circulent des donn\u00e9es (environ 168 millions de To par mois) repr\u00e9sent\u00e9es en ...................................... (1 octet = .............. bits). Diff\u00e9rentes technologies permettent d\u2019y acc\u00e9der : filaires (..........................................................................) ou sans fil (..........................................................................). Sur un t\u00e9l\u00e9phone, on peut utiliser la ................... ou la ................... Pour communiquer \u00e0 l\u2019autre bout du monde, ce sont majoritairement des c\u00e2bles ...................................... transoc\u00e9aniques qui font passer les donn\u00e9es gr\u00e2ce \u00e0 la ............................................................................ . Internet est ...................................... du r\u00e9seau physique utilis\u00e9 : on peut passer d'un r\u00e9seau \u00e0 un autre.","title":"Cours"},{"location":"2nde/prog/conditions/","text":"body { text-align: justify} II. Les instructions conditionnelles \u00b6 Cours \u00b6 II.A. Les expressions bool\u00e9ennes \u00b6 Une variable de type bool\u00e9en peut prendre la valeur True ou False en Python. Une expression est un ensemble de variables et/ou de valeurs, et d'op\u00e9rateurs. Une expression bool\u00e9enne est une expression renvoyant un bool\u00e9en. On utilise une expression bool\u00e9enne pour comparer diff\u00e9rentes donn\u00e9es : diff\u00e9rentes valeurs, stock\u00e9es dans une variable ou non. Op\u00e9rateur (en Python) Signification == \u00e9gal != diff\u00e9rent > strictement sup\u00e9rieur < strictement inf\u00e9rieur >= sup\u00e9rieur ou \u00e9gal <= inf\u00e9rieur ou \u00e9gal Exemples : (\u00e0 compl\u00e9ter) a == 5 teste si la valeur dans a est \u00e9gale \u00e0 5 , pommes != 0 teste si la valeur dans pommes est diff\u00e9rente de 0 , nombre <= 4 teste si la valeur dans nombre est inf\u00e9rieure ou \u00e9gale \u00e0 4 . La r\u00e9ponse \u00e0 ces tests ne peut prendre que 2 valeurs. Quelles sont-elles ? Vrai ( True ) ou faux ( False ). Exemples de programmes : note = 12 print ( note >= 10 ) Que s'affiche-t-il \u00e0 l'\u00e9cran suite \u00e0 son ex\u00e9cution ? il s'affiche True . Une expression bool\u00e9enne renvoie une valeur, qui peut donc \u00eatre stock\u00e9e dans une variable. note1 = 12 note2 = 9 meilleure12 = note1 >= note2 Que contient la variable meilleure12 ? Elle contient la valeur True . II.B. Les conditions \u00b6 On peut vouloir qu'un algorithme n'ex\u00e9cute pas les m\u00eames op\u00e9rations en fonction des donn\u00e9es du probl\u00e8me. On utilise alors l'instruction conditionnelle \"Si... alors...\" et \"Sinon...\" . II.B.1. Exemple : affichage de publications sur la r\u00e9seau social \u00b6 Sur un r\u00e9seau social, le contenu des publications d'un utilisateur n'est visible que par ses amis. On repr\u00e9sente le probl\u00e8me avec les variables suivantes : - ami est une variable de type bool\u00e9en indiquant si l'utilisateur qui veut voir les publications est un ami ou non. - publication est une variable de type cha\u00eene de caract\u00e8re avec le contenu d'une publication. L'algorithme utilis\u00e9 est le suivant : Si ami alors afficher publication Sinon afficher \"vous ne pouvez pas voir la publication\" Voici sa traduction en Python : if ami : print ( publication ) else : print ( \"vous ne pouvez pas voir la publication\" ) Que peut-on dire sur ami ? Aurait-on pu \u00e9crire autre chose \u00e0 la suite du if ? ami est un bool\u00e9en. On aurait pu tester ami == True mais c'est inutile, on obtiendrait la m\u00eame valeur que celle stock\u00e9e dans ami . II.B.2. Principe g\u00e9n\u00e9ral et syntaxe \u00b6 Dans le cas g\u00e9n\u00e9ral, on \u00e9crit l'algorithme sous la forme suivante : Si condition C alors instructions I Sinon instructions J Cela correspond en Python \u00e0 : if condition C : instructions I else : instructions J La condition C est une expression bool\u00e9enne , et les instructions I et J correspondent \u00e0 des op\u00e9rations diff\u00e9rentes. Attention ! La syntaxe Python est importante. A la suite de la condition, les : sont indispensables pour marquer la fin de l' expression bool\u00e9enne utilis\u00e9e. l' indentation (l'espacement par rapport au bord) a un r\u00f4le : les instructions \u00e0 ex\u00e9cuter si la condition C est vraie doivent \u00eatre \u00e9crites avec une indentation (touche TAB) par rapport \u00e0 la position du if . Idem pour les instructions ex\u00e9cut\u00e9es si la condition C est fausse, qui doivent \u00eatre espac\u00e9es par rapport au else . On peut repr\u00e9senter le m\u00eame code sous la forme d'un diagramme : graph LR A[condition C] -->|True| B[instructions I]; A -->|False| C[instructions J];","title":"II. Expressions bool\u00e9ennes et instructions conditionnelles"},{"location":"2nde/prog/conditions/#ii-les-instructions-conditionnelles","text":"","title":"II. Les instructions conditionnelles"},{"location":"2nde/prog/conditions/#cours","text":"","title":"Cours"},{"location":"2nde/prog/fonctions/","text":"body { text-align: justify} III. Les fonctions \u00b6 Cours \u00b6 A. Exemple \u00b6 On veut cr\u00e9er un programme qui v\u00e9rifie si un utilisateur a entr\u00e9 le bon identifiant et mot de passe associ\u00e9 : on parle de bonne authentification sur un r\u00e9seau. On utilise les variables identifiant et motDePasse pour stocker les informations entr\u00e9es par l'utilisateur. L'ordinateur attend un identifiant et un mot de passe pr\u00e9cis pour confirmer la connexion : on utilise une expression qui combine deux conditions avec le mot-cl\u00e9 and . A.I. Un premier programme \u00b6 On donne le code suivant (incomplet) : identifiant = \"eleveSNT\" motDePasse = \"mot\" if .............................. and motDePasse == \"Mprx24$\" : autorisee = True else : .................................... 1. Relever les variables utilis\u00e9es, et indiquer leur type. identifiant et motDePasse sont de type cha\u00eene de caract\u00e8res, autorisee est de type bool\u00e9en. 2. Compl\u00e9ter ensuite ce programme avec la condition v\u00e9rifiant que l'identifiant est le bon et la bonne valeur stock\u00e9e dans la variable contenant le r\u00e9sultat de l'algorithme : autorisee . identifiant = \"eleveSNT\" motDePasse = \"mot\" if identifiant == \"eleveSNT\" and motDePasse == \"Mprx24$\" : autorisee = True else : autorisee = False 3. Que va contenir la variable autorisee , apr\u00e8s ex\u00e9cution du code ? Elle va contenir False , car le mot de passe entr\u00e9 n'est pas le bon. 4. Que faut-il faire pour tester une autre combinaison d'identifiant et de mot de passe ? Il faut : - soit r\u00e9\u00e9x\u00e9cuter le programme en changeant les valeurs stock\u00e9es dans les variables, - soit r\u00e9\u00e9crire exactement le m\u00eame code une deuxi\u00e8me fois. 5. Quelle est la principale diff\u00e9rence entre les variables identifiant et motDePasse et celui de autorisee ? identifiant et motDePasse sont des variables que l'utilisateur(le programmeur) modifie, alors que la valeur de autorisee est calcul\u00e9e automatiquement par l'ordinateur. A.II. Avec une fonction \u00b6 Nous allons voir un outil tr\u00e8s puissant permettant de faire plusieurs tests d'affil\u00e9e, de tester plusieurs fois le m\u00eame code en ne changeant que des valeurs contenues dans des variables : les fonctions . def testeConnexion ( identifiant , motDePasse ): if .............................. and motDePasse == \"Mprx24$\" : autorisee = True else : .................................... return autorisee 1. Compl\u00e9ter le code de la fonction testeConnexion , comme fait dans la partie pr\u00e9c\u00e9dente. def testeConnexion ( identifiant , motDePasse ): if identifiant == \"eleveSNT\" and motDePasse == \"Mprx24$\" : autorisee = True else : autorisee = False return autorisee 2. Que remarque-t-on pour les variables identifiant et motDePasse ? Ces variables ne sont plus initialis\u00e9es avant le programme, mais \u00e9crites entre les parenth\u00e8ses apr\u00e8s le nom de la fonction. 3. Que remarque-t-on pour la variable autorisee ? Sa valeur est affect\u00e9e de la m\u00eame fa\u00e7on, mais elle est en plus plac\u00e9e apr\u00e8s le mot-cl\u00e9 return. 4. Compl\u00e9ter la signification des mots-cl\u00e9s suivant : def indique que l'on d\u00e9finit une fonction, dont on donne le nom et les param\u00e8tres . return indique les valeurs que l'on veut renvoyer \u00e0 l'utilisateur, le r\u00e9sultat du traitement fait par la fonction. 5. Pour tester plusieurs combinaisons d'identifiants et mots de passe, on fait des appels de la fonction testeConnexion . resultat1 = testeConnexion ( \"eleveSNT\" , \"mot\" ) resultat2 = testeConnexion ( \"SNT\" , \"Mprx24$\" ) resultat3 = testeConnexion ( \"eleveSNT\" , \"Mprx24$\" ) B. Cas g\u00e9n\u00e9ral \u00b6 Une fonction est un sous-programme qui peut \u00eatre utilis\u00e9 plusieurs fois dans le programme principal. Ce sous-programme effectue un traitement (une suite d'instructions) sur des donn\u00e9es en param\u00e8tres . On la d\u00e9finit de la mani\u00e8re suivante : def nom_de_la_fonction ( param1 , param2 , ... ) { instructions } return resultat On peut le repr\u00e9senter sch\u00e9matiquement de la fa\u00e7on suivante. graph LR param1 --> F[nom_de_la_fonction]; param2 --> F[nom_de_la_fonction]; F --> resultat On appelle la fonction soit en donnant directement des valeurs aux param\u00e8tres, soit en stockant ces valeurs dans des variables. Donner un exemple pour les deux m\u00e9thodes. #m\u00e9thode 1 r = nom_de_la_fonction ( \"bonjour\" , 2 ) #m\u00e9thode 2 a = \"bonjour\" b = 2 r = nom_de_la_fonction ( a , b )","title":"Fonctions"},{"location":"2nde/prog/fonctions/#iii-les-fonctions","text":"","title":"III. Les fonctions"},{"location":"2nde/prog/fonctions/#cours","text":"","title":"Cours"},{"location":"2nde/prog/variables/","text":"I. Algorithme, variable et affectation \u00b6 Cours \u00b6 I.A. L'informatique et les algorithmes \u00b6 L'informatique est la science du traitement automatique de l'information . Apprendre l'informatique, c'est donc apprendre comment manipuler des donn\u00e9es et les traiter en suivant des instructions. C'est-\u00e0-dire concevoir et r\u00e9aliser des algorithmes. D\u00e9finition Un algorithme est une suite d'instructions appliqu\u00e9e \u00e0 des donn\u00e9es, permettant de r\u00e9soudre un probl\u00e8me. Exemple : Donn\u00e9es : pommes, farine, sucre, oeufs Probl\u00e8me : comment obtenir une tarte aux pommes ? Solution : Faire la p\u00e2te avec la farine, le sucre et les oeufs Faire de la compote Couper les pommes restantes Mettre la compote et les pommes dans la p\u00e2te Mettre au four On r\u00e9cup\u00e8re bien une tarte aux pommes. Une recette est un exemple classique d'algorithme. Cet exemple montre que l'humain peut appliquer lui-m\u00eame des algorithmes \"\u00e0 la main\", mais utiliser une machine va en g\u00e9n\u00e9ral beaucoup plus vite. Pour qu'un l'ordinateur comprenne l'algorithme que l'on veut utiliser, il faut le traduire . D\u00e9finition Un programme est un algorithme traduit dans un langage de programmation . Le langage de programmation est compris par l'ordinateur. Il en existe de toute sorte, qui sont plus ou moins proches du langage de la machine. Le langage Python, que nous allons utiliser, est dit \"de haut niveau\", c'est-\u00e0-dire relativement proche de notre langage. I.B. Variable, op\u00e9rateur et affectation \u00b6 I.B.1. Les variables et les types \u00b6 Les donn\u00e9es manipul\u00e9es par les algorithmes sont stock\u00e9es dans des variables. D\u00e9finition Une variable correspond \u00e0 une zone de m\u00e9moire. Elle est d\u00e9sign\u00e9e par un nom et contient une valeur . Exemple : Pour stocker le nombre de pommes que l'on a pour faire la tarte, on peut utiliser une variable dont le nom est pommes . Avant de commencer la recette, elle contient la valeur 4 . D\u00e9finitions Cette valeur peut \u00eatre de diff\u00e9rents types . On distingue : - les entiers ou int (pour integer ): nombre entier relatif ( 10 , -15723 ,...), - les flottants ou float : nombre \u00e0 virgule (\u00e9crit avec des points en Python : 5.38 , 16.0 ,...), - les cha\u00eenes de caract\u00e8res ou str (pour string ) : suite de caract\u00e8res ( snt , 2nde5 ,...), - les bool\u00e9ens ou bool : vrai ou faux ( True ou False ). Exemple Notre variable pommes contenant la valeur 4 est donc de type entier. I.B.2. L'affectation et les op\u00e9rateurs \u00b6 Affecter une valeur \u00e0 une variable consiste \u00e0 associer une valeur (qui a un type) \u00e0 une variable (qui a un nom), \u00e0 un endroit donn\u00e9 dans notre programme. On utilise l'op\u00e9rateur = en Python. Cette valeur peut \u00eatre chang\u00e9e dans la suite du programme. Une variable , par d\u00e9finition, n'est pas fixe ! Exemple : Lire le programme et repr\u00e9senter sch\u00e9matiquement ce qu'il s'est pass\u00e9. pommes = 4 # puis on d\u00e9coupe une pomme pour faire la tarte pommes = 3 Schema Il est possible d'effectuer toute sorte d'op\u00e9rations sur ces variables : + (addition), - (soustraction), * (multiplication), / (division), // (division euclidienne) ou encore % (modulo : reste d'une division euclidienne). Cela permet de modifier les valeurs des variables au fur et \u00e0 mesure d'un programme. Exemple pommes = 4 pommes = pommes - 1 Que contient la variable pomme apr\u00e8s ex\u00e9cution de ces deux instructions ? Quelle est la diff\u00e9rence avec la mani\u00e8re utilis\u00e9e dans l'exemple pr\u00e9c\u00e9dent ? Elle contient la valeur 3. La diff\u00e9rence est que l'on n'a pas \u00e0 savoir la valeur de pommes avant de lui retirer 1 .","title":"I. Algorithme, variable et affectation"},{"location":"2nde/prog/variables/#i-algorithme-variable-et-affectation","text":"","title":"I. Algorithme, variable et affectation"},{"location":"2nde/prog/variables/#cours","text":"","title":"Cours"},{"location":"2nde/reseaux_sociaux/graphes/","text":"body { text-align: justify} Les graphes \u00b6 Introduction \u00b6 Qu'est-ce qu'un graphe ? Que repr\u00e9sente-t-on lorsque l'on repr\u00e9sente le graphe d'un r\u00e9seau social ? Dessiner un exemple de graphe. Cours \u00b6 A compl\u00e9ter. Des mesures de graphes permettent de d\u00e9crire, d\u2019expliquer une situation. Une cha\u00eene est une suite d\u2019ar\u00eates entre deux sommets. Donner un exemple de cha\u00eene \u00e0 partir du graphe ci-dessus : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 La distance entre deux sommets est le nombre minimum d\u2019ar\u00eates d\u2019une cha\u00eene les reliant. Quelle est la distance entre les deux extr\u00e9mit\u00e9s de la cha\u00eene donn\u00e9e ci-dessus ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le diam\u00e8tre : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le diam\u00e8tre du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le centre : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le centre du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le rayon : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le rayon du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 L'ensemble est r\u00e9capitul\u00e9 dans la vid\u00e9o ci-dessous (jusqu'\u00e0 2'45) : Activit\u00e9 1 : Extraire des mesures de graphe \u00b6 A faire sur feuille. Trouver les mesures de graphe de ce r\u00e9seau : Centre(s) : Rayon : Diam\u00e8tre : Activit\u00e9 2 : Le r\u00e9seau des cr\u00e9ateurs de Facebook \u00b6 A faire sur feuille. Nous allons repr\u00e9senter les graphes des relations de Mark Zuckerberg, le fondateur de Facebook, telles qu\u2019elles ont \u00e9t\u00e9 d\u00e9crites dans le film de David Fincher The Social Network (2010), lui-m\u00eame bas\u00e9 sur le livre de Ben Mezrich, The Accidental Billionnaires (2009). A. Situation initiale \u00b6 Mark Zuckerberg (MZ) cr\u00e9e Facemash, qui attire l\u2019attention des jumeaux Cameron et Tyler Winklevoss (TC et TW), ainsi que de Divya Narendra (DN). Ces trois amis lui parlent d\u2019un projet de site de rencontres nomm\u00e9 \u00ab Harvard Connection \u00bb. Mark parle peu apr\u00e8s d\u2019un projet nomm\u00e9 \u00ab The Facebook \u00bb, un r\u00e9seau social r\u00e9serv\u00e9 \u00e0 l\u2019universit\u00e9 d\u2019Harvard, \u00e0 son ami Eduardo Saverin (ES) et tout deux commencent \u00e0 travailler \u00e0 son lancement. Repr\u00e9senter le graphe de ces relations (utiliser les initiales des personnages) . Quel est son centre ? Son diam\u00e8tre ? Son rayon ? B. Situation finale \u00b6 Mark Zuckerberg ne s\u2019associera pas avec les jumeaux Winklevoss et Divya Narendra, qui vont lui attenter un proc\u00e8s, pensant qu\u2019il leur a vol\u00e9 leur id\u00e9e. Mark Zuckerberg finira \u00e9galement par mettre un terme \u00e0 sa collaboration avec Eduardo Saverin, qui lui attentera lui aussi un proc\u00e8s. Tous ces protagonistes ne se parlent alors plus que par l\u2019interm\u00e9diaire de leurs avocats. Repr\u00e9senter le nouveau r\u00e9seau de ces relations. On notera Avocat 1 (A1) celui de Mark Zuckerberg, Avocat 2 (A2) celui des jumeaux Winklevoss et Divya Narendra, et Avocat 3 (A3) celui d\u2019Eduardo Saverin. Quel est son centre ? Son diam\u00e8tre ? Son rayon ? Quelle \u00e9volution remarquez-vous entre la situation initiale et la situation finale du film The Social Network ?","title":"Les graphes"},{"location":"2nde/reseaux_sociaux/graphes/#les-graphes","text":"","title":"Les graphes"},{"location":"2nde/reseaux_sociaux/graphes/#introduction","text":"Qu'est-ce qu'un graphe ? Que repr\u00e9sente-t-on lorsque l'on repr\u00e9sente le graphe d'un r\u00e9seau social ? Dessiner un exemple de graphe.","title":"Introduction"},{"location":"2nde/reseaux_sociaux/graphes/#cours","text":"A compl\u00e9ter. Des mesures de graphes permettent de d\u00e9crire, d\u2019expliquer une situation. Une cha\u00eene est une suite d\u2019ar\u00eates entre deux sommets. Donner un exemple de cha\u00eene \u00e0 partir du graphe ci-dessus : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 La distance entre deux sommets est le nombre minimum d\u2019ar\u00eates d\u2019une cha\u00eene les reliant. Quelle est la distance entre les deux extr\u00e9mit\u00e9s de la cha\u00eene donn\u00e9e ci-dessus ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le diam\u00e8tre : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le diam\u00e8tre du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le centre : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le centre du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Le rayon : \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Quel est le rayon du graphe de l\u2019exemple ? \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 L'ensemble est r\u00e9capitul\u00e9 dans la vid\u00e9o ci-dessous (jusqu'\u00e0 2'45) :","title":"Cours"},{"location":"2nde/reseaux_sociaux/graphes/#activite-1-extraire-des-mesures-de-graphe","text":"A faire sur feuille. Trouver les mesures de graphe de ce r\u00e9seau : Centre(s) : Rayon : Diam\u00e8tre :","title":"Activit\u00e9 1 : Extraire des mesures de graphe"},{"location":"2nde/reseaux_sociaux/graphes/#activite-2-le-reseau-des-createurs-de-facebook","text":"A faire sur feuille. Nous allons repr\u00e9senter les graphes des relations de Mark Zuckerberg, le fondateur de Facebook, telles qu\u2019elles ont \u00e9t\u00e9 d\u00e9crites dans le film de David Fincher The Social Network (2010), lui-m\u00eame bas\u00e9 sur le livre de Ben Mezrich, The Accidental Billionnaires (2009).","title":"Activit\u00e9 2 : Le r\u00e9seau des cr\u00e9ateurs de Facebook"},{"location":"2nde/reseaux_sociaux/milgram/","text":"body { text-align: justify} Milgram et les \"petits mondes\" \u00b6 Activit\u00e9 1 : L'exp\u00e9rience de Milgram \u00b6 A faire sur feuille. Le sociologue Milgram, en 1967, a tent\u00e9 une exp\u00e9rience : estimer par combien de personnes est-ce qu\u2019il fallait passer pour entrer en contact avec n\u2019importe quel autre personne dans le monde. Il a donn\u00e9 des lettres \u00e0 160 habitants du centre des Etats-Unis, et elles devaient parvenir \u00e0 un habitant de la ville de l\u2019Est am\u00e9ricain (\u00e0 Boston), en ne passant qu'entre les mains de connaissances de chaque personnes interm\u00e9diaires. Le graphique ci-contre repr\u00e9sente les r\u00e9sultats qu'il a obtenus : Combien de lettres sont arriv\u00e9es, par rapport aux 160 qui devaient \u00eatre transmises ? Qu'a-t-il pu arriver aux autres lettres ? Quel a \u00e9t\u00e9 le nombre moyen d'interm\u00e9diaires pour faire parvenir les lettres ? Ce nombre a \u00e9t\u00e9 appel\u00e9 degr\u00e9 de s\u00e9paration . A quelle mesure de graphe correspond-il ? Activit\u00e9 2 : Les graphes des r\u00e9seaux sociaux \u00b6 A faire sur feuille. Le graphe ci-contre repr\u00e9sente un r\u00e9seau social. Les points sont donc des utilisateurs. Les diff\u00e9rentes couleurs identifient les diff\u00e9rents groupes d'utilisateurs les plus proches. D\u00e9crire ce graphe. Qu'a-t-il de particulier ? Sur les r\u00e9seaux sociaux, comment appelle-t-on les groupes identifi\u00e9s ici par diff\u00e9rentes couleurs ? Parmi les utilisateurs repr\u00e9sent\u00e9s en gris, consid\u00e9rer celui le plus \u00e0 gauche. Qu'a-t-il de particulier, par rapport aux autres ? Trouver d'autres sommets qui ont des caract\u00e9ristiques similaires. Identifier une cha\u00eene dans le graphe avec les utilisateurs par lesquels il faut passer pour diffuser une information le plus rapidement possible. Marl Zuckerberg, patron de Facebook, a d\u00e9clar\u00e9 : \"Les r\u00e9seaux sociaux rapprochent les gens\". D'apr\u00e8s ce que vous avez vu dans cette activit\u00e9, \u00eates-vous d'accord ? Justifier. Cours \u00b6 A compl\u00e9ter. En 1967, le psychosociologue Stanley ................................................ exp\u00e9rimente la th\u00e9orie des \u00ab petits mondes \u00bb et avance l\u2019hypoth\u00e8se que toute personne est reli\u00e9e \u00e0 n\u2019importe quelle autre dans le monde par ................................................................................................. Sur les plus grands r\u00e9seaux sociaux, le degr\u00e9 de s\u00e9paration moyen serait d\u2019environ 3 personnes. Malheureusement, cela peut \u00eatre associ\u00e9 \u00e0 un repli sur soi et \u00e0 un appauvrissement de la pens\u00e9e critique.","title":"Milgram et les petits mondes"},{"location":"2nde/reseaux_sociaux/milgram/#milgram-et-les-petits-mondes","text":"","title":"Milgram et les \"petits mondes\""},{"location":"2nde/reseaux_sociaux/milgram/#activite-1-lexperience-de-milgram","text":"A faire sur feuille. Le sociologue Milgram, en 1967, a tent\u00e9 une exp\u00e9rience : estimer par combien de personnes est-ce qu\u2019il fallait passer pour entrer en contact avec n\u2019importe quel autre personne dans le monde. Il a donn\u00e9 des lettres \u00e0 160 habitants du centre des Etats-Unis, et elles devaient parvenir \u00e0 un habitant de la ville de l\u2019Est am\u00e9ricain (\u00e0 Boston), en ne passant qu'entre les mains de connaissances de chaque personnes interm\u00e9diaires. Le graphique ci-contre repr\u00e9sente les r\u00e9sultats qu'il a obtenus : Combien de lettres sont arriv\u00e9es, par rapport aux 160 qui devaient \u00eatre transmises ? Qu'a-t-il pu arriver aux autres lettres ? Quel a \u00e9t\u00e9 le nombre moyen d'interm\u00e9diaires pour faire parvenir les lettres ? Ce nombre a \u00e9t\u00e9 appel\u00e9 degr\u00e9 de s\u00e9paration . A quelle mesure de graphe correspond-il ?","title":"Activit\u00e9 1 : L'exp\u00e9rience de Milgram"},{"location":"2nde/reseaux_sociaux/milgram/#activite-2-les-graphes-des-reseaux-sociaux","text":"A faire sur feuille. Le graphe ci-contre repr\u00e9sente un r\u00e9seau social. Les points sont donc des utilisateurs. Les diff\u00e9rentes couleurs identifient les diff\u00e9rents groupes d'utilisateurs les plus proches. D\u00e9crire ce graphe. Qu'a-t-il de particulier ? Sur les r\u00e9seaux sociaux, comment appelle-t-on les groupes identifi\u00e9s ici par diff\u00e9rentes couleurs ? Parmi les utilisateurs repr\u00e9sent\u00e9s en gris, consid\u00e9rer celui le plus \u00e0 gauche. Qu'a-t-il de particulier, par rapport aux autres ? Trouver d'autres sommets qui ont des caract\u00e9ristiques similaires. Identifier une cha\u00eene dans le graphe avec les utilisateurs par lesquels il faut passer pour diffuser une information le plus rapidement possible. Marl Zuckerberg, patron de Facebook, a d\u00e9clar\u00e9 : \"Les r\u00e9seaux sociaux rapprochent les gens\". D'apr\u00e8s ce que vous avez vu dans cette activit\u00e9, \u00eates-vous d'accord ? Justifier.","title":"Activit\u00e9 2 : Les graphes des r\u00e9seaux sociaux"},{"location":"2nde/reseaux_sociaux/milgram/#cours","text":"A compl\u00e9ter. En 1967, le psychosociologue Stanley ................................................ exp\u00e9rimente la th\u00e9orie des \u00ab petits mondes \u00bb et avance l\u2019hypoth\u00e8se que toute personne est reli\u00e9e \u00e0 n\u2019importe quelle autre dans le monde par ................................................................................................. Sur les plus grands r\u00e9seaux sociaux, le degr\u00e9 de s\u00e9paration moyen serait d\u2019environ 3 personnes. Malheureusement, cela peut \u00eatre associ\u00e9 \u00e0 un repli sur soi et \u00e0 un appauvrissement de la pens\u00e9e critique.","title":"Cours"},{"location":"2nde/tp/introduction_python/","text":"body { text-align: justify} TP : Introduction \u00e0 la programmation avec Python \u00b6 1. Ex\u00e9cuter des instructions \u00b6 Aller sur le site Web suivant : https://compute-it.toxicode.fr/ Il faut ex\u00e9cuter des instructions \u00e9crites dans un langage proche d'un langage de programmation. A faire pendant ~15min, puis passer \u00e0 la suite. 2. Programmation en Python avec py-rates \u00b6 Aller sur https://py-rates.fr/ Choisir un personnage et cliquer sur Je commence . Noter l' id qui vous est donn\u00e9 *(sur votre fiche \"Les r\u00e8gles du cours de SNT\", avec vos identifiants) pour pouvoir r\u00e9cup\u00e9rer votre partie. Il faut r\u00e9cup\u00e9rer la cl\u00e9 pour aller ouvrir le coffre. Les instructions que l'on peut utiliser pour d\u00e9placer le personnage sont \u00e9crite sur la partie gauche. Vous avez des indications sur la syntaxe Python \u00e0 utiliser en bas sur la gauche : les variables servent \u00e0 stocker des informations, Syntaxe ma_variable = valeur les boucles permettent de r\u00e9p\u00e9ter des actions. Syntaxe Pour r\u00e9p\u00e9ter nombre de fois des instructions : for i in range ( nombre ): instructions_\u00e0_r\u00e9p\u00e9ter","title":"Introduction \u00e0 Python"},{"location":"2nde/tp/introduction_python/#tp-introduction-a-la-programmation-avec-python","text":"","title":"TP : Introduction \u00e0 la programmation avec Python"},{"location":"2nde/tp/introduction_python/#1-executer-des-instructions","text":"Aller sur le site Web suivant : https://compute-it.toxicode.fr/ Il faut ex\u00e9cuter des instructions \u00e9crites dans un langage proche d'un langage de programmation. A faire pendant ~15min, puis passer \u00e0 la suite.","title":"1. Ex\u00e9cuter des instructions"},{"location":"2nde/tp/introduction_python/#2-programmation-en-python-avec-py-rates","text":"Aller sur https://py-rates.fr/ Choisir un personnage et cliquer sur Je commence . Noter l' id qui vous est donn\u00e9 *(sur votre fiche \"Les r\u00e8gles du cours de SNT\", avec vos identifiants) pour pouvoir r\u00e9cup\u00e9rer votre partie. Il faut r\u00e9cup\u00e9rer la cl\u00e9 pour aller ouvrir le coffre. Les instructions que l'on peut utiliser pour d\u00e9placer le personnage sont \u00e9crite sur la partie gauche. Vous avez des indications sur la syntaxe Python \u00e0 utiliser en bas sur la gauche : les variables servent \u00e0 stocker des informations, Syntaxe ma_variable = valeur les boucles permettent de r\u00e9p\u00e9ter des actions. Syntaxe Pour r\u00e9p\u00e9ter nombre de fois des instructions : for i in range ( nombre ): instructions_\u00e0_r\u00e9p\u00e9ter","title":"2. Programmation en Python avec py-rates"},{"location":"2nde/tp/outils_numeriques/","text":"body { text-align: justify} TP : Prise en main d'outils num\u00e9riques \u00b6 Se connecter \u00e0 l'ordinateur avec vos identifiants r\u00e9seau . A. Dossier dans votre espace personnel \u00b6 L' explorateur de fichiers vous permet d'acc\u00e9der aux diff\u00e9rents fichiers et dossiers/r\u00e9pertoires (contenant des fichiers) de l'ordinateur. Les fichiers sont des r\u00e9pertoires, qui peuvent aussi \u00eatre dans des r\u00e9pertoires, etc. On repr\u00e9sente le stockage des fichiers de la fa\u00e7on suivante : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[SNT] D --> C[Images] D --> E[Musique] Sur ce sch\u00e9ma, il n'y a qu'une partie des dossiers de l'ordinateur, celle qui nous int\u00e9resse. Vous allez stocker vos fichiers dans votre espace personnel \u00e0 votre nom ( Pr\u00e9nom et NOM sont remplac\u00e9s par votre pr\u00e9nom et nom lorsque vous vous connectez sur votre session) . Ouvrir l'explorateur de fichier et cliquer sur Ce PC . Votre espace personnel \u00e0 votre nom appara\u00eet. Double-cliquer dessus, puis sur Documents . Cr\u00e9er un r\u00e9pertoire appel\u00e9 SNT \u00e0 cet endroit. Vous stockerez dans ce r\u00e9pertoire les fichiers utilis\u00e9s en cours de SNT. B. Frise chronologique d'Internet \u00b6 Toujours sur l'ENT, aller sur l'Application Frise Chronologique. Cliquer sur \"Cr\u00e9er une frise\" et ajouter dans son titre \"Historique d'Internet\". Cliquer sur \"Ajouter un \u00e9v\u00e8nement\" et ajouter les informations ci-dessous : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance de la communication par paquets 1961 Dans les ann\u00e9es 1950, l\u2019US Air Force (arm\u00e9e de l\u2019air am\u00e9ricaine) cherche un moyen de communiquer, m\u00eame en cas d\u2019attaque nucl\u00e9aire. L\u2019Am\u00e9ricain Paul Baran et le Britannique Donald Davies effectuent des recherchent qui abouttisent en 1961. Leur solution est de d\u00e9couper les messages en paquets pouvant circuler \u00e0 travers les multiples chemins d\u2019un r\u00e9seau . Ainsi, si un chemin est coup\u00e9, le paquet peut en prendre un autre et arriver \u00e0 son destinataire. Une fois termin\u00e9, cliquer sur \"Enregistrer\". R\u00e9p\u00e9ter les m\u00eames op\u00e9rations pour enregistrer l'\u00e9v\u00e8nement suivant : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Les premiers r\u00e9seaux informatiques 1969 Les premiers r\u00e9seaux d\u2019ordinateurs datent de la fin des ann\u00e9es 1950 comme le syst\u00e8me radar semiautomatique am\u00e9ricain SAGE. En 1969, sous l\u2019impulsion de l\u2019informaticien am\u00e9ricain Joseph Licklider, na\u00eet le r\u00e9seau Arpanet. Pour la premi\u00e8re fois, les donn\u00e9es, d\u00e9coup\u00e9es en paquets, transitent gr\u00e2ce \u00e0 un protocole de communication , c\u2019est-\u00e0-dire un ensemble de r\u00e8gles qui r\u00e9gissent les \u00e9changes. paquets et protocoles sont \u00e0 la base d\u2019Internet, ce qui fait d\u2019Arpanet son anc\u00eatre. Pour celui-ci, vous allez ajouter une image du r\u00e9seau ARPANET. La t\u00e9l\u00e9charger en : - faisant un clic droit sur l'image - s\u00e9lectionnant \"Enregistrer sous\" - s\u00e9lectionnant votre r\u00e9pertoire SNT (dans Ce PC , puis Documents ), et Cr\u00e9er un nouveau dossier appel\u00e9 frise . Voici l'image : Voici, apr\u00e8s cr\u00e9ation, la hi\u00e9rarchie des dossiers : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[SNT] B --> E[frise] Enregistrer les \u00e9v\u00e8nements suivant : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance du protocole TCP 1974 Depuis Arpanet, les r\u00e9seaux deviennent de plus en plus \u00e9tendus, ce qui n\u00e9cessite des r\u00e8gles de comunication plus \u00e9labor\u00e9es. En 1974, les Am\u00e9ricains Robert Kahn et Vinton Cerf inventent le protocole de communication Transmission Control Protocol qui s\u2019occupe \u00e0 la fois de la gestion des paquets (par exemple par leur num\u00e9rotation) et de la route qu\u2019ils doivent suivre dans le r\u00e9seau pour arriver \u00e0 destination. Par la suite, ce protocole est scind\u00e9 en deux, l\u2019un g\u00e9rant sp\u00e9cifiquement les paquets ( TCP ) et l\u2019autre les conduisant dans le r\u00e9seau ( IP ) et devient le TCP/IP . Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance d'Internet 1982 Internet n\u2019est pas apparu d\u2019un coup mais \u00e0 \u00e9merg\u00e9 dans les ann\u00e9es 1980. C\u2019est en 1982 que le protocole TCP/IP est standardis\u00e9 et commence \u00e0 \u00eatre install\u00e9 sur des r\u00e9seaux d\u2019ordinateurs interconnect\u00e9s qui vont progressivement former l\u2019Internet. Les premi\u00e8res utilisations commerciales apparaissent \u00e0 la fin des ann\u00e9es 1980 (par exemple, les fournisseurs d\u2019acc\u00e8s). Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Popularisation d'Internet 1989 Jusqu\u2019\u00e0 la fin des ann\u00e9es 1980, Internet est un outil qui demeure tr\u00e8s technique pour le grand public. Acc\u00e9der \u00e0 un ordinateur distant, y lire ou y d\u00e9poser des donn\u00e9es ne se fait pas encore en quelques clics de souris. Tout cela change avec l\u2019arriv\u00e9e du Web invent\u00e9 par Tim Berners-Lee. Internet et le Web sont donc deux choses diff\u00e9rentes ! D\u00e9sormais, pour acc\u00e9der \u00e0 une information sur le Web, il suffit de cliquer. A l'\u00e9v\u00e8nement \"Popularisation d'Internet\", associer l'image suivante (m\u00eame proc\u00e9dure que pour la question 5) : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) L'Internet des objets 2008 Aujourd\u2019hui, ce ne sont plus seulement les humains qui sont connect\u00e9s \u00e0 Internet, mais aussi toute sorte d\u2019objets, des montres aux pacemakers en passant par des cam\u00e9ras et des ampoules. Depuis 2008, plus d\u2019objets que d\u2019humains sont connect\u00e9s, donnant naissance \u00e0 ce que l\u2019on appelle l\u2019\u00ab Internet des objets \u00bb. Selon les projections, en 2020, plus de 50 milliards d\u2019objets seront connect\u00e9s \u00e0 Internet. Revenir \u00e0 la page d'accueil de Frise Chronologique (en cliquant sur ce nom). Cliquer sur votre frise \"Historique d'Internet\" puis sur \"Partager\" dans la bande qui s'affiche en bas de l'\u00e9cran. Dans \"Rechercher des utilisateurs\", marquer \"TREBAUL\" pour me s\u00e9lectionner. Cliquer sur \"Partager\". Depuis la page d'accueil de l'application, cliquer sur la frise, puis sur \"Imprimer\". La page de demande d'impression va s'afficher : v\u00e9rifier que dans \"Destination\", il est indiqu\u00e9 \"Microsoft Print to PDF\". Cliquer sur \"Imprimer\", puis aller sur Ce PC > Votre espace personnel > Documents > SNT > frise pour s\u00e9lectionner le bon dossier. V\u00e9rifier avec l' explorateur de fichiers que votre fichier PDF est enregistr\u00e9 au bon endroit. C. Introduction \u00e0 la programmation \u00b6 Aller sur https://py-rates.fr/ Choisir un personnage et cliquer sur Je commence . Noter l' id qui vous est donn\u00e9 *(sur votre fiche \"Les r\u00e8gles du cours de SNT\", avec vos identifiants) pour pouvoir r\u00e9cup\u00e9rer votre partie. Il faut r\u00e9cup\u00e9rer la cl\u00e9 pour aller ouvrir le coffre. Les instructions que l'on peut utiliser pour d\u00e9placer le personnage sont \u00e9crite sur la partie gauche. Vous avez des indications sur la syntaxe Python \u00e0 utiliser en bas sur la gauche : les variables servent \u00e0 stocker des informations, Syntaxe ma_variable = valeur les boucles permettent de r\u00e9p\u00e9ter des actions. Syntaxe Pour r\u00e9p\u00e9ter nombre de fois des instructions : for i in range ( nombre ): instructions_\u00e0_r\u00e9p\u00e9ter","title":"Prise en main d'outils num\u00e9riques"},{"location":"2nde/tp/outils_numeriques/#tp-prise-en-main-doutils-numeriques","text":"Se connecter \u00e0 l'ordinateur avec vos identifiants r\u00e9seau .","title":"TP : Prise en main d'outils num\u00e9riques"},{"location":"2nde/tp/outils_numeriques/#a-dossier-dans-votre-espace-personnel","text":"L' explorateur de fichiers vous permet d'acc\u00e9der aux diff\u00e9rents fichiers et dossiers/r\u00e9pertoires (contenant des fichiers) de l'ordinateur. Les fichiers sont des r\u00e9pertoires, qui peuvent aussi \u00eatre dans des r\u00e9pertoires, etc. On repr\u00e9sente le stockage des fichiers de la fa\u00e7on suivante : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[SNT] D --> C[Images] D --> E[Musique] Sur ce sch\u00e9ma, il n'y a qu'une partie des dossiers de l'ordinateur, celle qui nous int\u00e9resse. Vous allez stocker vos fichiers dans votre espace personnel \u00e0 votre nom ( Pr\u00e9nom et NOM sont remplac\u00e9s par votre pr\u00e9nom et nom lorsque vous vous connectez sur votre session) . Ouvrir l'explorateur de fichier et cliquer sur Ce PC . Votre espace personnel \u00e0 votre nom appara\u00eet. Double-cliquer dessus, puis sur Documents . Cr\u00e9er un r\u00e9pertoire appel\u00e9 SNT \u00e0 cet endroit. Vous stockerez dans ce r\u00e9pertoire les fichiers utilis\u00e9s en cours de SNT.","title":"A. Dossier dans votre espace personnel"},{"location":"2nde/tp/outils_numeriques/#b-frise-chronologique-dinternet","text":"Toujours sur l'ENT, aller sur l'Application Frise Chronologique. Cliquer sur \"Cr\u00e9er une frise\" et ajouter dans son titre \"Historique d'Internet\". Cliquer sur \"Ajouter un \u00e9v\u00e8nement\" et ajouter les informations ci-dessous : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance de la communication par paquets 1961 Dans les ann\u00e9es 1950, l\u2019US Air Force (arm\u00e9e de l\u2019air am\u00e9ricaine) cherche un moyen de communiquer, m\u00eame en cas d\u2019attaque nucl\u00e9aire. L\u2019Am\u00e9ricain Paul Baran et le Britannique Donald Davies effectuent des recherchent qui abouttisent en 1961. Leur solution est de d\u00e9couper les messages en paquets pouvant circuler \u00e0 travers les multiples chemins d\u2019un r\u00e9seau . Ainsi, si un chemin est coup\u00e9, le paquet peut en prendre un autre et arriver \u00e0 son destinataire. Une fois termin\u00e9, cliquer sur \"Enregistrer\". R\u00e9p\u00e9ter les m\u00eames op\u00e9rations pour enregistrer l'\u00e9v\u00e8nement suivant : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Les premiers r\u00e9seaux informatiques 1969 Les premiers r\u00e9seaux d\u2019ordinateurs datent de la fin des ann\u00e9es 1950 comme le syst\u00e8me radar semiautomatique am\u00e9ricain SAGE. En 1969, sous l\u2019impulsion de l\u2019informaticien am\u00e9ricain Joseph Licklider, na\u00eet le r\u00e9seau Arpanet. Pour la premi\u00e8re fois, les donn\u00e9es, d\u00e9coup\u00e9es en paquets, transitent gr\u00e2ce \u00e0 un protocole de communication , c\u2019est-\u00e0-dire un ensemble de r\u00e8gles qui r\u00e9gissent les \u00e9changes. paquets et protocoles sont \u00e0 la base d\u2019Internet, ce qui fait d\u2019Arpanet son anc\u00eatre. Pour celui-ci, vous allez ajouter une image du r\u00e9seau ARPANET. La t\u00e9l\u00e9charger en : - faisant un clic droit sur l'image - s\u00e9lectionnant \"Enregistrer sous\" - s\u00e9lectionnant votre r\u00e9pertoire SNT (dans Ce PC , puis Documents ), et Cr\u00e9er un nouveau dossier appel\u00e9 frise . Voici l'image : Voici, apr\u00e8s cr\u00e9ation, la hi\u00e9rarchie des dossiers : graph TB G[Ce PC] --> D D[Espace Personnel *Pr\u00e9nom* *NOM*] --> A A[Documents] --> B[SNT] B --> E[frise] Enregistrer les \u00e9v\u00e8nements suivant : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance du protocole TCP 1974 Depuis Arpanet, les r\u00e9seaux deviennent de plus en plus \u00e9tendus, ce qui n\u00e9cessite des r\u00e8gles de comunication plus \u00e9labor\u00e9es. En 1974, les Am\u00e9ricains Robert Kahn et Vinton Cerf inventent le protocole de communication Transmission Control Protocol qui s\u2019occupe \u00e0 la fois de la gestion des paquets (par exemple par leur num\u00e9rotation) et de la route qu\u2019ils doivent suivre dans le r\u00e9seau pour arriver \u00e0 destination. Par la suite, ce protocole est scind\u00e9 en deux, l\u2019un g\u00e9rant sp\u00e9cifiquement les paquets ( TCP ) et l\u2019autre les conduisant dans le r\u00e9seau ( IP ) et devient le TCP/IP . Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Naissance d'Internet 1982 Internet n\u2019est pas apparu d\u2019un coup mais \u00e0 \u00e9merg\u00e9 dans les ann\u00e9es 1980. C\u2019est en 1982 que le protocole TCP/IP est standardis\u00e9 et commence \u00e0 \u00eatre install\u00e9 sur des r\u00e9seaux d\u2019ordinateurs interconnect\u00e9s qui vont progressivement former l\u2019Internet. Les premi\u00e8res utilisations commerciales apparaissent \u00e0 la fin des ann\u00e9es 1980 (par exemple, les fournisseurs d\u2019acc\u00e8s). Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) Popularisation d'Internet 1989 Jusqu\u2019\u00e0 la fin des ann\u00e9es 1980, Internet est un outil qui demeure tr\u00e8s technique pour le grand public. Acc\u00e9der \u00e0 un ordinateur distant, y lire ou y d\u00e9poser des donn\u00e9es ne se fait pas encore en quelques clics de souris. Tout cela change avec l\u2019arriv\u00e9e du Web invent\u00e9 par Tim Berners-Lee. Internet et le Web sont donc deux choses diff\u00e9rentes ! D\u00e9sormais, pour acc\u00e9der \u00e0 une information sur le Web, il suffit de cliquer. A l'\u00e9v\u00e8nement \"Popularisation d'Internet\", associer l'image suivante (m\u00eame proc\u00e9dure que pour la question 5) : Titre Date (\u00e0 mettre en Ann\u00e9e) Contenu (\u00e0 copier/coller) L'Internet des objets 2008 Aujourd\u2019hui, ce ne sont plus seulement les humains qui sont connect\u00e9s \u00e0 Internet, mais aussi toute sorte d\u2019objets, des montres aux pacemakers en passant par des cam\u00e9ras et des ampoules. Depuis 2008, plus d\u2019objets que d\u2019humains sont connect\u00e9s, donnant naissance \u00e0 ce que l\u2019on appelle l\u2019\u00ab Internet des objets \u00bb. Selon les projections, en 2020, plus de 50 milliards d\u2019objets seront connect\u00e9s \u00e0 Internet. Revenir \u00e0 la page d'accueil de Frise Chronologique (en cliquant sur ce nom). Cliquer sur votre frise \"Historique d'Internet\" puis sur \"Partager\" dans la bande qui s'affiche en bas de l'\u00e9cran. Dans \"Rechercher des utilisateurs\", marquer \"TREBAUL\" pour me s\u00e9lectionner. Cliquer sur \"Partager\". Depuis la page d'accueil de l'application, cliquer sur la frise, puis sur \"Imprimer\". La page de demande d'impression va s'afficher : v\u00e9rifier que dans \"Destination\", il est indiqu\u00e9 \"Microsoft Print to PDF\". Cliquer sur \"Imprimer\", puis aller sur Ce PC > Votre espace personnel > Documents > SNT > frise pour s\u00e9lectionner le bon dossier. V\u00e9rifier avec l' explorateur de fichiers que votre fichier PDF est enregistr\u00e9 au bon endroit.","title":"B. Frise chronologique d'Internet"},{"location":"2nde/tp/outils_numeriques/#c-introduction-a-la-programmation","text":"Aller sur https://py-rates.fr/ Choisir un personnage et cliquer sur Je commence . Noter l' id qui vous est donn\u00e9 *(sur votre fiche \"Les r\u00e8gles du cours de SNT\", avec vos identifiants) pour pouvoir r\u00e9cup\u00e9rer votre partie. Il faut r\u00e9cup\u00e9rer la cl\u00e9 pour aller ouvrir le coffre. Les instructions que l'on peut utiliser pour d\u00e9placer le personnage sont \u00e9crite sur la partie gauche. Vous avez des indications sur la syntaxe Python \u00e0 utiliser en bas sur la gauche : les variables servent \u00e0 stocker des informations, Syntaxe ma_variable = valeur les boucles permettent de r\u00e9p\u00e9ter des actions. Syntaxe Pour r\u00e9p\u00e9ter nombre de fois des instructions : for i in range ( nombre ): instructions_\u00e0_r\u00e9p\u00e9ter","title":"C. Introduction \u00e0 la programmation"},{"location":"2nde/web/client_serveur/","text":"body { text-align: justify} III. Le mod\u00e8le client serveur sur le Web \u00b6 TP : Simulation d'un serveur Web \u00b6 En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. Instructions T\u00e9l\u00e9charger le fichier snt_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher : A. Le r\u00e9seau \u00b6 Entourer, parmi les diff\u00e9rents types de machines cit\u00e9es ci-dessous, celles qui sont pr\u00e9sentes sur le r\u00e9seau : Ordinateur | Portable | Switch | Routeur | Modem | Les configurations n\u00e9cessaires ont \u00e9t\u00e9 faites pour que l\u2019ordinateur \"Serveur Web\" soit connect\u00e9 aux autres r\u00e9seaux locaux. Obtenir l' adresse IP qui lui a \u00e9t\u00e9 attribu\u00e9e, en double-cliquant sur la machine : ...................................... B. Mise en place du serveur \u00b6 Passer en mode simulation en cliquant sur la fl\u00e8che verte puis cliquer sur un des ordinateurs portables. Aller sur \"Installation des logiciels\", puis faire passer \"Ligne de commande\" dans la liste des logiciels install\u00e9s. Appliquer les modifications, puis cliquer sur ce logiciel \"Ligne de commande\". Tester la connexion entre cette machine et le serveur en tapant ping suivi de l'adresse IP du serveur Web relev\u00e9e dans la partie A. Cliquer sur \"Serveur Web\", puis sur Installation des logiciels. Dans la liste de droite, double-cliquer sur \"Explorateur de fichiers\" , \"Editeur de textes\" et \"Serveur web\" , puis sur \"Appliquer les modifications\". Double-cliquer sur l\u2019 explorateur de fichiers , aller dans le dossier webserver . C\u2019est ici que sont stock\u00e9s les fichiers codant la(les) page(s) web h\u00e9berg\u00e9e(s) sur le serveur. Noter le chemin d'acc\u00e8s \u00e0 index.html : .............................................................................. Quel autre fichier trouvez-vous ? ........................................................ Fermer l\u2019explorateur de fichiers et ouvrir l\u2019 \u00e9diteur de texte . Cliquer sur Fichier > Ouvrir et s\u00e9lectionner le fichier index.html dans le dossier webserver . La structure du contenu du fichier doit vous \u00eatre famili\u00e8re. Modifier le contenu de la page Web pour que s\u2019affiche : Dans le titre principal (balise <h2> ): \"La requ\u00eate HTTP\" Dans le premier paragraphe : \"Voici la page Web contenue sur le serveur. Nous allons y acc\u00e9der \u00e0 partir d'un client : un navigateur Web.\" Dans le deuxi\u00e8me paragraphe : \"Il faudra pour cela taper une URL commen\u00e7ant par le protocole utilis\u00e9 : http, puis indiquer l\u2019adresse IP du serveur\". Le reste peut rester inchang\u00e9. Cliquer sur Fichier > Enregistrer puis fermer l\u2019\u00e9diteur de texte. Double-cliquer sur le serveur web, puis sur D\u00e9marrer. La page Web sera alors accessible pour aux clients (les navigateurs). Fermer le logiciel. Double-cliquer sur un ordinateur portable puis sur \"Installation des logiciels\". Double-cliquer sur \"Navigateur Web\" dans la colonne \u00e0 droite, puis sur Appliquer les modifications. Double-cliquer sur le navigateur web, et entrer l\u2019 adresse IP du serveur web \u00e0 la suite du HTTP . Vous verrez interpr\u00e9t\u00e9e la page web dont le code se trouve dans le fichier index.html sur le serveur web. Activit\u00e9 : interactions client-serveur \u00b6 Un navigateur demande l'acc\u00e8s \u00e0 une page. Ci-dessous, sa requ\u00eate au serveur pour y acc\u00e9der, et une partie de la r\u00e9ponse du serveur. Celle-ci inclue aussi la page Web cod\u00e9e en HTML. Exemple de requ\u00eate du client Exemple de r\u00e9ponse du serveur GET index.html HTTP/1.1 HTTP/1.1 200 OK Host : www.example.com Date : Tue, 2 Mar 2021 08:00:00 GMT Content-Type : text/html ; charset=UTF-8 Content-length : 983 Last-Modified : Wed, 1 Jan 2005 00:00:00 GMT Identifier quel est le format utilis\u00e9 pour demander la page. Identifier quelles sont les informations suppl\u00e9mentaires sur la page que le serveur renvoie. Cours \u00b6 A compl\u00e9ter. Pour obtenir une page Web, votre navigateur va faire une demande, une ................................ au serveur Web sur lequel elle est stock\u00e9e. Pour communiquer, le client (le .......................................) et le serveur utilisent le protocole ................ (................ ................ ................) ou sa version s\u00e9curis\u00e9e .................","title":"III. Le mod\u00e8le client-serveur"},{"location":"2nde/web/client_serveur/#iii-le-modele-client-serveur-sur-le-web","text":"","title":"III. Le mod\u00e8le client serveur sur le Web"},{"location":"2nde/web/client_serveur/#tp-simulation-dun-serveur-web","text":"En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. Instructions T\u00e9l\u00e9charger le fichier snt_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher :","title":"TP\u00a0: Simulation d'un serveur Web"},{"location":"2nde/web/client_serveur/#activite-interactions-client-serveur","text":"Un navigateur demande l'acc\u00e8s \u00e0 une page. Ci-dessous, sa requ\u00eate au serveur pour y acc\u00e9der, et une partie de la r\u00e9ponse du serveur. Celle-ci inclue aussi la page Web cod\u00e9e en HTML. Exemple de requ\u00eate du client Exemple de r\u00e9ponse du serveur GET index.html HTTP/1.1 HTTP/1.1 200 OK Host : www.example.com Date : Tue, 2 Mar 2021 08:00:00 GMT Content-Type : text/html ; charset=UTF-8 Content-length : 983 Last-Modified : Wed, 1 Jan 2005 00:00:00 GMT Identifier quel est le format utilis\u00e9 pour demander la page. Identifier quelles sont les informations suppl\u00e9mentaires sur la page que le serveur renvoie.","title":"Activit\u00e9 : interactions client-serveur"},{"location":"2nde/web/client_serveur/#cours","text":"A compl\u00e9ter. Pour obtenir une page Web, votre navigateur va faire une demande, une ................................ au serveur Web sur lequel elle est stock\u00e9e. Pour communiquer, le client (le .......................................) et le serveur utilisent le protocole ................ (................ ................ ................) ou sa version s\u00e9curis\u00e9e .................","title":"Cours"},{"location":"2nde/web/fonctionnement/","text":"body { text-align: justify} I. Le fonctionnement du Web \u00b6 Cours : Les bases du Web \u00b6 Introduction \u00b6 Qu\u2019est-ce que le Web ? Le web est une application d'Internet : une mani\u00e8re d'utiliser Internet. Elle permet d'acc\u00e9der \u00e0 des pages Web. Quels diff\u00e9rents contenus peut-on trouver sur une page Web ? Une page web peut contenir du texte, des images, sons, vid\u00e9os, et des liens vers d'autres pages Web. Quel logiciel est-ce qu'on utilise pour se connecter sur le Web ? En donner des exemples. On utilise un navigateur, comme Mozilla Firefox, Google Chrome, ou bien Safari. I. URL \u00b6 On acc\u00e8de \u00e0 une page Web gr\u00e2ce \u00e0 son URL (Uniform Ressource Locator) . Cette adresse localise la page, gr\u00e2ce \u00e0 sa structure. Exemple https://pixees.fr/informatiquelycee/prem/index.html est constitu\u00e9e de : - \"https\" : protocole de communication, d\u00e9finit comment acc\u00e9der \u00e0 la page - \"pixees.fr\" : nom de domaine du serveur, l'identifie gr\u00e2ce \u00e0 son lien avec son adresse IP - \"/informatiquelycee/prem/index.html\" : chemin d'acc\u00e8s \u00e0 la page sur le serveur II. Les langages du Web \u00b6 La page Web est un fichier au format html , le langage de base du Web. Le HTML (Hypertext Markup Language) d\u00e9finit la structure et le contenu de la page. Qu'est-ce qui est alors modifiable avec le HTML ? On peut modifier les contenus des paragraphes, des titres, et des contenus multim\u00e9dia. Une page Web est constitu\u00e9e au minimum de HTML. Elle peut \u00eatre \u00e9crite avec de CSS pour sa mise en forme et des langages de programmation comme le Javascript pour \u00eatre int\u00e9ractive . III. Le principe de l'hypertexte \u00b6 On navigue sur le Web en cliquant de lien en lien, appel\u00e9s liens hypertextes . C'est de ce principe que vient son nom, \"la toile\". Sch\u00e9ma du Web : Activit\u00e9 1 : le protocole HTTPS \u00b6 A partir du document suivant, r\u00e9pondre aux questions. Techniquement, quelle est la diff\u00e9rence entre HTTP et HTTPS ? Avec HTTPS, les informations sont chiffr\u00e9es, c\u2019est-\u00e0-dire incompr\u00e9hensible pour quiconque en dehors du client et du serveur. Avec le protocole HTTPS, qu\u2019est-ce qui permet au serveur de d\u00e9crypter les donn\u00e9es re\u00e7ues ? Une cl\u00e9 permet au serveur de d\u00e9crypter les donn\u00e9es re\u00e7ues. Seuls lui et le client la poss\u00e8dent. Dans un navigateur, comment rep\u00e9rer si l\u2019on utilise HTTPS ? Le nom du protocole est \u00e9crit au d\u00e9but de l\u2019URL, et un cadenas s\u2019affiche avant celle-ci. Activit\u00e9 2 : les cookies \u00b6 Souvent, lorsque l\u2019on visite un site Web, on re\u00e7oit un message indiquant que celui-ci utilise des cookies et nous demande si on les accepte. A partir de la vid\u00e9o de la CNIL, r\u00e9pondre aux questions : https://youtu.be/a9kiQPV_SPg Qu\u2019est-ce qu\u2019un cookie ? Un cookie est un fichier stock\u00e9 par un serveur sur notre ordinateur qui collecte des donn\u00e9es de navigation. Donner des exemples d\u2019informations utiles stock\u00e9es par les cookies. Stocker le contenu de notre panier (sur un site de e-commerce), pour pouvoir le retrouver lors d\u2019une nouvelle connexion. Donner des exemples d\u2019informations stock\u00e9es servant \u00e0 faire de la publicit\u00e9 cibl\u00e9e. Les produits regard\u00e9s, les liens cliqu\u00e9s, le temps pass\u00e9 sur une page. Ces informations peuvent \u00eatre revendues. Cours : S\u00e9curit\u00e9 sur le Web \u00b6 A compl\u00e9ter. Sur le Web, la s\u00e9curit\u00e9 est assur\u00e9e notamment gr\u00e2ce au protocole de communication HTTPS. Il permet le chiffrement des donn\u00e9es \u00e9chang\u00e9es et est aujourd'hui beaucoup plus utilis\u00e9 qu'HTTP. Des donn\u00e9es sont tout de m\u00eame partag\u00e9es aux serveurs Web des sites auxquels on acc\u00e8de, sous la forme de cookies. Ces informations peuvent nous \u00eatre utiles, mais servent aussi \u00e0 enregistrer des donn\u00e9es personnelles pour faire de la publicit\u00e9 cibl\u00e9e. Il est dans certains cas possible de refuser des cookies non-essentiels. Activit\u00e9 3 : Vid\u00e9o et questionnaire \u00b6 R\u00e9pondre aux questions sur la vid\u00e9o, \u00e0 lire jusqu'\u00e0 3'10. Quelle est la diff\u00e9rence entre Internet et le Web ? Citer 3 services d\u2019Internet. Qu\u2019est-ce qu\u2019un site Web ? Comment les documents sont-ils reli\u00e9s entre eux ? O\u00f9 sont stock\u00e9s les documents du Web ? Quel logiciel (ou application) permet d\u2019acc\u00e9der au Web ? Quelle est sa fonction principale ? Quel est le protocole de communication du Web ? Comment se nomme l\u2019adresse d\u2019un document Web ? Un page Web est construite \u00e0 partir des langages informatiques HTML et CSS. Quel est le r\u00f4le de chacun ? Quel logiciel est capable de lire les langages HTML et CSS ?","title":"I. Le fonctionnement du web"},{"location":"2nde/web/fonctionnement/#i-le-fonctionnement-du-web","text":"","title":"I. Le fonctionnement du Web"},{"location":"2nde/web/fonctionnement/#cours-les-bases-du-web","text":"","title":"Cours : Les bases du Web"},{"location":"2nde/web/fonctionnement/#activite-1-le-protocole-https","text":"A partir du document suivant, r\u00e9pondre aux questions. Techniquement, quelle est la diff\u00e9rence entre HTTP et HTTPS ? Avec HTTPS, les informations sont chiffr\u00e9es, c\u2019est-\u00e0-dire incompr\u00e9hensible pour quiconque en dehors du client et du serveur. Avec le protocole HTTPS, qu\u2019est-ce qui permet au serveur de d\u00e9crypter les donn\u00e9es re\u00e7ues ? Une cl\u00e9 permet au serveur de d\u00e9crypter les donn\u00e9es re\u00e7ues. Seuls lui et le client la poss\u00e8dent. Dans un navigateur, comment rep\u00e9rer si l\u2019on utilise HTTPS ? Le nom du protocole est \u00e9crit au d\u00e9but de l\u2019URL, et un cadenas s\u2019affiche avant celle-ci.","title":"Activit\u00e9 1 : le protocole HTTPS"},{"location":"2nde/web/fonctionnement/#activite-2-les-cookies","text":"Souvent, lorsque l\u2019on visite un site Web, on re\u00e7oit un message indiquant que celui-ci utilise des cookies et nous demande si on les accepte. A partir de la vid\u00e9o de la CNIL, r\u00e9pondre aux questions : https://youtu.be/a9kiQPV_SPg Qu\u2019est-ce qu\u2019un cookie ? Un cookie est un fichier stock\u00e9 par un serveur sur notre ordinateur qui collecte des donn\u00e9es de navigation. Donner des exemples d\u2019informations utiles stock\u00e9es par les cookies. Stocker le contenu de notre panier (sur un site de e-commerce), pour pouvoir le retrouver lors d\u2019une nouvelle connexion. Donner des exemples d\u2019informations stock\u00e9es servant \u00e0 faire de la publicit\u00e9 cibl\u00e9e. Les produits regard\u00e9s, les liens cliqu\u00e9s, le temps pass\u00e9 sur une page. Ces informations peuvent \u00eatre revendues.","title":"Activit\u00e9 2 : les cookies"},{"location":"2nde/web/fonctionnement/#cours-securite-sur-le-web","text":"A compl\u00e9ter. Sur le Web, la s\u00e9curit\u00e9 est assur\u00e9e notamment gr\u00e2ce au protocole de communication HTTPS. Il permet le chiffrement des donn\u00e9es \u00e9chang\u00e9es et est aujourd'hui beaucoup plus utilis\u00e9 qu'HTTP. Des donn\u00e9es sont tout de m\u00eame partag\u00e9es aux serveurs Web des sites auxquels on acc\u00e8de, sous la forme de cookies. Ces informations peuvent nous \u00eatre utiles, mais servent aussi \u00e0 enregistrer des donn\u00e9es personnelles pour faire de la publicit\u00e9 cibl\u00e9e. Il est dans certains cas possible de refuser des cookies non-essentiels.","title":"Cours : S\u00e9curit\u00e9 sur le Web"},{"location":"2nde/web/fonctionnement/#activite-3-video-et-questionnaire","text":"R\u00e9pondre aux questions sur la vid\u00e9o, \u00e0 lire jusqu'\u00e0 3'10. Quelle est la diff\u00e9rence entre Internet et le Web ? Citer 3 services d\u2019Internet. Qu\u2019est-ce qu\u2019un site Web ? Comment les documents sont-ils reli\u00e9s entre eux ? O\u00f9 sont stock\u00e9s les documents du Web ? Quel logiciel (ou application) permet d\u2019acc\u00e9der au Web ? Quelle est sa fonction principale ? Quel est le protocole de communication du Web ? Comment se nomme l\u2019adresse d\u2019un document Web ? Un page Web est construite \u00e0 partir des langages informatiques HTML et CSS. Quel est le r\u00f4le de chacun ? Quel logiciel est capable de lire les langages HTML et CSS ?","title":"Activit\u00e9 3 : Vid\u00e9o et questionnaire"},{"location":"2nde/web/html_css/","text":"body { text-align: justify} II. Les langages HTML et CSS \u00b6 Cours \u00b6 I. Le HTML \u00b6 Le HTML est un langage de balises . Elles servent \u00e0 d\u00e9limiter les diff\u00e9rents types de contenus. Exemple Code HTML < h1 > Titre 1 </ h1 > < p > Voici mon paragraphe. </ p > h1 et p sont des balises : h1 sert \u00e0 entrer un titre dit \"de niveau 1\", et p \u00e0 entrer un paragraphe. <h1> est une balise ouvrante , c'est-\u00e0-dire que le titre commence juste apr\u00e8s cette balise. </h1> est une balise fermante , c'est-\u00e0-dire que le titre se termine juste avant cette balise. De la m\u00eame fa\u00e7on, le contenu du paragraphe commence juste avant le V de Voici et se termine juste apr\u00e8s le . , soit entre la balise ouvrante <p> et la balise fermante </p> . Il existe beaucoup d'autres balises, par exemple : Balise Type de contenu h1 , h2 , h3 , jusqu'\u00e0 h6 Titre dont l'importance est d\u00e9croissante ( h1 s'affichera en plus grand que h6 ) p Paragraphe ul et li Liste et \u00e9l\u00e9ments d'une liste img Image a Lien hypertexte Exercice : Ecrire un code HTML permettant d'afficher : - un titre de niveau 2 : \"Les langages du Web\" - un paragraphe : \"Les principaux langages du Web sont HTML et CSS.\" - un 2\u00e8me titre de niveau 2 : \"Le web interactif\" - un 2\u00e8me paragraphe : \"Pour rendre la page interactive, il faut ajouter du Javascript.\" Code II. Le CSS \u00b6 Le CSS est un langage fait pour la mise en page. Il utilise les balises d\u00e9finies dans le code HTML, et des attributs pour changer certaines propri\u00e9t\u00e9s d'affichage. Exemple Code CSS h1 { color : blue ; font-family : Verdana ; } p { font-size : 14 px ; } Ce code met tous les titres de niveau 1 en bleu et en police Verdana, et les paragraphes en taille 14px (pixels). Les attributs utilis\u00e9s sont color , font-family et font-size . Exercice : Ecrire un code CSS permettant de mettre tous les titres de niveau 2 en rouge et en taille 22px, et les paragraphes en noir et en police Arial. Code TP1 : Modification de page web \u00b6 Se connecter \u00e0 l'ENT, aller dans les applications puis dans Capytale, et entrer le code e94c-2172699 Suivre les consignes pour modifier la page Web. Son code s'affiche dans les parties de code HTML et CSS, et le rendu de la page est visible tout en bas. TP2 : Cr\u00e9ation de page web \u00b6 Se connecter \u00e0 l'ENT, aller dans les applications puis dans Capytale, et entrer le code aafe-2172803 Suivre les consignes pour cr\u00e9er une page Web en \u00e9crivant son code HTML et CSS.","title":"II. Les langages HTML et CSS"},{"location":"2nde/web/html_css/#ii-les-langages-html-et-css","text":"","title":"II. Les langages HTML et CSS"},{"location":"2nde/web/html_css/#cours","text":"","title":"Cours"},{"location":"2nde/web/html_css/#tp1-modification-de-page-web","text":"Se connecter \u00e0 l'ENT, aller dans les applications puis dans Capytale, et entrer le code e94c-2172699 Suivre les consignes pour modifier la page Web. Son code s'affiche dans les parties de code HTML et CSS, et le rendu de la page est visible tout en bas.","title":"TP1 : Modification de page web"},{"location":"2nde/web/html_css/#tp2-creation-de-page-web","text":"Se connecter \u00e0 l'ENT, aller dans les applications puis dans Capytale, et entrer le code aafe-2172803 Suivre les consignes pour cr\u00e9er une page Web en \u00e9crivant son code HTML et CSS.","title":"TP2 : Cr\u00e9ation de page web"},{"location":"2nde/web/moteurs_recherche/","text":"body { text-align: justify} Les moteurs de recherche \u00b6 Introduction \u00b6 Citer des exemples de moteurs de recherche . Quelle est la diff\u00e9rence entre un moteur de recherche et un navigateur ? Activit\u00e9 1 : Diff\u00e9rents moteurs de recherche \u00b6 Faire les recherches sur ordinateur, et \u00e9crire les r\u00e9ponses aux questions sur feuille. Chercher \"The Imitation Game\" sur les 3 moteurs de recherche suivants, et relever les informations indiqu\u00e9es dans le tableau : Google Qwant Ecosia Pr\u00e9sence de publicit\u00e9 en t\u00eate des r\u00e9sultats Nombre de r\u00e9sultats pr\u00e9sent\u00e9s 3 premiers r\u00e9sultats non-publicitaires Particularit\u00e9 du moteur de recherche Apr\u00e8s votre recherche, r\u00e9pondre aux questions suivantes : De quels param\u00e8tres d\u00e9pendent les r\u00e9sultats d'une recherche ? Quel moteur recommanderiez-vous ? Pourquoi ? Activit\u00e9 2 : Classer les sites web pour r\u00e9pondre \u00e0 une requ\u00eate \u00b6 A faire sur feuille Maxime et Myriam tapent \u00ab recette tarte aux pommes \u00bb sur un moteur de recherche. Maxime est parisien, alors que Myriam vient de Normandie. Le moteur de recherche doit classer les 4 r\u00e9sultats suivants : 1 2 3 4 Tarte aux pommes - Les recettes d\u2019Agathe La journ\u00e9e du 21 janvier - Blog de Louisedu92 Tarte aux pommes \u2013 Cuisine actuelle Tarte aux pommes classique \u2013 Marmiton Extrait : \u00ab Pr\u00e9paration \u00b7 1. Pr\u00e9chauffez le four \u00e0 200\u00b0C. \u00b7 2. \u00c9pluchez les pommes et coupez-les en tranches d'environ 3 mm d'\u00e9paisseur. \u00b7 3. Disposez une couche de compote de... \u00bb Extrait : \u00ab J\u2019ai mang\u00e9 une pomme Granny et mes parents m\u2019ont parl\u00e9 de Parcoursup, disant que je dois me pr\u00e9parer pour les \u00e9tudes sup\u00e9rieures... \u00bb Extrait : \u00ab Recette Tarte aux pommes normande. Ingr\u00e9dients (6 personnes) : 1 p\u00e2te sabl\u00e9e, 4 pommes type Golden, 3 oeufs... \u00bb Extrait : \u00ab Ingredients \u00b7 P\u00e2te bris\u00e9e: \u00b7 200 g de farine T55 \u00b7 100 g de beurre \u00e0 temp\u00e9rature ambiante \u00b7 1 pinc\u00e9e de sel \u00b7 1 cuiller\u00e9e \u00e0 soupe de sucre \u00b7 5 belles pommes... \u00bb 2 commentaires 6 commentaires 562 commentaires 593 commentaires Quel ordre est le plus pertinent pour Maxime, et quel ordre l'est pour Myriam ? En d\u00e9duire les crit\u00e8res utilis\u00e9s pour classer les r\u00e9sultats d'une recherche. Activit\u00e9 3 : Vid\u00e9o et questionnaire \u00b6 A faire sur feuille, apr\u00e8s visionnage de la vid\u00e9o. Regarder la vid\u00e9o \u00e0 partir de 3'09 et r\u00e9pondre aux questions suivantes : Quel outil est utilis\u00e9 par les moteurs de recherche pour indexer (enregistrer) les sites Web ? Quels sont les crit\u00e8res utilis\u00e9s par les algorithmes de classement des moteurs de recherche ? Comment appelle-t-on le r\u00e9f\u00e9rencement (synonyme de classement) qui classe mieux les sites qui ont pay\u00e9 pour appara\u00eetre en priorit\u00e9 ? Conna\u00eet-on dans le d\u00e9tail le fonctionnement des algorithmes des moteurs de recherche ? Pourquoi ? Donner un exemple de moteur de recherche ne conservant pas l'historique de navigation. Cours \u00b6 A compl\u00e9ter Le Web contient des milliards de pages et des millions de sites. Pour pouvoir trouver des informations, les .................................. parcourent le Web pour indexer les pages gr\u00e2ce \u00e0 des .................................. (en anglais .................................. ). Chaque site est associ\u00e9 \u00e0 plusieurs ................ - ................. Lorsqu'un utilisateur \u00e9crit une requ\u00eate dans la barre de recherche du moteur, celui-ci classe les r\u00e9ponses par ordre de .................................. en se basant sur diff\u00e9rents param\u00e8tres. C\u2019est ce qu'on appelle le r\u00e9f\u00e9rencement ................................... Il est \u00e0 distinguer du r\u00e9f\u00e9rencement .................................., qui permet \u00e0 des entreprises d'appara\u00eetre en haut des r\u00e9sultats pour certains mots-cl\u00e9s en payant le moteur de recherche.","title":"IV. Les moteurs de recherche"},{"location":"2nde/web/moteurs_recherche/#les-moteurs-de-recherche","text":"","title":"Les moteurs de recherche"},{"location":"2nde/web/moteurs_recherche/#introduction","text":"Citer des exemples de moteurs de recherche . Quelle est la diff\u00e9rence entre un moteur de recherche et un navigateur ?","title":"Introduction"},{"location":"2nde/web/moteurs_recherche/#activite-1-differents-moteurs-de-recherche","text":"Faire les recherches sur ordinateur, et \u00e9crire les r\u00e9ponses aux questions sur feuille. Chercher \"The Imitation Game\" sur les 3 moteurs de recherche suivants, et relever les informations indiqu\u00e9es dans le tableau : Google Qwant Ecosia Pr\u00e9sence de publicit\u00e9 en t\u00eate des r\u00e9sultats Nombre de r\u00e9sultats pr\u00e9sent\u00e9s 3 premiers r\u00e9sultats non-publicitaires Particularit\u00e9 du moteur de recherche Apr\u00e8s votre recherche, r\u00e9pondre aux questions suivantes : De quels param\u00e8tres d\u00e9pendent les r\u00e9sultats d'une recherche ? Quel moteur recommanderiez-vous ? Pourquoi ?","title":"Activit\u00e9 1 : Diff\u00e9rents moteurs de recherche"},{"location":"2nde/web/moteurs_recherche/#activite-2-classer-les-sites-web-pour-repondre-a-une-requete","text":"A faire sur feuille Maxime et Myriam tapent \u00ab recette tarte aux pommes \u00bb sur un moteur de recherche. Maxime est parisien, alors que Myriam vient de Normandie. Le moteur de recherche doit classer les 4 r\u00e9sultats suivants : 1 2 3 4 Tarte aux pommes - Les recettes d\u2019Agathe La journ\u00e9e du 21 janvier - Blog de Louisedu92 Tarte aux pommes \u2013 Cuisine actuelle Tarte aux pommes classique \u2013 Marmiton Extrait : \u00ab Pr\u00e9paration \u00b7 1. Pr\u00e9chauffez le four \u00e0 200\u00b0C. \u00b7 2. \u00c9pluchez les pommes et coupez-les en tranches d'environ 3 mm d'\u00e9paisseur. \u00b7 3. Disposez une couche de compote de... \u00bb Extrait : \u00ab J\u2019ai mang\u00e9 une pomme Granny et mes parents m\u2019ont parl\u00e9 de Parcoursup, disant que je dois me pr\u00e9parer pour les \u00e9tudes sup\u00e9rieures... \u00bb Extrait : \u00ab Recette Tarte aux pommes normande. Ingr\u00e9dients (6 personnes) : 1 p\u00e2te sabl\u00e9e, 4 pommes type Golden, 3 oeufs... \u00bb Extrait : \u00ab Ingredients \u00b7 P\u00e2te bris\u00e9e: \u00b7 200 g de farine T55 \u00b7 100 g de beurre \u00e0 temp\u00e9rature ambiante \u00b7 1 pinc\u00e9e de sel \u00b7 1 cuiller\u00e9e \u00e0 soupe de sucre \u00b7 5 belles pommes... \u00bb 2 commentaires 6 commentaires 562 commentaires 593 commentaires Quel ordre est le plus pertinent pour Maxime, et quel ordre l'est pour Myriam ? En d\u00e9duire les crit\u00e8res utilis\u00e9s pour classer les r\u00e9sultats d'une recherche.","title":"Activit\u00e9 2 : Classer les sites web pour r\u00e9pondre \u00e0 une requ\u00eate"},{"location":"2nde/web/moteurs_recherche/#activite-3-video-et-questionnaire","text":"A faire sur feuille, apr\u00e8s visionnage de la vid\u00e9o. Regarder la vid\u00e9o \u00e0 partir de 3'09 et r\u00e9pondre aux questions suivantes : Quel outil est utilis\u00e9 par les moteurs de recherche pour indexer (enregistrer) les sites Web ? Quels sont les crit\u00e8res utilis\u00e9s par les algorithmes de classement des moteurs de recherche ? Comment appelle-t-on le r\u00e9f\u00e9rencement (synonyme de classement) qui classe mieux les sites qui ont pay\u00e9 pour appara\u00eetre en priorit\u00e9 ? Conna\u00eet-on dans le d\u00e9tail le fonctionnement des algorithmes des moteurs de recherche ? Pourquoi ? Donner un exemple de moteur de recherche ne conservant pas l'historique de navigation.","title":"Activit\u00e9 3 : Vid\u00e9o et questionnaire"},{"location":"2nde/web/moteurs_recherche/#cours","text":"A compl\u00e9ter Le Web contient des milliards de pages et des millions de sites. Pour pouvoir trouver des informations, les .................................. parcourent le Web pour indexer les pages gr\u00e2ce \u00e0 des .................................. (en anglais .................................. ). Chaque site est associ\u00e9 \u00e0 plusieurs ................ - ................. Lorsqu'un utilisateur \u00e9crit une requ\u00eate dans la barre de recherche du moteur, celui-ci classe les r\u00e9ponses par ordre de .................................. en se basant sur diff\u00e9rents param\u00e8tres. C\u2019est ce qu'on appelle le r\u00e9f\u00e9rencement ................................... Il est \u00e0 distinguer du r\u00e9f\u00e9rencement .................................., qui permet \u00e0 des entreprises d'appara\u00eetre en haut des r\u00e9sultats pour certains mots-cl\u00e9s en payant le moteur de recherche.","title":"Cours"},{"location":"my_theme_customizations/pyodide-mkdocs/end_REM/","text":"Z","title":"end REM"},{"location":"my_theme_customizations/pyodide-mkdocs/start_REM/","text":"A","title":"start REM"},{"location":"projets/","text":"body { text-align: justify} I. Pr\u00e9sentation \u00b6 Qu'est-ce qu'un projet en NSI ? \u00b6 Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"Index"},{"location":"projets/#i-presentation","text":"","title":"I. Pr\u00e9sentation"},{"location":"projets/#quest-ce-quun-projet-en-nsi","text":"Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"Qu'est-ce qu'un projet en NSI ?"},{"location":"projets/pr%C3%A9s_projet/","text":"body { text-align: justify} I. Pr\u00e9sentation \u00b6 Qu'est-ce qu'un projet en NSI ? \u00b6 Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"Pr\u00e9s projet"},{"location":"projets/pr%C3%A9s_projet/#i-presentation","text":"","title":"I. Pr\u00e9sentation"},{"location":"projets/pr%C3%A9s_projet/#quest-ce-quun-projet-en-nsi","text":"Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"Qu'est-ce qu'un projet en NSI ?"},{"location":"projets/1ere_cyber/BonnesPratiques_Structure/","text":"body { text-align: justify} II. Structurer un programme \u00b6 On structure classiquement un programme en mettant : - les imports des biblioth\u00e8ques en premier, - les d\u00e9finitions des fonctions ensuite, - un programme principal \u00e0 la fin, utilisant les fonctions des biblioth\u00e8ques et celles d\u00e9finies plus haut. Exemple d'un programme de calcul sur des nombres : from random import randint def addition ( a , b ): ''' additionne deux nombres (int ou float) a et b ''' return a + b def soustraction ( a , b ): ''' soustrait a (int ou float) par b (int ou float) ''' return a - b def multiplication ( a , b ): ''' multiple deux nombres (int ou float) a et b ''' produit = 1 for _ in range ( b ): produit = addition ( produit , a ) return produit def division ( a , b ): ''' renvoie le quotient et reste dans la division euclidienne de a (int) par b (int) ''' assert b != 0 , \"La division par 0 est interdite !\" count = 0 while a >= b : a = a - b count += 1 return count , a def entier_aleatoire (): ''' renvoie un entier al\u00e9atoire compris entre 0 et 100 ''' return randint ( 0 , 100 ) # -------------- Programme principal -------------- # G\u00e9n\u00e9rations d'entiers de mani\u00e8re al\u00e9atoire n1 = entier_aleatoire () n2 = entier_aleatoire () # Calculs sur ces entiers somme = addition ( n1 , n2 ) difference = soustraction ( n1 , n2 ) produit = multiplication ( n1 , n2 ) q , r = division ( n1 , n2 ) Entourer les trois parties du programme. Quels sont les diff\u00e9rents types de commentaires qui sont utilis\u00e9s ? A quoi sert l'assertion dans la fonction division ?","title":"Structurer un programme"},{"location":"projets/1ere_cyber/BonnesPratiques_Structure/#ii-structurer-un-programme","text":"On structure classiquement un programme en mettant : - les imports des biblioth\u00e8ques en premier, - les d\u00e9finitions des fonctions ensuite, - un programme principal \u00e0 la fin, utilisant les fonctions des biblioth\u00e8ques et celles d\u00e9finies plus haut. Exemple d'un programme de calcul sur des nombres : from random import randint def addition ( a , b ): ''' additionne deux nombres (int ou float) a et b ''' return a + b def soustraction ( a , b ): ''' soustrait a (int ou float) par b (int ou float) ''' return a - b def multiplication ( a , b ): ''' multiple deux nombres (int ou float) a et b ''' produit = 1 for _ in range ( b ): produit = addition ( produit , a ) return produit def division ( a , b ): ''' renvoie le quotient et reste dans la division euclidienne de a (int) par b (int) ''' assert b != 0 , \"La division par 0 est interdite !\" count = 0 while a >= b : a = a - b count += 1 return count , a def entier_aleatoire (): ''' renvoie un entier al\u00e9atoire compris entre 0 et 100 ''' return randint ( 0 , 100 ) # -------------- Programme principal -------------- # G\u00e9n\u00e9rations d'entiers de mani\u00e8re al\u00e9atoire n1 = entier_aleatoire () n2 = entier_aleatoire () # Calculs sur ces entiers somme = addition ( n1 , n2 ) difference = soustraction ( n1 , n2 ) produit = multiplication ( n1 , n2 ) q , r = division ( n1 , n2 ) Entourer les trois parties du programme. Quels sont les diff\u00e9rents types de commentaires qui sont utilis\u00e9s ? A quoi sert l'assertion dans la fonction division ?","title":"II. Structurer un programme"},{"location":"projets/1ere_cyber/Fiche_Suivi_Faur%C3%A9/","text":"body { text-align: justify} Projet Cybers\u00e9curit\u00e9 : Fiche de suivi \u00b6 Vous allez remplir cette fiche tout au long du projet, pour indiquer ce qui a \u00e9t\u00e9 fait \u00e0 chaque s\u00e9ance, et par qui . Choix du sujet : .............................................................................................................. Ecrire ci-dessous la liste des fonctionnalit\u00e9s du programme (se baser sur la description du sujet) : Ecrire, s\u00e9ance apr\u00e8s s\u00e9ance, les t\u00e2ches r\u00e9alis\u00e9es par chaque membre du groupe : S\u00e9ance Date Membre 1 : .................................. Membre 2 : .................................. Membre 3 : .................................. 1 A faire pour la s\u00e9ance 2 2 A faire pour la s\u00e9ance 3 3 A faire avant le rendu final","title":"Projets - Fiche de suivi"},{"location":"projets/1ere_cyber/Fiche_Suivi_Faur%C3%A9/#projet-cybersecurite-fiche-de-suivi","text":"Vous allez remplir cette fiche tout au long du projet, pour indiquer ce qui a \u00e9t\u00e9 fait \u00e0 chaque s\u00e9ance, et par qui . Choix du sujet : .............................................................................................................. Ecrire ci-dessous la liste des fonctionnalit\u00e9s du programme (se baser sur la description du sujet) : Ecrire, s\u00e9ance apr\u00e8s s\u00e9ance, les t\u00e2ches r\u00e9alis\u00e9es par chaque membre du groupe : S\u00e9ance Date Membre 1 : .................................. Membre 2 : .................................. Membre 3 : .................................. 1 A faire pour la s\u00e9ance 2 2 A faire pour la s\u00e9ance 3 3 A faire avant le rendu final","title":"Projet Cybers\u00e9curit\u00e9 : Fiche de suivi"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/","text":"body { text-align: justify} Projet cybers\u00e9curit\u00e9 (programmation Python) : Sujets \u00b6 Dans chaque sujet, un menu est cr\u00e9\u00e9 par votre programme avec les diff\u00e9rentes fonctionnalit\u00e9s propos\u00e9es. Ce menu s'affiche tant que l'utilisateur n'a pas indiqu\u00e9 qu'il voulait quitter le programme. Sujet 1 : Le r\u00e9pertoire d'identifiants \u00b6 Aujourd'hui, beaucoup de sites Web n\u00e9cessitent une inscription. Ils peuvent avoir des r\u00e8gles diff\u00e9rentes par rapport aux symboles accept\u00e9s pour les identifiants et les mots de passe , et il faut les faire varier ! C'est donc une bonne id\u00e9e de r\u00e9pertorier ces informations, pour pouvoir les retrouver efficacement. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : Entrer de nouveaux identifiants Rechercher des identifiants Entrer une alerte Le programme stockera les identifiants dans un fichier, et ira rechercher dans ce fichier pour r\u00e9cup\u00e9rer les informations. L' alerte permet d'indiquer que les identifiants d'un site Web se sont fait hacker : elle indique \u00e0 l'utilisateur quels autres identifiants doivent \u00eatre chang\u00e9s, c'est-\u00e0-dire ceux qui sont identiques \u00e0 ceux qui sont entre de mauvaises mains. Sujet 2 : Le g\u00e9n\u00e9rateur de mots de passe \u00b6 L'utilisation d'un mot de passe trop simple vous d\u00e9signe comme une cible id\u00e9ale pour un piratage de compte. Pour en cr\u00e9er des qui soient s\u00e9curis\u00e9s \u00e0 coup s\u00fbr, il est d'autant plus efficace de d\u00e9l\u00e9guer cette t\u00e2che \u00e0 l'ordinateur. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : - G\u00e9n\u00e9rer un nouveau mot de passe - G\u00e9n\u00e9rer un nouveau mot de passe tr\u00e8s s\u00e9curis\u00e9 - Evaluer le niveau de s\u00e9curit\u00e9 d'un mot de passe Le mot de passe g\u00e9n\u00e9r\u00e9 sera en partie al\u00e9atoire : il faudra notamment utiliser les biblioth\u00e8ques random et string de Python dont vous trouverez la documentation en ligne. Il vous faudra rechercher ce qu'est un mot de passe s\u00e9curis\u00e9 : basez-vous notamment sur les informations de l'ANSSI (l'Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information). Les mots de passe g\u00e9n\u00e9r\u00e9s seront stock\u00e9s dans un fichier avec les autres mots de passe ayant le m\u00eame niveau de s\u00e9curit\u00e9. Sujet 3 : Testeur de s\u00e9curit\u00e9 num\u00e9rique \u00b6 Les bonnes pratiques permettant de limiter les traces laiss\u00e9es sur le Web, ainsi que celles nous permettant de nous prot\u00e9ger au maximum des attaques, ne sont pas connues de tous dans la population. Evaluer nos pratiques dans ce domaine peut nous permettre de nous am\u00e9liorer. Cr\u00e9er un programme qui proposera une s\u00e9rie de questions \u00e0 r\u00e9ponses multiples (au moins 10), \u00e9valuant les bonnes pratiques de l'utilisateur en terme de cybers\u00e9curit\u00e9. Chaque r\u00e9ponse est associ\u00e9e \u00e0 un score, et le total est calcul\u00e9 automatiquement. Les questions et les points associ\u00e9es aux r\u00e9ponses doivent provenir d'une recherche sur le sujet. Au d\u00e9but du test, il est demand\u00e9 \u00e0 l'utilisateur un identifiant, et son score final est stock\u00e9 dans un fichier, avec cet identifiant. On doit aussi pouvoir retrouver le score d'un utilisateur donn\u00e9. Sujet 4 : Evaluateur de site Web \u00b6 La gestion des donn\u00e9es personnelles par les grandes entreprises du Web (les r\u00e9seaux sociaux en particulier) commence \u00e0 \u00eatre r\u00e9gul\u00e9e, notamment gr\u00e2ce aux r\u00e9glementations europ\u00e9ennes. Pour un utilisateur du Web, il est important de savoir quel site est un bon \u00e9l\u00e8ve, et qui l'est moins. Cr\u00e9er un programme qui \u00e9value la bonne gestion des donn\u00e9es par un site web. Il pose pour cela une s\u00e9rie de questions (au moins 10) \u00e0 r\u00e9ponses multiples, qui doivent \u00eatre identifi\u00e9es gr\u00e2ce \u00e0 une recherche. L'objectif est d'identifier si le site respecte bien les r\u00e8gles comme celles du RGPD. A la fin du questionnaire, une note est attribu\u00e9e au site en fonction des r\u00e9ponses fournies et est stock\u00e9e avec le nom du site dans un fichier. Votre programme permet aussi de retrouver la note attribu\u00e9e \u00e0 un site donn\u00e9. Sujet 5 : Chiffrement des communications \u00b6 Ce sujet n\u00e9cessite plus de comp\u00e9tences en programmation et est destin\u00e9 aux \u00e9l\u00e8ves plus avanc\u00e9s. Envoyer des messages sur un r\u00e9seau sans les transformer fait que leur interception peut causer des d\u00e9g\u00e2ts, en fonction des informations transmises. Il est aujourd'hui n\u00e9cessaire de chiffrer les communications pour ne pas qu'elles puissent \u00eatre comprises par n'importe qui. Chiffrer un message consiste \u00e0 le transformer pour le rendre illisible par quelqu'un qui ne conna\u00eetrait pas le moyen de le d\u00e9chiffrer. Il existe plusieurs fa\u00e7ons de le faire : le chiffrement de C\u00e9sar, de Vigen\u00e8re, RSA, avec le XOR... Choisir une m\u00e9thode de chiffrement (ou plusieurs) et cr\u00e9er un programme qui chiffre et d\u00e9chiffre un message qui lui est donn\u00e9 par l'utilisateur, et stocke le r\u00e9sultat dans un fichier, r\u00e9cup\u00e9rable par celui-ci.","title":"2022 - 1\u00e8re - Cybers\u00e9curit\u00e9"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#projet-cybersecurite-programmation-python-sujets","text":"Dans chaque sujet, un menu est cr\u00e9\u00e9 par votre programme avec les diff\u00e9rentes fonctionnalit\u00e9s propos\u00e9es. Ce menu s'affiche tant que l'utilisateur n'a pas indiqu\u00e9 qu'il voulait quitter le programme.","title":"Projet cybers\u00e9curit\u00e9 (programmation Python) : Sujets"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-1-le-repertoire-didentifiants","text":"Aujourd'hui, beaucoup de sites Web n\u00e9cessitent une inscription. Ils peuvent avoir des r\u00e8gles diff\u00e9rentes par rapport aux symboles accept\u00e9s pour les identifiants et les mots de passe , et il faut les faire varier ! C'est donc une bonne id\u00e9e de r\u00e9pertorier ces informations, pour pouvoir les retrouver efficacement. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : Entrer de nouveaux identifiants Rechercher des identifiants Entrer une alerte Le programme stockera les identifiants dans un fichier, et ira rechercher dans ce fichier pour r\u00e9cup\u00e9rer les informations. L' alerte permet d'indiquer que les identifiants d'un site Web se sont fait hacker : elle indique \u00e0 l'utilisateur quels autres identifiants doivent \u00eatre chang\u00e9s, c'est-\u00e0-dire ceux qui sont identiques \u00e0 ceux qui sont entre de mauvaises mains.","title":"Sujet 1 : Le r\u00e9pertoire d'identifiants"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-2-le-generateur-de-mots-de-passe","text":"L'utilisation d'un mot de passe trop simple vous d\u00e9signe comme une cible id\u00e9ale pour un piratage de compte. Pour en cr\u00e9er des qui soient s\u00e9curis\u00e9s \u00e0 coup s\u00fbr, il est d'autant plus efficace de d\u00e9l\u00e9guer cette t\u00e2che \u00e0 l'ordinateur. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : - G\u00e9n\u00e9rer un nouveau mot de passe - G\u00e9n\u00e9rer un nouveau mot de passe tr\u00e8s s\u00e9curis\u00e9 - Evaluer le niveau de s\u00e9curit\u00e9 d'un mot de passe Le mot de passe g\u00e9n\u00e9r\u00e9 sera en partie al\u00e9atoire : il faudra notamment utiliser les biblioth\u00e8ques random et string de Python dont vous trouverez la documentation en ligne. Il vous faudra rechercher ce qu'est un mot de passe s\u00e9curis\u00e9 : basez-vous notamment sur les informations de l'ANSSI (l'Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information). Les mots de passe g\u00e9n\u00e9r\u00e9s seront stock\u00e9s dans un fichier avec les autres mots de passe ayant le m\u00eame niveau de s\u00e9curit\u00e9.","title":"Sujet 2 : Le g\u00e9n\u00e9rateur de mots de passe"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-3-testeur-de-securite-numerique","text":"Les bonnes pratiques permettant de limiter les traces laiss\u00e9es sur le Web, ainsi que celles nous permettant de nous prot\u00e9ger au maximum des attaques, ne sont pas connues de tous dans la population. Evaluer nos pratiques dans ce domaine peut nous permettre de nous am\u00e9liorer. Cr\u00e9er un programme qui proposera une s\u00e9rie de questions \u00e0 r\u00e9ponses multiples (au moins 10), \u00e9valuant les bonnes pratiques de l'utilisateur en terme de cybers\u00e9curit\u00e9. Chaque r\u00e9ponse est associ\u00e9e \u00e0 un score, et le total est calcul\u00e9 automatiquement. Les questions et les points associ\u00e9es aux r\u00e9ponses doivent provenir d'une recherche sur le sujet. Au d\u00e9but du test, il est demand\u00e9 \u00e0 l'utilisateur un identifiant, et son score final est stock\u00e9 dans un fichier, avec cet identifiant. On doit aussi pouvoir retrouver le score d'un utilisateur donn\u00e9.","title":"Sujet 3 : Testeur de s\u00e9curit\u00e9 num\u00e9rique"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-4-evaluateur-de-site-web","text":"La gestion des donn\u00e9es personnelles par les grandes entreprises du Web (les r\u00e9seaux sociaux en particulier) commence \u00e0 \u00eatre r\u00e9gul\u00e9e, notamment gr\u00e2ce aux r\u00e9glementations europ\u00e9ennes. Pour un utilisateur du Web, il est important de savoir quel site est un bon \u00e9l\u00e8ve, et qui l'est moins. Cr\u00e9er un programme qui \u00e9value la bonne gestion des donn\u00e9es par un site web. Il pose pour cela une s\u00e9rie de questions (au moins 10) \u00e0 r\u00e9ponses multiples, qui doivent \u00eatre identifi\u00e9es gr\u00e2ce \u00e0 une recherche. L'objectif est d'identifier si le site respecte bien les r\u00e8gles comme celles du RGPD. A la fin du questionnaire, une note est attribu\u00e9e au site en fonction des r\u00e9ponses fournies et est stock\u00e9e avec le nom du site dans un fichier. Votre programme permet aussi de retrouver la note attribu\u00e9e \u00e0 un site donn\u00e9.","title":"Sujet 4 : Evaluateur de site Web"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-5-chiffrement-des-communications","text":"Ce sujet n\u00e9cessite plus de comp\u00e9tences en programmation et est destin\u00e9 aux \u00e9l\u00e8ves plus avanc\u00e9s. Envoyer des messages sur un r\u00e9seau sans les transformer fait que leur interception peut causer des d\u00e9g\u00e2ts, en fonction des informations transmises. Il est aujourd'hui n\u00e9cessaire de chiffrer les communications pour ne pas qu'elles puissent \u00eatre comprises par n'importe qui. Chiffrer un message consiste \u00e0 le transformer pour le rendre illisible par quelqu'un qui ne conna\u00eetrait pas le moyen de le d\u00e9chiffrer. Il existe plusieurs fa\u00e7ons de le faire : le chiffrement de C\u00e9sar, de Vigen\u00e8re, RSA, avec le XOR... Choisir une m\u00e9thode de chiffrement (ou plusieurs) et cr\u00e9er un programme qui chiffre et d\u00e9chiffre un message qui lui est donn\u00e9 par l'utilisateur, et stocke le r\u00e9sultat dans un fichier, r\u00e9cup\u00e9rable par celui-ci.","title":"Sujet 5 : Chiffrement des communications"},{"location":"projets/1ere_cyber/Recherche_Informations/","text":"body { text-align: justify} III. Rechercher des informations \u00b6 A. Utiliser une fonction connue \u00b6 Si vous connaissez le nom de la fonction que vous voulez utiliser, vous pouvez acc\u00e9der \u00e0 sa documentation en tapant dans la console de votre IDE Python : help ( nom_fonction ) Si cela ne suffit pas, faites une recherche Web avec le nom de votre fonction et le mot-cl\u00e9 \"python\". Vous pouvez notamment trouver des posts, par exemple sur des forums, de d\u00e9veloppeurs qui donnent des exemples de programmes , ou posent des questions sur son utilisation. B. Rechercher des fonctions \u00b6 Consulter la documentation officielle Python : https://docs.python.org/fr/3/ Utiliser la barre de recherche en haut \u00e0 droite : Par exemple, pour random, on obtient : un module correspond \u00e0 une biblioth\u00e8que : un ensemble de fonctions, une fonction qui appartient \u00e0 un module sera indiqu\u00e9e sous la forme nom_module.nom_fonction C. R\u00e9utiliser des programmes \u00b6 Il ne faut pas h\u00e9siter \u00e0 s'inspirer de programmes trouv\u00e9s sur le Web, mais il faut absolument se les approprier . Vous devez tester le fonctionnement du programme, le modifier en fonction de ce que vous souhaitez faire. Vous devez \u00eatre capable d'expliquer chaque ligne de code de votre projet. Pour comprendre le fonctionnement d'un programme : - faire diff\u00e9rents appels des fonctions utilis\u00e9es, en changeant les param\u00e8tres. - utiliser l'outil https://pythontutor.com/visualize.html pour l'ex\u00e9cuter pas \u00e0 pas.","title":"Rechercher des informations"},{"location":"projets/1ere_cyber/Recherche_Informations/#iii-rechercher-des-informations","text":"","title":"III. Rechercher des informations"},{"location":"projets/1ere_cyber/Recherche_Informations/#a-utiliser-une-fonction-connue","text":"Si vous connaissez le nom de la fonction que vous voulez utiliser, vous pouvez acc\u00e9der \u00e0 sa documentation en tapant dans la console de votre IDE Python : help ( nom_fonction ) Si cela ne suffit pas, faites une recherche Web avec le nom de votre fonction et le mot-cl\u00e9 \"python\". Vous pouvez notamment trouver des posts, par exemple sur des forums, de d\u00e9veloppeurs qui donnent des exemples de programmes , ou posent des questions sur son utilisation.","title":"A. Utiliser une fonction connue"},{"location":"projets/1ere_cyber/Recherche_Informations/#b-rechercher-des-fonctions","text":"Consulter la documentation officielle Python : https://docs.python.org/fr/3/ Utiliser la barre de recherche en haut \u00e0 droite : Par exemple, pour random, on obtient : un module correspond \u00e0 une biblioth\u00e8que : un ensemble de fonctions, une fonction qui appartient \u00e0 un module sera indiqu\u00e9e sous la forme nom_module.nom_fonction","title":"B. Rechercher des fonctions"},{"location":"projets/1ere_cyber/Recherche_Informations/#c-reutiliser-des-programmes","text":"Il ne faut pas h\u00e9siter \u00e0 s'inspirer de programmes trouv\u00e9s sur le Web, mais il faut absolument se les approprier . Vous devez tester le fonctionnement du programme, le modifier en fonction de ce que vous souhaitez faire. Vous devez \u00eatre capable d'expliquer chaque ligne de code de votre projet. Pour comprendre le fonctionnement d'un programme : - faire diff\u00e9rents appels des fonctions utilis\u00e9es, en changeant les param\u00e8tres. - utiliser l'outil https://pythontutor.com/visualize.html pour l'ex\u00e9cuter pas \u00e0 pas.","title":"C. R\u00e9utiliser des programmes"},{"location":"projets/1ere_cyber/Rendus/","text":"body { text-align: justify} Projet : Les rendus \u00b6 A. Le programme \u00b6 1) Structure \u00b6 La structure du programme attendue est la suivante : - ensemble de fonctions (peuvent \u00eatre \u00e9crites dans diff\u00e9rents fichiers .py) , - programme principal utilisant ces fonctions dans un menu propos\u00e9 \u00e0 l'utilisateur, - stockage des informations importantes (d\u00e9crit dans le sujet) dans des fichiers . 2) Impl\u00e9mentation des bonnes pratiques \u00b6 Votre programme doit \u00eatre lisible par un autre programmeur : si celui-ci voulait effectuer des modifications, il devrait pouvoir le faire. Cela implique d\u2019impl\u00e9menter les bonnes pratiques de programmation courantes : - d\u00e9coupage en fonctions , - noms des variables et des fonctions explicites , - r\u00f4le des fonctions et parties difficiles du code comment\u00e9es . 3) Utilisation simple \u00b6 L\u2019 utilisation de votre programme ne doit pas demander \u00e0 l\u2019utilisateur de se demander comment faire pour le lancer et utiliser ses diff\u00e9rentes fonctionnalit\u00e9s : ceci doit \u00eatre expliqu\u00e9 dans le menu propos\u00e9 \u00e0 l'utilisateur (si plus d'explications sont n\u00e9cessaires, vous pouvez utiliser un fichier s\u00e9par\u00e9 readme) . Il ne doit pas \u00eatre difficile de trouver l\u2019information, elle doit appara\u00eetre clairement. B. La soutenance \u00b6 La soutenance est une pr\u00e9sentation de 3min/personne avec diaporama : donc de 6min pour les groupes de 2, et 9min pour les groupes de 3. Vous aurez ensuite quelques minutes de questions. 1) Structure \u00b6 Votre soutenance doit permettre \u00e0 un auditoire qui ne conna\u00eet pas votre projet de le comprendre. Elle doit contenir : - une pr\u00e9sentation g\u00e9n\u00e9rale du sujet, - une description des fonctionnalit\u00e9s impl\u00e9ment\u00e9es dans votre programme avec des exemples de code, - un bilan critique sur ce qui a \u00e9t\u00e9 r\u00e9alis\u00e9 (cf partie suivante) . Attention , il n'est pas facile de pr\u00e9senter du code \u00e0 l'oral. Ne rentrez donc pas trop dans le d\u00e9tail (des questions plus pr\u00e9cises peuvent vous \u00eatre pos\u00e9es ensuite). 2) Bilan \u00b6 Vous devez revenir sur le d\u00e9roulement du projet et expliquer les choix effectu\u00e9s : en termes techniques et en termes de gestion de projet . Quelles ont \u00e9t\u00e9 les difficult\u00e9s ? Que reste-t-il \u00e0 am\u00e9liorer ? Qu'am\u00e9lioreriez-vous dans la gestion si vous aviez \u00e0 le refaire ? Le diaporama est \u00e0 m'envoyer au moins 2 jours avant la soutenance .","title":"projet - Rendus"},{"location":"projets/1ere_cyber/Rendus/#projet-les-rendus","text":"","title":"Projet : Les rendus"},{"location":"projets/1ere_cyber/Rendus/#a-le-programme","text":"","title":"A. Le programme"},{"location":"projets/1ere_cyber/Rendus/#b-la-soutenance","text":"La soutenance est une pr\u00e9sentation de 3min/personne avec diaporama : donc de 6min pour les groupes de 2, et 9min pour les groupes de 3. Vous aurez ensuite quelques minutes de questions.","title":"B. La soutenance"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/","text":"body { text-align: justify} Projet : TP de pr\u00e9paration \u00b6 Cr\u00e9er un nouveau fichier \"TP_Pr\u00e9paration_Projet.py\" dans votre dossier NSI. Tous les projets doivent permettre d' interagir avec l'utilisateur , et stockent des informations dans des fichiers . Vous devez donc ma\u00eetriser ces \u00e9l\u00e9ments avant de vous lancer dans votre projet. A. Interagir avec l'utilisateur \u00b6 L'utilisateur peut envoyer des informations au programme avec la fonction input , comme dans l'exemple suivant : age = input ( \"Quel est votre \u00e2ge ? \" ) 1. Ex\u00e9cuter cette commande. Quel est le type de la variable age ? Par d\u00e9faut, les donn\u00e9es saisies par l'ordinateur sont repr\u00e9sent\u00e9es par le type cha\u00eene de caract\u00e8res. Il peut donc \u00eatre n\u00e9cessaire de les convertir, quand on veut manipuler des nombres, et faire des op\u00e9rations avec. Compl\u00e9ter le code suivant avec la fonction int pour ne pas avoir d'erreur : age = input ( \"Quel est votre \u00e2ge ? \" ) age = ... #\u00e0 compl\u00e9ter age = age + 1 Vous pouvez, \u00e0 partir d'ici, commenter cette partie du programme pour qu'elle ne s'ex\u00e9cute pas ensuite. B. Utiliser les fichiers \u00b6 Pour \u00e9crire du texte dans un fichier, nous allons utiliser un programme comme celui ci-dessous : mot = input ( 'Entrez un mot' ) with open ( 'fichier.txt' , 'a' ) as f : f . write ( mot ) Ce programme cr\u00e9er un nouveau fichier fichier.txt s'il n'existe pas d\u00e9j\u00e0, gr\u00e2ce \u00e0 la fonction open . Celle-ci prend en param\u00e8tre le nom du fichier, et un mode d'acc\u00e8s : - 'r' : ouverture en lecture - 'w' : ouverture en \u00e9criture - 'a' : ouverture en \u00e9crire en mode \"ajout\", c'est-\u00e0-dire que l'on \u00e9crit \u00e0 la fin du fichier. Ex\u00e9cuter ce programme, et entrer un mot \u00e0 \u00e9crire. Le fichier fichier.txt aura \u00e9t\u00e9 cr\u00e9\u00e9 dans le m\u00eame dossier que celui qui contient votre fichier Python. Localiser le fichier, et l'ouvrir avec un \u00e9diteur de texte pour v\u00e9rifier qu'il contient bien ce mot. Ex\u00e9cuter ce programme une deuxi\u00e8me fois, et entrer un nouveau mot. V\u00e9rifier qu'il se trouve bien \u00e9crit dans le fichier, \u00e0 la suite du premier. Analyser le code suivant. Que doit contenir la variable ligne ? Le v\u00e9rifier en l'ex\u00e9cutant. with open ( 'fichier.txt' , 'r' ) as f : ligne = f . read () Entrer des mots les uns \u00e0 la suite des autres cr\u00e9e un fichier qui n'est pas tr\u00e8s lisible... Pour s\u00e9parer les informations, on peut forcer le retour \u00e0 la ligne avec le caract\u00e8re \\n . Ex\u00e9cuter l'instruction suivante pour v\u00e9rifier que l'on a bien un saut de ligne : print('num\u00e9rique et \\nsciences informatiques') Modifier votre programme d'\u00e9criture dans le fichier (question 1), pour que chaque nouveau mot entr\u00e9 s'\u00e9crive sur une nouvelle ligne. Le programme suivant permet de lire un fichier, et de stocker le texte \u00e9crit sur les diff\u00e9rentes lignes dans une liste Python. Tester ce programme. mots = [] with open ( 'fichier.txt' , 'r' ) as f : for ligne in f : ligne = ligne . replace ( \" \\n \" , \"\" ) mots . append ( ligne ) C. Cr\u00e9er un menu \u00b6 Votre programme int\u00e9grera un menu, donnant le choix \u00e0 l'utilisateur sur l'action \u00e0 effectuer. Pour afficher un menu, on peut utiliser un programme comme celui-ci : print ( '1. Choix 1 \\n 2. Choix 2 \\n 3. Quitter) Afficher ce menu, et demander \u00e0 l'utilisateur d'entrer l'entier correspondant \u00e0 son choix. Compl\u00e9ter le programme en impl\u00e9mentant l'algorithme suivant : si le choix est 1 afficher \"choix 1\" sinon si le choix est 2 afficher \"choix 2\" Comment afficher le menu tant que l'utilisateur n'a pas choisi de quitter ? Impl\u00e9menter votre solution.","title":"Les fichiers"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#projet-tp-de-preparation","text":"Cr\u00e9er un nouveau fichier \"TP_Pr\u00e9paration_Projet.py\" dans votre dossier NSI. Tous les projets doivent permettre d' interagir avec l'utilisateur , et stockent des informations dans des fichiers . Vous devez donc ma\u00eetriser ces \u00e9l\u00e9ments avant de vous lancer dans votre projet.","title":"Projet : TP de pr\u00e9paration"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#a-interagir-avec-lutilisateur","text":"L'utilisateur peut envoyer des informations au programme avec la fonction input , comme dans l'exemple suivant : age = input ( \"Quel est votre \u00e2ge ? \" ) 1. Ex\u00e9cuter cette commande. Quel est le type de la variable age ? Par d\u00e9faut, les donn\u00e9es saisies par l'ordinateur sont repr\u00e9sent\u00e9es par le type cha\u00eene de caract\u00e8res. Il peut donc \u00eatre n\u00e9cessaire de les convertir, quand on veut manipuler des nombres, et faire des op\u00e9rations avec. Compl\u00e9ter le code suivant avec la fonction int pour ne pas avoir d'erreur : age = input ( \"Quel est votre \u00e2ge ? \" ) age = ... #\u00e0 compl\u00e9ter age = age + 1 Vous pouvez, \u00e0 partir d'ici, commenter cette partie du programme pour qu'elle ne s'ex\u00e9cute pas ensuite.","title":"A. Interagir avec l'utilisateur"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#b-utiliser-les-fichiers","text":"Pour \u00e9crire du texte dans un fichier, nous allons utiliser un programme comme celui ci-dessous : mot = input ( 'Entrez un mot' ) with open ( 'fichier.txt' , 'a' ) as f : f . write ( mot ) Ce programme cr\u00e9er un nouveau fichier fichier.txt s'il n'existe pas d\u00e9j\u00e0, gr\u00e2ce \u00e0 la fonction open . Celle-ci prend en param\u00e8tre le nom du fichier, et un mode d'acc\u00e8s : - 'r' : ouverture en lecture - 'w' : ouverture en \u00e9criture - 'a' : ouverture en \u00e9crire en mode \"ajout\", c'est-\u00e0-dire que l'on \u00e9crit \u00e0 la fin du fichier. Ex\u00e9cuter ce programme, et entrer un mot \u00e0 \u00e9crire. Le fichier fichier.txt aura \u00e9t\u00e9 cr\u00e9\u00e9 dans le m\u00eame dossier que celui qui contient votre fichier Python. Localiser le fichier, et l'ouvrir avec un \u00e9diteur de texte pour v\u00e9rifier qu'il contient bien ce mot. Ex\u00e9cuter ce programme une deuxi\u00e8me fois, et entrer un nouveau mot. V\u00e9rifier qu'il se trouve bien \u00e9crit dans le fichier, \u00e0 la suite du premier. Analyser le code suivant. Que doit contenir la variable ligne ? Le v\u00e9rifier en l'ex\u00e9cutant. with open ( 'fichier.txt' , 'r' ) as f : ligne = f . read () Entrer des mots les uns \u00e0 la suite des autres cr\u00e9e un fichier qui n'est pas tr\u00e8s lisible... Pour s\u00e9parer les informations, on peut forcer le retour \u00e0 la ligne avec le caract\u00e8re \\n . Ex\u00e9cuter l'instruction suivante pour v\u00e9rifier que l'on a bien un saut de ligne : print('num\u00e9rique et \\nsciences informatiques') Modifier votre programme d'\u00e9criture dans le fichier (question 1), pour que chaque nouveau mot entr\u00e9 s'\u00e9crive sur une nouvelle ligne. Le programme suivant permet de lire un fichier, et de stocker le texte \u00e9crit sur les diff\u00e9rentes lignes dans une liste Python. Tester ce programme. mots = [] with open ( 'fichier.txt' , 'r' ) as f : for ligne in f : ligne = ligne . replace ( \" \\n \" , \"\" ) mots . append ( ligne )","title":"B. Utiliser les fichiers"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#c-creer-un-menu","text":"Votre programme int\u00e9grera un menu, donnant le choix \u00e0 l'utilisateur sur l'action \u00e0 effectuer. Pour afficher un menu, on peut utiliser un programme comme celui-ci : print ( '1. Choix 1 \\n 2. Choix 2 \\n 3. Quitter) Afficher ce menu, et demander \u00e0 l'utilisateur d'entrer l'entier correspondant \u00e0 son choix. Compl\u00e9ter le programme en impl\u00e9mentant l'algorithme suivant : si le choix est 1 afficher \"choix 1\" sinon si le choix est 2 afficher \"choix 2\" Comment afficher le menu tant que l'utilisateur n'a pas choisi de quitter ? Impl\u00e9menter votre solution.","title":"C. Cr\u00e9er un menu"},{"location":"projets/1ere_cyber/presentation/","text":"body { text-align: justify} Projet Cybers\u00e9curit\u00e9 \u00b6","title":"Presentation"},{"location":"projets/1ere_cyber/presentation/#projet-cybersecurite","text":"","title":"Projet Cybers\u00e9curit\u00e9"},{"location":"projets/1ere_interdisciplines/rendus/","text":"body { text-align: justify} I. Pr\u00e9sentation du projet \u00b6 A. Organisation \u00b6 Vous allez d\u00e9velopper un projet par groupe de 2 \u00e0 4 \u00e9l\u00e8ves . Vous aurez 4-5 s\u00e9ances de TP de 2h pour le mener \u00e0 bien, et vous aurez besoin de travail personnel entre les s\u00e9ances pour avoir un projet abouti. Les exigences sont adapt\u00e9es au nombre d'\u00e9l\u00e8ves par groupe de projet (voir la description des sujets). Chaque groupe doit choisir un sujet parmi ceux pr\u00e9sent\u00e9s, ou bien proposer un sujet qui correspond au th\u00e8me donn\u00e9. B. Suivi du projet \u00b6 En d\u00e9but de projet, vous allez commencer par d\u00e9couper le projet en fonctionnalit\u00e9s , qui correspondent en programmation \u00e0 une fonction ou un ensemble de fonctions. Par exemple, pour dessiner un ensemble de maisons avec Turtle, il faut pouvoir : dessiner un mur , dessiner un toit , dessiner une porte , dessiner une fen\u00eatre , et enfin dessiner la maison avec tous ces \u00e9l\u00e9ments. Vous allez d\u00e9velopper chacune de ces fonctionnalit\u00e9s au fur et \u00e0 mesure, et noter \u00e0 chaque s\u00e9ance ce qui a \u00e9t\u00e9 fait en utilisant l'application Wekan de l'ENT. C. Rendus \u00b6 C. 1. Le programme \u00b6 Vous devez rendre un fichier py , ou bien plusieurs fichiers compress\u00e9s dans une archive . Ce programme impl\u00e9mente les bonnes pratiques de programmation vues en cours : l'ensemble est d\u00e9coup\u00e9 en fonctions , la structure globale du programme est respect\u00e9e, la signature de chaque fonction est indiqu\u00e9e et sa documentation fournie sous la forme de docstring, les noms de fonctions et variables sont bien choisis pour que l'on comprenne facilement le code, les instructions inutiles sont \u00e0 \u00e9viter, faites au plus court . Vous devez pouvoir expliquer chaque ligne de votre programme. Ceci sera v\u00e9rifi\u00e9 par un entretien avec chaque groupe. C. 2. Pr\u00e9sentation et documentation \u00b6 Vous devez rendre une pr\u00e9sentation de votre projet sous la forme de fichiers html et css compress\u00e9s dans une archive . Contenu du texte des pages web : (au minimum) une page pr\u00e9sentant le sujet de votre projet et les fonctionnalit\u00e9s que vous avez cod\u00e9es, ainsi que la r\u00e9partition des t\u00e2ches entre les membre du groupe pr\u00e9sent\u00e9e dans un tableau, (au minimum) une page de documentation du projet : c'est-\u00e0-dire indiquant comment utiliser votre programme pas \u00e0 pas. Contenu informatique des pages web : Ces pages sont reli\u00e9es entre elles avec des liens hypertextes . Elles sont structur\u00e9es par des titres et des paragraphes, Elles contiennent des images (au minimum des captures d'\u00e9cran de votre programme pour la partie documentation). Les liens vers les ressources (autres pages, images) doivent \u00eatre fonctionnels , peu importe la machine utilis\u00e9e (utiliser des chemins relatifs ). Chaque page html est associ\u00e9e \u00e0 une feuille de style au format css . L'ensemble est clair et lisible (possibles bonus pour le soin apport\u00e9 et/ou l'esth\u00e9tique) .","title":"I. Organisation et rendus"},{"location":"projets/1ere_interdisciplines/rendus/#i-presentation-du-projet","text":"","title":"I. Pr\u00e9sentation du projet"},{"location":"projets/1ere_interdisciplines/rendus/#a-organisation","text":"Vous allez d\u00e9velopper un projet par groupe de 2 \u00e0 4 \u00e9l\u00e8ves . Vous aurez 4-5 s\u00e9ances de TP de 2h pour le mener \u00e0 bien, et vous aurez besoin de travail personnel entre les s\u00e9ances pour avoir un projet abouti. Les exigences sont adapt\u00e9es au nombre d'\u00e9l\u00e8ves par groupe de projet (voir la description des sujets). Chaque groupe doit choisir un sujet parmi ceux pr\u00e9sent\u00e9s, ou bien proposer un sujet qui correspond au th\u00e8me donn\u00e9.","title":"A. Organisation"},{"location":"projets/1ere_interdisciplines/rendus/#b-suivi-du-projet","text":"En d\u00e9but de projet, vous allez commencer par d\u00e9couper le projet en fonctionnalit\u00e9s , qui correspondent en programmation \u00e0 une fonction ou un ensemble de fonctions. Par exemple, pour dessiner un ensemble de maisons avec Turtle, il faut pouvoir : dessiner un mur , dessiner un toit , dessiner une porte , dessiner une fen\u00eatre , et enfin dessiner la maison avec tous ces \u00e9l\u00e9ments. Vous allez d\u00e9velopper chacune de ces fonctionnalit\u00e9s au fur et \u00e0 mesure, et noter \u00e0 chaque s\u00e9ance ce qui a \u00e9t\u00e9 fait en utilisant l'application Wekan de l'ENT.","title":"B. Suivi du projet"},{"location":"projets/1ere_interdisciplines/rendus/#c-rendus","text":"","title":"C. Rendus"},{"location":"projets/1ere_interdisciplines/suivi/","text":"body { text-align: justify} II. Suivi de projet \u00b6 A. Cr\u00e9ation d'un tableau \u00b6 Sur l'ENT, se rendre sur l'application Wekan . Ajouter un tableau, et lui donner le nom de votre projet. Partager le tableau avec les autres membres de votre groupe, et avec votre enseignante en ajoutant des membres sur le panneau \u00e0 droite : Cr\u00e9er 3 listes : A faire , En cours et Termin\u00e9 . Chaque fonctionnalit\u00e9 de votre programme sera dans une de ces listes. Cela doit avoir la forme suivante : Remplir la liste A faire avec l'ensemble des fonctionnalit\u00e9s de votre programme, list\u00e9es comme des \"cartes\". Attribuer la r\u00e9alisation de chaque fonctionnalit\u00e9 \u00e0 1 ou plusieurs personnes de votre groupe et ajouter toutes les informations n\u00e9cessaires : B. Mise \u00e0 jour du tableau \u00b6 A chaque d\u00e9but de s\u00e9ance et \u00e0 chaque fin de s\u00e9ance , faites un point avec votre groupe sur l'avancement du projet : Changer de liste aux fonctionnalit\u00e9s s'il le faut (de \"A faire\" \u00e0 \"En cours\", ou bien de \"En cours\" \u00e0 \"Termin\u00e9\"), Ajouter d'autres fonctionnalit\u00e9s que vous avez identifi\u00e9es, Si besoin ajouter des documents qui peuvent vous aider \u00e0 r\u00e9aliser certaines t\u00e2ches, en pi\u00e8ce jointe des cartes.","title":"II. Suivi de projet"},{"location":"projets/1ere_interdisciplines/suivi/#ii-suivi-de-projet","text":"","title":"II. Suivi de projet"},{"location":"projets/1ere_interdisciplines/suivi/#a-creation-dun-tableau","text":"Sur l'ENT, se rendre sur l'application Wekan . Ajouter un tableau, et lui donner le nom de votre projet. Partager le tableau avec les autres membres de votre groupe, et avec votre enseignante en ajoutant des membres sur le panneau \u00e0 droite : Cr\u00e9er 3 listes : A faire , En cours et Termin\u00e9 . Chaque fonctionnalit\u00e9 de votre programme sera dans une de ces listes. Cela doit avoir la forme suivante : Remplir la liste A faire avec l'ensemble des fonctionnalit\u00e9s de votre programme, list\u00e9es comme des \"cartes\". Attribuer la r\u00e9alisation de chaque fonctionnalit\u00e9 \u00e0 1 ou plusieurs personnes de votre groupe et ajouter toutes les informations n\u00e9cessaires :","title":"A. Cr\u00e9ation d'un tableau"},{"location":"projets/1ere_interdisciplines/suivi/#b-mise-a-jour-du-tableau","text":"A chaque d\u00e9but de s\u00e9ance et \u00e0 chaque fin de s\u00e9ance , faites un point avec votre groupe sur l'avancement du projet : Changer de liste aux fonctionnalit\u00e9s s'il le faut (de \"A faire\" \u00e0 \"En cours\", ou bien de \"En cours\" \u00e0 \"Termin\u00e9\"), Ajouter d'autres fonctionnalit\u00e9s que vous avez identifi\u00e9es, Si besoin ajouter des documents qui peuvent vous aider \u00e0 r\u00e9aliser certaines t\u00e2ches, en pi\u00e8ce jointe des cartes.","title":"B. Mise \u00e0 jour du tableau"},{"location":"projets/1ere_interdisciplines/sujets/","text":"body { text-align: justify} Projet : L'informatique pour les autres disciplines \u00b6 L'informatique est aujourd'hui utilis\u00e9e dans presque tous les domaines : la finance, la m\u00e9decine, la politique, l'automobile, le design, le sport... C'est une science qui peut fournir des outils \u00e0 toutes les autres disciplines. C'est le th\u00e8me des projets qui vont \u00eatre r\u00e9alis\u00e9s : d\u00e9velopper un programme qui a un lien avec une autre mati\u00e8re que vous suivez. Diff\u00e9rents sujets sont propos\u00e9s, proposant des programmes pour diff\u00e9rentes mati\u00e8res . Pour chaque sujet, les fonctionnalit\u00e9s \u00e0 programmer sont d\u00e9crites et class\u00e9es en diff\u00e9rents niveaux. Pour tous les sujets, arriver au niveau 2 est imp\u00e9ratif pour avoir la moyenne. Les niveaux sup\u00e9rieurs reprennent les fonctionnalit\u00e9s des niveaux inf\u00e9rieurs, et en ajoutent. Pour tous les sujets, les niveaux 1 et 5 sont les m\u00eames : Niveau 1 (note inf\u00e9rieure \u00e0 la moyenne) Programme comportant des bugs Programme n'ayant pas les fonctionnalit\u00e9s du niveau 2 Niveau 5 Rajouter des fonctionnalit\u00e9s \u00e0 celles demand\u00e9s jusqu'au niveau 4 peut vous permettre de compenser des points perdus ailleurs. Ce sera de toute fa\u00e7on valoris\u00e9. Vous devez choisir un des sujets propos\u00e9s, ou bien proposer un sujet de votre choix rentrant dans le th\u00e8me : un programme informatique utile pour une autre discipline que l'informatique. Dans ce cas, soumettez-moi votre id\u00e9e pour validation avant de commencer . Sujet 1 : Probabilit\u00e9s et statistiques avec le jeu de la roulette (Maths) \u00b6 Simulation du jeu de la roulette et visualisation des statistiques des lancers de la bille. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) Programme interactif demandant au joueur son type de mise parmi celles \u00e0 chances simples (Noir/Rouge, Pair/Impair, Manque/Passe - voir les r\u00e8gles ci-dessous ), Lancer al\u00e9atoire de la bille avec une fonction de la biblioth\u00e8que random , Affichage dans la console des statistiques des num\u00e9ros et des couleurs d\u00e9j\u00e0 sorties au cours de la partie, Actualisation de la mise du joueur apr\u00e8s chaque lancer de la bille, Le jeu s'arr\u00eate lorsque la mise est \u00e0 0, ou que le joueur veut quitter. Indications On se base sur la roulette fran\u00e7aise dont les r\u00e8gles et types de mises possibles sont indiqu\u00e9es sur la page Wikip\u00e9dia correspondante. Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Affichage des statistiques des lancers pr\u00e9c\u00e9dents (couleurs et num\u00e9ros tir\u00e9s au sort) avec des graphes de la biblioth\u00e8que matplotlib , actualis\u00e9 \u00e0 chaque coup. Indications Utiliser la fonction subplot pour afficher plusieurs graphes en m\u00eame temps. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) Ajout d'au moins 4 types de mise \u00e0 chances multiples , avec le calcul automatique de leur esp\u00e9rance math\u00e9matique . Indications L'esp\u00e9rance \\(E\\) est donn\u00e9e par la formule \\(E = \\dfrac{N}{M}*100\\) , \\(N\\) \u00e9tant le nombre de num\u00e9ros sur lesquels se fait le pari, et \\(M\\) le nombre de num\u00e9ros total. Sujet 2 : Visualisation des images en optique (Physique) \u00b6 Visualisation de l' image d'un objet \u00e0 travers une lentille . L'objet est repr\u00e9sent\u00e9 par une matrice. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur donne la distance de l'objet \u00e0 la lentille \\(OA\\) et la distance focale \\(f'\\) de la lentille. L'ordinateur calcule la position \\(OA'\\) de l'image par rapport \u00e0 la lentille. L'ordinateur calcule l' image \u00e0 travers la lentille en fonction de la valeur du grandissement : il l'agrandit si le grandissement est sup\u00e9rieur \u00e0 1 en valeur absolue, et la retourne s'il est n\u00e9gatif. L' objet est une matrice repr\u00e9sentant une image en couleurs, qui doit \u00eatre asym\u00e9trique - pas un carr\u00e9 simple - (voir le TP Dessin automatique d'image ). Objet et image sont repr\u00e9sent\u00e9s sur un m\u00eame graphe avec avec matplotlib . Indications - On obtient la distance de l'image \u00e0 la lentille \\(OA'\\) avec la formule \\(OA'= \\dfrac{OA*f'}{OA+f'}\\) - Le grandissement vaut \\(\\dfrac{OA'}{OA}\\) . - S'il est plus grand que 1, il est arrondi \u00e0 l'entier le plus proche et l'image est agrandie. Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) L'image est r\u00e9tr\u00e9cie si le grandissement en valeur absolue vaut moins que 1. De la m\u00eame fa\u00e7on que pour le grandissement, on divise la taille de l'image par un nombre entier. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) La matrice repr\u00e9sentant l'objet peut \u00eatre donn\u00e9e par l'utilisateur. Sujet 3 : Repr\u00e9sentation de donn\u00e9es socio-\u00e9conomiques (SES) \u00b6 Repr\u00e9sentation graphique de donn\u00e9es avec la biblioth\u00e8que matplotlib . Par exemple, visualisation des performances d'une entreprise, comme ici : > Performances de Google < Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur peut visualiser un jeu de donn\u00e9es avec diff\u00e9rents types de graphiques (histogramme, diagramme en barres,...). L'utilisateur peut choisir de visualiser un type de graphique, ou plusieurs en m\u00eame temps. Les donn\u00e9es sont coh\u00e9rentes entre elles et les types de graphes choisis sont pertinents pour les interpr\u00e9ter. Les donn\u00e9es sont entr\u00e9es manuellement dans le code. Indications Des aides pour la biblioth\u00e8ques matplotlib sur le site officiel https://matplotlib.org/ Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Les donn\u00e9es sont stock\u00e9es dans des fichiers et lues par le programme. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) L'utilisateur peut visualiser plusieurs jeux de donn\u00e9es stock\u00e9s dans des fichiers. Sujet 4 : Dictionnaire bilingue (Langue vivante - Anglais) \u00b6 Traduction automatique entre le fran\u00e7ais et l' anglais \u00e0 partir des donn\u00e9es d'un dictionnaire bilingue sauvegard\u00e9es dans des fichiers txt . Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur entre un mot en fran\u00e7ais \u00e0 traduire en anglais , l'ordinateur propose une traduction On utilise 2 fichiers .txt , un avec les mots en fran\u00e7ais, un avec les mots en anglais Les mots sont charg\u00e9s depuis ces fichiers, et stock\u00e9s dans des tableaux Indications Utiliser les fichiers suivant : fran\u00e7ais.txt et anglais.txt . Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Si le mot n'est pas pr\u00e9sent dans le dictionnaire, l'ordinateur le pr\u00e9cise \u00e0 l'utilisateur, et lui propose la traduction du mot le plus proche. Indications Utiliser la distance de Hamming pour trouver les mots les plus proches. Si les mots ne sont pas de la m\u00eame taille, rajouter des espaces ' ' au mot le plus court. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) L'utilisateur peut entrer un mot en anglais , traduit par l'ordinateur en fran\u00e7ais Indications Il faut modifier le fichier anglais.txt pour ne pas avoir plusieurs propositions pour 1 mot en fran\u00e7ais. Sujet 5 : Correcteur orthographique (Fran\u00e7ais) \u00b6 D\u00e9tection des mot mal orthographi\u00e9s (ne figurant pas dans le dictionnaire) et proposition de correction \u00e0 partir d'un fichier comportant les mots d'un dictionnaire fran\u00e7ais. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur entre un nom de fichier qui stocke un texte (le fichier doit \u00eatre accessible \u00e0 l'ordinateur) L'ordinateur d\u00e9tecte les mots ne figurant pas dans le dictionnaire L'ordinateur indique le nombre d'erreurs dans ce texte et les mots mal orthographi\u00e9s Indications Il faut trouver un fichier .txt ayant l'ensemble des mots du dictionnaire en fran\u00e7ais. Il faut stocker ces donn\u00e9es dans une structure de tableau. Il faut faire de la lecture de fichier, voir pour le \"TP Biblioth\u00e8que random et stockage dans des fichiers\". Les algorithmes vus en cours sur les tableaux doivent \u00eatre cod\u00e9s (pas d'utilisation de fonctions d\u00e9j\u00e0 \u00e9crites ou raccourcis Python) . Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Proposer une correction pour chacun des mots mal orthographi\u00e9s : ce sera le mot du dictionnaire qui lui est le plus proche. Indications Utiliser la distance de Hamming pour trouver les mots les plus proches. Si les mots ne sont pas de la m\u00eame taille, rajouter des espaces ' ' au mot le plus court. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) Stockage des corrections effectu\u00e9es dans un fichier dont on demande le nom \u00e0 l'utilisateur.","title":"III. Les sujets"},{"location":"projets/1ere_interdisciplines/sujets/#projet-linformatique-pour-les-autres-disciplines","text":"L'informatique est aujourd'hui utilis\u00e9e dans presque tous les domaines : la finance, la m\u00e9decine, la politique, l'automobile, le design, le sport... C'est une science qui peut fournir des outils \u00e0 toutes les autres disciplines. C'est le th\u00e8me des projets qui vont \u00eatre r\u00e9alis\u00e9s : d\u00e9velopper un programme qui a un lien avec une autre mati\u00e8re que vous suivez. Diff\u00e9rents sujets sont propos\u00e9s, proposant des programmes pour diff\u00e9rentes mati\u00e8res . Pour chaque sujet, les fonctionnalit\u00e9s \u00e0 programmer sont d\u00e9crites et class\u00e9es en diff\u00e9rents niveaux. Pour tous les sujets, arriver au niveau 2 est imp\u00e9ratif pour avoir la moyenne. Les niveaux sup\u00e9rieurs reprennent les fonctionnalit\u00e9s des niveaux inf\u00e9rieurs, et en ajoutent. Pour tous les sujets, les niveaux 1 et 5 sont les m\u00eames : Niveau 1 (note inf\u00e9rieure \u00e0 la moyenne) Programme comportant des bugs Programme n'ayant pas les fonctionnalit\u00e9s du niveau 2 Niveau 5 Rajouter des fonctionnalit\u00e9s \u00e0 celles demand\u00e9s jusqu'au niveau 4 peut vous permettre de compenser des points perdus ailleurs. Ce sera de toute fa\u00e7on valoris\u00e9. Vous devez choisir un des sujets propos\u00e9s, ou bien proposer un sujet de votre choix rentrant dans le th\u00e8me : un programme informatique utile pour une autre discipline que l'informatique. Dans ce cas, soumettez-moi votre id\u00e9e pour validation avant de commencer .","title":"Projet : L'informatique pour les autres disciplines"},{"location":"projets/1ere_interdisciplines/sujets/#sujet-1-probabilites-et-statistiques-avec-le-jeu-de-la-roulette-maths","text":"Simulation du jeu de la roulette et visualisation des statistiques des lancers de la bille. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) Programme interactif demandant au joueur son type de mise parmi celles \u00e0 chances simples (Noir/Rouge, Pair/Impair, Manque/Passe - voir les r\u00e8gles ci-dessous ), Lancer al\u00e9atoire de la bille avec une fonction de la biblioth\u00e8que random , Affichage dans la console des statistiques des num\u00e9ros et des couleurs d\u00e9j\u00e0 sorties au cours de la partie, Actualisation de la mise du joueur apr\u00e8s chaque lancer de la bille, Le jeu s'arr\u00eate lorsque la mise est \u00e0 0, ou que le joueur veut quitter. Indications On se base sur la roulette fran\u00e7aise dont les r\u00e8gles et types de mises possibles sont indiqu\u00e9es sur la page Wikip\u00e9dia correspondante. Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Affichage des statistiques des lancers pr\u00e9c\u00e9dents (couleurs et num\u00e9ros tir\u00e9s au sort) avec des graphes de la biblioth\u00e8que matplotlib , actualis\u00e9 \u00e0 chaque coup. Indications Utiliser la fonction subplot pour afficher plusieurs graphes en m\u00eame temps. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) Ajout d'au moins 4 types de mise \u00e0 chances multiples , avec le calcul automatique de leur esp\u00e9rance math\u00e9matique . Indications L'esp\u00e9rance \\(E\\) est donn\u00e9e par la formule \\(E = \\dfrac{N}{M}*100\\) , \\(N\\) \u00e9tant le nombre de num\u00e9ros sur lesquels se fait le pari, et \\(M\\) le nombre de num\u00e9ros total.","title":"Sujet 1 : Probabilit\u00e9s et statistiques avec le jeu de la roulette (Maths)"},{"location":"projets/1ere_interdisciplines/sujets/#sujet-2-visualisation-des-images-en-optique-physique","text":"Visualisation de l' image d'un objet \u00e0 travers une lentille . L'objet est repr\u00e9sent\u00e9 par une matrice. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur donne la distance de l'objet \u00e0 la lentille \\(OA\\) et la distance focale \\(f'\\) de la lentille. L'ordinateur calcule la position \\(OA'\\) de l'image par rapport \u00e0 la lentille. L'ordinateur calcule l' image \u00e0 travers la lentille en fonction de la valeur du grandissement : il l'agrandit si le grandissement est sup\u00e9rieur \u00e0 1 en valeur absolue, et la retourne s'il est n\u00e9gatif. L' objet est une matrice repr\u00e9sentant une image en couleurs, qui doit \u00eatre asym\u00e9trique - pas un carr\u00e9 simple - (voir le TP Dessin automatique d'image ). Objet et image sont repr\u00e9sent\u00e9s sur un m\u00eame graphe avec avec matplotlib . Indications - On obtient la distance de l'image \u00e0 la lentille \\(OA'\\) avec la formule \\(OA'= \\dfrac{OA*f'}{OA+f'}\\) - Le grandissement vaut \\(\\dfrac{OA'}{OA}\\) . - S'il est plus grand que 1, il est arrondi \u00e0 l'entier le plus proche et l'image est agrandie. Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) L'image est r\u00e9tr\u00e9cie si le grandissement en valeur absolue vaut moins que 1. De la m\u00eame fa\u00e7on que pour le grandissement, on divise la taille de l'image par un nombre entier. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) La matrice repr\u00e9sentant l'objet peut \u00eatre donn\u00e9e par l'utilisateur.","title":"Sujet 2 : Visualisation des images en optique (Physique)"},{"location":"projets/1ere_interdisciplines/sujets/#sujet-3-representation-de-donnees-socio-economiques-ses","text":"Repr\u00e9sentation graphique de donn\u00e9es avec la biblioth\u00e8que matplotlib . Par exemple, visualisation des performances d'une entreprise, comme ici : > Performances de Google < Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur peut visualiser un jeu de donn\u00e9es avec diff\u00e9rents types de graphiques (histogramme, diagramme en barres,...). L'utilisateur peut choisir de visualiser un type de graphique, ou plusieurs en m\u00eame temps. Les donn\u00e9es sont coh\u00e9rentes entre elles et les types de graphes choisis sont pertinents pour les interpr\u00e9ter. Les donn\u00e9es sont entr\u00e9es manuellement dans le code. Indications Des aides pour la biblioth\u00e8ques matplotlib sur le site officiel https://matplotlib.org/ Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Les donn\u00e9es sont stock\u00e9es dans des fichiers et lues par le programme. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) L'utilisateur peut visualiser plusieurs jeux de donn\u00e9es stock\u00e9s dans des fichiers.","title":"Sujet 3 : Repr\u00e9sentation de donn\u00e9es socio-\u00e9conomiques (SES)"},{"location":"projets/1ere_interdisciplines/sujets/#sujet-4-dictionnaire-bilingue-langue-vivante-anglais","text":"Traduction automatique entre le fran\u00e7ais et l' anglais \u00e0 partir des donn\u00e9es d'un dictionnaire bilingue sauvegard\u00e9es dans des fichiers txt . Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur entre un mot en fran\u00e7ais \u00e0 traduire en anglais , l'ordinateur propose une traduction On utilise 2 fichiers .txt , un avec les mots en fran\u00e7ais, un avec les mots en anglais Les mots sont charg\u00e9s depuis ces fichiers, et stock\u00e9s dans des tableaux Indications Utiliser les fichiers suivant : fran\u00e7ais.txt et anglais.txt . Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Si le mot n'est pas pr\u00e9sent dans le dictionnaire, l'ordinateur le pr\u00e9cise \u00e0 l'utilisateur, et lui propose la traduction du mot le plus proche. Indications Utiliser la distance de Hamming pour trouver les mots les plus proches. Si les mots ne sont pas de la m\u00eame taille, rajouter des espaces ' ' au mot le plus court. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) L'utilisateur peut entrer un mot en anglais , traduit par l'ordinateur en fran\u00e7ais Indications Il faut modifier le fichier anglais.txt pour ne pas avoir plusieurs propositions pour 1 mot en fran\u00e7ais.","title":"Sujet 4 : Dictionnaire bilingue (Langue vivante - Anglais)"},{"location":"projets/1ere_interdisciplines/sujets/#sujet-5-correcteur-orthographique-francais","text":"D\u00e9tection des mot mal orthographi\u00e9s (ne figurant pas dans le dictionnaire) et proposition de correction \u00e0 partir d'un fichier comportant les mots d'un dictionnaire fran\u00e7ais. Niveau 2 (note maximale : 10/20 pour groupe de 3 ou 4, 15/20 pour groupe de 2) L'utilisateur entre un nom de fichier qui stocke un texte (le fichier doit \u00eatre accessible \u00e0 l'ordinateur) L'ordinateur d\u00e9tecte les mots ne figurant pas dans le dictionnaire L'ordinateur indique le nombre d'erreurs dans ce texte et les mots mal orthographi\u00e9s Indications Il faut trouver un fichier .txt ayant l'ensemble des mots du dictionnaire en fran\u00e7ais. Il faut stocker ces donn\u00e9es dans une structure de tableau. Il faut faire de la lecture de fichier, voir pour le \"TP Biblioth\u00e8que random et stockage dans des fichiers\". Les algorithmes vus en cours sur les tableaux doivent \u00eatre cod\u00e9s (pas d'utilisation de fonctions d\u00e9j\u00e0 \u00e9crites ou raccourcis Python) . Niveau 3 (note maximale : 15/20 pour groupe de 3 ou 4, 20/20 pour groupe de 2) (en plus du niveau 2) Proposer une correction pour chacun des mots mal orthographi\u00e9s : ce sera le mot du dictionnaire qui lui est le plus proche. Indications Utiliser la distance de Hamming pour trouver les mots les plus proches. Si les mots ne sont pas de la m\u00eame taille, rajouter des espaces ' ' au mot le plus court. Niveau 4 (note maximale : 20/20 pour tout groupe) (en plus du niveau 3) Stockage des corrections effectu\u00e9es dans un fichier dont on demande le nom \u00e0 l'utilisateur.","title":"Sujet 5 : Correcteur orthographique (Fran\u00e7ais)"},{"location":"projets/general/recherche/","text":"body { text-align: justify} Recherche de sujet \u00b6 A. Brainstorming autour du th\u00e8me \u00b6 Un th\u00e8me vous a \u00e9t\u00e9 donn\u00e9. Qu'est-ce qu'il vous \u00e9voque ? Listez sur papier toutes les id\u00e9es qui vous viennent en t\u00eate, et n'h\u00e9sitez pas \u00e0 le faire avec votre groupe pour g\u00e9n\u00e9rer des discussions. Faites ensuite des recherches web sur les sujets qui vous int\u00e9ressent. Utilisez par exemple Wikip\u00e9dia, ou encore des sites de d\u00e9veloppement. B. Sujets d'autres \u00e9l\u00e8ves \u00b6 Pour les terminales : le m\u00eame th\u00e8me est donn\u00e9 aux premi\u00e8res, avec des propositions de sujets dont vous pouvez vous inspirer. Attention , le niveau attendu est bien s\u00fbr diff\u00e9rent ! Des annales des sujets donn\u00e9s les ann\u00e9es pr\u00e9c\u00e9dentes sont disponibles sur le site, et peuvent aussi vous inspirer. C. Ressources externes \u00b6 S'inspirer de projets qui ont d\u00e9j\u00e0 \u00e9t\u00e9 faits en cours de NSI. Plusieurs sites les r\u00e9pertorient (v\u00e9rifier qu'ils correspondent au niveau attendu) : https://nsi.xyz/Projets https://www.nsi-lpb.com/projets.php https://trophees-nsi.fr/ : les projets prim\u00e9s au concours des Troph\u00e9es NSI sont g\u00e9n\u00e9ralement d'un bon niveau. Consulter les r\u00e9sultats 2023, et r\u00e9sultats 2022. Compl\u00e9tez votre recherche avec par exemple les mots-cl\u00e9s \"nsi projets terminale\".","title":"I. Recherche de sujet"},{"location":"projets/general/recherche/#recherche-de-sujet","text":"","title":"Recherche de sujet"},{"location":"projets/general/recherche/#a-brainstorming-autour-du-theme","text":"Un th\u00e8me vous a \u00e9t\u00e9 donn\u00e9. Qu'est-ce qu'il vous \u00e9voque ? Listez sur papier toutes les id\u00e9es qui vous viennent en t\u00eate, et n'h\u00e9sitez pas \u00e0 le faire avec votre groupe pour g\u00e9n\u00e9rer des discussions. Faites ensuite des recherches web sur les sujets qui vous int\u00e9ressent. Utilisez par exemple Wikip\u00e9dia, ou encore des sites de d\u00e9veloppement.","title":"A. Brainstorming autour du th\u00e8me"},{"location":"projets/general/recherche/#b-sujets-dautres-eleves","text":"Pour les terminales : le m\u00eame th\u00e8me est donn\u00e9 aux premi\u00e8res, avec des propositions de sujets dont vous pouvez vous inspirer. Attention , le niveau attendu est bien s\u00fbr diff\u00e9rent ! Des annales des sujets donn\u00e9s les ann\u00e9es pr\u00e9c\u00e9dentes sont disponibles sur le site, et peuvent aussi vous inspirer.","title":"B. Sujets d'autres \u00e9l\u00e8ves"},{"location":"projets/general/recherche/#c-ressources-externes","text":"S'inspirer de projets qui ont d\u00e9j\u00e0 \u00e9t\u00e9 faits en cours de NSI. Plusieurs sites les r\u00e9pertorient (v\u00e9rifier qu'ils correspondent au niveau attendu) : https://nsi.xyz/Projets https://www.nsi-lpb.com/projets.php https://trophees-nsi.fr/ : les projets prim\u00e9s au concours des Troph\u00e9es NSI sont g\u00e9n\u00e9ralement d'un bon niveau. Consulter les r\u00e9sultats 2023, et r\u00e9sultats 2022. Compl\u00e9tez votre recherche avec par exemple les mots-cl\u00e9s \"nsi projets terminale\".","title":"C. Ressources externes"},{"location":"projets/tle_poo_rec/Gestion_Projet/","text":"body { text-align: justify} SUivi de projet \u00b6 A. L'outil \u00b6 Pour garder une trace de ce que vous allez faire, s\u00e9ance apr\u00e8s s\u00e9ance, vous allez utiliser un tableau Trello : https://trello.com Aller sur le site et se cr\u00e9er un compte. Dans Cr\u00e9er , cliquer sur le mod\u00e8le Conduite de projet . Analyser les \u00e9tiquettes qui sont dans les diff\u00e9rentes cat\u00e9gories. Elle doivent servir de base \u00e0 votre tableau. Cliquer sur Cr\u00e9er un tableau \u00e0 partir d'un mod\u00e8le , et lui donner le nom de votre projet. Une seule cr\u00e9ation par groupe de projet ! Partager le tableau avec les autres membres de votre groupe, et avec trebaul.nsi@gmail.com Cr\u00e9er une \u00e9tiquette : regarder comment, pour une t\u00e2che \u00e0 faire, on peut associer un membre, et une date limite (entre autres). B. Cr\u00e9er un planning \u00b6 Lister des diff\u00e9rentes t\u00e2ches qu'il faudra faire pour mener \u00e0 bien votre projet du d\u00e9but jusqu'\u00e0 la fin . D'autres t\u00e2ches appara\u00eetront au fur et \u00e0 mesure, mais vous devez pr\u00e9voir le plus possible \u00e0 l'avance. Essayer d'estimer le temps de r\u00e9alisation de chaque t\u00e2che. Attribuer les t\u00e2ches aux diff\u00e9rents membres du groupe. C. Utiliser l'outil \u00b6 Le planning que vous venez de cr\u00e9er doit \u00eatre rentr\u00e9 sur votre tableau Trello. Modifier la liste \"Sujet de la prochaine r\u00e9union\" par \"Questions pour la prochaine s\u00e9ance\" . Vous y entrerez ce dont vous devrez discuter avec les autres membres de votre groupe lors de la prochaine s\u00e9ance de projet. Ajouter toutes les t\u00e2ches identifi\u00e9es dans la partie B dans la partie \"A faire\" . Au fur et \u00e0 mesure qu'elles seront r\u00e9alis\u00e9es, faire passer les t\u00e2ches dans \"En cours\" , \"Bloqu\u00e9\" , ou bien \"Termin\u00e9\" .","title":"II. Suivi de projet"},{"location":"projets/tle_poo_rec/Gestion_Projet/#suivi-de-projet","text":"","title":"SUivi de projet"},{"location":"projets/tle_poo_rec/Gestion_Projet/#a-loutil","text":"Pour garder une trace de ce que vous allez faire, s\u00e9ance apr\u00e8s s\u00e9ance, vous allez utiliser un tableau Trello : https://trello.com Aller sur le site et se cr\u00e9er un compte. Dans Cr\u00e9er , cliquer sur le mod\u00e8le Conduite de projet . Analyser les \u00e9tiquettes qui sont dans les diff\u00e9rentes cat\u00e9gories. Elle doivent servir de base \u00e0 votre tableau. Cliquer sur Cr\u00e9er un tableau \u00e0 partir d'un mod\u00e8le , et lui donner le nom de votre projet. Une seule cr\u00e9ation par groupe de projet ! Partager le tableau avec les autres membres de votre groupe, et avec trebaul.nsi@gmail.com Cr\u00e9er une \u00e9tiquette : regarder comment, pour une t\u00e2che \u00e0 faire, on peut associer un membre, et une date limite (entre autres).","title":"A. L'outil"},{"location":"projets/tle_poo_rec/Gestion_Projet/#b-creer-un-planning","text":"Lister des diff\u00e9rentes t\u00e2ches qu'il faudra faire pour mener \u00e0 bien votre projet du d\u00e9but jusqu'\u00e0 la fin . D'autres t\u00e2ches appara\u00eetront au fur et \u00e0 mesure, mais vous devez pr\u00e9voir le plus possible \u00e0 l'avance. Essayer d'estimer le temps de r\u00e9alisation de chaque t\u00e2che. Attribuer les t\u00e2ches aux diff\u00e9rents membres du groupe.","title":"B. Cr\u00e9er un planning"},{"location":"projets/tle_poo_rec/Gestion_Projet/#c-utiliser-loutil","text":"Le planning que vous venez de cr\u00e9er doit \u00eatre rentr\u00e9 sur votre tableau Trello. Modifier la liste \"Sujet de la prochaine r\u00e9union\" par \"Questions pour la prochaine s\u00e9ance\" . Vous y entrerez ce dont vous devrez discuter avec les autres membres de votre groupe lors de la prochaine s\u00e9ance de projet. Ajouter toutes les t\u00e2ches identifi\u00e9es dans la partie B dans la partie \"A faire\" . Au fur et \u00e0 mesure qu'elles seront r\u00e9alis\u00e9es, faire passer les t\u00e2ches dans \"En cours\" , \"Bloqu\u00e9\" , ou bien \"Termin\u00e9\" .","title":"C. Utiliser l'outil"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/","text":"body { text-align: justify} Pr\u00e9sentation \u00b6 1. Sujet \u00b6 L'objectif de ce premier projet est d'utiliser les deux grandes notions vues ce d\u00e9but d'ann\u00e9e en terminale : la programmation objet et la r\u00e9cursivit\u00e9 . Le sujet du projet est libre, \u00e0 condition d'utiliser ces notions. La r\u00e9cursivit\u00e9 peut s'utiliser dans n'importe quel programme, \u00e9tant \u00e9quivalente \u00e0 un programme it\u00e9ratif. La POO est particuli\u00e8rement adapt\u00e9e au d\u00e9veloppement de jeux, mais pas uniquement : simulateurs, mod\u00e8le pour stocker des donn\u00e9es, modules,... peuvent \u00eatre d\u00e9velopp\u00e9s en POO. Des ressources pour trouver des id\u00e9es : - https://nsi.xyz/Projets - https://www.nsi-lpb.com/projets.php - https://isn-icn-ljm.pagesperso-orange.fr/PROJETS/ - toute autre recherche 2. D\u00e9roulement \u00b6 choix du sujet et constitution des groupes (2 ou 3 personnes) : avant le d\u00e9but des vacances de Toussaint, r\u00e9alisation du cahier des charges : pour la semaine de la rentr\u00e9e, d\u00e9veloppement : 2h par semaine en cours + en dehors des cours, rendu du programme, de sa documentation et du rapport vers le 9 d\u00e9cembre, soutenance la semaine du 12 d\u00e9cembre. 3. Rendus \u00b6 3.A. Le cahier des charges \u00b6 Il d\u00e9crit le sujet du projet, et ses fonctionnalit\u00e9s . Il doit r\u00e9pondre aux questions : - Que va faire le programme ? - Comment va-t-il le faire ? C'est-\u00e0-dire comment est-il d\u00e9coup\u00e9, en sous-programmes, en fonctions (certaines viennent-elles d'une biblioth\u00e8que ?). 3.B. Le code et sa documentation \u00b6 Le code devra respecter les bonnes pratiques de programmation vues en NSI : - nommer les fonctions, les variables de mani\u00e8re explicite, - d\u00e9couper l'ensemble en fonctions, - documenter les parties difficiles. Il sera rendu avec sa documentation , indiquant comment utiliser le programme. Elle est con\u00e7ue pour un utilisateur, pas pour un programmeur, et explique comment lancer le programme, et l'utiliser correctement. 3.C. Le rapport \u00b6 Il reprend le cahier des charges, et indique ce qui a \u00e9t\u00e9 fait par rapport \u00e0 ce qui \u00e9tait pr\u00e9vu, et ce qui ne l'a pas \u00e9t\u00e9. Il fait un bilan critique du rendu et du d\u00e9roulement du projet (qu'est-ce qui a fonctionn\u00e9 ? qu'est-ce qui a moins bien fonctionn\u00e9 ?).","title":"2022 - Terminale - POO&R\u00e9cursivit\u00e9"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#presentation","text":"","title":"Pr\u00e9sentation"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#1-sujet","text":"L'objectif de ce premier projet est d'utiliser les deux grandes notions vues ce d\u00e9but d'ann\u00e9e en terminale : la programmation objet et la r\u00e9cursivit\u00e9 . Le sujet du projet est libre, \u00e0 condition d'utiliser ces notions. La r\u00e9cursivit\u00e9 peut s'utiliser dans n'importe quel programme, \u00e9tant \u00e9quivalente \u00e0 un programme it\u00e9ratif. La POO est particuli\u00e8rement adapt\u00e9e au d\u00e9veloppement de jeux, mais pas uniquement : simulateurs, mod\u00e8le pour stocker des donn\u00e9es, modules,... peuvent \u00eatre d\u00e9velopp\u00e9s en POO. Des ressources pour trouver des id\u00e9es : - https://nsi.xyz/Projets - https://www.nsi-lpb.com/projets.php - https://isn-icn-ljm.pagesperso-orange.fr/PROJETS/ - toute autre recherche","title":"1. Sujet"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#2-deroulement","text":"choix du sujet et constitution des groupes (2 ou 3 personnes) : avant le d\u00e9but des vacances de Toussaint, r\u00e9alisation du cahier des charges : pour la semaine de la rentr\u00e9e, d\u00e9veloppement : 2h par semaine en cours + en dehors des cours, rendu du programme, de sa documentation et du rapport vers le 9 d\u00e9cembre, soutenance la semaine du 12 d\u00e9cembre.","title":"2. D\u00e9roulement"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#3-rendus","text":"","title":"3. Rendus"},{"location":"projets/tle_poo_rec/Rendus/","text":"body { text-align: justify} Les rendus \u00b6 A. Le cahier des charges \u00b6 1. Pr\u00e9sente le contexte du projet \u00b6 Il est compos\u00e9 d'une premi\u00e8re partie qui d\u00e9crit le projet et le place dans son contexte. Elle est r\u00e9dig\u00e9e et correspond \u00e0 comment est-ce que vous pr\u00e9senteriez le projet \u00e0 l\u2019oral \u00e0 quelqu\u2019un qui ne le conna\u00eet pas du tout. Le but est qu\u2019on arrive \u00e0 en comprendre l\u2019objectif global. 2. D\u00e9crit les diff\u00e9rentes fonctionnalit\u00e9s du programme \u00b6 La deuxi\u00e8me partie d\u00e9crit les fonctionnalit\u00e9s principales que le programme devra r\u00e9aliser. Elle est plus pr\u00e9cise que la premi\u00e8re, et distingue ce qui est r\u00e9alis\u00e9 par l\u2019ordinateur de ce qui est fait par l'utilisateur. B. Le programme \u00b6 1. Impl\u00e9mente les bonnes pratiques \u00b6 Votre programme doit \u00eatre lisible par un autre programmeur : si celui-ci voulait effectuer des modifications, il devrait \u00eatre en mesure de le faire. Cela implique d\u2019impl\u00e9menter les bonnes pratiques de programmation courantes : noms des variables et des fonctions explicites, r\u00f4le des fonctions comment\u00e9, parties difficiles du code \u00e9galement comment\u00e9es, d\u00e9coupage en fonctions. La coh\u00e9rence aide aussi \u00e0 la lisibilit\u00e9 : \u00e9crire tous les noms avec la m\u00eame convention (soit des _, soit des majuscules pour s\u00e9parer les mots), dans la m\u00eame langue, etc. 2. Est facile \u00e0 utiliser \u00b6 L\u2019 utilisation de votre programme ne doit pas demander \u00e0 l\u2019utilisateur de se demander comment faire pour le lancer et utiliser ses diff\u00e9rentes fonctionnalit\u00e9s : ceci doit \u00eatre explicit\u00e9, soit dans un fichier readme, soit dans les commentaires. Il ne doit pas \u00eatre difficile de trouver l\u2019information, elle doit appara\u00eetre clairement. C. Le rapport \u00b6 Le rapport contient 2 parties. La 1\u00e8re peut \u00eatre collective, la 2\u00e8me doit \u00eatre individuelle. 1. Contient une description fonctionnelle du projet \u00b6 La description fonctionnelle reprend les fonctionnalit\u00e9s d\u00e9crites dans le cahier des charge , et les pr\u00e9cise : elle indique le nom de la ou des fonctions qui r\u00e9alise chaque fonctionnalit\u00e9, le fichier dans lequel elle(s) se trouvent, et si cette fonction provient d\u2019une biblioth\u00e8que. Si d\u2019autres fonctionnalit\u00e9s ont \u00e9t\u00e9 ajout\u00e9es, il faut \u00e9galement l\u2019indiquer. Elle d\u00e9crit comment les diff\u00e9rentes fonctionnalit\u00e9s interagissent entre elles : quelle fonction/programme est appel\u00e9(e) par quel(le) autre ? L\u2019objectif est d\u2019indiquer comment les objectifs du cahier des charges ont \u00e9t\u00e9 remplis. 2. Fait un bilan critique de ce qui a \u00e9t\u00e9 fait \u00b6 Une deuxi\u00e8me partie indique ce qui a pu \u00eatre r\u00e9alis\u00e9 et, par rapport au cahier des charges, ce qui a \u00e9t\u00e9 abandonn\u00e9 et pourquoi. Il d\u00e9crit les difficult\u00e9s rencontr\u00e9es et les solutions choisies, et conclut sur ce qui pourrait \u00eatre am\u00e9lior\u00e9. Cette partie fait entre 5 et 10 lignes. D. La soutenance \u00b6 La soutenance est une pr\u00e9sentation de 7-8 min pour un projet fait \u00e0 2, de 10-12min pour un projet fait \u00e0 3. 1. Pr\u00e9sente le projet \u00b6 Votre soutenance doit permettre \u00e0 un auditoire qui ne conna\u00eet pas votre projet de le comprendre : le contexte doit \u00eatre bien amen\u00e9 (pr\u00e9sentation g\u00e9n\u00e9rale, s\u2019appuyant sur le cahier des charges), les fonctionnalit\u00e9s de votre programme doivent \u00eatre d\u00e9crites sans entrer trop dans le d\u00e9tail du code (difficile \u00e0 expliquer \u00e0 l\u2019oral). Il vous est n\u00e9anmoins possible d\u2019en pr\u00e9senter des parties importantes, en pr\u00e9cisant comment cette(ces) partie(s) s\u2019int\u00e8gre(nt) \u00e0 l\u2019ensemble. 2. Soutient les choix effectu\u00e9s \u00b6 Vous devez aussi revenir sur le d\u00e9roulement du projet et argumenter sur les choix effectu\u00e9s, en vous appuyant sur le bilan critique de votre rapport. Il s\u2019agit des choix techniques, et des choix effectu\u00e9s pour la gestion du projet.","title":"III. Les rendus de projet"},{"location":"projets/tle_poo_rec/Rendus/#les-rendus","text":"","title":"Les rendus"},{"location":"projets/tle_poo_rec/Rendus/#a-le-cahier-des-charges","text":"","title":"A. Le cahier des charges"},{"location":"projets/tle_poo_rec/Rendus/#b-le-programme","text":"","title":"B. Le programme"},{"location":"projets/tle_poo_rec/Rendus/#c-le-rapport","text":"Le rapport contient 2 parties. La 1\u00e8re peut \u00eatre collective, la 2\u00e8me doit \u00eatre individuelle.","title":"C. Le rapport"},{"location":"projets/tle_poo_rec/Rendus/#d-la-soutenance","text":"La soutenance est une pr\u00e9sentation de 7-8 min pour un projet fait \u00e0 2, de 10-12min pour un projet fait \u00e0 3.","title":"D. La soutenance"},{"location":"projets/tle_poo_rec/presentation/","text":"body { text-align: justify} Projet POO & R\u00e9cursivit\u00e9 \u00b6 \u00b6","title":"Presentation"},{"location":"projets/tle_poo_rec/presentation/#projet-poo-recursivite","text":"","title":"Projet POO &amp; R\u00e9cursivit\u00e9"},{"location":"projets/tle_poo_rec/presentation/#_1","text":"","title":""},{"location":"projets/trophees/","text":"body { text-align: justify} Les Troph\u00e9es NSI \u00b6 Les Troph\u00e9es NSI est un concours soutenu par l'Education Nationale visant \u00e0 valoriser les projets r\u00e9alis\u00e9s en cours de NSI durant l'ann\u00e9e, au niveau premi\u00e8re et terminale. Tous les \u00e9l\u00e8ves de NSI peuvent soumettre des projets, par groupe de 2 \u00e0 5 personnes, qui sont soumis par leur enseignant(e). Le projet d\u00e9velopp\u00e9 doit correspondre au programme de NSI du niveau des \u00e9l\u00e8ves (premi\u00e8re ou terminale), donc n'utiliser que les langages au programme (Python, un peu de Web/SQL). Les projets sont \u00e9valu\u00e9s selon 3 crit\u00e8res : - La pr\u00e9sentation du projet, - La qualit\u00e9 du d\u00e9veloppement, - La communication autour du dossier. Il y a des prix \u00e0 gagner, lancez-vous ! Instagram Twitter","title":"Index"},{"location":"projets/trophees/#les-trophees-nsi","text":"Les Troph\u00e9es NSI est un concours soutenu par l'Education Nationale visant \u00e0 valoriser les projets r\u00e9alis\u00e9s en cours de NSI durant l'ann\u00e9e, au niveau premi\u00e8re et terminale. Tous les \u00e9l\u00e8ves de NSI peuvent soumettre des projets, par groupe de 2 \u00e0 5 personnes, qui sont soumis par leur enseignant(e). Le projet d\u00e9velopp\u00e9 doit correspondre au programme de NSI du niveau des \u00e9l\u00e8ves (premi\u00e8re ou terminale), donc n'utiliser que les langages au programme (Python, un peu de Web/SQL). Les projets sont \u00e9valu\u00e9s selon 3 crit\u00e8res : - La pr\u00e9sentation du projet, - La qualit\u00e9 du d\u00e9veloppement, - La communication autour du dossier. Il y a des prix \u00e0 gagner, lancez-vous ! Instagram Twitter","title":"Les Troph\u00e9es NSI"},{"location":"projets/trophees/2022/","text":"body { text-align: justify} Edition 2022 \u00b6 Les projets soumis pour l'\u00e9dition 2022 du concours. Morphog\u00e9nie \u00b6 R\u00e9compense Projet laur\u00e9at du prix de l'Ing\u00e9nierie au niveau national !!! R\u00e9sultats \u00e0 consulter > ici < R\u00e9sum\u00e9 \u00b6 Le projet Morphog\u00e9nie vise \u00e0 simuler les syst\u00e8mes de r\u00e9action-diffusion , bas\u00e9s sur la th\u00e9orie math\u00e9matique de Turing en 1952, qui explique la formation des motifs dans la nature \u00e0 travers l'interaction non lin\u00e9aire de deux r\u00e9actifs chimiques. Cette th\u00e9orie est \u00e0 l'origine de nombreuses d\u00e9couvertes scientifiques dans le domaine de la morphogen\u00e8se. L'objectif est de g\u00e9n\u00e9rer des motifs de Turing simples et \u00e0 \u00e9chelles multiples, ce qui se fait en combinant plusieurs simulations pour donner l'impression de profondeur. Vid\u00e9o de d\u00e9monstration \u00b6 Tripy \u00b6 R\u00e9sum\u00e9 \u00b6 TriPy est un projet Python de visualisation d'algorithmes de tri . Il utilise la biblioth\u00e8que Matplotlib pour cr\u00e9er des graphiques anim\u00e9s de la liste \u00e0 trier. TriPy est \u00e9galement int\u00e9gr\u00e9 \u00e0 un site web pour permettre une utilisation facile et accessible \u00e0 tous. Les d\u00e9veloppeur\u00b7euse.s de ce projet souhaitent faire de TriPy une plateforme p\u00e9dagogique et ludique destin\u00e9e \u00e0 l'apprentissage des algorithmes de tri. TriPy est accessible ici : https://tripy.pythonanywhere.com/ Vid\u00e9o de d\u00e9monstration \u00b6","title":"Edition 2022"},{"location":"projets/trophees/2022/#edition-2022","text":"Les projets soumis pour l'\u00e9dition 2022 du concours.","title":"Edition 2022"},{"location":"projets/trophees/2022/#morphogenie","text":"R\u00e9compense Projet laur\u00e9at du prix de l'Ing\u00e9nierie au niveau national !!! R\u00e9sultats \u00e0 consulter > ici <","title":"Morphog\u00e9nie"},{"location":"projets/trophees/2022/#tripy","text":"","title":"Tripy"},{"location":"projets/trophees/presentation/","text":"body { text-align: justify} Les Troph\u00e9es NSI est un concours soutenu par l'Education Nationale visant \u00e0 valoriser les projets r\u00e9alis\u00e9s en cours de NSI durant l'ann\u00e9e, au niveau premi\u00e8re et terminale. Tous les \u00e9l\u00e8ves de NSI peuvent soumettre des projets, par groupe de 2 \u00e0 5 personnes, qui sont soumis par leur enseignant(e). Le projet d\u00e9velopp\u00e9 doit correspondre au programme de NSI du niveau des \u00e9l\u00e8ves (premi\u00e8re ou terminale), donc n'utiliser que les langages au programme (Python, un peu de Web/SQL). Les projets sont \u00e9valu\u00e9s selon 3 crit\u00e8res : - La pr\u00e9sentation du projet, - La qualit\u00e9 du d\u00e9veloppement, - La communication autour du dossier. Il y a des prix \u00e0 gagner, lancez-vous ! Instagram Twitter","title":"Presentation"},{"location":"ressources/","text":"body { text-align: justify} Programmer avec un IDE \u00b6 A. D\u00e9finition \u00b6 Un environnement de d\u00e9veloppement int\u00e9gr\u00e9 (IDE) est un logiciel qui rassemble tous les outils n\u00e9cessaires au d\u00e9veloppement de code sur une m\u00eame interface graphique. Par exemple : Spyder, Thonny, EduPython, Pyzo, etc. B. Console et \u00e9diteur \u00b6 Il est constitu\u00e9 (au minimum) de deux fen\u00eatres : - une console : elle ex\u00e9cute du code ligne \u00e0 ligne. Apr\u00e8s chaque appui sur la touche Entr\u00e9e, le code est envoy\u00e9 \u00e0 l'ordinateur et ex\u00e9cut\u00e9 direcment . Ce code n'est pas enregistr\u00e9 dans la m\u00e9moire de l'ordinateur, elle sert donc \u00e0 faire des tests, \u00e0 v\u00e9rifier le contenu des variables par exemple. - un \u00e9diteur : il permet d'\u00e9crire plusieurs lignes de codes \u00e0 la suite, et d'enregistrer ce code sous la forme d'un fichier en .py (un fichier Python). Ce fichier doit \u00eatre enregistr\u00e9 dans votre r\u00e9pertoire de travail , il contient l'essentiel du code sur lequel vous travaillez. Ce code n'est ex\u00e9cut\u00e9 que lorsqu'on en donne l'instruction au logiciel (en cliquant sur un bouton \"Ex\u00e9cuter\" ou une fl\u00e8che verte) C. Autres outils \u00b6 D'autres fen\u00eatres peuvent appara\u00eetre, comme un explorateur de variables qui permet de consulter les valeurs stock\u00e9es dans les diff\u00e9rentes variables du programme ex\u00e9cut\u00e9. C'est utile pour d\u00e9bogguer un programme par exemple. D. Exemples d'IDE \u00b6 Les diff\u00e9rents logiciels qui existent fonctionnent de mani\u00e8re similaire, mais leur interface n'est pas exactement la m\u00eame. D.1. Thonny \u00b6 D.2. Spyder \u00b6 D.3. Pyzo \u00b6","title":"Index"},{"location":"ressources/#programmer-avec-un-ide","text":"","title":"Programmer avec un IDE"},{"location":"ressources/cybersecurite/","text":"La cybers\u00e9curit\u00e9 \u00b6 U","title":"La cybers\u00e9curit\u00e9"},{"location":"ressources/cybersecurite/#la-cybersecurite","text":"U","title":"La cybers\u00e9curit\u00e9"},{"location":"ressources/gafam/","text":"GAFAM \u00b6 28 minutes : Hors S\u00e9rie GAFAM avec Aur\u00e9lie Jean (GAFAM, cybers\u00e9curit\u00e9, RGPD, r\u00e9seaux sociaux...) : https://youtu.be/XOFDnGVBcnE","title":"GAFAM"},{"location":"ressources/gafam/#gafam","text":"28 minutes : Hors S\u00e9rie GAFAM avec Aur\u00e9lie Jean (GAFAM, cybers\u00e9curit\u00e9, RGPD, r\u00e9seaux sociaux...) : https://youtu.be/XOFDnGVBcnE","title":"GAFAM"},{"location":"ressources/ia/","text":"L'intelligence artificielle \u00b6 Un nom un peu fourre-tout, qui regroupe tous les programmes tentant d'imiter les comp\u00e9tences humaines. On parle surtout d'IA lorsque l'on essaye de faire des pr\u00e9dictions, en cr\u00e9ant un mod\u00e8le \u00e0 partir de donn\u00e9es. L'intelligence artificielle \u00b6 D\u00e9finitions : https://dataanalyticspost.com/Lexique/ Site de l'INRIA (Institut national de recherche en sciences et technologies du num\u00e9rique) : \"Les nouveaux enjeux de l'IA\" : https://www.inria.fr/fr/nouveaux-enjeux-intelligence-artificielle-numerique MOOC sur le sujet : ChatGPT \u00b6 Le chatbot de derni\u00e8re g\u00e9n\u00e9ration est accessible sur le site https://chat.openai.com/ D\u00e9bat sur cette derni\u00e8re \u00e9volution : 28 minutes, \u00e9mission de la cha\u00eene Arte","title":"L'intelligence artificielle"},{"location":"ressources/ia/#lintelligence-artificielle","text":"Un nom un peu fourre-tout, qui regroupe tous les programmes tentant d'imiter les comp\u00e9tences humaines. On parle surtout d'IA lorsque l'on essaye de faire des pr\u00e9dictions, en cr\u00e9ant un mod\u00e8le \u00e0 partir de donn\u00e9es.","title":"L'intelligence artificielle"},{"location":"ressources/ia/#lintelligence-artificielle_1","text":"D\u00e9finitions : https://dataanalyticspost.com/Lexique/ Site de l'INRIA (Institut national de recherche en sciences et technologies du num\u00e9rique) : \"Les nouveaux enjeux de l'IA\" : https://www.inria.fr/fr/nouveaux-enjeux-intelligence-artificielle-numerique MOOC sur le sujet :","title":"L'intelligence artificielle"},{"location":"ressources/ia/#chatgpt","text":"Le chatbot de derni\u00e8re g\u00e9n\u00e9ration est accessible sur le site https://chat.openai.com/ D\u00e9bat sur cette derni\u00e8re \u00e9volution : 28 minutes, \u00e9mission de la cha\u00eene Arte","title":"ChatGPT"},{"location":"ressources/ide/","text":"body { text-align: justify} Programmer avec un IDE \u00b6 A. D\u00e9finition \u00b6 Un environnement de d\u00e9veloppement int\u00e9gr\u00e9 (IDE) est un logiciel qui rassemble tous les outils n\u00e9cessaires au d\u00e9veloppement de code sur une m\u00eame interface graphique. Par exemple : Spyder, Thonny, EduPython, Pyzo, etc. B. Console et \u00e9diteur \u00b6 Il est constitu\u00e9 (au minimum) de deux fen\u00eatres : D\u00e9finitions une console : elle ex\u00e9cute du code ligne \u00e0 ligne. Apr\u00e8s chaque appui sur la touche Entr\u00e9e, le code est envoy\u00e9 \u00e0 l'ordinateur et ex\u00e9cut\u00e9 directement . Ce code n'est pas enregistr\u00e9 dans la m\u00e9moire de l'ordinateur, elle sert donc \u00e0 faire des tests, \u00e0 v\u00e9rifier le contenu des variables par exemple. un \u00e9diteur : il permet d'\u00e9crire plusieurs lignes de codes \u00e0 la suite, et d'enregistrer ce code sous la forme d'un fichier en .py (un fichier Python). Ce fichier doit \u00eatre enregistr\u00e9 dans votre r\u00e9pertoire de travail , il contient l'essentiel du code sur lequel vous travaillez. Ce code n'est ex\u00e9cut\u00e9 que lorsqu'on en donne l'instruction au logiciel (en cliquant sur un bouton \"Ex\u00e9cuter\" ou une fl\u00e8che verte) C. Autres outils \u00b6 D'autres fen\u00eatres peuvent appara\u00eetre, comme un explorateur de variables qui permet de consulter les valeurs stock\u00e9es dans les diff\u00e9rentes variables du programme ex\u00e9cut\u00e9. C'est utile pour d\u00e9bogguer un programme par exemple. D. Exemples d'IDE \u00b6 Les diff\u00e9rents logiciels qui existent fonctionnent de mani\u00e8re similaire, mais leur interface n'est pas exactement la m\u00eame. D.1. Thonny \u00b6 L'interface de Thonny est tr\u00e8s simple et constitu\u00e9 d'un \u00e9diteur et d'une console. Il faut cliquer sur la fl\u00e8che verte pour ex\u00e9cuter le script ouvert dans l'\u00e9diteur. D.2. Spyder \u00b6 L'interface de Spyder est constitu\u00e9e d'un \u00e9diteur, d'une console, et d'une troisi\u00e8me fen\u00eatre qui peut servir \u00e0 l'affichage du contenu des variables, ou \u00e0 l'affichage de graphiques (plots). Il faut cliquer sur la fl\u00e8che verte pour ex\u00e9cuter le script ouvert dans l'\u00e9diteur. D.3. Pyzo \u00b6 L'interface de Pyzo est constitu\u00e9e d'un \u00e9diteur, d'une console, et de petites fen\u00eatres incluant un explorateur de fichiers. Pour ex\u00e9cuter le script ouvert dans l'\u00e9diteur, il faut cliquer sur Run, puis Run file as script.","title":"Avec un IDE"},{"location":"ressources/ide/#programmer-avec-un-ide","text":"","title":"Programmer avec un IDE"},{"location":"ressources/notebook/","text":"body { text-align: justify} Programmer avec un Notebook \u00b6 A. D\u00e9finition \u00b6 Un Notebook est constitu\u00e9 d'un ensemble de cellules qui sont des espaces dans lesquels on met soit du texte , soit du code . Le texte s'affiche sans qu'il n'y ait rien \u00e0 faire, mais le code doit \u00eatre ex\u00e9cut\u00e9 pour \u00eatre trait\u00e9 par l'ordinateur. Il faut : - cliquer sur la cellule que vous voulez ex\u00e9cuter, - cliquer sur la fl\u00e8che verte . B. Le code \u00b6 B.1. Affichage des r\u00e9sultats \u00b6 Pour visualiser le r\u00e9sultat de votre programme, vous pouvez \u00e9crire le nom de la variable qui vous int\u00e9resse \u00e0 la fin. Vous aurez le m\u00eame effet que lorsque vous utilisez une console, son contenu appara\u00eetra \u00e0 l'\u00e9cran : Exemple Une cellule a = 2 b = 9 a Ce code affiche la valeur 2 . B.2. Test des fonctions \u00b6 Pour v\u00e9rifier qu'une fonction fait bien le traitement demand\u00e9, utiliser des assertions \u00e0 la fin de la cellule dans laquelle la fonction est d\u00e9finie : Exemple Une cellule def surface ( largeur , longueur ): return largeur * longueur assert surface ( 5 , 2 ) == 10 Si vous avez une erreur, enlevez l'assertion, et affichez le r\u00e9sultat \u00e0 la place pour comprendre d'o\u00f9 est-ce qu'elle vient : Exemple Une cellule def surface ( largeur , longueur ): return largeur ** longueur surface ( 5 , 2 ) B.3. Ordre d'ex\u00e9cution \u00b6 Chaque cellule de code est ex\u00e9cut\u00e9e s\u00e9par\u00e9ment. Cela veut dire qu'il faut faire attention \u00e0 l' ordre dans lequel on les ex\u00e9cute ! Si on a besoin dans une cellule 1 d'une fonction d\u00e9finie dans une cellule 2, la cellule 2 doit \u00eatre ex\u00e9cut\u00e9e avant la cellule 1.","title":"Avec un Notebook"},{"location":"ressources/notebook/#programmer-avec-un-notebook","text":"","title":"Programmer avec un Notebook"},{"location":"ressources/spyder/","text":"body { text-align: justify} Programmer avec l'IDE Spyder \u00b6 A. L'interface \u00b6 Pour ex\u00e9cuter un code, on peut cliquer sur la fl\u00e8che verte.","title":"Spyder"},{"location":"ressources/spyder/#programmer-avec-lide-spyder","text":"","title":"Programmer avec l'IDE Spyder"},{"location":"tle/","text":"Les cours de terminale \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous : Les \u00e9preuves du baccalaur\u00e9at \u00b6 Trois \u00e9preuves de NSI sont pr\u00e9par\u00e9es pour le baccalaur\u00e9at : - l' \u00e9preuve \u00e9crite (3h30, au mois de juin) , - l' \u00e9preuve pratique (1h, au mois de juin) , - le grand oral (20min, au moins de juin) .","title":"Les cours de terminale"},{"location":"tle/#les-cours-de-terminale","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de terminale"},{"location":"tle/#les-epreuves-du-baccalaureat","text":"Trois \u00e9preuves de NSI sont pr\u00e9par\u00e9es pour le baccalaur\u00e9at : - l' \u00e9preuve \u00e9crite (3h30, au mois de juin) , - l' \u00e9preuve pratique (1h, au mois de juin) , - le grand oral (20min, au moins de juin) .","title":"Les \u00e9preuves du baccalaur\u00e9at"},{"location":"tle/concl/calculabilite/","text":"body { text-align: justify} Calculabilit\u00e9 et d\u00e9cidabilit\u00e9 \u00b6 Quelle est la limite de ce que l\u2019on peut faire avec des programmes ? A. Programme et donn\u00e9es \u00b6 Programmes et donn\u00e9es sont de la m\u00eame nature pour un ordinateur. Les deux sont traduits en binaire et stock\u00e9s de la m\u00eame fa\u00e7on dans la m\u00e9moire. Voyons quelques exemples montrant qu\u2019un programme peut \u00eatre trait\u00e9 comme une donn\u00e9e comme une autre, utilis\u00e9e en entr\u00e9e d\u2019un autre programme. A.I. Quelques exemples \u00b6 Les syst\u00e8mes d\u2019exploitation Ce sont des programmes qui g\u00e8rent les autres programmes de l'ordinateur. On peut \u00e9crire des scripts qui interagissent avec le syst\u00e8me d'exploitation, effectuant des actions sur des fichiers, qui peuvent \u00eatre ex\u00e9cutables (des programmes) Les antivirus Ce sont des programmes qui analysent tous les fichiers de l'ordinateur, dont les fichiers ex\u00e9cutables. A.II. Interpr\u00e9teur et compilateur \u00b6 Le code source d\u2019un programme doit \u00eatre traduit pour \u00eatre compr\u00e9hensible par la machine. Pour ce faire, les diff\u00e9rents langages de programmation existant utilisent g\u00e9n\u00e9ralement un compilateur ou un interpr\u00e9teur : Figure 1 \u2013 Interpr\u00e9tation d\u2019un programme Figure 2 \u2013 Compilation d\u2019un programme Compiler un programme en C sous Linux N.B. : il existe \u00e9galement des langages semi-interpr\u00e9t\u00e9s qui traduisent le code source dans un langage interm\u00e9diaire. Dans tous les cas, une analyse lexicale du programme est effectu\u00e9e : le compilateur ou interpr\u00e9teur identifie les \u00e9l\u00e9ments fondamentaux d\u2019un programme comme les noms de variables, de fonctions, les mots-cl\u00e9s du langage ou bien les expressions. Il v\u00e9rifie \u00e9galement sa structure. Le programme est donc une donn\u00e9e d\u2019entr\u00e9e analys\u00e9e par un compilateur ou un interpr\u00e9teur. On peut \u00e9crire des programmes agissant sur d'autres programmes. Quelle est la limite de ce que l'on peut faire avec un programme ? B. Calculabilit\u00e9 et d\u00e9cidabilit\u00e9 \u00b6 B.I. Th\u00e8se de Church \u00b6 Il existe un nombre tr\u00e8s importants de langages informatiques, dont la syntaxe diff\u00e8re mais permettant d\u2019effectuer les m\u00eames op\u00e9rations (hors programme : sous r\u00e9serve d\u2019\u00eatre complet au sens de Turing) . Ils ont la m\u00eame puissance algorithmique, les m\u00eames fonctions peuvent \u00eatre impl\u00e9ment\u00e9es dans tous. Les langages de programmation sont des mod\u00e8les de calcul : on dit qu\u2019une fonction est calculable si elle peut \u00eatre programm\u00e9e dans un langage de programmation usuel. Pour d\u00e9finir la calculabilit\u00e9 d\u2019une fonction, on pourrait utiliser d\u2019autres mod\u00e8les de calcul comme une machine de Turing (repr\u00e9sentation ci-dessous) . Machine de Turing Un ruban dont les cases sont compos\u00e9es de caract\u00e8res d'un alphabet, une t\u00eate de lecture indiquant son \u00e9tat, une table de transitions indiquant comment changer d'\u00e9tat La th\u00e8se de Church postule qu\u2019ils sont \u00e9quivalents. Qu\u2019est-ce qu\u2019une th\u00e8se ? Que peut-on en d\u00e9duire ? Une th\u00e8se est une position, une affirmation sur un sujet donn\u00e9, que l'on soutient avec des arguments. La th\u00e8se de Church n'a donc pas \u00e9t\u00e9 prouv\u00e9e, mais n'a jamais \u00e9t\u00e9 contredite. Dans la suite, on consid\u00e8re qu\u2019une fonction est calculable si elle peut \u00eatre programm\u00e9e dans le langage Python (s'il existe un programme donnant le r\u00e9sultat). B.II. Exemples de probl\u00e8mes \u00b6 Un nombre est-t-il premier ? On appelle ce probl\u00e8me un probl\u00e8me de d\u00e9cision : on doit d\u00e9cider si oui ou non, \\(n\\) est premier. La fonction, si elle existe, qui r\u00e9pond \u00e0 ce probl\u00e8me, est une fonction \\(f\\) prenant en entr\u00e9e un entier naturel, et renvoyant en sortie un bool\u00e9en. On dit que ce probl\u00e8me est d\u00e9cidable si cette fonction \\(f\\) est calculable : c\u2019est-\u00e0-dire s\u2019il existe un programme Python permettant de calculer cette fonction \\(f\\) pour tout entier n. Est-ce le cas ? Solution On peut \u00e9crire la fonction suivante : def est_premier ( n ): if n < 2 : return False else : for i in range ( 2 , n ): if n % i == 0 : return False return True est_premier permet de r\u00e9soudre ce probl\u00e8me. Elle est calculable, donc ce probl\u00e8me est d\u00e9cidable . Une cha\u00eene de caract\u00e8res est-elle un programme ? Comment d\u00e9terminer si ce probl\u00e8me est d\u00e9cidable ? Est-ce le cas (donner une justification minimale) ? Solution On d\u00e9termine si ce probl\u00e8me est d\u00e9cidable en cherchant un programme permettant de le r\u00e9soudre. Un tel programme existe : c'est un interpr\u00e9teur (pour Python), ou un compilateur (pour d'autres langages). Il v\u00e9rifie si une cha\u00eene de caract\u00e8res repr\u00e9sente un programme correct. Ce probl\u00e8me est donc d\u00e9cidable. B.III. Probl\u00e8me de l\u2019arr\u00eat \u00b6 Il n\u2019y a pas de programme nous permettant de d\u00e9cider si un programme quelconque va s\u2019arr\u00eater. Alan Turing en fournit le premier la preuve et \u00e9nonce que \"le probl\u00e8me de l\u2019arr\u00eat est ind\u00e9cidable\" . Tous les probl\u00e8mes ne peuvent pas \u00eatre r\u00e9solus par des algorithmes car toutes les fonctions ne sont pas calculables. Donnons-en la preuve (par l'absurde) On suppose l'existence d'un tel programme, que l'on nomme arret : arret(prog, donnee) prend en param\u00e8tres un programme prog et une donn\u00e9e donnee . Il renvoie : - True si prog(donnee) s'arr\u00eate, - False si prog(donnee) ne s'arr\u00eate pas. On d\u00e9finit un deuxi\u00e8me programme absurde : def absurde ( prog ): if arret ( prog , prog ): while True pass # boucle infinie else : return True absurde est d\u00e9fini pour un programme quelconque, donc peut \u00eatre appel\u00e9 sur lui-m\u00eame. On fait l'appel absurde(absurde) : - si arret(absurde, absurde) vaut True (donc si absurde(absurde) s'arr\u00eate) , alors on rentre dans la boucle infinie. - sinon (si absurde(absurde) ne s'arr\u00eate pas) , alors absurde(absurde) s'arr\u00eate. On a une contradiction. Notre hypoth\u00e8se de d\u00e9part est donc fausse : il n'existe pas de programme qui puisse d\u00e9terminer \u00e0 coup s\u00fbr qu'un programme quelconque se termine . Le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable .","title":"Calculabilit\u00e9 et d\u00e9cidabilit\u00e9"},{"location":"tle/concl/calculabilite/#calculabilite-et-decidabilite","text":"Quelle est la limite de ce que l\u2019on peut faire avec des programmes ?","title":"Calculabilit\u00e9 et d\u00e9cidabilit\u00e9"},{"location":"tle/seq1/","text":"body { text-align: justify} Programme \u00b6","title":"Index"},{"location":"tle/seq1/#programme","text":"","title":"Programme"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/","text":"body { text-align: justify} I. Les paradigmes imp\u00e9ratif et fonctionnel \u00b6 Cours \u00b6 A. Les \u00e9l\u00e9ments de base de la programmation \u00b6 Analysons le code Python suivant : Code l = [ 2 , 6 , 9 ] s = 0 if l [ 0 ] % 2 == 0 : s = s + l [ 0 ] if l [ 1 ] % 2 == 0 : s = s + l [ 1 ] if l [ 2 ] % 2 == 0 : s = s + l [ 2 ] ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Dans l'exemple ci-dessus, quels sont les \u00e9l\u00e9ments de base de la programmation utilis\u00e9s ? On identifie des affectations, des instructions conditionnelles. L'ensemble est une s\u00e9quence d'instructions. Que fait ce programme ? Il calcule la somme des \u00e9l\u00e9ments pairs d'une liste Python. Proposer une autre mani\u00e8re d'\u00e9crire ce programme. Quel autre \u00e9l\u00e9ment de programmation utilisez-vous ? Il est pertinent d'utiliser une boucle born\u00e9e. Programme avec boucle ```python l = [2, 6, 9] s = 0 for i in range(len(l)): if l[i]%2 ==0: s = s+l[i] Ecrire ce programme en utilisant deux fonctions interm\u00e9diaires. ```python def est_pair(n): return n%2 == 0 def somme(l): s = 0 for i in range(len(l)): if est_pair(l[i]): s = s+l[i] l = [2, 6, 9] s = somme(l) Il y a donc plusieurs mani\u00e8res de programmer un m\u00eame algorithme, en utilisant diff\u00e9remment les \u00e9l\u00e9ments de programmation \u00e0 notre disposition. Un paradigme de programmation est une mani\u00e8re de programmer sp\u00e9cifique. B. Le paradigme imp\u00e9ratif \u00b6 Le paradigme imp\u00e9ratif est le paradigme le plus courant, utilis\u00e9 par de nombreux langages de programmation comme Python (qui int\u00e8gre aussi d'autres paradigmes !) . Il consiste \u00e0 d\u00e9crire un programme sous la forme de s\u00e9quences d'instructions \u00e0 effectuer dans un ordre pr\u00e9cis. Les caract\u00e9ristiques de ce paradigme sont : importance de l'ordre des instructions, utilisation d'affectations de variables, d'expressions conditionnelles et de boucles. Cette mani\u00e8re de programmer est proche du fonctionnement de la machine et peut sembler la plus intuitive. Pourquoi utiliser d'autres paradigmes ? On peut pr\u00e9f\u00e9rer d'autres mani\u00e8res de programmer en fonction du champ d'application du programme, du probl\u00e8me sp\u00e9cifique qui est trait\u00e9, ou tout simplement des go\u00fbts du programmeur. C. Le paradigme fonctionnel \u00b6 Le paradigme fonctionnel est un paradigme rigoureux, permettant de plus facilement tester, d\u00e9boguer et optimiser les programmes. C.1. Les fonctions \u00b6 Rappeler la syntaxe de d\u00e9finition et d'appel d'une fonction en Python : Code def nom_de_la_fonction ( entree1 , entree2 ): #s\u00e9quence d'instructions ( return sortie ) resultat = nom_de_la_fonction ( val1 , val2 ) Le paradigme fonctionnel est centr\u00e9, comme son nom l'indique, sur l'utilisation de fonctions. Plus pr\u00e9cis\u00e9ment, on utilise des fonctions dites \"pures\" : des fonctions qui, \u00e9tant donn\u00e9 des param\u00e8tres d'entr\u00e9e, renvoient toujours la m\u00eame sortie. Pour cela, il ne faut pas qu'elles cr\u00e9ent d' effets de bord . C.2. Les effets de bord \u00b6 D\u00e9finition Un effet de bord correspond \u00e0 la modification par une fonction d'une ou plusieurs variable(s) d\u00e9finie(s) en dehors de cette fonction. D\u00e9finition Une variable d\u00e9finie en dehors d'une fonction est une variable globale , utilisable dans tout le programme. Une variable d\u00e9finie dans une fonction est par d\u00e9faut locale : elle n'existe que dans cette fonction. Exemple Code l = [ 0 , 1 , 2 , 3 ] def remplace ( x ): y = l [ 0 ] l [ 0 ] = x return y ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Que fait cette fonction ? En \u00e9crire la sp\u00e9cification (description des entr\u00e9es et sorties). Cette fonction remplace la valeur du premier \u00e9lement de l par une valeur donn\u00e9e en entr\u00e9e. Entr\u00e9e : entier x rempla\u00e7ant la valeur du premier \u00e9l\u00e9ment de l Sortie : l'entier y en premi\u00e8re position de la liste l avant d'\u00eatre remplac\u00e9 Que renvoie l'appel de remplace(1) ? Un deuxi\u00e8me appel de remplace(1) ? Le premier appel renvoie 0 , alors que le deuxi\u00e8me renvoie 1 . Que peut-on en conclure ? Il y a modification de la variable l d\u00e9finie en dehors de remplace : elle cr\u00e9e un effet de bord. La fonction, appel\u00e9e plusieurs fois avec le m\u00eame param\u00e8tre ne renvoie pas la m\u00eame valeur : ce n'est pas une fonction pure. Proposer une fonction \"pure\" effectuant le m\u00eame traitement que remplace . ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Solution def remplace ( x , l ): l2 = list ( l ) y = l2 [ 0 ] l2 [ 0 ] = x return y , l2 N.B. : une fonction pure renvoie toujours une valeur (sinon, vu qu'elle n'a pas d'effet de bord, elle ne servirait pas \u00e0 grand chose...). C.3. Les caract\u00e9ristiques du paradigme fonctionnel \u00b6 Les caract\u00e9ristiques de ce paradigme sont : utilisation de fonctions imbriqu\u00e9es (cf partie A), utilisation de fonctions pures (donc pas d'effet de bord !), on \u00e9vite l'affectation de valeurs \u00e0 des variables (utilisation de fonctions \u00e0 la place). Ces caract\u00e9ristiques rendent les programmes plus fiables : diff\u00e9rentes bonnes pratiques de programmation s'inspirent de cette mani\u00e8re de programmer. Exercices \u00b6 Exercice 1 : \u00b6 A faire sur feuille. Dans les exemples suivant, indiquer : - s'il y a un effet de bord ou non, - si la fonction est pure, - s'il y a un effet de bord, proposer une autre version de la fonction qui l'\u00e9limine. 1. Code i = 5 def f (): return i > 5 2. Code def somme ( a , b ): s = a + b return s 3. Code x = 11 l = [ 1 , 3 , 5 , 7 , 9 ] def remplace (): if x > l [ - 1 ]: l [ - 1 ] = x return l Exercice 2 : \u00b6 A faire sur feuille. Identifier les caract\u00e9ristiques se rapportant au paradigme imp\u00e9ratif, et celles se rapportant au paradigme fonctionnel. - autorise les effets de bord, - l'ordre des instructions n'a pas toujours d'importance, - utilise des affectations de variables, - utilise des boucles, - d\u00e9coupe un programme en fonctions. Exercice 3 : \u00b6 A faire sur ordinateur, r\u00e9ponses sur feuille. On d\u00e9finit deux fonctions qui ajoutent un \u00e9l\u00e9ment \u00e0 une liste Python. Elles appellent toutes les deux la m\u00e9thode append , qui modifie la liste. Code def ajoute ( l , elt ): l . append ( elt ) return l def ajoute1 ( l , elt ): l . append ( elt ) Tester ajoute en d\u00e9finissant, dans le corps de votre programme, une liste l1 qui vaut [0, 1, 2, 3] , puis en faisant l'appel l2 = ajoute(l1, 4) . Que contiennent l1 et l2 apr\u00e8s cet appel ? Tester ajoute1 en faisant l'appel ajoute1(l1, 4) . O\u00f9 se trouve le r\u00e9sultat de la fonction ? A retenir : Les listes en param\u00e8tres des fonctions Python sont pass\u00e9es par r\u00e9f\u00e9rence : on fait r\u00e9f\u00e9rence \u00e0 la liste initiale, \u00e0 son emplacement dans la m\u00e9moire. Par opposition, les types de base sont pass\u00e9s par valeur : on ne r\u00e9cup\u00e8re que la valeur de la variable. Pour ne pas modifier la liste pass\u00e9e en param\u00e8tre, on se dit que l'on peut en faire en copie et modifier cette copie dans la fonction. On propose la fonction suivante : Code def ajoute2 ( l , elt ): ls = l ls . append ( elt ) return ls Tester cette fonction avec l1 (attention, non-modifi\u00e9e !) . Que contient l2 apr\u00e8s l'appel l2 = ajoute(l1, 4) ? Qu'en concluez-vous ? L'op\u00e9ration d'affectation ne cr\u00e9e pas une nouvelle liste, c'est toujours la m\u00eame qui est manipul\u00e9e. Il existe diff\u00e9rentes solution pour cr\u00e9er une nouvelle liste avec les m\u00eames valeurs que la premi\u00e8re. Tester les fonctions suivantes pour v\u00e9rifier qu'elles remplissent bien l'objectif de ne pas modifier l : Code def ajoute3 ( l , elt ): ls = l . copy () ls . append ( elt ) return ls def ajoute3 ( l , elt ): ls = list ( l ) ls . append ( elt ) return ls Que faut-il donc faire pour \u00e9viter les effets de bord lorsque l'on manipule des listes dans des fonctions ? Exercice 4 : \u00b6 A faire sur ordinateur. Les codes suivant correspondent \u00e0 des algorithmes vus en premi\u00e8re. - Ecrire chacun sous la forme d'une fonction, dont on aura identifi\u00e9 les param\u00e8tres d'entr\u00e9e et de sortie et dont on choisira le nom de mani\u00e8re ad\u00e9quate. On veut des fonctions pures, n'utilisant pas de variables globales. - Renommer les variables pour que l'on comprenne plus facilement leur r\u00f4le. - Ajouter les sp\u00e9cifications des entr\u00e9es et des sorties. 1. Code x = 0 y = 0 l = [ 6 , 8 , 7 , 1 , 0 ] for i in range ( len ( l )): if l [ i ] > x : x = l [ i ] y = i print ( x , y ) 2. Code o = 0 t = [ 6 , 2 , 4 , 8 , 2 , 1 , 3 ] for e in t : if e == 2 : o = o + 1 print ( o ) TP : Programmation fonctionnelle \u00b6 Fichier de correction : Correction Vous devez garder un compte-rendu de chaque TP : sauvegardez votre travail dans un ou plusieurs fichier(s) .py. A. Les fonctions d'ordre sup\u00e9rieur \u00b6 Les fonctions d'ordre sup\u00e9rieur sont des \u00e9l\u00e9ments caract\u00e9ristiques de la programmation fonctionnelle : des fonctions qui prennent en entr\u00e9e d'autres fonctions, ou bien qui retournent des fonctions en sortie. A.1. La fonction map \u00b6 La fonction map prend comme arguments une fonction et une liste d'arguments \u00e0 appliquer \u00e0 cette fonction. Elle permet de ne pas avoir \u00e0 r\u00e9\u00e9crire un appel de fonction plusieurs fois, lorsque l'on veut appliquer le m\u00eame traitement \u00e0 diff\u00e9rentes donn\u00e9es. Ex\u00e9cuter le code suivant et regarder la valeur de liste_int : Code liste_str = [ \"000\" , \"147\" , \"1369874\" ] liste_int = list ( map ( int , liste_str )) On applique la fonction int aux diff\u00e9rents \u00e9l\u00e9ments de la liste de cha\u00eenes de caract\u00e8res pour les convertir. La fonction map renvoie un it\u00e9rateur, c'est pourquoi pour avoir la liste des r\u00e9sultats, on a appliqu\u00e9 la fonction list \u00e0 cet it\u00e9rateur. En s'inspirant de l'exemple pr\u00e9c\u00e9dent, utiliser la fonction map pour convertir en str une liste d'entiers (vous choisirez un exemple) . Ecrire un code en paradigme imp\u00e9ratif permettant de faire le m\u00eame traitement qu'en 1. (comme si vous ne connaissiez pas la fonction map ) . A.2. La fonction reduce \u00b6 La fonction reduce de la biblioth\u00e8que functools sert \u00e0 calculer une valeur \u00e0 partir d'une s\u00e9quence de valeurs. Elle va appliquer une fonction pass\u00e9e en argument \u00e0 un premier couple de valeurs de la s\u00e9quence, puis \u00e0 un second couple, etc jusqu'\u00e0 avoir utilis\u00e9 tous les \u00e9l\u00e9ments de la s\u00e9quence. Importer la fonction depuis la biblioth\u00e8que : Code from functools import reduce Consulter sa documentation en tapant dans la console : Code >>> help ( reduce ) Ecrire une fonction minimum renvoyant le minimum entre deux nombres pass\u00e9s en param\u00e8tre. Utiliser les informations que vous avez sur reduce pour appliquer la fonction sur la fonction minimum d\u00e9finie en 3., et une liste d'entiers. On doit obtenir en sortie le minimum de la liste des entiers. Ecrire un autre programme calculant le minimum d'une liste d'entiers, mais sans utiliser reduce . B. Les fonctions anonymes, ou lambda \u00b6 Les fonctions d'ordre sup\u00e9rieur peuvent prendre en param\u00e8tre des fonctions d\u00e9j\u00e0 d\u00e9finies, ou bien il est possible de cr\u00e9er une nouvelle fonction \"sur le vif\", sans la nommer. Ce sont des fonctions anonymes , d\u00e9clar\u00e9es avec le mot-cl\u00e9 lambda . La syntaxe est la suivante : Mot-cl\u00e9 Param\u00e8tres d'entr\u00e9e Valeur(s) de sortie lambda x, y : (x+y,y) C'est utile lorsque l'on ne r\u00e9utilisera pas la fonction ensuite, qu'on a besoin d'utiliser une fonction rapidement. Ex\u00e9cuter le code suivant et identifier ce qui est stock\u00e9 dans la variable s : Code s = reduce ( lambda x , y : x + y , [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]) Conclusion \u00b6 Quels sont les int\u00e9r\u00eats d'utiliser le paradigme fonctionnel plut\u00f4t que le paradigme imp\u00e9ratif ?","title":"I. Paradigme imp\u00e9ratif et fonctionnel"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#i-les-paradigmes-imperatif-et-fonctionnel","text":"","title":"I. Les paradigmes imp\u00e9ratif et fonctionnel"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#cours","text":"","title":"Cours"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#exercices","text":"","title":"Exercices"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#tp-programmation-fonctionnelle","text":"Fichier de correction : Correction Vous devez garder un compte-rendu de chaque TP : sauvegardez votre travail dans un ou plusieurs fichier(s) .py.","title":"TP : Programmation fonctionnelle"},{"location":"tle/seq1/POO/","text":"body { text-align: justify} II. Le paradigme orient\u00e9 objet \u00b6 TP : Un combat de monstres \u00b6 Fichier de correction : Correction Dans ce TP, vous utiliserez un seul fichier Python que vous modifierez au fur et \u00e0 mesure. Enregistrez-le au d\u00e9but du TP. Dans l'univers de la s\u00e9rie du Sorceleur de l'\u00e9crivain Andrzej Sapkowski, diff\u00e9rents types de personnages s'affrontent. Certains ont des caract\u00e9ristiques particuli\u00e8res comme les sorceleurs qui sont tr\u00e8s habiles au combat et ma\u00eetrisent une certaine forme de magie. Il sont charg\u00e9s d'\u00e9liminer les monstres pr\u00e9sents sur le continent. Pour repr\u00e9senter une situation de mani\u00e8re r\u00e9aliste, le paradigme dit \"objet\" est le plus appropri\u00e9. Il permet de mod\u00e9liser des \u00e9l\u00e9ments du monde r\u00e9el ou bien des concepts. Ce paradigme utilise des classes, une classe pouvant d\u00e9finir aussi bien un animal, qu'un v\u00e9hicule, un humain, un steak, un schtroumpf... Les \u00e9l\u00e9ments de ces classes sont des objets , que nous allons utiliser pour repr\u00e9senter des sorceleurs et des monstres. Impl\u00e9menter le code suivant : class Personnage : # d\u00e9finition de la classe pass # pour l'instant, elle ne fait rien geralt = Personnage () # cr\u00e9ation d'un \u00e9l\u00e9ment de la classe : un objet monstre = Personnage () # cr\u00e9ation d'un deuxi\u00e8me objet Tous les objets de la classe Personnage auront les m\u00eames caract\u00e9ristiques : des variables nomm\u00e9es attributs , et les m\u00eames comportements d\u00e9finis par des fonctions appel\u00e9es m\u00e9thodes . Parmi les caract\u00e9ristiques des sorceleurs, on peut avoir leur nombre de points de vie. Impl\u00e9menter le code suivant : class Personnage : def __init__ ( self ): # cette fonction est une m\u00e9thode de la classe Personnage nomm\u00e9e \"constructeur\" : utilis\u00e9e pour \"construire\" chaque nouvel objet self . vie = 50 # on attribue 50 points de vie par d\u00e9faut \u00e0 tout nouveau sorceleur geralt = Personnage () monstre = Personnage () Taper dans la console : geralt.vie et monstre.vie et v\u00e9rifier que la valeur attribu\u00e9e \u00e0 l'attribue vie est correcte. On peut vouloir d\u00e9finir au moment de la cr\u00e9ation de chaque objet une valeur initiale de points de vie diff\u00e9rente pour chacun. Modifions le programme : class Personnage : def __init__ ( self , v ): # la valeur est donn\u00e9e en param\u00e8tre du constructeur self . vie = v geralt = Personnage () monstre = Personnage () V\u00e9rifier que le nombre de points de vie de chacun est correct. Note Un constructeur peut avoir plusieurs arguments, mais il a toujours au moins l'argument self qui fait r\u00e9f\u00e9rence \u00e0 l'objet lui-m\u00eame. self est n\u00e9cessaire pour acc\u00e9der aux attributs et aux m\u00e9thodes \u00e0 l'int\u00e9rieur de la classe. Il n'existe plus \u00e0 l'ext\u00e9rieur. Ajoutons quelques m\u00e9thodes \u00e0 notre classe pour mieux simuler le comportement des personnages : class Personnage : def __init__ ( self , v ): self . vie = v def perd_vie ( self ): self . vie = self . vie - 1 def donne_etat ( self ): return self . vie geralt = Personnage ( 50 ) geralt . perd_vie () pts = geralt . donne_etat () Que vaut la variable pts ? Modifier la m\u00e9thode perd_vie pour que le nombre de points perdus soit d\u00e9fini al\u00e9atoirement \u00e0 l'aide de la fonction randint de la biblioth\u00e8que du random : elle retournera un entier entre 1 et 10 qui correspondra au nombre de points perdus. from random import randint # instruction pour importer la fonction help(randint) \"commande pour extraire la documentation de la fonction\" Ajouter un attribut exp repr\u00e9sentant l'exp\u00e9rience du personnage. Cr\u00e9er les m\u00e9thodes gagne_exp et donne_exp permettant, respectivement, de faire gagner une valeur e d'exp\u00e9rience, et de consulter la valeur de l'attribut exp . Cr\u00e9er un programme principal dans lequel geralt affronte monstre selon les r\u00e8gles suivantes : Chacun attaque l'autre \u00e0 tour de r\u00f4le jusqu'\u00e0 ce que le nombre de points de vie d'un des personnages descende \u00e0 0 (ou moins), Si l' exp\u00e9rience d'un personnage est sup\u00e9rieure \u00e0 40, alors son adversaire perd entre 5 et 10 points \u00e0 chaque attaque. Sinon, il perd entre 0 et 5 points. Le vainqueur il gagne 2 points d'exp\u00e9rience. Il peut ensuite combattre un autre adversaire. Attention ! Pour acc\u00e9der aux valeurs des attributs, il faut utiliser les m\u00e9thodes donne_etat et donne_exp . Pour aller plus loin... Vous pouvez \u00e9tendre les possibilit\u00e9s du jeu, par exemple en organisant une sorte de tournoi avec plusieurs sorceleurs et plusieurs monstres. Il est aussi possible d'exploiter les diff\u00e9rences entre monstres et sorceleurs en cr\u00e9ant deux classes diff\u00e9rentes, ayant des m\u00e9thodes sp\u00e9cifiques traduisant les pouvoirs de chacun. Cours \u00b6 A. Syntaxe de la programmation orient\u00e9e objet (POO) \u00b6 Dans le code ci-dessous, entourer la partie correspondant \u00e0 la d\u00e9finition de la classe Exemple d'une couleur, et la partie correspondant \u00e0 son utilisation d'une autre couleur. class Exemple : def __init__ ( self , param1 , param2 ): self . attribut1 = param1 self . attribut2 = param2 def methode ( self , param ): #traitement sur le param\u00e8tre def accesseur_att1 ( self ): return self . attribut1 def mutateur_att1 ( self , val ): self . attribut1 = val e = Exemple ( 1 , \"bonjour\" ) #cr\u00e9ation d'un objet a1 = e . accesseur_att1 () e . mutateur_att1 ( 5 ) #en supposant que attribut1 est de type int - Compl\u00e9ter les d\u00e9finitions suivantes : D\u00e9finition Une classe regroupe un ensemble de propri\u00e9t\u00e9s (ses attributs ) et de comportements (ses m\u00e9thodes ) communes \u00e0 diff\u00e9rents objets. Qu'est-ce qu'un objet ? Un objet est un \u00e9l\u00e9ment, une instance d'une classe. Qu'est-ce qu'un attribut ? Un attribut d'un objet est une caract\u00e9ristique, une propri\u00e9t\u00e9 commune \u00e0 tous les objets de la classe. Qu'est-ce qu'une m\u00e9thode ? Une m\u00e9thode est une fonction d'une classe, traduisant le comportement de ses objets. Elle ne peut s'appliquer que sur les objets de la classe. Le constructeur de la classe ( __init__ ) est une m\u00e9thode particuli\u00e8re, appel\u00e9e \u00e0 la cr\u00e9ation de chaque nouvel objet. Il initialise ses attributs. Les autres m\u00e9thodes manipulent les attributs : elles peuvent chercher \u00e0 y acc\u00e9der ( accesseurs ou \"getters \") ou \u00e0 les modifier ( mutateurs ou \"setters\" ). \\pagebreak B. Exemple \u00b6 class Guitare : def __init__ ( self , t , m ): self . type = t self . marque = m self . notes = [ 0 , 0 , 0 , 0 , 0 , 0 ] #repr\u00e9sente les 6 cordes, et le fret s\u00e9lectionn\u00e9 pour jouer un accord par un int def joue ( self , n ): self . notes = n def ecoute_son ( self ): return self . notes gfolk = Guitare ( \"folk\" , \"Fender\" ) gelec = Guitare ( \"\u00e9lectrique\" , \"Gibson\" ) gelec . joue ([ 0 , 3 , 2 , 0 , 1 , 0 ]) #accord de do s = gelec . ecoute_son () C. Classes et modules \u00b6 C'est une bonne pratique d'\u00e9crire une classe par fichier (voire deux classes si elles ont un rapport entre elle), et ensuite d' importer son contenu dans le fichier dans lequel on veut l'utiliser. Exemple Si j'ai \u00e9crit la classe Guitare dans le fichier guitare.py et que je veux l'utiliser dans un autre fichier, en ent\u00eate de celui-ci je dois \u00e9crire : from guitare import Guitare S'il y a plusieurs classe \u00e9crites dans ce fichier, pour les importer toutes j'\u00e9cris : from guitare import * Exercices \u00b6 Fichiers de correction : Correction Exercice 1 : \u00b6 Sur feuille, \u00e0 tester sur ordinateur. class Chat : def __init__ ( self ): self . faim = 0 self . fatigue = 0 def bonjour ( self ): print ( \"Miaou !\" ) def joue ( self ): self . faim = self . faim + 1 self . fatigue = self . fatigue + 1 class Chien : def __init__ ( self ): self . faim = 0 self . fatigue = 0 def bonjour ( self ): print ( \"Ouaf !\" ) def joue ( self ): self . faim = self . faim + 1 self . fatigue = self . fatigue + 1 Quel est l'int\u00e9r\u00eat ici d'avoir d\u00e9fini deux classes diff\u00e9rentes pour les chiens et pour les chats ? Cr\u00e9er un objet de la classe Chat , un objet de la classe Chien , et les faire se dire bonjour. La fonction isinstance(objet, classe) de Python teste si objet appartient \u00e0 classe . On veut modifier les deux m\u00e9thodes bonjour pour leur donner en param\u00e8tre l'animal auquel est dit bonjour et faire que : un chat dise bonjour \u00e0 un autre chat, mais ignore un chien, un chien dise bonjour \u00e0 un autre chien, et essaye de faire peur \u00e0 un chat en aboyant plus fort : \"OUAF !\". Tester les m\u00e9thodes obtenues. Proposer une autre impl\u00e9mentation utilisant une seule classe Animal , sans perdre l'information que l'on peut avoir des chats ou bien des chiens. Reprendre la version initiale de se saluer des animaux. La tester en cr\u00e9ant des instances de la classe. Ecrire une m\u00e9thode mange et une m\u00e9thode repos dans la classe Animal d\u00e9cr\u00e9mentant respectivement l'attribut faim de 1, et l'attribut fatigue de 2. Exercice 2 : \u00b6 Sur feuille, \u00e0 tester sur ordinateur. from math import sqrt class Astre : '''Corps c\u00e9lestes, d\u00e9finis par leurs propri\u00e9t\u00e9s physiques.''' def __init__ ( self , m , p ): self . masse = m self . position = p def distance ( self , astre ): return ... L'attribut position est une liste Python contenant deux \u00e9l\u00e9ments : sa coordonn\u00e9e en x et sa coordonn\u00e9e en y (on se situe dans le plan, pas en 3D) . Pour calculer la distance entre deux astres de position, respectivement, (x1, y1) et (x2, y2), on utilise la formule math\u00e9matique suivante : \\(d = \\sqrt{ (x_{1}-x_{2})^2 + (y_{1}-y_{2})^2 }\\) Compl\u00e9ter la d\u00e9finition de la m\u00e9thode distance . Un astre peut peser entre 0.07 et 300 fois la masse solaire, elle-m\u00eame de \\(2*10^{30}\\) . Cr\u00e9er deux objets de la classe Astre , de masse minimale et maximale et respectivement de position [15,34] et [6,27]. Calculer la distance entre ces deux objets. Exercice 3 : les attributs priv\u00e9s \u00b6 Sur ordinateur. Les valeurs des attributs des objets Python sont par d\u00e9faut modifiables apr\u00e8s la cr\u00e9ation de l'objet. Il est possible d'interdire la modification des attributs en le d\u00e9clarant avec deux tirets bas avant son nom : __x par exemple. Ils sont alors priv\u00e9s : on ne peut pas les manipuler en dehors de la d\u00e9finition de la classe. C'est une bonne pratique d'utiliser des attributs priv\u00e9s, et c'est ce qui rend les accesseurs et mutateurs n\u00e9cessaires. On rend priv\u00e9s les attributs de la classe Chat de l'exercice 1: class Chat : def __init__ ( self ): self . __faim = 0 self . __fatigue = 0 Cr\u00e9er un objet de la classe. Que se passe-t-il si on tente d'acc\u00e9der \u00e0 ses attributs ? Cr\u00e9er les accesseurs et mutateurs n\u00e9cessaire pour r\u00e9cup\u00e9rer la valeur des deux attributs et pouvoir la modifier. Les tester sur un exemple d'objet. Exercice 4 : les classes de Python \u00b6 Sur ordinateur. Exercice plus difficile (non-obligatoire) Les types Python sont impl\u00e9ment\u00e9s par des classes. Afficher la valeur de l'attribut __class__ des expressions suivantes : () , [] , {} , int(0) . En d\u00e9duire comment utiliser la fonction isinstance de l'exercice 3 pour tester si une valeur est un entier, une liste, un tuple, ou bien un dictionnaire. Utiliser cette fonction pour \u00e9crire une fonction separe qui prend en argument une liste Python et s\u00e9pare les cha\u00eenes de caract\u00e8res des entiers qu'elle contient (c'est une mauvaise pratique de m\u00e9langer les deux !) . Exemple : entiers , caracteres = separe ([ 1 , \"a\" , 666 , \"blablabla\" , \"nsi\" ]) >>> entiers [1,666] >>> caracteres [\"a\", \"blablabla\", \"nsi\"] Exercice 5 : paradigmes objet et imp\u00e9ratif \u00b6 Sur feuille, \u00e0 tester sur ordinateur. Exercice plus difficile (non-obligatoire) Reprendre l'exemple de l'exercice 2. L'objectif est de traduire ce code utilisant le paradigme objet en un code purement imp\u00e9ratif. Pour cela : - On utilise un dictionnaire pour stocker les valeurs des attributs d'un objet (c'est comme \u00e7a que fait Python en r\u00e9alit\u00e9 !) . - On r\u00e9d\u00e9finit les m\u00e9thodes comme de simples fonctions. Utiliser les m\u00eames exemples que dans l'exercice 2. Ce probl\u00e8me est un m\u00e9lange entre ce que pourrait \u00eatre une \u00e9preuve type bac \u00e9crite et pratique. Il a pour but de commencer \u00e0 vous pr\u00e9parer aux deux \u00e9preuves. Probl\u00e8me : Gestion d'adresses IP \u00b6 On rappelle qu'une adresse IPv4 est une adresse de 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re le r\u00e9seau priv\u00e9 192.168.1.0. A quoi sert l'adresse IP attribu\u00e9e \u00e0 une machine ? Ecrire cette adresse en binaire, en faisant appara\u00eetre tous les bits utilis\u00e9s. 192.168.1.0 est une adresse r\u00e9serv\u00e9e, la \"premi\u00e8re\" du r\u00e9seau. On consid\u00e8re qu'on ne peut pas modifier les trois premiers octets pour trouver une adresse \u00e0 attribuer \u00e0 une machine. On ne peut pas non plus utiliser la \"derni\u00e8re\" adresse : celle correspondant au nombre le plus \u00e9lev\u00e9 \u00e9crit sur le dernier octet. Quelle est cette \"derni\u00e8re\" adresse ? En d\u00e9duire le nombre d'adresses de ce r\u00e9seau qui peuvent \u00eatre attribu\u00e9es \u00e0 des machines. Donner une adresse de ce r\u00e9seau utilisable en \u00e9criture d\u00e9cimale, et en binaire. Pour parcourir les adresses utilisables, on d\u00e9finit une classe AdresseIP : class AdresseIP : def __init__ ( self , adresse ): self . adresse = ... def liste_octets ( self ): \"\"\" Renvoie une liste Python de nombres entiers, la liste des octets de l'adresse IP \"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\" Renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon \"\"\" return ... or ... def adresse_suivante ( self ): \"\"\" Renvoie un objet de AdresseIP avec l'adresse IP qui soit celle du self si elle existe, None sinon \"\"\" if ... < 254 : nouvel_octet = ... return AdresseIP ( '192.168.1.' + ... ) else : return None 5. Compl\u00e9ter le constructeur de cette classe. Compl\u00e9ter la m\u00e9thode est_reservee , permettant d'exclure les adresses identifi\u00e9es dans la question 2. Compl\u00e9ter la m\u00e9thode adresse_suivante , en utilisant liste_octets . Cr\u00e9er les objets de la classe ayant pour attribut : 192.168.1.1 , 192.168.1.0 et 192.168.1.254 . Tester les m\u00e9thodes est_reservee et adresse_suivante sur ces objets pour v\u00e9rifier leur bon fonctionnement.","title":"II. Paradigme objet"},{"location":"tle/seq1/POO/#ii-le-paradigme-oriente-objet","text":"","title":"II. Le paradigme orient\u00e9 objet"},{"location":"tle/seq1/POO/#tp-un-combat-de-monstres","text":"Fichier de correction : Correction Dans ce TP, vous utiliserez un seul fichier Python que vous modifierez au fur et \u00e0 mesure. Enregistrez-le au d\u00e9but du TP. Dans l'univers de la s\u00e9rie du Sorceleur de l'\u00e9crivain Andrzej Sapkowski, diff\u00e9rents types de personnages s'affrontent. Certains ont des caract\u00e9ristiques particuli\u00e8res comme les sorceleurs qui sont tr\u00e8s habiles au combat et ma\u00eetrisent une certaine forme de magie. Il sont charg\u00e9s d'\u00e9liminer les monstres pr\u00e9sents sur le continent. Pour repr\u00e9senter une situation de mani\u00e8re r\u00e9aliste, le paradigme dit \"objet\" est le plus appropri\u00e9. Il permet de mod\u00e9liser des \u00e9l\u00e9ments du monde r\u00e9el ou bien des concepts. Ce paradigme utilise des classes, une classe pouvant d\u00e9finir aussi bien un animal, qu'un v\u00e9hicule, un humain, un steak, un schtroumpf... Les \u00e9l\u00e9ments de ces classes sont des objets , que nous allons utiliser pour repr\u00e9senter des sorceleurs et des monstres. Impl\u00e9menter le code suivant : class Personnage : # d\u00e9finition de la classe pass # pour l'instant, elle ne fait rien geralt = Personnage () # cr\u00e9ation d'un \u00e9l\u00e9ment de la classe : un objet monstre = Personnage () # cr\u00e9ation d'un deuxi\u00e8me objet Tous les objets de la classe Personnage auront les m\u00eames caract\u00e9ristiques : des variables nomm\u00e9es attributs , et les m\u00eames comportements d\u00e9finis par des fonctions appel\u00e9es m\u00e9thodes . Parmi les caract\u00e9ristiques des sorceleurs, on peut avoir leur nombre de points de vie. Impl\u00e9menter le code suivant : class Personnage : def __init__ ( self ): # cette fonction est une m\u00e9thode de la classe Personnage nomm\u00e9e \"constructeur\" : utilis\u00e9e pour \"construire\" chaque nouvel objet self . vie = 50 # on attribue 50 points de vie par d\u00e9faut \u00e0 tout nouveau sorceleur geralt = Personnage () monstre = Personnage () Taper dans la console : geralt.vie et monstre.vie et v\u00e9rifier que la valeur attribu\u00e9e \u00e0 l'attribue vie est correcte. On peut vouloir d\u00e9finir au moment de la cr\u00e9ation de chaque objet une valeur initiale de points de vie diff\u00e9rente pour chacun. Modifions le programme : class Personnage : def __init__ ( self , v ): # la valeur est donn\u00e9e en param\u00e8tre du constructeur self . vie = v geralt = Personnage () monstre = Personnage () V\u00e9rifier que le nombre de points de vie de chacun est correct. Note Un constructeur peut avoir plusieurs arguments, mais il a toujours au moins l'argument self qui fait r\u00e9f\u00e9rence \u00e0 l'objet lui-m\u00eame. self est n\u00e9cessaire pour acc\u00e9der aux attributs et aux m\u00e9thodes \u00e0 l'int\u00e9rieur de la classe. Il n'existe plus \u00e0 l'ext\u00e9rieur. Ajoutons quelques m\u00e9thodes \u00e0 notre classe pour mieux simuler le comportement des personnages : class Personnage : def __init__ ( self , v ): self . vie = v def perd_vie ( self ): self . vie = self . vie - 1 def donne_etat ( self ): return self . vie geralt = Personnage ( 50 ) geralt . perd_vie () pts = geralt . donne_etat () Que vaut la variable pts ? Modifier la m\u00e9thode perd_vie pour que le nombre de points perdus soit d\u00e9fini al\u00e9atoirement \u00e0 l'aide de la fonction randint de la biblioth\u00e8que du random : elle retournera un entier entre 1 et 10 qui correspondra au nombre de points perdus. from random import randint # instruction pour importer la fonction help(randint) \"commande pour extraire la documentation de la fonction\" Ajouter un attribut exp repr\u00e9sentant l'exp\u00e9rience du personnage. Cr\u00e9er les m\u00e9thodes gagne_exp et donne_exp permettant, respectivement, de faire gagner une valeur e d'exp\u00e9rience, et de consulter la valeur de l'attribut exp . Cr\u00e9er un programme principal dans lequel geralt affronte monstre selon les r\u00e8gles suivantes : Chacun attaque l'autre \u00e0 tour de r\u00f4le jusqu'\u00e0 ce que le nombre de points de vie d'un des personnages descende \u00e0 0 (ou moins), Si l' exp\u00e9rience d'un personnage est sup\u00e9rieure \u00e0 40, alors son adversaire perd entre 5 et 10 points \u00e0 chaque attaque. Sinon, il perd entre 0 et 5 points. Le vainqueur il gagne 2 points d'exp\u00e9rience. Il peut ensuite combattre un autre adversaire. Attention ! Pour acc\u00e9der aux valeurs des attributs, il faut utiliser les m\u00e9thodes donne_etat et donne_exp . Pour aller plus loin... Vous pouvez \u00e9tendre les possibilit\u00e9s du jeu, par exemple en organisant une sorte de tournoi avec plusieurs sorceleurs et plusieurs monstres. Il est aussi possible d'exploiter les diff\u00e9rences entre monstres et sorceleurs en cr\u00e9ant deux classes diff\u00e9rentes, ayant des m\u00e9thodes sp\u00e9cifiques traduisant les pouvoirs de chacun.","title":"TP : Un combat de monstres"},{"location":"tle/seq1/POO/#cours","text":"","title":"Cours"},{"location":"tle/seq1/POO/#exercices","text":"Fichiers de correction : Correction","title":"Exercices"},{"location":"tle/seq1/POO/#probleme-gestion-dadresses-ip","text":"On rappelle qu'une adresse IPv4 est une adresse de 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re le r\u00e9seau priv\u00e9 192.168.1.0. A quoi sert l'adresse IP attribu\u00e9e \u00e0 une machine ? Ecrire cette adresse en binaire, en faisant appara\u00eetre tous les bits utilis\u00e9s. 192.168.1.0 est une adresse r\u00e9serv\u00e9e, la \"premi\u00e8re\" du r\u00e9seau. On consid\u00e8re qu'on ne peut pas modifier les trois premiers octets pour trouver une adresse \u00e0 attribuer \u00e0 une machine. On ne peut pas non plus utiliser la \"derni\u00e8re\" adresse : celle correspondant au nombre le plus \u00e9lev\u00e9 \u00e9crit sur le dernier octet. Quelle est cette \"derni\u00e8re\" adresse ? En d\u00e9duire le nombre d'adresses de ce r\u00e9seau qui peuvent \u00eatre attribu\u00e9es \u00e0 des machines. Donner une adresse de ce r\u00e9seau utilisable en \u00e9criture d\u00e9cimale, et en binaire. Pour parcourir les adresses utilisables, on d\u00e9finit une classe AdresseIP : class AdresseIP : def __init__ ( self , adresse ): self . adresse = ... def liste_octets ( self ): \"\"\" Renvoie une liste Python de nombres entiers, la liste des octets de l'adresse IP \"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\" Renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon \"\"\" return ... or ... def adresse_suivante ( self ): \"\"\" Renvoie un objet de AdresseIP avec l'adresse IP qui soit celle du self si elle existe, None sinon \"\"\" if ... < 254 : nouvel_octet = ... return AdresseIP ( '192.168.1.' + ... ) else : return None 5. Compl\u00e9ter le constructeur de cette classe. Compl\u00e9ter la m\u00e9thode est_reservee , permettant d'exclure les adresses identifi\u00e9es dans la question 2. Compl\u00e9ter la m\u00e9thode adresse_suivante , en utilisant liste_octets . Cr\u00e9er les objets de la classe ayant pour attribut : 192.168.1.1 , 192.168.1.0 et 192.168.1.254 . Tester les m\u00e9thodes est_reservee et adresse_suivante sur ces objets pour v\u00e9rifier leur bon fonctionnement.","title":"Probl\u00e8me : Gestion d'adresses IP"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/","text":"body { text-align: justify} Synth\u00e8se sur les paradigmes de programmation \u00b6 Fichiers de synth\u00e8se : Correction A. Les diff\u00e9rents paradigmes \u00b6 Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe g\u00e9n\u00e9ral Avantage Cas d'usage courant Compl\u00e9ter le tableau r\u00e9capitulatif sur les 3 paradigmes vus dans le cours, en indiquant leur principe et leurs avantages . Associer les diff\u00e9rents paradigmes \u00e0 un cas d'usage/champ d'application parmi la liste ci-dessous : calculs math\u00e9matiques - traitement de donn\u00e9es - d\u00e9veloppement de jeu vid\u00e9o Solution Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe S\u00e9quences d'instructions Utilisation de fonctions dites pures Utilisation de classes Avantages Proche du fonctionnement de la machine, intuitif Plus facile \u00e0 d\u00e9boger, rigoureux Plus proche du monde r\u00e9el, modulable Cas d'usage courant traitement de donn\u00e9es calculs math\u00e9matiques d\u00e9veloppement de jeu vid\u00e9o B. Langages et paradigmes \u00b6 Les langages informatiques sont souvent pens\u00e9s pour un paradigme, mais aujourd'hui beaucoup d'entre eux sont multi-paradigmes pour permettre plus de flexibilit\u00e9 et toucher plus de programmeurs. C'est le cas de Python, langage imp\u00e9ratif mais pouvant utiliser des caract\u00e9ristiques fonctionnelles et permettant la POO. Les langages \u00e9voluent avec les pratiques des d\u00e9veloppeurs. Le succ\u00e8s de la POO a fait qu'elle a \u00e9t\u00e9 incorpor\u00e9e \u00e0 des langages con\u00e7us \u00e0 l'origine pour d'autres paradigmes. Par exemple, C++ est une version \"am\u00e9lior\u00e9e\" du C (langage imp\u00e9ratif) qui permet d'utiliser la POO. De m\u00eame, Caml est un langage tr\u00e8s fonctionnel, utilis\u00e9 notamment pour faire des preuves de programmes, qui incorpore la programmation objet dans son \u00e9volution OCaml (\"Objective Caml\"). Plus g\u00e9n\u00e9ralement, il est possible d'int\u00e9grer plusieurs langages dans le d\u00e9veloppement d'un logiciel, pour exploiter le meilleur de chacun.","title":"III. Synth\u00e8se"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#synthese-sur-les-paradigmes-de-programmation","text":"Fichiers de synth\u00e8se : Correction","title":"Synth\u00e8se sur les paradigmes de programmation"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#a-les-differents-paradigmes","text":"Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe g\u00e9n\u00e9ral Avantage Cas d'usage courant Compl\u00e9ter le tableau r\u00e9capitulatif sur les 3 paradigmes vus dans le cours, en indiquant leur principe et leurs avantages . Associer les diff\u00e9rents paradigmes \u00e0 un cas d'usage/champ d'application parmi la liste ci-dessous : calculs math\u00e9matiques - traitement de donn\u00e9es - d\u00e9veloppement de jeu vid\u00e9o Solution Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe S\u00e9quences d'instructions Utilisation de fonctions dites pures Utilisation de classes Avantages Proche du fonctionnement de la machine, intuitif Plus facile \u00e0 d\u00e9boger, rigoureux Plus proche du monde r\u00e9el, modulable Cas d'usage courant traitement de donn\u00e9es calculs math\u00e9matiques d\u00e9veloppement de jeu vid\u00e9o","title":"A. Les diff\u00e9rents paradigmes"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#b-langages-et-paradigmes","text":"Les langages informatiques sont souvent pens\u00e9s pour un paradigme, mais aujourd'hui beaucoup d'entre eux sont multi-paradigmes pour permettre plus de flexibilit\u00e9 et toucher plus de programmeurs. C'est le cas de Python, langage imp\u00e9ratif mais pouvant utiliser des caract\u00e9ristiques fonctionnelles et permettant la POO. Les langages \u00e9voluent avec les pratiques des d\u00e9veloppeurs. Le succ\u00e8s de la POO a fait qu'elle a \u00e9t\u00e9 incorpor\u00e9e \u00e0 des langages con\u00e7us \u00e0 l'origine pour d'autres paradigmes. Par exemple, C++ est une version \"am\u00e9lior\u00e9e\" du C (langage imp\u00e9ratif) qui permet d'utiliser la POO. De m\u00eame, Caml est un langage tr\u00e8s fonctionnel, utilis\u00e9 notamment pour faire des preuves de programmes, qui incorpore la programmation objet dans son \u00e9volution OCaml (\"Objective Caml\"). Plus g\u00e9n\u00e9ralement, il est possible d'int\u00e9grer plusieurs langages dans le d\u00e9veloppement d'un logiciel, pour exploiter le meilleur de chacun.","title":"B. Langages et paradigmes"},{"location":"tle/seq10/algo/","text":"body { text-align: justify} II. Algorithmique sur les graphes \u00b6 Cours \u00b6 Parcourir un graphe consiste \u00e0 lister tous ses sommets, dans un certain ordre. Il y a deux raisons principales au parcours d\u2019un graphe : simplement obtenir l\u2019ensemble des sommets ou bien trouver un chemin sp\u00e9cifique reliant un sommet \u00e0 un autre. A. Parcours en largeur \u00b6 Exemple On consid\u00e8re un r\u00e9seau social o\u00f9 ses utilisateurs sont repr\u00e9sent\u00e9s par les sommets d\u2019un graphe et leurs liens par ses ar\u00eates. On veut estimer comment une information va se propager dans le r\u00e9seau, en fonction de qui commence \u00e0 la propager. Chacun la transmettra \u00e0 ses voisins, qui feront de m\u00eame, etc. Cela revient \u00e0 faire un parcours en largeur du graphe. Principe du parcours en largeur On part d\u2019un sommet S. On visite les voisins de S. On consid\u00e8re chacun de ces voisins successivement, et on visite leurs voisins non-visit\u00e9s. Ainsi de suite jusqu\u2019\u00e0 ce qu\u2019il n\u2019y ait plus de sommets non-visit\u00e9s. Exemple Donner les parcours en largeur obtenus en partant des sommets B, E, C et H (on utilise l\u2019ordre lexicographique pour citer les voisins d\u2019un sommet). Solution pour B B, A, C, D, E, F, G, H, I Solution pour E E, B, G, H, A, C, D, F, I Solution pour C C, B, D, A, E, F, G, H, I Solution pour H H, E, G, I, B, F, A, C, D Pourquoi est-il judicieux d\u2019utiliser une structure de file pour cet algorithme ? On utilise une file car on veut citer \u00e0 la suite les sommets qui sont \u00e0 une m\u00eame distance du sommet de d\u00e9part : on les cite au fur et \u00e0 mesure qu\u2019on les rencontre, au fur et \u00e0 mesure que l\u2019on peut trouver un chemin depuis le sommet de d\u00e9part qui m\u00e8ne \u00e0 ce sommet. B. Parcours en profondeur \u00b6 Exemple Un robot d\u2019indexation (\u00ab crawler \u00bb) indexe un ensemble de sites Web reli\u00e9s par des liens hypertextes. Ceux-ci sont repr\u00e9sent\u00e9s par un graphe orient\u00e9 dont ils sont les sommets, leurs liens correspondant \u00e0 ses arcs. Pour cela, il les parcourt un par un au hasard, en partant de l\u2019un d\u2019entre eux, en suivant un chemin dans le graphe. Lorsqu\u2019il ne trouve plus de nouveau site, il revient en arri\u00e8re. Cela revient \u00e0 faire un parcours en profondeur du graphe. Principe du parcours en profondeur On part d\u2019un sommet. On visite un de ses voisins. Puis on visite un des voisins non-parcourus de ce dernier. Ainsi de suite jusqu\u2019\u00e0 ce qu\u2019on consid\u00e8re un sommet n\u2019ayant pas ou plus de sommets non-parcourus. Dans ce cas, on revient en arri\u00e8re jusqu\u2019\u00e0 trouver un sommet non-parcouru. On s\u2019arr\u00eate lorsqu\u2019on ne trouve plus de sommet non-parcouru. Exemple Donner des parcours en profondeurs obtenus en partant des sommets 1, 2, 3 et 5 (lorsque l\u2019on a le choix, on choisit l\u2019ordre croissant des nombres). Solution pour 1 1, 2, 3, 4, 5, 6 Solution pour 2 2, 1, 3, 4, 5, 6 Solution pour 3 3, 4, 2, 1, 5, 6 Solution pour 5 rien n\u2019est possible Pourquoi est-il judicieux d\u2019utiliser une structure de pile pour cet algorithme ? La pile sert lorsqu\u2019il n\u2019y a plus de nouveau sommet et qu\u2019il faut revenir en arri\u00e8re, par les sommets d\u00e9j\u00e0 parcourus et le dernier en premier, jusqu\u2019\u00e0 trouver un nouveau sommet. C. Recherche d\u2019un chemin \u00b6 Pour chercher un chemin/une cha\u00eene entre deux sommets, on peut s\u2019inspirer du parcours en profondeur . Que faut-il adapter ? On part du sommet source, et on s\u2019arr\u00eate lorsque l\u2019on atteint le sommet destination, et on retourne ce chemin. Pour rechercher le plus court chemin entre deux sommets, on utilise l\u2019algorithme de Dijkstra , vu dans la s\u00e9quence sur les r\u00e9seaux informatiques. D. Recherche d\u2019un cycle \u00b6 Pour obtenir tous les cycles d\u2019un graphe, on peut s\u2019inspirer de l\u2019 algorithme de recherche d\u2019un chemin . Que faut-il modifier dans celui-ci ? On parcourt tous les sommets, et le sommet source et le sommet destination du chemin doivent \u00eatre les m\u00eames. TD \u00b6 Exercice 1 : les parcours \u00b6 Appliquer l\u2019algorithme de parcours en largeur au graphe ci-dessous. Choisir un sommet duquel partir. graph LR A --- B A --- D B --- C C --- D B --- E E --- C Appliquer l\u2019algorithme de parcours en profondeur au m\u00eame graphe, en partant du m\u00eame sommet. Lui appliquer l\u2019algorithme de recherche de cha\u00eene entre A et E. Exercice 2 : les recherches \u00b6 Appliquer l\u2019algorithme de d\u00e9tection de cycle au graphe ci-dessous. graph LR A --- B B --- F A --- C C --- E C --- D Appliquer le m\u00eame algorithme \u00e0 un deuxi\u00e8me graphe : graph LR A --- B B --- F A --- C C --- E C --- D F --- D Exercice 3 : algorithme de Dijkstra \u00b6 Un politicien se trouve \u00e0 sa permanence (en P) et doit se rendre \u00e0 l\u2019h\u00f4pital (en H) le plus rapidement possible. Le graphe ci-dessous repr\u00e9sente le temps de trajet pour aller d\u2019un point \u00e0 un autre. graph LR A --3--- B A --7--- C A --4--- P P --6--- B B --4--- D P --12--- D P --11--- C C --10--- G D --9--- G D --5--- F G --10--- H C --11--- E E --9--- H Quel chemin doit-il emprunter pour y arriver au plus vite ? V\u00e9rifier votre r\u00e9ponse avec l\u2019impl\u00e9mentation de l\u2019algorithme de Dijkstra fournie, en compl\u00e9tant la structure repr\u00e9sentant le graphe et en faisant le bon appel de fonction (\u00e0 modifier). TP : Les parcours de graphes \u00b6 A. Le parcours en largeur \u00b6 Nous allons impl\u00e9menter le parcours en largeur d'un graphe de mani\u00e8re it\u00e9rative. Nous allons pour cela utiliser la repr\u00e9sentation d'un graphe sous forme de liste d'adjacence , en utilisant un dictionnaire. Le graphe g ci-dessous repr\u00e9sente le r\u00e9seau social du cours : g = { 'A' :[ 'B' , 'F' ], 'B' :[ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' , 'G' ], 'C' :[ 'B' , 'D' ], 'D' :[ 'B' , 'D' ], 'E' :[ 'B' , 'G' , 'H' ], \\ 'F' :[ 'A' , 'B' , 'I' ], 'G' :[ 'B' , 'E' , 'H' ], 'H' :[ 'G' , 'E' , 'I' ], 'I' :[ 'F' , 'H' ]} Nous allons distinguer les sommets visit\u00e9s des sommets parcourus : un sommet est consid\u00e9r\u00e9 visit\u00e9 \u00e0 partir du moment o\u00f9 ils ont \u00e9t\u00e9 plac\u00e9 dans la file. Un sommet est parcouru quand ses voisins ont \u00e9t\u00e9 visit\u00e9s. Il va falloir utiliser deux variables diff\u00e9rentes pour identifier ces sommets. Les \u00e9tapes du parcours en largeur peuvent \u00eatre r\u00e9sum\u00e9es de la mani\u00e8re suivante : - On consid\u00e8re un sommet S que l'on enfile dans une file F . - On enfile les voisins de S dans F s\u2019ils n'ont pas \u00e9t\u00e9 visit\u00e9s, et on les consid\u00e8re visit\u00e9s. - S est ajout\u00e9 au parcours (il est consid\u00e9r\u00e9 parcouru). - On d\u00e9file F et on consid\u00e8re le nouveau sommet de la file. - On recommence ces 3 derni\u00e8res \u00e9tapes tant que F n\u2019est pas vide. 1. Etapes pr\u00e9liminaires \u00b6 Identifier toutes les structures de donn\u00e9es n\u00e9cessaires \u00e0 l'impl\u00e9mentation de l'algorithme. Identifier les op\u00e9rations qui se r\u00e9p\u00e8tent et en d\u00e9duire la boucle \u00e0 utiliser et sa condition de sortie. 2. Pseudo-code \u00b6 Produire un pseudo-code de l'algorithme, avec toutes les structures \u00e0 utiliser, mais sans le d\u00e9tails de toutes les instructions. Par exemple, on peut dire \"on consid\u00e8re S visit\u00e9 \" sans expliciter comment est-ce qu'on le fait. Proposition Ci-dessous une proposition de pseudo-code : Entr\u00e9es: la structure de graphe G le sommet source S Sortie: la liste des sommets parcours F est une file vide On enfile S dans F On initialise une liste parcours \u00e0 la liste vide On initialise une liste visites avec le sommet S Tant que F non vide: S <- le sommet d\u00e9fil\u00e9 de F On enfile dans F les voisins de S non visit\u00e9s, et on les consid\u00e8re visit\u00e9s On ajoute S \u00e0 parcours On d\u00e9file F Fin tant que 3. Impl\u00e9mentation \u00b6 Impl\u00e9menter cet algorithme en utilisant la structure de file donn\u00e9es ci-dessous. Le tester sur le graphe g donn\u00e9 pr\u00e9c\u00e9demment. class File : ''' D\u00e9finition d'une classe File une instance File est cr\u00e9e avec une liste Python ''' def __init__ ( self ): \"Initialisation d'une pile vide\" self . L = [] def vide ( self ): \"Teste si la file est vide\" return self . L == [] def defiler ( self ): \"D\u00e9file : enl\u00e8ve le premier \u00e9l\u00e9ment\" assert ( not ( self . vide ()) ), \"File vide !\" return self . L . pop ( 0 ) def enfiler ( self , x ): \"Enfile : ajoute un \u00e9l\u00e9ment \u00e0 la fin\" self . L . append ( x ) def taille ( self ): return len ( self . L ) def sommet ( self ): return self . L [ 0 ] def parcours_largeur ( G , S ): #\u00e0 compl\u00e9ter B. Le parcours en profondeur \u00b6 Nous allons impl\u00e9menter le parcours en profondeur d'un graphe de mani\u00e8re it\u00e9rative. Nous allons utiliser la m\u00eame repr\u00e9sentation d'un graphe que pour le parcours en largeur, mais nous n'avons pas besoin ici de la distinction entre sommet visit\u00e9 et sommet parcouru. Les \u00e9tapes du parcours en profondeur peuvent \u00eatre r\u00e9sum\u00e9es de la mani\u00e8re suivante : - On part d\u2019un sommet que l\u2019on empile dans P . - Si le sommet de la pile a des voisins qui n'ont pas \u00e9t\u00e9 parcourus : - on consid\u00e8re le premier de ceux-ci - on l\u2019empile dans P - on l'ajoute au parcours - Sinon, on d\u00e9pile P et on consid\u00e8re son sommet. - On applique cette instruction conditionnelle tant que P n\u2019est pas vide. L'objectif est d'aboutir \u00e0 l'impl\u00e9mentation de cet algorithme, en utilisant les m\u00eames \u00e9tapes que pr\u00e9c\u00e9demment. 1. Etapes pr\u00e9liminaires \u00b6 Identifier les diff\u00e9rentes variables \u00e0 utiliser, et leur type. Identifier les op\u00e9rations qui vont se trouver dans la boucle, et sa condition de sortie. 2. Pseudo-code \u00b6 Formuler un pseudo-code de l'algorithme, en vous basant sur sa description et sur les \u00e9tapes pr\u00e9liminaires. Proposition Ci-dessous une proposition de pseudo-code : Entr\u00e9es : la structure de graphe G le sommet source S Sortie : la liste des sommets parcours P est une pile vide On empile un sommet dans P On initialise une liste parcours avec le sommet S Tant que P n\u2019est pas vide: S \u2190 sommet de P On initialise liste_voisins \u00e0 une liste vide s\u2019ils ne sont pas dans parcours, on ajoute les voisins de S dans liste_voisins Si liste_voisins n\u2019est pas vide: on s\u00e9lectionne le premier de ses \u00e9l\u00e9ments on empile cet \u00e9l\u00e9ment dans P on ajoute cet \u00e9l\u00e9ment \u00e0 sommets_parcourus Sinon : on d\u00e9pile P Fin si Fin tant que 3. Impl\u00e9mentation \u00b6 Impl\u00e9menter l'algorithme obtenu. On utilisera la structure de pile donn\u00e9e ci-dessous : class Pile : ''' D\u00e9finition d'une classe Pile une instance Pile est cr\u00e9\u00e9e avec une liste Python ''' def __init__ ( self ): \"Initialisation d'une pile vide\" self . L = [] def vide ( self ): \"Teste si la pile est vide\" return self . L == [] def depiler ( self ): \"D\u00e9pile : enl\u00e8ve le dernier \u00e9l\u00e9ment\" assert ( not ( self . vide ()) ), \"Pile vide !\" return self . L . pop ( len ( self . L ) - 1 ) def empiler ( self , x ): \"Empile : ajoute un \u00e9l\u00e9ment \u00e0 la fin\" self . L . append ( x ) def taille ( self ): \"Retourne la taille (le nombre d'\u00e9l\u00e9ments) de la pile\" return len ( self . L ) def sommet ( self ): \"Retourne le premier \u00e9l\u00e9ment \u00e0 sortir de la pile sans le d\u00e9piler\" return self . L [ self . taille () - 1 ] def __str__ ( self ): \"Affiche le contenu de la pile\" return \"Le contenu de la pile est : \" + str ( self . L ) def parcours_profondeur ( G , S ): #\u00e0 compl\u00e9ter Modifier l'algorithme pr\u00e9c\u00e9dent pour que le sommet choisi \u00e0 chaque nouvelle \u00e9tape soit choisi au hasard parmi la liste des voisins non-visit\u00e9s, et ne soit pas forc\u00e9ment le premier.","title":"II. Algorithmique"},{"location":"tle/seq10/algo/#ii-algorithmique-sur-les-graphes","text":"","title":"II. Algorithmique sur les graphes"},{"location":"tle/seq10/algo/#cours","text":"Parcourir un graphe consiste \u00e0 lister tous ses sommets, dans un certain ordre. Il y a deux raisons principales au parcours d\u2019un graphe : simplement obtenir l\u2019ensemble des sommets ou bien trouver un chemin sp\u00e9cifique reliant un sommet \u00e0 un autre.","title":"Cours"},{"location":"tle/seq10/algo/#td","text":"","title":"TD"},{"location":"tle/seq10/algo/#tp-les-parcours-de-graphes","text":"","title":"TP : Les parcours de graphes"},{"location":"tle/seq10/representation/","text":"body { text-align: justify} I. Repr\u00e9sentation des graphes \u00b6 Cours \u00b6 Nous avons d\u00e9fini dans une s\u00e9quence pr\u00e9c\u00e9dente la notion de graphe et son vocabulaire associ\u00e9. Pour les utiliser informatiquement, il va falloir en donner une repr\u00e9sentation math\u00e9matique que nous impl\u00e9menterons ensuite. A. Matrice d\u2019adjacence \u00b6 A.1. Graphes non-pond\u00e9r\u00e9s \u00b6 D\u00e9finition On appelle matrice d\u2019adjacence associ\u00e9e \u00e0 un graphe \\(G\\) non-pond\u00e9r\u00e9 la matrice \\(A\\) dont le terme \\(a_{ij}\\) vaut 1 si les sommets \\(i\\) (indice de la ligne de la matrice) et \\(j\\) (indice de la colonne de la matrice) et sont reli\u00e9s par une ar\u00eate et \\(0\\) sinon, avec \\(i\\) et \\(j\\) variant de \\(1\\) \u00e0 \\(n\\) . Exemple 1 Compl\u00e9ter la matrice d\u2019adjacence de l\u2019exemple ci-dessous. graph LR A((0)) --- B((1)) A --- C((2)) B --- D((3)) B --- E((4)) C --- G((5)) C --- E E --- G Solution \\(A = \\begin{matrix} 0 & 1 & 1 & 0 & 0 & 0\\\\ 1 & 0 & 0 & 1 & 1 & 0\\\\ 1 & 0 & 0 & 0 & 1 & 1\\\\ 0 & 1 & 0 & 0 & 0 & 0\\\\ 0 & 1 & 1 & 0 & 0 & 1\\\\ 0 & 0 & 1 & 0 & 1 & 0\\\\ \\end{matrix}\\) Propri\u00e9t\u00e9 La matrice d\u2019adjacence d\u2019un graphe non-orient\u00e9 est forc\u00e9ment sym\u00e9trique par rapport \u00e0 sa diagonale. Exemple 2 Comparer la matrice d\u2019adjacence pr\u00e9c\u00e9dente \u00e0 celle du graphe ci-contre. graph LR A((0)) --> B((1)) A --> C((2)) B --> D((3)) B --> E((4)) C --> G((5)) C --> E E --> G Solution \\(A = \\begin{matrix} 0 & 1 & 1 & 0 & 0 & 0\\\\ 0 & 0 & 0 & 1 & 1 & 0\\\\ 0 & 0 & 0 & 0 & 1 & 1\\\\ 0 & 0 & 0 & 0 & 0 & 0\\\\ 0 & 0 & 0 & 0 & 0 & 1\\\\ 0 & 0 & 0 & 0 & 0 & 0\\\\ \\end{matrix}\\) A.2. Graphes pond\u00e9r\u00e9s \u00b6 D\u00e9finition La matrice d\u2019adjacence d\u2019un graphe \\(G\\) pond\u00e9r\u00e9 est la matrice \\(A\\) dont le terme \\(a_{ij}\\) tel que : - \\(a_{ij}\\) est le poids de l\u2019ar\u00eate (ou de l\u2019arc) du sommet \\(i\\) au sommet \\(j\\) , - \\(a_{ij} = 0\\) si aucune ar\u00eate (ou arc) ne relie les sommets \\(i\\) et \\(j\\) . Exemple 3 Compl\u00e9ter la matrice d\u2019adjacence de l\u2019exemple ci-contre. graph LR A((0)) --2--- B((1)) A --5--- C((2)) B --1--- D((3)) B --6--- E((4)) C --3--- G((5)) C --2--- E E --8--- G Solution \\(A = \\begin{matrix} 0 & 2 & 5 & 0 & 0 & 0\\\\ 2 & 0 & 0 & 1 & 6 & 0\\\\ 5 & 0 & 0 & 0 & 2 & 3\\\\ 0 & 1 & 0 & 0 & 0 & 0\\\\ 0 & 6 & 2 & 0 & 0 & 8\\\\ 0 & 0 & 3 & 0 & 8 & 0\\\\ \\end{matrix}\\) B. Listes d\u2019adjacence \u00b6 On peut \u00e9galement repr\u00e9senter un graphe avec, pour chacun de ses sommets, la liste des sommets auxquels il est reli\u00e9. Quelle diff\u00e9rence cela fait-il par rapport \u00e0 l\u2019utilisation d\u2019une matrice ? On stocke moins de donn\u00e9es car on ne repr\u00e9sente que les connexions existantes (pas de \"0\"). Vocabulaire Lorsque le graphe est non-orient\u00e9, on parle de liste de voisins . Lorsqu\u2019il est orient\u00e9, en fonction des probl\u00e8mes consid\u00e9r\u00e9s, on choisit de le repr\u00e9senter par la liste de ses successeurs ou celle de ses pr\u00e9d\u00e9cesseurs . Exemples Quelle est la liste des voisins repr\u00e9sentant le graphe de l' exemple 1 ? 0: 1,2 / 1: 0, 3, 4 / 2: 0, 4, 5 / 3: 1 / 4: 1, 2, 5 / 5: 2, 4 Quelle est la liste des pr\u00e9d\u00e9cesseurs de l' exemple 2 ? Sa liste des successeurs ? liste des pr\u00e9decesseurs : 0: aucun / 1: 0 / 2: 0 / 3: 1 / 4: 1, 2 / 5: 2,4 / liste des successeurs : 0: 1, 2 / 1: 3, 4 / 2: 4, 5 / 3: aucun / 4: 5 / 5: aucun TP : Repr\u00e9senter les graphes informatiquement \u00b6 A. Impl\u00e9mentation avec une matrice d\u2019adjacence \u00b6 On consid\u00e8re le graphe repr\u00e9sentant le r\u00e9seau social ci-contre : Donner sa matrice d\u2019adjacence. N.B. : lorsque les sommets sont \u00e9tiquet\u00e9s avec des lettres, on associe g\u00e9n\u00e9ralement le premier sommet dans l\u2019ordre lexicographique (ici A) \u00e0 la premi\u00e8re ligne de la matrice, et ainsi de suite. Pour la repr\u00e9senter en Python, nous allons utiliser une liste de liste Python (liste \u00e0 deux dimensions). Si on la stocke dans une variable m , on acc\u00e8de \u00e0 l\u2019\u00e9l\u00e9ment de la ligne i et de la colonne j avec l\u2019instruction m[i][j] . a. Repr\u00e9senter cette variable m pour notre exemple. b. Quelle instruction permet de savoir si B et D sont adjacents ? A et E ? Nous allons en fait utiliser une classe pour repr\u00e9senter notre graphe, de mani\u00e8re \u00e0 pouvoir rajouter des m\u00e9thodes nous donnant des propri\u00e9t\u00e9s sur le graphe : class GrapheM : def __init__ ( self , matrice ): self . m = matrice def est_adjacent ( self , i , j ): return ... def est_symetrique ( self ): for i in range ( len ( self . m )): for j in range ( len ( self . m [ 0 ])): if ... return False return True La m\u00e9thode est_adjacent d\u00e9termine si deux sommets i et j du graphe sont adjacents ou non. a. Comment faut-il la compl\u00e9ter pour qu\u2019elle fonctionne pour un graphe non-pond\u00e9r\u00e9 ? b. Comment faut-il la compl\u00e9ter pour qu\u2019elle fonctionne pour un graphe pond\u00e9r\u00e9 ? Utiliser cette deuxi\u00e8me version. La m\u00e9thode est_symetrique renvoie si, oui ou non, le graphe repr\u00e9sent\u00e9 par la matrice m est sym\u00e9trique. Compl\u00e9ter-la. Utiliser la matrice cr\u00e9e dans la question 2 pour cr\u00e9er un objet de la classe GrapheM repr\u00e9sentant le graphe de l\u2019exemple. 6. a. Quelle instruction permet de savoir si B et G sont adjacents ? A et H ? <br> b. Quelle instruction permet de savoir si le graphe de notre exemple est sym\u00e9trique ? <br><br> B. Impl\u00e9mentation avec une liste d\u2019adjacence \u00b6 On consid\u00e8re un ensemble de site Web reli\u00e9s par des liens hypertextes. Donner sa repr\u00e9sentation sous forme de matrice d\u2019adjacence. Donner sa repr\u00e9sentation sous la forme de : a. liste des pr\u00e9d\u00e9cesseurs : b. liste des successeurs : Nous allons \u00e9galement utiliser une liste de liste Python pour repr\u00e9senter ce graphe sous forme de liste d\u2019adjacence. Donner l\u2019impl\u00e9mentation de la liste des successeurs de cet exemple : Pour, cette fois aussi, associer des m\u00e9thodes \u00e0 notre repr\u00e9sentation, nous utilisons une classe GrapheL : class GrapheL : def __init__ ( self , lst ): self . lst = lst def est_adjacent ( self , i , j ): return ... def graphe_vers_matrice ( self ): n = len ( self . lst ) mat = [] for i in range ( n ): lst = [ 0 for i in range ( n )] for x in self . lst [ i ]: lst [ x ] = 1 mat . append ( lst ) return mat On utilise la liste des successeurs. Compl\u00e9ter la fonction est_adjacent . Repr\u00e9senter le graphe de l\u2019exemple des sites Web avec un objet de la classe GrapheL en utilisant sa liste des successeurs. 6. a. Quelle instruction permet de savoir si les pages 3 et 4 sont adjacentes ? <br> b. Lire et analyser la fonction `graphe_vers_matrice`. V\u00e9rifier, \u00e0 l\u2019aide d\u2019un appel de cette fonction, que l\u2019on obtient bien la matrice trouv\u00e9e dans la question 1. Si le nom de nos pages avait \u00e9t\u00e9, par exemple : Page 1 : NSI 2 : POO 3 : R\u00e9cursivit\u00e9 4 : Diviser_pour_r\u00e9gner 5 : Programmation_dynamique 6 : Calculabilit\u00e9 quelle autre structure qu\u2019une liste Python aurait-il \u00e9t\u00e9 plus pertinent d\u2019utiliser pour repr\u00e9senter le graphe ? Utiliser cette structure pour repr\u00e9senter l\u2019ensemble des pages Web. TD : Exercices sur la repr\u00e9sentation des graphes \u00b6 Exercice 1 : \u00b6 \u00c9tablir la matrice d\u2019adjacence du graphe ci-dessous. graph LR A --- C D --- B A --- B A --- D \u00c9tablir sa liste d\u2019adjacence (liste des voisins). Exercice 2 : \u00b6 On donne la matrice d\u2019adjacence suivante : \\(\\begin{matrix} 0 & 1 & 1 & 0 \\\\ 1 & 0 & 1 & 0 \\\\ 1 & 1 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ \\end{matrix}\\) Que peut-on dire sur les propri\u00e9t\u00e9s de ce graphe ? Repr\u00e9senter le graphe correspondant. Exercice 3 : connexit\u00e9 \u00b6 Un graphe non-orient\u00e9 est dit connexe si tous ses sommets peuvent \u00eatre reli\u00e9s deux \u00e0 deux par une cha\u00eene. Donner un exemple de graphe non-connexe. Un graphe orient\u00e9 est dit fortement connexe si tous ses sommets peuvent \u00eatre reli\u00e9s deux \u00e0 deux par un chemin. Le graphe des pages Web utilis\u00e9 en cours/TP est-il fortement connexe ? Donner un (autre ?) exemple de graphe orient\u00e9 fortement connexe. Exercice 4 : passer d\u2019une repr\u00e9sentation \u00e0 l\u2019autre \u00b6 On utilise la classe GrapheM d\u00e9finie en TP. \u00c9crire une m\u00e9thode de la classe matrice_vers_liste qui permet de passer de la repr\u00e9sentation par matrice d\u2019adjacence \u00e0 la repr\u00e9sentation par liste d\u2019adjacence : elle prend en entr\u00e9e un objet de la classe GrapheM (le self ) et renvoie cette liste d\u2019adjacence repr\u00e9sent\u00e9e par une liste Python \u00e0 deux dimensions. N.B. : pour initialiser une liste Python vide \u00e0 deux dimensions, penser \u00e0 utiliser la compr\u00e9hension. On veut effectuer la m\u00eame op\u00e9ration, mais stocker la liste d\u2019adjacence dans un dictionnaire dont les cl\u00e9s sont les num\u00e9ros des sommets et les valeurs contiennent la liste des sommets adjacents. \u00c9crire la m\u00e9thode matrice_vers_dictionnaire correspondante, prenant en entr\u00e9e un objet de la classe GrapheM (le self ) et renvoyant sa liste d\u2019adjacence repr\u00e9sent\u00e9e avec un dictionnaire.","title":"I. Repr\u00e9sentation"},{"location":"tle/seq10/representation/#i-representation-des-graphes","text":"","title":"I. Repr\u00e9sentation des graphes"},{"location":"tle/seq10/representation/#cours","text":"Nous avons d\u00e9fini dans une s\u00e9quence pr\u00e9c\u00e9dente la notion de graphe et son vocabulaire associ\u00e9. Pour les utiliser informatiquement, il va falloir en donner une repr\u00e9sentation math\u00e9matique que nous impl\u00e9menterons ensuite.","title":"Cours"},{"location":"tle/seq10/representation/#tp-representer-les-graphes-informatiquement","text":"","title":"TP : Repr\u00e9senter les graphes informatiquement"},{"location":"tle/seq10/representation/#td-exercices-sur-la-representation-des-graphes","text":"","title":"TD : Exercices sur la repr\u00e9sentation des graphes"},{"location":"tle/seq11/prog_dynamique/","text":"body { text-align: justify} I. Programmation dynamique \u00b6 Cours \u00b6 Introduction \u00b6 Nous avons vu cette ann\u00e9e que des probl\u00e8mes pouvaient \u00eatre r\u00e9solus efficacement en les divisant en plus petits probl\u00e8mes, dont on combine les solutions pour obtenir une solution \u00e0 notre probl\u00e8me initial : c\u2019est l\u2019approche \"Diviser pour r\u00e9gner\" . Cette m\u00e9thode algorithmique est puissante mais pas toujours optimis\u00e9e en temps. Nous allons nous int\u00e9resser \u00e0 une mani\u00e8re qui permet d\u2019obtenir des algorithmes plus rapides \u00e0 s\u2019ex\u00e9cuter : la programmation dynamique . Exemple L\u2019exemple choisi pour ce cours est celui, classique, du calcul des nombres de la suite de Fibonacci . Cette suite \\((u_n)\\) est d\u00e9finie pour tout entier \\(n\\) par : \\[ u_n = \\left\\{ \\begin{array}{rcr} n \\mbox{si n \u2264 1}\\\\ u_{n-1} + u_{n-2} \\mbox{sinon} \\end{array} \\right. \\] On souhaite programmer la fonction F , qui, pour tout entier n , renvoie le terme d'indice n de la suite. A. L\u2019approche r\u00e9cursive \u00b6 La d\u00e9finition math\u00e9matique de la suite, avec la r\u00e9currence, guide vers une solution r\u00e9cursive . \u00c9crire cette solution et l\u2019arbre binaire repr\u00e9sentant les appels r\u00e9cursifs effectu\u00e9s pour le calcul de F(5) : Code Python Arbre repr\u00e9sentant les appels pour F(5) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code def F ( n ): if n < = 1 : return n else : return F ( n - 1 ) + F ( n - 2 ) Quels appels sont faits plusieurs fois, pour la m\u00eame valeur de n ? Les calculs de F(2) et F(3) sont effectu\u00e9s plusieurs fois. Dans quel ordre les appels r\u00e9cursifs sont-ils faits ? L\u2019arbre est parcouru dans l\u2019ordre d\u2019un parcours en profondeur : d\u2019abord les sous-arbres gauches, puis les sous-arbres droits. B. Am\u00e9lioration de l\u2019approche r\u00e9cursive \u00b6 Pour \u00e9viter de faire plusieurs fois les m\u00eames calculs, nous allons stocker les termes de la suite d\u00e9j\u00e0 calcul\u00e9s dans une variable m (pour \u00ab m\u00e9moire \u00bb), de type liste Python. En se basant sur l\u2019arbre des appels pour F(5) , repr\u00e9senter cette liste m au fur et \u00e0 mesure qu\u2019elle se remplit : m[0] m[1] m[2] m[3] m[4] m[5] Solution m[0] m[1] m[2] m[3] m[4] m[5] None None None None None None None 1 None None None None 0 1 None None None None 0 1 1 None None None 0 1 1 2 None None 0 1 1 2 3 None 0 1 1 2 3 5 Il faut donc modifier notre algorithme pour que, si F(n) est d\u00e9j\u00e0 calcul\u00e9 pour une valeur n , alors on r\u00e9cup\u00e8re sa valeur dans m . Sinon , on calcule cette nouvelle valeur et on la stocke dans m[n] . Version r\u00e9cursive am\u00e9lior\u00e9e Fonction d\u2019initialisation de m ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code fonction r\u00e9cursive def fibonacci ( n , m ): if n < = 1 : m [ n ] = n return n elif m [ n ] != None : return m [ n ] else : m [ n ] = fibonacci ( n - 1 , m ) + fibonacci ( n - 2 , m ) return m [ n ] Code fonction d'initialisation def F ( n ) : m = [ None for i in range ( n + 1 )] return fibonacci ( n , m ) C\u2019est le principe de la programmation dynamique : m\u00e9moriser les r\u00e9sultats des calculs au fur et \u00e0 mesure, pour ne pas avoir \u00e0 les recalculer apr\u00e8s. C. L\u2019approche it\u00e9rative \u00b6 On utilise souvent cette m\u00e9thode algorithmique pour am\u00e9liorer les performances en temps des programmes r\u00e9cursifs, mais son principe s\u2019applique aussi sur des programmes it\u00e9ratifs . A partir de l\u2019observation du tableau rempli dans la partie 2, proposer une version it\u00e9rative de cette fonction. Elle utilisera le principe de la programmation dynamique. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Code def F ( n ) : fibonacci = [ None for i in range ( 0 , n + 1 )] fibonacci [ 0 ] = 0 fibonacci [ 1 ] = 1 for i in range ( 2 , n + 1 ) : fibonacci [ i ] = fibonacci [ i - 1 ] + fibonacci [ i - 2 ] return fibonacci [ n ] D. Mise en pratique \u00b6 Impl\u00e9menter sur ordinateur ces diff\u00e9rentes versions de F , que l\u2019on pourra appeler respectivement F_rec , F_rec_dyn , F_it_dyn . Les tester pour les diff\u00e9rentes valeurs de n donn\u00e9es dans le tableau suivant, et indiquer un ordre de grandeur du temps de calcul n\u00e9cessaire pour obtenir le r\u00e9sultat parmi : imm\u00e9diat \u2013 secondes \u2013 minutes \u2013 ind\u00e9termin\u00e9 n 5 20 30 50 100 1000 10 000 Solution n 5 20 30 50 100 1000 10 000 F_rec imm\u00e9diat imm\u00e9diat seconde minute ind\u00e9termin\u00e9 ind\u00e9termin\u00e9 ind\u00e9termin\u00e9 F_rec_dyn imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat Stack overflow ! F_it_dyn imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat E. Synth\u00e8se \u00b6 R\u00e9sumer en quelques phrases en quoi consiste la programmation dynamique et en quoi est-ce qu'elle est utile. A retenir La programmation dynamique est une am\u00e9lioration de la m\u00e9thode algorithmique \u00ab Diviser pour r\u00e9gner \u00bb. Elle reprend son principe, mais ajoute le stockage des r\u00e9sultats interm\u00e9diaires (des sous-probl\u00e8mes) pour \u00e9viter de les recalculer. Elle est tr\u00e8s utile lorsque beaucoup des sous-probl\u00e8mes sont identiques. TD : Le probl\u00e8me du rendu de monnaie \u00b6 Introduction \u00b6 \u00c9tant donn\u00e9 un syst\u00e8me de monnaie comportant des pi\u00e8ces de valeurs diff\u00e9rentes, on veut \u00e9crire un programme retournant le nombre minimal de pi\u00e8ces \u00e0 utiliser pour rendre la monnaie sur une somme due. On suppose qu\u2019il est possible de rendre la somme due avec le syst\u00e8me de monnaie que l\u2019on utilise. A. L\u2019approche gloutonne \u00b6 Il a \u00e9t\u00e9 vu en classe de 1\u00e8re qu\u2019il \u00e9tait possible de r\u00e9soudre ce probl\u00e8me avec un algorithme glouton . Quel est son principe ? Son principe est de choisir la pi\u00e8ce de valeur maximale , inf\u00e9rieure \u00e0 la somme \u00e0 rendre. On actualise la somme \u00e0 rendre \u00e0 chaque fois que l\u2019on s\u00e9lectionne une nouvelle pi\u00e8ce, et on r\u00e9it\u00e8re l\u2019algorithme. Exemples Quelles pi\u00e8ces vont \u00eatre rendues avec le syst\u00e8me de monnaie euro = [50, 20, 10, 5, 2, 1] pour payer la somme 48 ? 20 + 20 + 5 + 2 + 1, donc 5 pi\u00e8ces Quelles pi\u00e8ces vont \u00eatre rendues avec le syst\u00e8me de monnaie imperial = [30, 24, 12, 6, 3, 1] pour payer la somme 48 ? Est-ce une solution optimale ? 30 + 12 + 6 (3 pi\u00e8ces). Ce n\u2019est pas la solution optimale : on aurait pu rendre 24 + 24 (2 pi\u00e8ces). En voici un code possible en Python (il suppose que les pi\u00e8ces du syst\u00e8me de monnaie sont rang\u00e9es dans par valeurs d\u00e9croissantes) . rendu_glouton prend en param\u00e8tres la somme \u00e0 rendre somme et les pi\u00e8ces dont on dispose pour le faire stock\u00e9es dans la liste Python pieces . Code def rendu_glouton ( somme , pieces ): 1 nb_pieces = 0 2 i = 0 3 while somme > 0 and i < len ( pieces ): 4 if pieces [ i ] > somme : 5 i = i + 1 6 else : 7 somme = somme - pieces [ i ] 8 nb_pieces = nb_pieces + 1 return nb_pieces V\u00e9rifier que l\u2019on obtient le r\u00e9sultat attendu pour le 2eme exemple donn\u00e9 (quand on fait l'appel rendu_glouton(48, imperial) ), en remplissant le tableau avec la valeur des variables demand\u00e9es \u00e0 chaque nouvelle it\u00e9ration de la boucle while (\u00e0 chaque fois que l\u2019on revient \u00e0 la ligne 3) : somme nb_pieces i piece[i] init 48 0 0 30 Solution somme nb_pieces i piece[i] init 48 0 0 30 1 18 1 0 30 2 18 1 1 24 3 18 1 2 12 4 6 2 2 12 5 6 2 3 6 6 0 3 3 6 L\u2019algorithme glouton ne renvoie donc pas toujours la solution optimale ! B. Solution optimale avec une approche r\u00e9cursive \u00b6 Voici un algorithme explorant toutes les solutions et s\u00e9lectionnant celle optimale, en utilisant la r\u00e9cursivit\u00e9. Code def rendu_recursif ( somme , pieces ): if somme == 0 : return 0 else : mini = somme + 1 for p in pieces : if p <= somme : nb = 1 + rendu_recursif ( somme - p , pieces ) if nb < mini : mini = nb return mini Principe Cet algorithme est bas\u00e9 sur l\u2019id\u00e9e que si on rend la valeur \\(somme\\) avec \\(nb(somme)\\) pi\u00e8ces et la valeur \\(somme \u2013 piece\\) avec \\(nb(somme-piece)\\) , alors : \\(nb(somme) = nb(somme - piece) + 1\\) On calcule alors comment rendre somme \u2013 piece , en testant toutes les pi\u00e8ces dont la valeur est inf\u00e9rieure \u00e0 somme et en retenant la valeur de nb minimale. On r\u00e9it\u00e8re l\u2019algorithme jusqu\u2019\u00e0 obtenir une somme de 0. Tracer l\u2019arbre repr\u00e9sentant les appels r\u00e9cursifs fait pour l\u2019appel rendu_recursif(6, [50, 20, 10, 5, 2, 1]) . Ses n\u0153uds contiennent la valeur de la somme restante \u00e0 rendre, et on associe \u00e0 chaque branche la pi\u00e8ce choisie correspondante. Identifier les appels effectu\u00e9s plusieurs fois. Entourer o\u00f9 est-ce que l\u2019on trouve la solution optimale . C. Am\u00e9lioration avec la programmation dynamique \u00b6 Pour \u00e9viter de re-calculer les m\u00eames choses plusieurs fois, nous allons am\u00e9liorer l\u2019algorithme en utilisant la programmation dynamique. On utilise une variable m de type liste Python stockant, pour chaque somme \u00e0 rendre possible (l\u2019indice de l\u2019\u00e9l\u00e9ment \u00e9tant la valeur de cette somme), le nombre de pi\u00e8ces minimales que l\u2019on peut utiliser. L\u2019algorithme est modifi\u00e9 de la m\u00eame mani\u00e8re que pour le calcul des termes de la suite de Fibonacci : si rendu_memo(somme, pieces, m) est d\u00e9j\u00e0 calcul\u00e9 pour une valeur de somme, alors on r\u00e9cup\u00e8re sa valeur dans m . Sinon, on calcule cette nouvelle valeur et on la stocke dans m[somme] . Il faut \u00e9galement d\u00e9finir une fonction qui initialise m . Version r\u00e9cursive am\u00e9lior\u00e9e def rendu_memo ( somme , pieces , m ): if somme == 0 : m [ 0 ] = 0 return 0 elif m [ somme ] != None : return m [ somme ] else : mini = somme + 1 for p in pieces : if p <= somme : nb = 1 + rendu_memo ( somme - p , pieces , m ) if nb < mini : mini = nb m [ somme ] = nb return mini Fonction d\u2019initialisation de m def rendu_dyn ( somme , pieces ): m = [ None for i in range ( 0 , somme + 1 )] return rendu_memo ( somme , pieces , m ) Repr\u00e9senter comment m va se remplir pour l\u2019appel de rendu_dyn(6, [50, 20, 10, 5, 2, 1]) , en d\u00e9roulant votre programme avec l\u2019outil PythonTutor : m[0] m[1] m[2] m[3] m[4] m[5] m[6] None None None None None None None Solution m[0] m[1] m[2] m[3] m[4] m[5] m[6] None None None None None None None 0 None None None None None None 0 1 None None None None None 0 1 None None None None 2 0 1 1 None None None 2 0 1 1 None 2 None 2 0 1 1 2 2 None 2 0 1 1 2 2 1 2 D. Tests \u00b6 a. V\u00e9rifier que rendu_dyn(48, imperial) donne la solution optimale. b. Tester rendu_recursif et rendu_dyn pour diff\u00e9rentes valeurs de somme, et indiquer l\u2019ordre de grandeur du temps d\u2019ex\u00e9cution des appels parmi : imm\u00e9diat \u2013 secondes \u2013 minutes \u2013 ind\u00e9termin\u00e9 somme 5 10 25 35 50 100 1 000 100 000 rendu_recursif rendu_dyn Solution somme 5 10 25 35 50 100 1 000 100 000 rendu_recursif imm\u00e9diat imm\u00e9diat imm\u00e9diat min ind\u00e9ter ind\u00e9ter ind\u00e9ter ind\u00e9ter rendu_dyn imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat imm\u00e9diat","title":"I. Programmation dynamique"},{"location":"tle/seq11/prog_dynamique/#i-programmation-dynamique","text":"","title":"I. Programmation dynamique"},{"location":"tle/seq11/prog_dynamique/#cours","text":"","title":"Cours"},{"location":"tle/seq11/prog_dynamique/#td-le-probleme-du-rendu-de-monnaie","text":"","title":"TD\u00a0: Le probl\u00e8me du rendu de monnaie"},{"location":"tle/seq11/recherche_textuelle/","text":"body { text-align: justify} II. Recherche textuelle \u00b6 Cours \u00b6 Introduction \u00b6 Rechercher une cha\u00eene de caract\u00e8res dans une autre (une sous-chaine dans une cha\u00eene) est un probl\u00e8me r\u00e9current en informatique et dans d\u2019autres sciences. La question se pose particuli\u00e8rement en g\u00e9n\u00e9tique pour localiser un motif M dans une s\u00e9quence S d\u2019ADN. On peut, par exemple, rechercher le motif M dans la s\u00e9quence S suivante : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A A. Approche \u00ab na\u00efve \u00bb \u00b6 Une premi\u00e8re approche na\u00efve est de placer le motif le plus sur la gauche possible, de le d\u00e9caler vers la droite d\u2019une lettre \u00e0 la fois et de le comparer \u00e0 la s\u00e9quence jusqu\u2019\u00e0 trouver une correspondance. Pseudo-code fonction recherche_naive ( S , M ): n <- longueur de S m <- longueur de M pour i de 0 \u00e0 n - m j <- 0 tant que j est inf\u00e9rieur \u00e0 m et S [ i + j ] est \u00e9gal \u00e0 M [ j ] : j <- j + 1 si j est \u00e9gal \u00e0 m : renvoyer ( M , i ) Pourquoi fait-on une boucle born\u00e9e parcourant n-m caract\u00e8res ? La s\u00e9quence s\u2019arr\u00eate \u00e0 l\u2019indice n-1 , mais puisque l\u2019on cherche la correspondance du motif en entier, on peut s'arr\u00eater \u00e0 l'indice n-m-1 . Que stocke la variable j ? j stocke le nombre de caract\u00e8res qui co\u00efncident entre S et M , \u00e0 une position i donn\u00e9e, en commen\u00e7ant par la gauche de M . Comment d\u00e9cide-t-on quand s\u2019arr\u00eater ? Deux cas sont possibles : \u00e0 la fin de la boucle born\u00e9e, c\u2019est-\u00e0-dire lorsqu\u2019on a parcouru toute la s\u00e9quence sans trouver le motif, ou bien lorsqu\u2019on le trouve : on est dans ce cas lorsque j vaut m . Estimons la complexit\u00e9 de cette approche. L\u2019op\u00e9ration \u00e9l\u00e9mentaire comptabilis\u00e9e est la comparaison entre 2 cases des cha\u00eenes S et M . Dans le pire des cas , les deux boucles (born\u00e9e et non-born\u00e9e) sont parcourues en entier. C\u2019est-\u00e0-dire la boucle born\u00e9e est it\u00e9r\u00e9e \\(n-m\\) fois et la boucle non-born\u00e9e \\(m\\) fois. La complexit\u00e9 est donc en \\(O((n-m)m)\\) . B. L\u2019algorithme de Boyer-Moore \u00b6 B.1. Exemple \u00b6 Pour am\u00e9liorer cette m\u00e9thode (c'est-\u00e0-dire avoir une meilleure complexit\u00e9) , nous allons utiliser l\u2019 algorithme de Boyer-Moore dans sa version simplifi\u00e9e par Horspool. Expliquons cet algorithme par un exemple, celui pr\u00e9sent\u00e9 en introduction. On commence par placer le motif M le plus \u00e0 gauche possible de la s\u00e9quence S : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Le dernier caract\u00e8re de M co\u00efncide avec le 6\u00e8me de S . On compare alors les deux pr\u00e9c\u00e9dents. S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Ces deux caract\u00e8res ne co\u00efncident pas. Mais le caract\u00e8re de la s\u00e9quence (C) appara\u00eet tout de m\u00eame dans M . On d\u00e9cale alors M pour que le caract\u00e8re C de S co\u00efncide avec le m\u00eame caract\u00e8re dans M : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A On recommence alors la comparaison en partant de la droite de M : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Les caract\u00e8res ne co\u00efncident pas, mais G appara\u00eet dans M . On d\u00e9cale donc ce dernier de mani\u00e8re \u00e0 faire co\u00efncider le G de S avec le premier G de M rencontr\u00e9 en partant de la droite : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A On recommence la comparaison en partant de la droite de M. S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Les caract\u00e8res les plus \u00e0 droite co\u00efncident, mais pas ceux pr\u00e9c\u00e9dant. On d\u00e9cale alors M pour faire co\u00efncider le G de S avec le premier G de M rencontr\u00e9 en partant de la droite : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Les derniers caract\u00e8res ne co\u00efncident pas, on d\u00e9cale alors M pour faire co\u00efncider le T de S avec le T de M : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Les derniers et avant-derniers caract\u00e8res co\u00efncident, mais pas ceux d\u2019avant. On d\u00e9cale donc pour faire co\u00efncider le A de S avec le A de M \u00e0 gauche des caract\u00e8res qui co\u00efncidaient : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Les derniers caract\u00e8res ne co\u00efncident pas. On d\u00e9cale donc M pour faire co\u00efncider le G de S avec le premier G de M en partant de la droite : S A T A A C A G A G A A T A A G G C T A G G A A A T A C T G A A M A G G C T A Il y a correspondance entre M et une partie de la s\u00e9quence, l\u2019algorithme s\u2019arr\u00eate donc. B.2. Principe de l\u2019algorithme \u00b6 Quelle partie du motif commence-t-on par comparer ? On commence par comparer le dernier caract\u00e8re du motif, puis l\u2019avant-dernier, etc. Quand sait-on que l\u2019on doit d\u00e9caler le motif ? On sait que l\u2019on doit d\u00e9caler le motif lorsque que l\u2019on arrive \u00e0 un caract\u00e8re dans la s\u00e9quence qui ne co\u00efncide pas avec caract\u00e8re du motif \u00e0 la m\u00eame position. Comment d\u00e9termine-t-on alors de combien d\u2019\u00e9l\u00e9ments d\u00e9caler le motif, c\u2019est-\u00e0-dire le nombre de sauts \u00e0 effectuer ? Distinguer le cas dans lequel l'\u00e9l\u00e9ment de la s\u00e9quence n'est pas dans le motif, du cas dans lequel il est dans le motif. Si l\u2019\u00e9l\u00e9ment de la s\u00e9quence consid\u00e9r\u00e9 n\u2019est pas dans le motif, on d\u00e9cale le motif \u00e0 la position de l\u2019\u00e9l\u00e9ment + 1. Si l\u2019\u00e9l\u00e9ment de la s\u00e9quence consid\u00e9r\u00e9 est \u00e0 une autre place dans le motif, on d\u00e9cale le motif de mani\u00e8re \u00e0 le faire co\u00efncider avec ce caract\u00e8re de la s\u00e9quence, en prenant le caract\u00e8re du motif le plus \u00e0 droite possible, mais sans le faire revenir \"en arri\u00e8re\". Note : Nous avons pris l'exemple de la recherche d'un motif dans une s\u00e9quence d'ADN, mais plus g\u00e9n\u00e9ralement on peut parler de la recherche de sous-cha\u00eene dans une cha\u00eene de caract\u00e8res. Exercice \u00b6 Appliquer l\u2019algorithme de Boyer-Moore pour rechercher le motif \"EXEMPLE\" dans le texte suivant : VOICI UN SIMPLE EXEMPLE Appliquer l\u2019algorithme de Boyer-Moore pour rechercher le motif \"C T A G G\" dans la s\u00e9quence suivante : A T A A C A G A G A A T A A G G C T A G G A A A T A C On d\u00e9taillera toutes les \u00e9tapes de la m\u00eame fa\u00e7on que dans le cours. Conclusion \u00b6 L\u2019\u00e9tude de la complexit\u00e9 de cet algorithme d\u00e9passe le programme de NSI, mais on observe bien qu\u2019avec les d\u00e9calages effectu\u00e9s, on ne parcourt pas tous les \u00e9l\u00e9ments. Ces d\u00e9calages, ou sauts, sont \u00e0 la base de l\u2019impl\u00e9mentation de cet algorithme que nous allons voir en TP. TP : Impl\u00e9mentation des algorithmes de recherche textuelle \u00b6 A. L\u2019algorithme de recherche na\u00efve \u00b6 Reprendre l\u2019algorithme de recherche na\u00efve du cours et le traduire en Python par la fonction recherche . Tester la fonction pour M valant \"BRA\" et S valant 'ABRACADABRA' . Modifier cette fonction pour que le programme ne s\u2019arr\u00eate pas la premi\u00e8re fois le motif recherch\u00e9, mais pour qu\u2019il compte le nombre d\u2019occurrence de ce motif dans l\u2019ensemble de la s\u00e9quence. La fonction compte ainsi cr\u00e9\u00e9e ne retournera donc pas la position de la premi\u00e8re occurrence du motif mais le nombre d\u2019occurrences de celui-ci. B. L\u2019algorithme de Boyer-Moore-Horspool \u00b6 B.0. Programme global \u00b6 Code def recherche ( texte , motif ): n = len ( texte ) m = len ( motif ) aDroite = calcule_a_droite ( motif ) i = 0 while i + m <= n : ok , decalage = correspondance ( texte , motif , i , aDroite ) if ok : return i else : i = i + decalage return - 1 Notre programme sera bas\u00e9 sur la fonction recherche . Cette fonction commence par calculer la table de sauts qui donne la position la plus \u00e0 droite dans le motif de chaque caract\u00e8re, et repr\u00e9sent\u00e9e par le dictionnaire aDroite avec la fonction calcule_a_droite . recherche fait ensuite appel \u00e0 une fonction correspondance estimant si, \u00e0 partir d\u2019un indice i , il y a correspondance entre le texte et le motif. Cet appel \u00e0 correspondance est fait tant que l\u2019on n\u2019a pas trouv\u00e9 le motif et que l\u2019on n\u2019est pas arriv\u00e9s \u00e0 la fin. Nous allons \u00e9crire les diff\u00e9rentes fonctions interm\u00e9diaires utilis\u00e9es par recherche , avant de faire fonctionner l\u2019ensemble du programme. B.1. La table de sauts \u00b6 Pour impl\u00e9menter l\u2019algorithme, nous allons commencer par \u00e9tablir une table de sauts, indiquant la position la plus \u00e0 droite de chaque caract\u00e8re du motif. On utilisera un dictionnaire aDroite dont les cl\u00e9s sont les caract\u00e8res du motif, et les valeurs l\u2019indice de leur position la plus \u00e0 droite par rapport au d\u00e9but du motif. On le remplit en effectuant une boucle for parcourant tous les caract\u00e8res du motif. Par exemple pour le motif \u00ab HELLO \u00bb, on fera : aDroite [ \u2018 H \u2019 ] = 0 aDroite [ \u2018 E \u2019 ] = 1 aDroite [ \u2018 L \u2019 ] = 2 aDroite [ \u2018 L \u2019 ] = 3 aDroite [ \u2018 O \u2019 ] = 4 a. Apr\u00e8s ex\u00e9cution de ce programme, quelles valeurs sont associ\u00e9es aux cl\u00e9s \u2018H\u2019, \u2018E\u2019, \u2018L\u2019 et \u2018O\u2019 ? b. On utilise une fonction calcule_a_droite pour remplir ce dictionnaire. Compl\u00e9ter le code suivant : Code def calcule_a_droite ( motif ): m = len ( motif ) aDroite = { } for j in range ( m ): \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 . return aDroite c. Appeler calcule_a_droite sur le motif 'HELLO' . B.2. Trouver le d\u00e9calage \u00b6 On utilisera la fonction droite suivante qui renvoie -1 si le caract\u00e8re c n\u2019est pas dans le motif et sinon la valeur associ\u00e9e \u00e0 la cl\u00e9 c dans le dictionnaire aDroite : Code def droite ( c , aDroite ): if c in \u2026 : ... else : ... B.3. Test de la correspondance \u00b6 Nous allons maintenant \u00e9crire la fonction correspondance . Pseudo-code, \u00e0 compl\u00e9ter : fonction correspondance(texte, motif, i, aDroite) Entr\u00e9es : texte : s\u00e9quence en cha\u00eene de caract\u00e8res motif : motif recherch\u00e9 en cha\u00eene de caract\u00e8res i : position actuelle dans le texte, correspondant \u00e0 la position du caract\u00e8re le plus \u00e0 gauche du motif aDroite : table de sauts en dictionnaire Sorties : bool\u00e9en indiquant si la correspondance a \u00e9t\u00e9 trouv\u00e9e decalage (entier) pour la prochaine \u00e9tape, ou 0 si la correspondance a \u00e9t\u00e9 trouv\u00e9e Pour j variant de l\u2019indice du dernier caract\u00e8re du motif au premier de mani\u00e8re d\u00e9croissante x \u2190 le caract\u00e8re \u00e0 l\u2019indice i+j de texte si x est diff\u00e9rent de l\u2019indice j du motif alors le d\u00e9calage est \u00e9gal au maximum entre 1 et j-droite(x, aDroite) renvoyer ???, ??? renvoyer ???, ??? B.4. Tests \u00b6 Tester l\u2019ensemble du programme, comprenant les quatre fonctions calcule_a_droite , droite , recherche et correspondance , sur les exemples suivants : a. texte : \u2018AGTCCGTAATGATCGGTACCTGACTGTA\u2019, motif : \u2018CTGAC\u2019 b. texte : \u2018ALGORITHME DE BOYER-MOORE-HORSPOOL\u2019, motif : \u2018MOORE\u2019","title":"II. Recherche textuelle"},{"location":"tle/seq11/recherche_textuelle/#ii-recherche-textuelle","text":"","title":"II. Recherche textuelle"},{"location":"tle/seq11/recherche_textuelle/#cours","text":"","title":"Cours"},{"location":"tle/seq11/recherche_textuelle/#tp-implementation-des-algorithmes-de-recherche-textuelle","text":"","title":"TP\u00a0: Impl\u00e9mentation des algorithmes de recherche textuelle"},{"location":"tle/seq2/","text":"body { text-align: justify} Programme \u00b6","title":"Index"},{"location":"tle/seq2/#programme","text":"","title":"Programme"},{"location":"tle/seq2/diviser_regner/","text":"body { text-align: justify} III. Diviser pour r\u00e9gner \u00b6 Cours \u00b6 A. Notions d'algorithmique \u00b6 Qu'est-ce qu'un algorithme ? Un algorithme est une suite d'instructions permettant de r\u00e9soudre un probl\u00e8me. Qu'est-ce que la complexit\u00e9 d'un algorithme ? La complexit\u00e9 d'un algorithme \u00e9value la quantit\u00e9 de ressources (en temps, en m\u00e9moire), n\u00e9cessaire \u00e0 son ex\u00e9cution. A quoi sert l'\u00e9valuation de cette complexit\u00e9 ? Evaluer la complexit\u00e9 d'un algorithme sert \u00e0 le comparer \u00e0 d'autres algorithmes r\u00e9solvant le m\u00eame probl\u00e8me. Dans le programme de NSI, on s'int\u00e9resse \u00e0 la complexit\u00e9 en temps dans le pire des cas . Qu'\u00e9value-t-on alors ? On estime le nombre d'op\u00e9rations \u00e9l\u00e9mentaires ex\u00e9cut\u00e9es, en fonction de la taille des donn\u00e9es d'entr\u00e9e not\u00e9e n. Tracer les diff\u00e9rent types de complexit\u00e9s que vous connaissez sur un graphique. En donner des exemples types d'algorithmes associ\u00e9s. Exemples constant : calcul d'une ou plusieurs valeurs, sans boucle lin\u00e9aire : parcours d'un tableau, 1 boucle*** quadratique : parcours d'un tableau \u00e0 deux dimensions, 2 boucles imbriqu\u00e9es B. Les algorithmes du type \"diviser pour r\u00e9gner\" \u00b6 \"Diviser pour r\u00e9gner\" est une m\u00e9thode algorithmique : une mani\u00e8re de r\u00e9soudre des probl\u00e8mes algorithmiquement. Son principe est, lorsque l'on consid\u00e8re un probl\u00e8me, de le d\u00e9couper en plusieurs sous-probl\u00e8mes \u00e9quivalents, mais de taille plus r\u00e9duite. Ces \"petits probl\u00e8mes\" seront plus simples \u00e0 r\u00e9soudre que le probl\u00e8me initial. Une fois les \"petits probl\u00e8mes\" r\u00e9solus, il faut les recombiner pour obtenir une solution au probl\u00e8me initial. Les trois principes \u00e0 la base de cette m\u00e9thode de \"diviser pour r\u00e9gner\" sont : Diviser : on divise le probl\u00e8me initial en sous-probl\u00e8mes R\u00e9gner : on r\u00e9soud les sous-probl\u00e8mes Combiner : on combine les solutions des sous-probl\u00e8mes, pour avoir la solution du probl\u00e8me initial Le principe de la r\u00e9cursivit\u00e9 \u00e9tant similaire \u00e0 celui de cette approche, on utilise souvent des algorithmes r\u00e9cursifs . Cela n'est pas obligatoire ! Une approche \"diviser pour r\u00e9gner\" peut aussi \u00eatre it\u00e9rative (avec des boucles). c. Le tri fusion \u00b6 C.1. Principe et exemple \u00b6 Le tri fusion est une mani\u00e8re de trier une liste en la divisant successivement, puis en fusionnant petit \u00e0 petit les sous-listes tri\u00e9es pour finalement en obtenir une seule : la liste initiale tri\u00e9e. Les trois \u00e9tapes de cet algorithme sont : Diviser : on divise le tableau successivement en deux, jusqu'\u00e0 obtenir des tableaux de taille 1. R\u00e9gner : on obtient un tableau de taille 1 qui est tri\u00e9. A chaque nouvelle fusion, on s'assure que le r\u00e9sultat est tri\u00e9. Combiner : on fusionne les tableaux tri\u00e9s deux \u00e0 deux, jusqu'\u00e0 en obtenir une seule. C.2. Comparaison avec les autres algorithmes de tri \u00b6 Rappeler les principe des deux algorithmes de tri du programme de 1\u00e8re : Tri par s\u00e9lection Tri par insertion On s\u00e9lectionne le minimum du tableau, et on l'\u00e9change avec l'\u00e9l\u00e9ment en premi\u00e8re position. On prend le 2\u00e8me \u00e9l\u00e9ment, on le compare avec le premier, et on \u00e9change les deux s'ils ne sont pas rang\u00e9s dans l'ordre croissant. On s\u00e9lectionne le minimum de l'ensemble des \u00e9l\u00e9ments du tableau sauf le premier, et on l'\u00e9change avec celui en 2\u00e8me position. On prend le 3\u00e8me \u00e9l\u00e9ment, on le compare avec les pr\u00e9c\u00e9dents jusqu'\u00e0 trouver un \u00e9l\u00e9ment plus petit que lui ou arriver au d\u00e9but du tableau. On d\u00e9cale sur la droite les \u00e9l\u00e9ments plus grands, et on place l'\u00e9l\u00e9ment 3 \u00e0 la position trouv\u00e9e. On r\u00e9p\u00e8te ces op\u00e9rations, en r\u00e9duisant de un en un la partie du tableau consid\u00e9r\u00e9e, jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment. On r\u00e9p\u00e8te ces op\u00e9rations en parcourant de un en un les \u00e9l\u00e9ments du tableau, jusqu'au dernier. Quel est le type de complexit\u00e9 de ces deux algorithmes ? Ces algorithmes ont une complexit\u00e9 quadratique (en \\(n^2\\) ). La complexit\u00e9 du tri fusion est en \\(nlog(n)\\) . Est-il donc judicieux de l'utiliser \u00e0 la place d'un tri par s\u00e9lection ou par insertion ? Il est pertinent d'utiliser le tri fusion, car sa complexit\u00e9 est meilleure : la courbe la repr\u00e9sentant se trouve en-dessous de la courbe de la fonction quadratique, pour une valeur de n donn\u00e9e. TD : Les tris par insertion et par s\u00e9lection \u00b6 Exercice 1: applications (r\u00e9visions de 1\u00e8re) \u00b6 Appliquer le tri par s\u00e9lection aux tableaux suivants, en d\u00e9taillant chacune de ses \u00e9tapes : - [9, 7, 1, 4, -2, 0, 8, 3] - [2, 6, 7, -2, 0, -5, 1] Appliquer ensuite le tri par insertion aux m\u00eames tableaux. Exercice 2 : impl\u00e9mentation \u00b6 On rappelle la description des deux algorithmes de tri du programme de 1\u00e8re : L'algorithme du tri par s\u00e9lection On s\u00e9lectionne le minimum du tableau, et on l'\u00e9change avec celui en premi\u00e8re position. On s\u00e9lectionne le minimum de l'ensemble des \u00e9l\u00e9ments du tableau sauf le premier , et on l'\u00e9change avec celui en 2\u00e8me position. On r\u00e9p\u00e8te ces op\u00e9rations, en r\u00e9duisant de un en un la partie du tableau consid\u00e9r\u00e9e, jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment. L'algorithme du tri par insertion On prend le 2\u00e8me \u00e9l\u00e9ment, on le compare avec le premier, et on \u00e9change les deux s'ils ne sont pas rang\u00e9s dans l'ordre croissant. On prend le 3\u00e8me \u00e9l\u00e9ment, on le compare avec les pr\u00e9c\u00e9dents jusqu'\u00e0 trouver un \u00e9l\u00e9ment plus petit que lui. On d\u00e9cale les \u00e9l\u00e9ments plus grands au fur et \u00e0 mesure sur la droite. On place le 3\u00e8me \u00e9l\u00e9ment \u00e0 la place du dernier \u00e9l\u00e9ment plus grand. On r\u00e9p\u00e8te ces op\u00e9rations en parcourant de un en un les \u00e9l\u00e9ments du tableau, jusqu'au dernier. Pour chacun de ces algorithmes, identifier les op\u00e9rations qui se r\u00e9p\u00e8tent entre les \u00e9tapes, et ce qui change. En d\u00e9duire les op\u00e9rations devant se trouver dans une boucle. Formuler un pseudo-code de chacun de ces algorithmes, reprenant les \u00e9l\u00e9ments de base de la programmation, mais sans la syntaxe Python. Solution pour le tri par s\u00e9lection Pour i variant de 0 \u00e0 n - 2 ind_mini vaut i # on initialise la valeur et l'indice du minimum recherch\u00e9 mini vaut tab [ i ] Pour j variant de i + 1 \u00e0 n - 1 si tab [ j ] est inf\u00e9rieur \u00e0 mini mini vaut tab [ j ] # on actualise la valeur du minimum ind_mini vaut j # le minimum du sous-tableau est trouv\u00e9, on le met \u00e0 la bonne place on \u00e9change tab [ i ] et tab [ ind_mini ] Solution pour le tri par insertion Pour i variant de 1 \u00e0 n - 1 stocker la valeur de tab [ i ] dans une variable j = i - 1 # commence la recherche par la place juste \u00e0 gauche tant que tab [ j ] est sup\u00e9rieur \u00e0 tab [ i ] et j est sup\u00e9rieur ou \u00e9gal \u00e0 0 on d\u00e9place tab [ j ] \u00e0 droite ( indice j + 1 ) # on d\u00e9cale les \u00e9l\u00e9ments sup\u00e9rieur \u00e0 tab[i] au fur et \u00e0 mesure on d\u00e9cr\u00e9mente j on affecte la valeur de tab [ i ] ( stock\u00e9e ) \u00e0 tab [ j ] # on a trouv\u00e9 la place de tab[i] Impl\u00e9menter ces algorithmes dans deux fonctions tri_selection(t) et tri_insertion(t) prenant toutes deux en param\u00e8tre un tableau t et le modifiant en place. Tester le fonctionnement de ces fonctions sur les deux exemples de l'exercice 1. TP : Le tri fusion \u00b6 A. Application \u00b6 Appliquer l'algorithme du tri fusion sur l'exemple ci-contre, en compl\u00e9tant le sch\u00e9ma avec les divisions et recombinaisons successives. Dans le cas d'un tableau ayant un nombre impair d'\u00e9l\u00e9ments, on peut consid\u00e9rer que le tableau le plus petit va se retrouver \u00e0 gauche, le plus grand \u00e0 droite. B. Impl\u00e9mentation \u00b6 L'impl\u00e9mentation du tri fusion se fait classiquement avec deux fonctions : - une fonction principale qui divise le tableau pass\u00e9 en param\u00e8tre par deux, - une fonction qui fait la fusion entre deux tableaux tri\u00e9s. B.1. La fusion \u00b6 Elle peut \u00eatre \u00e9crite de mani\u00e8re r\u00e9cursive ou bien it\u00e9rative . Tester les deux versions sur les listes [1,4,7,9] et [-2,0,3,8] . Version it\u00e9rative : Compl\u00e9ter le code suivant : Code def fusion_it ( T1 , T2 ): taille_1 = len ( T1 ) taille_2 = len ( T2 ) T_trie = [] i1 = 0 i2 = 0 while ( i1 < taille_1 ) and ( ... ): if T1 [ i1 ] < T2 [ i2 ]: T_trie . append ( ... [ i1 ]) i1 = ... else : T_trie . append ( T2 [ ... ]) i2 = ... while i1 < taille_1 : T_trie . append ( ... ) i1 = ... while i2 < taille_2 : T_trie . append ( ... ) ... return T_trie Version r\u00e9cursive : On donne le squelette de la fonction, \u00e0 compl\u00e9ter : Code def fusion_rec ( T1 , T2 ): if ............ # premier cas de base, pour une valeur triviale de T1 return T2 elif ........... # deuxi\u00e8me cas de base, pour une valeur triviale de T2 return T1 elif T1 [ 0 ] < T2 [ 0 ]: return [ ..... ] + fusion_rec ( ........ , ......... ) # on place le bon \u00e9l\u00e9ment en premier else : return [ ..... ] + fusion_rec ( ........ , ......... ) B.2. Le tri complet \u00b6 La fonction permettant de trier compl\u00e8tement le tableau divise d'abord en deux le tableau initial, avant de fusionner les r\u00e9sultats des tris sur la premi\u00e8re, et la deuxi\u00e8me partie du tableau. Compl\u00e9ter le code suivant : Code def tri_fusion ( tab ): if .................... # cas de base return tab else : # on coupe le tableau en deux sous-tableaux t1 = [ tab [ i ] for i in range ( ....... )] t2 = [ tab [ i ] for i in range ( ....... )] return fusion_rec ( tri_fusion ( ..... ), tri_fusion ( ..... )) Pour prendre les deux moiti\u00e9s du tableau, on aurait pu faire du slicing . Cette m\u00e9thode a aussi des d\u00e9savantages, il est utile de conna\u00eetre plusieurs m\u00e9thodes pour s\u00e9lectionner une partie d'un tableau. TP : La recherche dichotomique \u00b6 La recherche dichotomique d'un \u00e9l\u00e9ment e dans un tableau tri\u00e9 consiste : 1. A comparer e avec celui au milieu du tableau : - si e est plus grand, on continue la recherche dans la partie droite du tableau. - sinon, on continue la recherche dans la partie gauche du tableau. 2. On recommence en comparant e avec le milieu de la partie du tableau consid\u00e9r\u00e9e, et ainsi de suite. 3. L'algorithme termine lorsque e est trouv\u00e9, ou bien si l'on arrive sur le tableau vide. Appliquer l'algorithme pour rechercher 10 dans [1,6,10,15,17,20] . Rechercher 5 dans ce m\u00eame tableau. Compl\u00e9ter la version r\u00e9cursive suivante : Code def recherche_dichotomique_rec ( t , elt , inf , sup ): \"\"\"Version r\u00e9cursive de la recherche dichotomique d'un \u00e9l\u00e9ment dans un tableau tri\u00e9' Entr\u00e9es : t : liste Python (tableau) d'entiers ou de flottants tri\u00e9e elt : entier ou flottant recherch\u00e9 inf, sup : entiers correspondant respectivement \u00e0 l'indice inf\u00e9rieur et sup\u00e9rieur de la partie de t consid\u00e9r\u00e9e Sortie : entier, valant -1 si l'\u00e9lement n'est pas trouv\u00e9, l'indice de l'\u00e9l\u00e9ment trouv\u00e9 dans le tableau sinon \"\"\" mil = ( sup + inf ) // 2 if sup < inf : return ... elif ... return mil elif elt > t [ mil ]: return recherche_dichotomique_rec ( t , elt , ... , ... ) else : return recherche_dichotomique_rec ( t , elt , ... , ... ) \u00c9crire une fonction recherche it\u00e9rative qui prend en param\u00e8tres un tableau tab de nombres entiers tri\u00e9s par ordre croissant et un nombre entier n , et qui effectue une recherche dichotomique du nombre entier n dans le tableau non vide tab . Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, -1 sinon. Note Cette version, du programme de 1\u00e8re, utilise une boucle while \u00e0 la place de l'appel r\u00e9cursif de la version pr\u00e9c\u00e9dente.","title":"III. Diviser pour r\u00e9gner et tris"},{"location":"tle/seq2/diviser_regner/#iii-diviser-pour-regner","text":"","title":"III. Diviser pour r\u00e9gner"},{"location":"tle/seq2/diviser_regner/#cours","text":"","title":"Cours"},{"location":"tle/seq2/diviser_regner/#td-les-tris-par-insertion-et-par-selection","text":"","title":"TD : Les tris par insertion et par s\u00e9lection"},{"location":"tle/seq2/diviser_regner/#tp-le-tri-fusion","text":"","title":"TP : Le tri fusion"},{"location":"tle/seq2/diviser_regner/#tp-la-recherche-dichotomique","text":"La recherche dichotomique d'un \u00e9l\u00e9ment e dans un tableau tri\u00e9 consiste : 1. A comparer e avec celui au milieu du tableau : - si e est plus grand, on continue la recherche dans la partie droite du tableau. - sinon, on continue la recherche dans la partie gauche du tableau. 2. On recommence en comparant e avec le milieu de la partie du tableau consid\u00e9r\u00e9e, et ainsi de suite. 3. L'algorithme termine lorsque e est trouv\u00e9, ou bien si l'on arrive sur le tableau vide. Appliquer l'algorithme pour rechercher 10 dans [1,6,10,15,17,20] . Rechercher 5 dans ce m\u00eame tableau. Compl\u00e9ter la version r\u00e9cursive suivante : Code def recherche_dichotomique_rec ( t , elt , inf , sup ): \"\"\"Version r\u00e9cursive de la recherche dichotomique d'un \u00e9l\u00e9ment dans un tableau tri\u00e9' Entr\u00e9es : t : liste Python (tableau) d'entiers ou de flottants tri\u00e9e elt : entier ou flottant recherch\u00e9 inf, sup : entiers correspondant respectivement \u00e0 l'indice inf\u00e9rieur et sup\u00e9rieur de la partie de t consid\u00e9r\u00e9e Sortie : entier, valant -1 si l'\u00e9lement n'est pas trouv\u00e9, l'indice de l'\u00e9l\u00e9ment trouv\u00e9 dans le tableau sinon \"\"\" mil = ( sup + inf ) // 2 if sup < inf : return ... elif ... return mil elif elt > t [ mil ]: return recherche_dichotomique_rec ( t , elt , ... , ... ) else : return recherche_dichotomique_rec ( t , elt , ... , ... ) \u00c9crire une fonction recherche it\u00e9rative qui prend en param\u00e8tres un tableau tab de nombres entiers tri\u00e9s par ordre croissant et un nombre entier n , et qui effectue une recherche dichotomique du nombre entier n dans le tableau non vide tab . Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, -1 sinon. Note Cette version, du programme de 1\u00e8re, utilise une boucle while \u00e0 la place de l'appel r\u00e9cursif de la version pr\u00e9c\u00e9dente.","title":"TP : La recherche dichotomique"},{"location":"tle/seq2/piles/","text":"body { text-align: justify} I. Les piles \u00b6 Cours \u00b6 A. D\u00e9finitions \u00b6 Qu'est-ce qu'une pile en informatique ? Une pile est une structure de donn\u00e9es, c'est-\u00e0-dire une mani\u00e8re de stocker, d'acc\u00e9der et de manipuler des donn\u00e9es. Elle fonctionne sur le principe du \"dernier entr\u00e9, premier sorti\", en anglais \"last in, first out\" (LIFO). Exemples de la vie quotidienne les piles d'assiettes, de cr\u00eapes, de livres, etc. Exemples en informatique la fonction \"D\u00e9faire\" ou \"Undo\" d'un logiciel de bureautique, la m\u00e9morisation des pages visit\u00e9es dans un navigateur web. Pour utiliser une telle structure dans un programme, il faut impl\u00e9menter des fonctions de base qui correspondent \u00e0 ce fonctionnement. On veut pouvoir : - construire une nouvelle pile (vide), - ajouter un \u00e9l\u00e9ment \u00e0 la pile : on empile un \u00e9l\u00e9ment, qui se retrouve au-dessus des autres, - enlever un \u00e9l\u00e9ment \u00e0 la pile : on d\u00e9pile un \u00e9l\u00e9ment, le dernier ajout\u00e9, - tester si la pile est vide ou non. B. Impl\u00e9mentation \u00b6 On propose une impl\u00e9mentation de pile, utilisant la POO (ce qui n'\u00e9tait pas obligatoire !) . class Pile : \"\"\" D\u00e9finition d'une pile avec une liste Python \"\"\" def __init__ ( self ): \"\"\"...\"\"\" self . L = [] def vide ( self ): \"\"\"...\"\"\" return self . L == [] def depiler ( self ): \"\"\"...\"\"\" # pr\u00e9condition \u00e0 ajouter return self . L . pop () def empiler ( self , x ): \"\"\"...\"\"\" self . L . append ( x ) Ajouter la description des diff\u00e9rentes m\u00e9thodes (\u00e0 associer aux fonctions de base d\u00e9crite ci-dessus) . Solution class Pile : \"\"\" D\u00e9finition d'une pile avec une liste Python \"\"\" def __init__ ( self ): \"\"\"Initialise une pile vide\"\"\" self . L = [] def vide ( self ): \"\"\"Teste si la pile est vide\"\"\" return self . L == [] def depiler ( self ): \"\"\"d\u00e9pile, c'est-\u00e0-dire enl\u00e8ve le dernier \u00e9l\u00e9ment de la pile\"\"\" # pr\u00e9condition \u00e0 ajouter return self . L . pop () def empiler ( self , x ): \"\"\"Empile, c'est-\u00e0-dire ajoute un \u00e9l\u00e9ment \u00e0 la fin de la pile\"\"\" self . L . append ( x ) Ajouter une assertion qui v\u00e9rifiera une pr\u00e9condition sur les donn\u00e9es d'entr\u00e9e n\u00e9cessaire au bon fonctionnement de depiler . Solution def depiler ( self ): \"\"\"d\u00e9pile, c'est-\u00e0-dire enl\u00e8ve le dernier \u00e9l\u00e9ment de la pile\"\"\" assert ( not ( self . vide ())) # pr\u00e9condition return self . L . pop () Cr\u00e9er un objet de la classe Pile et lui ajouter successivement les entiers 0, 1 et 2. Solution p = Pile () p . empiler ( 0 ) p . empiler ( 1 ) p . empiler ( 2 ) Enlever le dernier \u00e9l\u00e9ment de la pile. Avant de le faire, il faudra v\u00e9rifier qu'elle n'est pas vide. Solution if not ( p . vide ()): p . depiler () TD : Exercices sur les piles \u00b6 Exercice 1 : sur un logiciel de traitement de texte \u00b6 A faire sur feuille. Un utilisateur de traitement de texte tape successivement les lettres suivantes : \u2018v\u2019, \u2018i\u2019, \u2018v\u2019, \u2018e\u2019, \u2018n\u2019 (\u00e9tape 1). Il s\u2019arr\u00eate et clique une fois sur \u00ab undo \u00bb (\u00e9tape 2). Il continue : \u2018 \u2019 (espace), \u2018l\u2019, \u2018e\u2019, \u2018s\u2019, \u2018 \u2018, \u2018m\u2019, \u2018a\u2019, \u2018t\u2019, \u2018h\u2019, \u2018s\u2019 (\u00e9tape 3). Pris d\u2019un doute, il change d\u2019avis et clique 9 fois sur \u00ab undo \u00bb (\u00e9tape 4). Il rectifie en tapant : \u2018n\u2019, \u2018s\u2019, \u2018i\u2019 (\u00e9tape 5). Dessiner les \u00e9tapes 1 \u00e0 5 d\u00e9crites ci-dessus en repr\u00e9sentant le contenu de la pile stockant les caract\u00e8res au fur et \u00e0 mesure. Exercice 2 : programmes de base \u00b6 A faire sur feuille, puis \u00e0 tester sur ordinateur. Les fonctions sont \u00e0 \u00e9crire en utilisant la classe Pile du cours. Ecrire une fonction vide_pile(pile) qui prend en param\u00e8tre une pile pile et la vide compl\u00e8tement. Cette fonction ne renvoie rien, mais l\u2019instruction pile.vide() doit retourner True apr\u00e8s son ex\u00e9cution. 2. Ecrire une fonction retourne_pile(pile) qui prend en param\u00e8tre une pile pile et renvoie ses \u00e9l\u00e9ments dans l'ordre inverse de celui dans lequel ils \u00e9taient. On stockera le r\u00e9sultat dans une deuxi\u00e8me pile, qui est renvoy\u00e9e par la fonction. 3. Ecrire une fonction recherche(pile, elt) qui prend en param\u00e8tre une pile pile et un \u00e9l\u00e9ment elt et d\u00e9pile ses \u00e9l\u00e9ments jusqu'\u00e0 trouver elt ou bien jusqu'\u00e0 ce qu'elle soit vide. Elle renvoie le tuple compos\u00e9 d'un bool\u00e9en indiquant si l'\u00e9l\u00e9ment a \u00e9t\u00e9 trouv\u00e9, et ce qu'il reste dans pile . Exercice 3 : les assiettes de la grand-m\u00e8re \u00b6 A faire sur feuille, puis \u00e0 tester sur ordinateur. Marion est \u00e0 la recherche des assiettes qui lui viennent de sa grand-m\u00e8re, qui sont rang\u00e9es en bas d\u2019une pile d\u2019autres assiettes. Il faut qu\u2019elle d\u00e9pile cette derni\u00e8re, jusqu\u2019\u00e0 trouver la premi\u00e8re assiette de sa grand-m\u00e8re. Elle se retrouve finalement avec deux piles d\u2019assiettes. En utilisant la classe Pile du cours, \u00e9crire une fonction separe_assiettes(pile_assiettes, elt) qui d\u00e9pile pile_assiettes jusqu\u2019\u00e0 rencontrer l\u2019assiette elt et empile les assiettes retir\u00e9es dans une autre pile. La fonction renvoie pile_assiettes modifi\u00e9e, et la 2\u00e8me pile. Si les assiettes recherch\u00e9es ne sont pas trouv\u00e9es, la fonction ne renvoie rien. Exercice 4 : expressions bien parenth\u00e9s\u00e9es \u00b6 A faire sur feuille, puis \u00e0 tester sur ordinateur. Nous voulons \u00e9crire une fonction bien_parenthesee(exp) qui contr\u00f4le si une expression math\u00e9matique exp , repr\u00e9sent\u00e9e sous la forme d\u2019une cha\u00eene de caract\u00e8res, est bien parenth\u00e9s\u00e9e : c\u2019est- \u00e0-dire s\u2019il y a autant de parenth\u00e8ses ouvrantes que de fermantes, et qu\u2019elles sont bien plac\u00e9es. Exemple : (..(..)..) est bien parenth\u00e9s\u00e9e. (...(..(..)...) ne l\u2019est pas. On utilise l'algorithme suivant : on parcourt exp , et lorsque l'on trouve une nouvelle parenth\u00e8se ouvrante, on l'empile dans une pile p . D\u00e8s que l'on trouve une parenth\u00e8se fermante, on d\u00e9pile. Pour savoir si l'expression est bien parenth\u00e9s\u00e9e, on teste \u00e0 la fin si la pile est vide ou non. Traduire cet algorithme en pseudo-code (n'oubliez pas que l'on \u00e9crit une fonction) . Solution fonction bien_parenthesee ( exp ) Entr\u00e9e : la cha\u00eene de caract\u00e8res exp repr\u00e9sentant l expression Sortie : le bool\u00e9en parenthesee On cr\u00e9e une pile p Pour i variant de 0 \u00e0 la longueur de exp - 1 Si \u00e9l\u00e9ment i de exp vaut \"(\" On empile \"(\" dans p Sinon si \u00e9l\u00e9ment i de exp vaut \")\" si p non vide on d\u00e9pile p sinon parenthesee vaut \"Faux\" parenthesee vaut le bool\u00e9en indiquant si p est vide ou non on renvoie parenthesee Traduire ce pseudo-code en code Python. Utiliser la structure de pile du cours. Tester le code sur les expressions suivantes : \\(((2+64)*2^8+5)\\) \\(10+((75-64)*4\\) Pour aller plus loin... Faire en sorte que le programme tienne \u00e9galement compte des \"[\" en plus des \"(\" .","title":"I. Les piles"},{"location":"tle/seq2/piles/#i-les-piles","text":"","title":"I. Les piles"},{"location":"tle/seq2/piles/#cours","text":"","title":"Cours"},{"location":"tle/seq2/piles/#td-exercices-sur-les-piles","text":"","title":"TD : Exercices sur les piles"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/","text":"body { text-align: justify} II. La r\u00e9cursivit\u00e9 \u00b6 3, 2, 1... Partez ! intro.py Cours \u00b6 Introduction \u00b6 Les poup\u00e9es russes sont des s\u00e9ries de poup\u00e9es identiques, de tailles d\u00e9croissantes et plac\u00e9es les unes \u00e0 l'int\u00e9rieur des autres. La derni\u00e8re est la seule \u00e0 \u00eatre pleine, donc \u00e0 ne pas contenir d'autre poup\u00e9e plus petite. Les fractales sont des formes qui se rep\u00e8tent \u00e0 l'infini : une petite partie d'une fractale a la m\u00eame forme qu'une partie plus grande. Un exemple que l'on trouve dans la nature est la forme du brocoli. Qu'est-ce que ces deux structures ont en commun ? Elles se d\u00e9finissent toutes les deux en fonction d'une plus petite partie d'elle-m\u00eame. Ce sont des structures r\u00e9cursives . A. La r\u00e9cursivit\u00e9 \u00b6 D\u00e9finition Une fonction r\u00e9cursive est une fonction qui s\u2019appelle elle-m\u00eame dans sa d\u00e9finition. Pour ne pas que cette fonction s\u2019appelle \u00e0 l\u2019infini, il faut : - qu\u2019elle ait un cas de base (c'est le cas le plus simple \u00e0 r\u00e9soudre), aussi appel\u00e9 condition d'arr\u00eat (dans laquelle il n'y a plus d'appel r\u00e9cursif donc la fonction s'arr\u00eate), - qu\u2019elle se ram\u00e8ne vers ce cas de base, donc qu'il y ait un appel \u00e0 elle-m\u00eame sur un plus petit probl\u00e8me que le probl\u00e8me initial (un entier plus petit, une cha\u00eene de caract\u00e8re plus courte, etc) . B. Fonctionnement d'une pile d'ex\u00e9cution \u00b6 B.1. Cas g\u00e9n\u00e9ral \u00b6 Lors de l\u2019appel d\u2019une fonction, le syst\u00e8me sauvegarde diff\u00e9rents param\u00e8tres comme ses arguments et les variables utilis\u00e9es \u00e0 l\u2019int\u00e9rieur de celle-ci. C\u2019est son contexte d\u2019ex\u00e9cution . Cela permet d\u2019interrompre l\u2019ex\u00e9cution d\u2019une fonction lorsque celle-ci en appelle d\u2019autre, et de reprendre son ex\u00e9cution ensuite. Exemple Code def h ( x ): return x + 1 def g ( x ): return h ( x ) * 2 def f ( x ): return g ( x ) + 1 B.2. Cas r\u00e9cursif \u00b6 Une fonction r\u00e9cursive est une fonction dans laquelle il y a des appels de fonctions, avec la particularit\u00e9 qu'il s'agit de la m\u00eame fonction. La m\u00eame chose se produit donc : une pile d\u2019ex\u00e9cution est utilis\u00e9e pour stocker le contexte d\u2019ex\u00e9cution de ses diff\u00e9rents appels. Prenons l'exemple du calcul de \\(2^n\\) . Code def puissance ( n ) : if n == 0 : return 1 else : return 2 * puissance ( n - 1 ) Ecrire le calcul de puissance(3) : Solution puissance(3) = 2 * puissance(2) puissance(2) = 2 * puissance(1) puissance(1) = 2 * puissance(0) puissance(0) = 1 puissance(3) = 2 * 2 * 2 * 1 = 8 Le sch\u00e9ma suivant explique le processus en terme de pile d\u2019ex\u00e9cution : B.3. Cas limite \u00b6 La pile d\u2019ex\u00e9cution a une taille maximale. Lorsque la pile d\u00e9borde - \"stack overflow\" - (par d\u00e9faut au bout de 1000 appels), Python renvoie le message suivant : RecursionError : maximum recursion depth exceeded while calling a Python object C. R\u00e9cursivit\u00e9 et paradigmes \u00b6 Le paradigme r\u00e9cursif s\u2019oppose g\u00e9n\u00e9ralement au paradigme it\u00e9ratif . Ce dernier est une sous-cat\u00e9gorie du paradigme imp\u00e9ratif et fait r\u00e9f\u00e9rence \u00e0 l\u2019utilisation de boucles. Avec la r\u00e9cursivit\u00e9, on peut se passer de boucles. C\u2019est cette m\u00e9thode de programmation qui les remplace lorsque l\u2019on programme en utilisant le paradigme fonctionnel . Exercices \u00b6 Les exercices traitent d'abord d'algorithmes qui manipulent des entiers , puis des cha\u00eenes de caract\u00e8res (et des listes en bonus). Exercice 1 : factorielle \u00b6 La fonction factorielle, appliqu\u00e9e \u00e0 un entier \\(n\\) est not\u00e9e \\(!n\\) et est d\u00e9finie de la mani\u00e8re suivante : - \\(!0 = 1\\) - \\(!n = 1*2*...*(n-1)*n\\) Exprimer \\(!n\\) en fonction de \\(!(n-1)\\) . En d\u00e9duire une fonction factorielle(n) calculant la valeur de !n pour tout entier n . V\u00e9rifier que factorielle(5) renvoie bien la valeur 120 et factorielle(7) la valeur 5040 . Dessiner la pile d'ex\u00e9cution pour l'appel de factorielle(4) . V\u00e9rifier votre travail en visualisant l'ex\u00e9cution de votre code avec https://pythontutor.com/visualize.html Exercice 2 : la suite de Fibonacci \u00b6 La suite de Fibonacci est d\u00e9finie comme suit : - \\(u_0 = 0\\) et \\(u_1 = 1\\) - \\(u_n=u_{n-1}+u_{n-2}\\) \u00c9crire une fonction r\u00e9cursive fib_rec(n) qui donne le n i\u00e8me terme de la suite de Fibonacci. Ecrire une version it\u00e9rative fib_it(n) en rempla\u00e7ant les appels r\u00e9cursifs par l'utilisation d'une boucle. Repr\u00e9senter les appels r\u00e9cursifs de fib_rec(4) sous la forme d\u2019une structure hi\u00e9rarchique, puis sous la forme d\u2019une pile. Exercice 3 : palindromes \u00b6 Un palindrome est un mot pouvant se lire \u00e0 l'endroit comme \u00e0 l'envers, comme \"\u00e9t\u00e9\" ou \"radar\". On veut \u00e9crire une fonction palindrome prenant en entr\u00e9e une cha\u00eene de caract\u00e8re mot et renvoyant un bool\u00e9en indiquant si ce mot est un palindrome ou non. Les cas de base sont les cas o\u00f9 mot est de longueur 0 ou 1. Que doit renvoyer la fonction dans ces cas ? Dans tous les autres cas, mot est un palindrome si : la premi\u00e8re et la derni\u00e8re lettre du mot sont identiques, le reste du mot (sans la premi\u00e8re et la derni\u00e8re lettre) est un palindrome. Sur quelle valeur l'appel r\u00e9cursif se fait-il ? Ecrire la fonction palindrome incluant ces diff\u00e9rents cas. Pour prendre une partie d'une cha\u00eene de caract\u00e8res, on peut faire ce qu'on appelle du slicing , c'est-\u00e0-dire un d\u00e9coupage de la cha\u00eene entre deux indices : pour une chaine chaine , on peut choisir de consid\u00e9rer chaine[i:j] qui prendra les \u00e9l\u00e9ments de i \u00e0 j-1 de chaine . Exercice 4 : somme d'une liste \u00b6 Une fonction r\u00e9cursive sur un param\u00e8tre de type liste Python fonctionne de la m\u00eame mani\u00e8re qu'avec un entier : il faut, \u00e0 chaque nouvel appel, r\u00e9duire le probl\u00e8me. C'est-\u00e0-dire ici, r\u00e9duire la liste initiale. Ecrire une fonction it\u00e9rative (utilisant une boucle) permettant de calculer la somme des \u00e9l\u00e9ments d'une liste de nombres somme_it(liste) . Pour quelle valeur de la liste est-il le plus facile de faire ce calcul, et que vaut-il dans ce cas ? (cas de base) On peut faire du slicing sur les listes Python de la m\u00eame mani\u00e8re que sur les cha\u00eenes de caract\u00e8res. En d\u00e9duire comment prendre tous les \u00e9l\u00e9ments d'une liste sauf le premier. En d\u00e9duire l'appel r\u00e9cursif de la fonction somme_rec qui sera fait pour faire le calcul de la somme d'une liste de mani\u00e8re r\u00e9cursive. Ecrire la fonction r\u00e9cursive somme_rec(liste) . Exercice 5 : Le rendu de monnaie \u00b6 Le code suivant permet de rendre la monnaie avec l'algorithme glouton vu en classe de premi\u00e8re (voir le cours ici ). L'algorithme est cette fois-ci impl\u00e9ment\u00e9 de mani\u00e8re r\u00e9cursive. Compl\u00e9ter le code : def rendu_glouton ( a_rendre , rang , pieces ): v = pieces [ rang ] if a_rendre == 0 : return ... elif v <= ... : return ... + rendu_glouton ( a_rendre - v , rang ) else : return rendu_glouton ( a_rendre , ... ) valeurs = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu_glouton ( 67 , 0 , valeurs ) == [ 50 , 10 , 5 , 2 ] assert rendu_glouton ( 291 , 0 , valeurs ) == [ 100 , 100 , 50 , 20 , 20 , 1 ] assert rendu_glouton ( 291 , 1 , valeurs [ 1 :]) == [ 50 , 50 , 50 , 50 , 50 , 20 , 20 , 1 ] # si on ne dispose pas de billets de 100 TD : Les tours de Hano\u00ef \u00b6 Introduction \u00b6 Le jeu des tours de Hano\u00ef consiste \u00e0 d\u00e9placer une pile de disques, de taille diff\u00e9rente, d'une tige de d\u00e9part (\u00e0 gauche) \u00e0 une tige d'arriv\u00e9e (tout \u00e0 droite) en respectant la r\u00e8gle suivante : un disque ne peut \u00eatre plac\u00e9 sur un autre disque de plus petite taille . A. Du cas particulier au cas g\u00e9n\u00e9ral \u00b6 Comment r\u00e9soudre le probl\u00e8me pour 2 disques ? (le repr\u00e9senter sur le sch\u00e9ma ci-dessous) R\u00e9soudre le probl\u00e8me pour 3, 4 et 5 disques gr\u00e2ce \u00e0 cette simulation : http://championmath.free.fr/tourhanoi.htm On consid\u00e8re une pile de n disques, et on suppose que l'on sait r\u00e9soudre le probl\u00e8me pour n-1 diques . Repr\u00e9senter les \u00e9tapes permettant de d\u00e9placer le n \u00e8me disque et la pile de n-1 disques (qui se d\u00e9place en entier, on suppose qu'on sait le faire) , de mani\u00e8re \u00e0 r\u00e9soudre le probl\u00e8me : R\u00e9capituler les trois \u00e9tapes de r\u00e9solution du probl\u00e8me : Etape 1 : Etape 2 : Etape 3 : B. Algorithme \u00b6 Pour r\u00e9soudre le probl\u00e8me pour n disques, on fait appel, 2 fois, \u00e0 la r\u00e9solution du probl\u00e8me pour n-1 disques. Nous allons donc utiliser un algorithme r\u00e9cursif. On propose le pseudo-code suivant : fonction Hanoi ( n , dep , inter , arr ) ''' Affiche les d\u00e9placements pour r\u00e9soudre le probl\u00e8me de Hano\u00ef pour n disques Entr\u00e9es : n : entier repr\u00e9sentant le nombre de disques \u00e0 d\u00e9placer dep, inter, arr : caract\u00e8res indiquant les sommets de d\u00e9part, interm\u00e9diaire et d'arriv\u00e9e ''' Si n est \u00e9gal \u00e0 0 retourner Rien Sinon Hanoi ( ......................... ) afficher le d\u00e9placement depuis dep jusqu \u2019 \u00e0 arr Hanoi ( ......................... ) Compl\u00e9ter le pseudo-code avec les bons param\u00e8tres pour les appels r\u00e9cursifs \u00e0 la fonction Hanoi . C. Impl\u00e9mentation \u00b6 Ecrire l'impl\u00e9mentation en Python de cet algorithme ci-dessous : N.B.: Pour l'affichage, on peut utiliser une instruction du type : print ( \"D\u00e9placer le disque \" , str ( n ), \"de la tige \" , dep , \" vers la tige \" , arr ) Pour visualiser ce qu'il se passe, compl\u00e9ter le fichier Python fourni ici : TP_Hanoi_Base.py . \u00b6 TP : Dessiner des fractales \u00b6 Une fractale est un objet qui appara\u00eet identique \u00e0 diff\u00e9rentes \u00e9chelles : en \"zoomant\" sur une partie de la figure, on retrouve la figure initiale. On peut repr\u00e9senter une version approch\u00e9e des fractales avec des programmes r\u00e9cursifs, dont on d\u00e9fini le niveau de r\u00e9cursion (donc le niveau de d\u00e9tails de la figure). 1. Des bulles \u00b6 Le code suivant (accessible sur l'ENT) permet de dessiner une figure avec des bulles. Il utilise la biblioth\u00e8que turtle dont des \u00e9l\u00e9ments de documentation sont donn\u00e9s dans le fichier. from turtle import * def dessine_cercle ( x , y , r ): up () goto ( x , y - r ) down () circle ( r ) return None def bubble ( n , x , y , r ): if n == 0 : return None else : dessine_cercle ( x , y , r ) bubble ( n - 1 , x + 3 / 2 * r , y , r / 2 ) bubble ( n - 1 , x , y - 3 / 2 * r , r / 2 ) return None bubble ( 4 , - 100 , 100 , 50 ) done () Ex\u00e9cuter le code. Faire varier la valeur de n pour augmenter le niveau de d\u00e9tails de la figure. Identifier les appels r\u00e9cursifs de la fonction bubble . Quel param\u00e8tre permet de r\u00e9duire la taille des bulles au fur et \u00e0 mesure ? Quels param\u00e8tres changent la position de la tortue ? La variation de quel param\u00e8tre nous assure que l'algorithme va se terminer ? 2. Le flocon de von Koch \u00b6 Le flocon de Von Koch est une des premi\u00e8res courbes fractales \u00e0 avoir \u00e9t\u00e9 d\u00e9crite. Elle a \u00e9t\u00e9 invent\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Helge von Koch. Voici une partie de ce flocon : 2.A. Principe \u00b6 On commence par un segment de longueur a . On coupe ce segment en 3 parties \u00e9gales. On remplace le segment central par un triangle \u00e9quilat\u00e9ral de c\u00f4t\u00e9 a/3 . Chaque segment de longueur a/3 est lui-m\u00eame d\u00e9coup\u00e9 en 3 parties \u00e9gales (chacune de longueur a/9 ). On remplace chaque partie centrale par un triangle \u00e9quilat\u00e9ral de c\u00f4t\u00e9 a/9 . etc. 2.B. Algorithme \u00b6 Nous allons utiliser un algorithme similaire \u00e0 celui qui permet de tracer le motif avec les bulles pour dessiner ce flocon. Compl\u00e9ter l'algorithme propos\u00e9 : fonction fragment_flocon ( n , cote ): ENTREES : n : entier indiquant le nombre d \u2019 it\u00e9ration \u00e0 faire cote : la longueur du segment initial Si n est \u00e9gal \u00e0 0 alors On trace le segment de longueur cote Sinon On appelle la fonction fragment_flocon avec les param\u00e8tres __________ On tourne de _____ degr\u00e9s sur la _______________ ___________________________________________________ __________________________________________ ___________________________________________________ __________________________________________ ___________________________________________________ 2.C. Impl\u00e9mentation \u00b6 Impl\u00e9menter l'algorithme en Python permettant de dessiner une partie du flocon. Ecrire la fonction flocon dessinant le flocon en entier.","title":"II. La r\u00e9cursivit\u00e9"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#ii-la-recursivite","text":"3, 2, 1... Partez ! intro.py","title":"II. La r\u00e9cursivit\u00e9"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#cours","text":"","title":"Cours"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#exercices","text":"Les exercices traitent d'abord d'algorithmes qui manipulent des entiers , puis des cha\u00eenes de caract\u00e8res (et des listes en bonus).","title":"Exercices"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#td-les-tours-de-hanoi","text":"","title":"TD : Les tours de Hano\u00ef"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#_1","text":"","title":""},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#tp-dessiner-des-fractales","text":"Une fractale est un objet qui appara\u00eet identique \u00e0 diff\u00e9rentes \u00e9chelles : en \"zoomant\" sur une partie de la figure, on retrouve la figure initiale. On peut repr\u00e9senter une version approch\u00e9e des fractales avec des programmes r\u00e9cursifs, dont on d\u00e9fini le niveau de r\u00e9cursion (donc le niveau de d\u00e9tails de la figure).","title":"TP : Dessiner des fractales"},{"location":"tle/seq3/Cours_SoC/","text":"body { text-align: justify} Cours : Les syst\u00e8mes sur puce \u00b6 Pour simplifier les co\u00fbts, les concepteurs de circuits \u00e9lectroniques recherchent en permanence l\u2019int\u00e9gration maximale. L\u2019objectif est d\u2019implanter toutes les fonctions d\u2019un syst`eme sur une seule puce. La difficult\u00e9 vient de la diversit\u00e9 des technologies qui doivent cohabiter sur la m\u00eame puce, sans interf\u00e9rer les unes avec les autres. Ces syst\u00e8mes se rencontrent dans l\u2019informatique embarqu\u00e9e : dans les syst\u00e8mes de traitement de l\u2019information agissant de mani\u00e8re autonome. On parle de syst\u00e8mes sur puce ou SoC de l\u2019anglais \"System on a Chip\" . A. Pr\u00e9sentation \u00b6 A partir de la vid\u00e9o \"C'est pas sorcier : Nanomonde se secoue les puces\" , r\u00e9pondre aux questions suivantes : Quel est l'ordre de grandeur du nombre de composants que l'on trouve dans une puce ? Combien de transistors faut-il pour inverser un courant (de 1 \u00e0 0 et de 0 \u00e0 1) ? Pour additionner des chiffres ? Que dit la loi de Moore ? Quelle est l'ordre de grandeur de la taille d'un transistor en 2003 (date de la vid\u00e9o) ? B. Etude d\u2019un exemple \u00b6 Le sch\u00e9ma suivant d\u00e9crit le SoC BCM2711 qui \u00e9quipe les petits ordinateurs Raspberry Pi : Identifier les diff\u00e9rents composants de l'architecture de von Neumann. Faire des recherches pour trouver les caract\u00e9ristiques suivantes : nombre de coeurs : fr\u00e9quence : capacit\u00e9 de m\u00e9moire : connectique : r\u00e9seau : C. Avantages et inconv\u00e9nients \u00b6 A partir de ce que vous avez vu dans le cours, et d'une recherche Web : - Lister les avantages d\u2019un SoC. - Lister les inconv\u00e9nients d\u2019un SoC.","title":"I. Les syst\u00e8mes sur puce"},{"location":"tle/seq3/Cours_SoC/#cours-les-systemes-sur-puce","text":"Pour simplifier les co\u00fbts, les concepteurs de circuits \u00e9lectroniques recherchent en permanence l\u2019int\u00e9gration maximale. L\u2019objectif est d\u2019implanter toutes les fonctions d\u2019un syst`eme sur une seule puce. La difficult\u00e9 vient de la diversit\u00e9 des technologies qui doivent cohabiter sur la m\u00eame puce, sans interf\u00e9rer les unes avec les autres. Ces syst\u00e8mes se rencontrent dans l\u2019informatique embarqu\u00e9e : dans les syst\u00e8mes de traitement de l\u2019information agissant de mani\u00e8re autonome. On parle de syst\u00e8mes sur puce ou SoC de l\u2019anglais \"System on a Chip\" .","title":"Cours : Les syst\u00e8mes sur puce"},{"location":"tle/seq3/Cours_SoC/#a-presentation","text":"A partir de la vid\u00e9o \"C'est pas sorcier : Nanomonde se secoue les puces\" , r\u00e9pondre aux questions suivantes : Quel est l'ordre de grandeur du nombre de composants que l'on trouve dans une puce ? Combien de transistors faut-il pour inverser un courant (de 1 \u00e0 0 et de 0 \u00e0 1) ? Pour additionner des chiffres ? Que dit la loi de Moore ? Quelle est l'ordre de grandeur de la taille d'un transistor en 2003 (date de la vid\u00e9o) ?","title":"A. Pr\u00e9sentation"},{"location":"tle/seq3/Cours_SoC/#b-etude-dun-exemple","text":"Le sch\u00e9ma suivant d\u00e9crit le SoC BCM2711 qui \u00e9quipe les petits ordinateurs Raspberry Pi : Identifier les diff\u00e9rents composants de l'architecture de von Neumann. Faire des recherches pour trouver les caract\u00e9ristiques suivantes : nombre de coeurs : fr\u00e9quence : capacit\u00e9 de m\u00e9moire : connectique : r\u00e9seau :","title":"B. Etude d\u2019un exemple"},{"location":"tle/seq3/Cours_SoC/#c-avantages-et-inconvenients","text":"A partir de ce que vous avez vu dans le cours, et d'une recherche Web : - Lister les avantages d\u2019un SoC. - Lister les inconv\u00e9nients d\u2019un SoC.","title":"C. Avantages et inconv\u00e9nients"},{"location":"tle/seq4/dico/","text":"body { text-align: justify} III. Les dictionnaires \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Les dictionnaires ou tableaux associatifs sont des structures de donn\u00e9es non-lin\u00e9aires, o\u00f9 des valeurs sont associ\u00e9es \u00e0 des cl\u00e9s . B. Type abstrait \u00b6 Les op\u00e9rations primitives pouvant \u00eatre faites sur les dictionnaires sont les suivantes : - ajout d'une nouvelle valeur \u00e0 une nouvelle cl\u00e9, - modification de la valeur associ\u00e9e \u00e0 une cl\u00e9 existante, - suppression d'une cl\u00e9 et de la valeur associ\u00e9e, - recherche de la valeur associ\u00e9e \u00e0 une cl\u00e9. Ils sont impl\u00e9ment\u00e9s directement en Python avec le type dict . Rappels Comment vous pouvez effectuer les op\u00e9rations primitives sur un dictionnaire Python, not\u00e9 d ? Commencer par cr\u00e9er un dictionnaire vide. Solution d = {} d [ cle ] = v1 #ajout d'une nouvelle valeur \u00e0 une nouvelle cl\u00e9 d [ cle ] = v2 #modification de la valeur associ\u00e9e \u00e0 cle d . pop ( cle ) #supprime cle et sa valeur associ\u00e9e print ( d [ cle ]) #recherche de la valeur associ\u00e9e \u00e0 cle Avec quelle m\u00e9thode acc\u00e8de-t-on \u00e0 la liste des cl\u00e9s de d ? A la liste de ses valeurs ? Solution d.keys() et d.values() donnent respectivement la liste des cl\u00e9s et des valeurs. Comment peut-on afficher l'ensemble des cl\u00e9s et des valeurs associ\u00e9es, en parcourant d ? Solution for cle in d : print ( cle , d [ cle ]) d . items () #donne la liste des couples C. Acc\u00e8s \u00e0 un \u00e9l\u00e9ment \u00b6 L' acc\u00e8s \u00e0 un \u00e9l\u00e9ment dans un tableau associatif s'effectue, comme dans un tableau, en temps constant . Il est ind\u00e9pendant de la taille de la structure. L'impl\u00e9mentation d'un dictionnaire est en effet faite gr\u00e2ce \u00e0 une table de hachage (hors programme) qui associe \u00e0 chaque couple cl\u00e9-valeur un indice du tableau. Rappel des algorithmes \u00e0 conna\u00eetre Ecrire une fonction occurrence_dico(d, k) recherchant la cl\u00e9 k dans le dictionnaire d . Si elle trouve cette cl\u00e9, elle renvoie le tuple k , valeur associ\u00e9e \u00e0 k , sinon elle renvoie None, 0 . ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Ecrire une fonction maxi_dico(d) renvoyant la valeur maximale du dictionnaire d non-vide, constitu\u00e9 d'entiers positifs, et la cl\u00e9 associ\u00e9e. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Ecrire une fonction moyenne_dico(d) renvoyant la moyenne des valeurs du dictionnaire d non-vide sur l'ensemble de ses cl\u00e9s. On suppose que toutes les valeurs sont des entiers ou des flottants. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exercice Correction \u00c9crire en Python une fonction tabToDict qui prend en param\u00e8tre d\u2019entr\u00e9e une liste Python de la forme [cl\u00e91, valeur1, cl\u00e92, valeur2,\u2026] et retourne un dictionnaire correspondant de la forme { cl\u00e91 : valeur1, cl\u00e92 : valeur2,\u2026}. R\u00e9ciproquement, \u00e9crire une fonction en Python dictToTab qui permet de passer d'un dictionnaire \u00e0 une liste.","title":"III. Les dictionnaires"},{"location":"tle/seq4/dico/#iii-les-dictionnaires","text":"","title":"III. Les dictionnaires"},{"location":"tle/seq4/dico/#cours","text":"","title":"Cours"},{"location":"tle/seq4/files/","text":"body { text-align: justify} II. Les files \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Une file est une structure de donn\u00e9es bas\u00e9e sur le principe \u00ab premier entr\u00e9, premier sorti \u00bb (en anglais \"First In, First Out\" (FIFO)), c\u2019est-\u00e0-dire que les premiers \u00e9l\u00e9ments ajout\u00e9s \u00e0 la file seront les premiers \u00e0 \u00eatre enlev\u00e9s. Exemples de la vie quotidienne pour repr\u00e9senter le syst\u00e8me de queue dans un magasin, pour repr\u00e9senter le flux de v\u00e9hicules sur une route, pour stocker des dossiers en attente dans une entreprise,... Exemples en informatique pour la gestion du temps affect\u00e9 \u00e0 chaque t\u00e2che par un syst\u00e8me d'exploitation, pour la gestion de la file d'attente de documents \u00e0 imprimer, pour mat\u00e9rialiser une file d'attente d'un logiciel de visioconf\u00e9rence, d'un jeu en ligne,... B. Type abstrait \u00b6 Les op\u00e9rations primitives que l'on peut faire sur une file sont les suivantes : - construire une file vide ( fileCree() ), - ajouter un \u00e9l\u00e9ment \u00e0 la file (il se retrouve apr\u00e8s les autres) ( fileAjouterFin(file, element) ), - enlever un \u00e9l\u00e9ment de la file (le premier ajout\u00e9 : celui en t\u00eate) et le renvoie ( fileRetirerTete(file) ), - estimer si la file est vide ( True ) ou non ( False ) ( fileEstVide(file) ), - obtenir le nombre d'\u00e9l\u00e9ments contenus dans la file ( fileTaille(file) ), - obtenir la t\u00eate de la file, aussi appel\u00e9 sommet (sans la retirer) ( fileTete(file) ). Exercice : En utilisant les noms des fonctions donn\u00e9s ci-dessus, cr\u00e9er une file, lui ajouter les \u00e9l\u00e9ments 2 et 9, puis lui enlever le dernier \u00e9l\u00e9ment r\u00e9cup\u00e9r\u00e9 dans une variable, avant d'estimer si elle est vide. Solution f = fileCree () f = enfiler ( f , 2 ) f = enfiler ( f , 9 ) x = enfiler ( f ) print ( fileVide ( f )) C. Les structures lin\u00e9aires de donn\u00e9es \u00b6 Les listes , piles et files sont des structures lin\u00e9aires de donn\u00e9es : c'est-\u00e0-dire que les diff\u00e9rents \u00e9l\u00e9ments sont ordonn\u00e9s et adjacents les uns aux autres. Les piles et les files contrastent par leur ordre d'acc\u00e8s aux donn\u00e9es est oppos\u00e9 : LIFO vs FIFO. TP : Impl\u00e9mentations \u00b6 Dans ce TD, nous allons impl\u00e9menter la structure de file , de plusieurs mani\u00e8res diff\u00e9rentes. A. Une premi\u00e8re impl\u00e9mentation \u00b6 Une premi\u00e8re impl\u00e9mentation est donn\u00e9e ci-dessous. A partir de ce code, cr\u00e9er une file et enfiler successivement les entiers de 0 \u00e0 4. def file (): ''' Renvoie une file vide ''' return [] def vide ( f ): ''' Renvoie True si la file est vide, False sinon ''' return f == [] def enfiler ( f , x ): ''' Ajoute x \u00e0 la file f ''' return f . append ( x ) def defiler ( f ): ''' Enl\u00e8ve et renvoie le premier \u00e9l\u00e9ment de la file ''' assert not vide ( f ), \"file vide !\" return f . pop ( 0 ) Cr\u00e9er les fonctions suivantes : - taille : renvoie la taille d'une file f , - sommet : renvoie le sommet d'une file f , sans l'enlever de la file. Les tester sur la file f cr\u00e9\u00e9e pr\u00e9c\u00e9demment. B. Impl\u00e9mentation avec deux piles \u00b6 Pour la deuxi\u00e8me implantation, nous allons utiliser deux structures de piles et la programmation orient\u00e9e objet. Le proc\u00e9d\u00e9 est le suivant : La file est, au d\u00e9part, compos\u00e9e de deux piles vides : une pile d'entr\u00e9e et une pile de sortie . Quand on ajoute un \u00e9l\u00e9ment dans la file, on le place dans la pile d'entr\u00e9e . Quand on supprime un \u00e9l\u00e9ment de la file, deux cas se pr\u00e9sentent : Si la pile de sortie est vide : on d\u00e9pile alors chaque \u00e9l\u00e9ment de la pile d'entr\u00e9e pour les empiler dans la pile de sortie. S'il y a au moins un \u00e9l\u00e9ment dans la pile de sortie : on ne fait rien. Dans les deux cas , on supprime ensuite le sommet de la pile de sortie. On utilise donc une classe Pile , et on propose la code de la classe File ci-dessous. Compl\u00e9ter les m\u00e9thodes propos\u00e9es pour impl\u00e9menter la structure de file. Ajouter \u00e0 la classe File les m\u00e9thodes suivantes : sommet : retourne le sommet de la file, sans l'en enlever. taille : retourne le nombre d'\u00e9l\u00e9ments de la file. class Pile : ''' D\u00e9finition d'une classe Pile une instance Pile est cr\u00e9\u00e9e avec une liste Python ''' def __init__ ( self ): \"Cr\u00e9ation d'une pile vide\" self . L = [] def vide ( self ): \"Teste si la pile est vide\" return self . L == [] def depiler ( self ): \"D\u00e9pile : enl\u00e8ve le dernier \u00e9l\u00e9ment\" assert ( not ( self . vide ()) ), \"Pile vide !\" return self . L . pop () def empiler ( self , x ): \"Empile : ajoute un \u00e9l\u00e9ment x en haut de la pile\" self . L . append ( x ) def taille ( self ): \"Retourne la taille (le nombre d'\u00e9l\u00e9ments) de la pile\" return len ( self . L ) def sommet ( self ): \"Retourne le premier \u00e9l\u00e9ment \u00e0 sortir de la pile sans le d\u00e9piler\" return self . L [ self . taille () - 1 ] class File : def __init__ ( self ): ''' Cr\u00e9e une file vide. Attribut pile_entree : objet Pile stockant les nouvelles valeurs ajout\u00e9es \u00e0 la file. Attribut pile_sortie : objet Pile stockant les valeurs qui vont sortir de la file. Son sommet est le premier \u00e9l\u00e9ment de la file. ''' self . pile_entree = Pile () self . pile_sortie = Pile () def vide ( self ): ''' Teste si la file est vide ou non. ''' return ??? def enfiler ( self , x ): ''' Ajoute l'\u00e9l\u00e9ment x \u00e0 la file.''' self . pile_entree . empiler ( x ) def organiser ( self ): ''' Fonction auxiliaire actualisant l'\u00e9tat de la pile de sortie lorsque l'on veut supprimer un \u00e9l\u00e9ment de la file. Si la pile de sortie est vide, on lui ajoute successivement les \u00e9l\u00e9ments que l'on d\u00e9pile \u00e0 la pile d'entr\u00e9e. ''' if self . pile_sortie . vide (): ??? def defiler ( self ): ''' Supprime le premier \u00e9l\u00e9ment entr\u00e9 dans la file. ''' self . organiser () ??? Tester le bon fonctionnement du code suivant : f = File () for i in range ( 5 ): f . enfiler ( 2 * i ) print ( f . taille ()) a = f . defiler () print ( a ) print ( f . taille ()) print ( f . sommet ()) C. Impl\u00e9mentation avec une liste Python \u00b6 En vous inspirant de l'impl\u00e9mentation d'une pile en POO que nous avions faite, proposer une impl\u00e9mentation similaire pour une structure de file : en utilisant une liste Python. On devra retrouver les m\u00eames primitives que pour les autres impl\u00e9mentations. Faire un test en cr\u00e9ant un nouvel objet de la classe File , et en lui appliquant les diff\u00e9rentes m\u00e9thodes. class File : # \u00e0 compl\u00e9ter D. L'impl\u00e9mentation Python \u00b6 Python poss\u00e8de sa propre impl\u00e9mentation de file, utilisable aussi pour mod\u00e9liser une pile. Il s'agit de la structure deque (\"double-ended queue\"). Utiliser sa documentation : https://docs.python.org/fr/3/library/collections.html#collections.deque pour choisir les m\u00e9thodes qui permettent de simuler le fonctionnement d'une file. On y retrouve des m\u00e9thodes similaires \u00e0 celles d\u00e9finies pour les listes Python, mais avec la possibilit\u00e9 d'ajouter et de supprimer des \u00e9l\u00e9ments soit \u00e0 droite, soit \u00e0 gauche. Rajouter, \u00e0 la suite du code ci-dessous, des instructions qui permettent de cr\u00e9er un objet deque , de lui enfiler plusieurs \u00e9l\u00e9ments, d'estimer si la file est vide, et de d\u00e9filer un \u00e9l\u00e9ment. Il y a plusieurs solutions. from collections import deque TD : Mod\u00e9lisation \u00b6 Impl\u00e9mentation de File Correction du TD A. Pr\u00e9sentation \u00b6 On souhaite \u00e9crire un algorithme qui simule l'arriv\u00e9e de voitures sur la route R3, mod\u00e9lis\u00e9e par la file f3 . - Dans la file f1 , on repr\u00e9sente la pr\u00e9sence d\u2019une voiture par le nombre 1 et l\u2019absence de voiture par 0 . - Dans la file f2 , on repr\u00e9sentera la pr\u00e9sence d\u2019une voiture par le nombre 2 et l\u2019absence de voiture par 0 . Donner la file f1 correspondant \u00e0 la situation suivante : une voiture, pas de voiture, pas de voiture, une voiture, une voiture, pas de voiture. Donner la file f2 correspondant \u00e0 la situation suivante : pas de voiture, pas de voiture, une voiture, une voiture, pas de voiture, une voiture. B. Les diff\u00e9rents cas \u00b6 Que doit faire l\u2019algorithme si : - les deux sommets des files sont \u00e0 0 ? - le sommet de f1 est \u00e0 1 et celui de f2 \u00e0 2 ? - le sommet de f1 est \u00e0 1 et celui de f2 \u00e0 0 ? - le sommet de f1 est \u00e0 0 et celui de f2 \u00e0 2 ? - l\u2019une des deux files est vide ? Donner la file f3 correspondant aux files entrantes suivantes : f1 : t\u00eate <\u2013 [0, 1, 1, 0, 1] <\u2013 queue f2 : t\u00eate <\u2013 [0, 2, 2, 2, 0, 2, 0] <\u2013 queue C. Construction de l\u2019algorithme \u00b6 Ecrire sous la forme d\u2019un pseudo-code la fonction croisement prenant en entr\u00e9es les deux files f1 et f2 , et retournant la file f3 . Tous les cas identifi\u00e9s dans la partie pr\u00e9c\u00e9dente devront \u00eatre trait\u00e9s. On n\u2019utilisera que les primitives utilisables sur les files. D. Impl\u00e9mentation de l\u2019algorithme \u00b6 Impl\u00e9menter le pseudo-code pr\u00e9c\u00e9dent et le tester sur l\u2019exemple donn\u00e9 dans la partie 2. On utilisera une impl\u00e9mentation de file avec la POO, utilisant les m\u00e9thodes enfiler , defiler , sommet et estVide .","title":"II. Les files"},{"location":"tle/seq4/files/#ii-les-files","text":"","title":"II. Les files"},{"location":"tle/seq4/files/#cours","text":"","title":"Cours"},{"location":"tle/seq4/files/#tp-implementations","text":"Dans ce TD, nous allons impl\u00e9menter la structure de file , de plusieurs mani\u00e8res diff\u00e9rentes.","title":"TP : Impl\u00e9mentations"},{"location":"tle/seq4/files/#td-modelisation","text":"Impl\u00e9mentation de File Correction du TD","title":"TD : Mod\u00e9lisation"},{"location":"tle/seq4/listes/","text":"body { text-align: justify} I. Les listes \u00b6 Cours \u00b6 A. La notion de liste \u00b6 D\u00e9finition Une liste est un ensemble s\u00e9quentiel (les \u00e9l\u00e9ments sont les uns \u00e0 la suite des autres) de donn\u00e9es de m\u00eame type. Elle est classiquement impl\u00e9ment\u00e9e par : - un tableau , - une liste cha\u00een\u00e9e . Rappel Un tableau est une suite indic\u00e9e d'\u00e9l\u00e9ments de m\u00eame type. L'avantage d'un tableau est que l'on peut acc\u00e9der directement (avec une complexit\u00e9 constante ) \u00e0 chacun de ses \u00e9l\u00e9ments, gr\u00e2ce \u00e0 leur indice. Son inconv\u00e9nient est que sa taille est d\u00e9finie \u00e0 l'avance , et ne peut \u00eatre modifi\u00e9e. B. La structure de liste cha\u00een\u00e9e \u00b6 D\u00e9finition Une liste cha\u00een\u00e9e est une suite d'\u00e9l\u00e9ments compos\u00e9e : - d'une t\u00eate : le premier \u00e9l\u00e9ment auquel on peut acc\u00e9der, - d'une queue : le reste des \u00e9l\u00e9ments. Historiquement, le langage LISP (\"list processing\") est un des premiers \u00e0 introduire cette structure de donn\u00e9es en 1958. Dans ce langage, la t\u00eate est nomm\u00e9e car pour \"content of address register\" , et la queue cdr pour \"content of decrement register\" . Sur une liste, on peut effectuer les op\u00e9rations dites \"primitives\" suivantes : - cr\u00e9er une liste vide ( listeCree() ), - obtenir la t\u00eate de la liste ( listeTete(liste) ), - obtenir la queue de la liste ( listeQueue(liste) ), - renvoyer si la liste est vide ( True ) ou non ( False ) ( listeEstVide() ), - ajouter un \u00e9l\u00e9ment en t\u00eate d'une liste ( listeAjoute(element, liste) ). Exercice En utilisant les fonctions d\u00e9finie ci-dessus, cr\u00e9er une liste cha\u00een\u00e9e initialement vide, \u00e0 laquelle on ajoute successivement les entiers 15, 2 et 3. Solution L = listeCree () L = listeAjoute ( 15 , L ) L = listeAjoute ( 2 , L ) L = listeAjoute ( 3 , L ) # ou L = listeAjoute(3,listeAjoute(2,listeAjoute(15, listeCree()))) En quoi une liste cha\u00een\u00e9e est-elle une structure r\u00e9cursive ? Une liste est une structure r\u00e9cursive car sa queue est elle-m\u00eame une liste. C. Stockage en m\u00e9moire \u00b6 Tableaux et listes cha\u00een\u00e9es se distinguent par leur utilisation de la m\u00e9moire. Un tableau est stock\u00e9 dans une suite contig\u00fce de cases m\u00e9moires. Sa taille est fixe : l'ajout d'un nouvel \u00e9l\u00e9ment, qui agrandirait la taille du tableau, n'est pas possible. En Python, la structure de liste correspond \u00e0 un tableau dynamique : un tableau auquel on peut ajouter des \u00e9l\u00e9ments. Pour ins\u00e9rer un \u00e9l\u00e9ment au milieu, il faut d\u00e9caler tous les suivants. Et s'il n'y a pas de place pour ajouter ces donn\u00e9es dans les cases m\u00e9moires contig\u00fces... il faut r\u00e9\u00e9crire le tableau ailleurs. Les diff\u00e9rents \u00e9l\u00e9ments d'une liste cha\u00een\u00e9e ne sont pas stock\u00e9s de mani\u00e8re contig\u00fce : chaque \u00e9l\u00e9ment est associ\u00e9 \u00e0 2 cases m\u00e9moires : - une dans laquelle on stocke la valeur de l'\u00e9l\u00e9ment, - une dans laquelle on stocke l'adresse m\u00e9moire de l'\u00e9l\u00e9ment suivant . Il est donc tr\u00e8s facile d'ajouter des \u00e9l\u00e9ments \u00e0 une liste cha\u00een\u00e9e : Quelle op\u00e9ration faut-il faire ? Il faut lier la queue de l'\u00e9l\u00e9ment d'avant au nouvel \u00e9l\u00e9ment, et la queue du nouvel \u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment qui \u00e9tait \u00e0 sa place. Exercice Ecrire une fonction elementListe prenant comme entr\u00e9es une liste L et un indice i et retournant l'\u00e9lement i de la liste. Quelle est la complexit\u00e9 de cette fonction ? Solution def elementListe ( L , i ): if i == 1 : return listeTete ( L ) else : return elementListe ( listeQueue ( L ), i - 1 ) Il faut parcourir tous les \u00e9l\u00e9ments pr\u00e9c\u00e9dents avant d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment i : la complexit\u00e9 est lin\u00e9aire (en \\(O(n)\\) ). D. Interface et impl\u00e9mentation d'une structure de donn\u00e9es \u00b6 Nous avons vu en TD que l'on pouvait impl\u00e9menter de diff\u00e9rentes mani\u00e8res la m\u00eame structure de liste cha\u00een\u00e9e . Le type abstrait , ou d\u00e9finition de la structure ne change pas. On manipule la structure gr\u00e2ce \u00e0 son interface : la description des op\u00e9rations qui peuvent \u00eatre faites sur ces donn\u00e9es. La mani\u00e8re de les impl\u00e9menter peut varier, on aura utilis\u00e9 la m\u00eame structure. TP : Impl\u00e9mentations \u00b6 Correction Impl\u00e9mentation 1 Correction Impl\u00e9mentation 2 A. Premi\u00e8re impl\u00e9mentation \u00b6 Ecrire cette premi\u00e8re impl\u00e9mentation dans un fichier Liste1.py On propose une premi\u00e8re impl\u00e9mentation d'une liste cha\u00een\u00e9e, qui est repr\u00e9sent\u00e9e par un tuple (tete, queue) : def listeCree (): return None def listeEstVide ( l ): return l == None def listeAjoute ( x , l ): return ( x , l ) def listeTete ( l ): return l [ 0 ] def listeQueue ( l ): return l [ 1 ] Ex\u00e9cuter les instructions suivantes : Cr\u00e9er une liste vide. V\u00e9rifier qu'elle est vide. Ajouter successivement les entiers de 0 \u00e0 4. V\u00e9rifier qu'elle n'est pas vide. Cr\u00e9er une fonction listeAffiche(l) qui affiche successivement les diff\u00e9rents \u00e9l\u00e9ments de la liste de mani\u00e8re r\u00e9cursive . Cr\u00e9er une fonction listeCompte(l) qui compte le nombre d'\u00e9l\u00e9ments dans une liste de mani\u00e8re r\u00e9cursive . Reprendre la liste de la question 1., et : Ajouter l'entier 5. Compter le nombre d'\u00e9l\u00e9ments et les afficher. Supprimer la t\u00eate de la liste. Compter \u00e0 nouveau le nombre d'\u00e9l\u00e9ments et les afficher. B. Deuxi\u00e8me impl\u00e9mentation (POO) \u00b6 Ecrire cette deuxi\u00e8me impl\u00e9mentation dans un fichier Liste2.py On propose une deuxi\u00e8me impl\u00e9mentation qui utilise la POO. Elle se base sur deux classes : une classe Cellule qui repr\u00e9sente un \u00e9l\u00e9ment de la liste, et une classe Liste compos\u00e9e d'instances de la classe Cellule et impl\u00e9mentant les primitives d'une liste : class Cellule : def __init__ ( self , tete , queue ): self . car = tete self . cdr = queue class Liste : def __init__ ( self , c ): self . cellule = c def isnil ( self ): return self . cellule is None def car ( self ): assert ( not ( self . cellule is None )), 'Liste vide !' return self . cellule . car def cdr ( self ): assert ( not ( self . cellule is None )) return self . cellule . cdr def cons ( self , e ): return Liste ( Cellule ( e , self )) Remarque : On utilise ici les noms utilis\u00e9s par le langage Lisp pour impl\u00e9menter les primitives. Pour construire une liste, on utilise la m\u00e9thode cons qui ajoute un \u00e9l\u00e9ment en t\u00eate : nil = Liste ( None ) L = nil . cons ( 5 ) . cons ( 4 ) . cons ( 3 ) . cons ( 2 ) . cons ( 1 ) Repr\u00e9senter les \u00e9l\u00e9ments de la liste L en utilisant un sch\u00e9ma comme ceux du cours. Identifier le r\u00f4le des diff\u00e9rentes m\u00e9thodes et l'ajouter en commentaires. Tester le code suivant : print ( L . isnil ()) print ( L . car ()) print ( L . cdr () . car ()) Ecrire l'instruction permettant d'afficher le dernier \u00e9l\u00e9ment de la liste. Cr\u00e9er les fonctions lengthList(l) et displayList(l) qui, respectivement, compte le nombre d'\u00e9l\u00e9ments dans la liste, et affiche chacun d'entre eux. On impl\u00e9mentera ces fonctions de mani\u00e8re r\u00e9cursive . Cr\u00e9er la fonction removeList(l) , qui supprime un \u00e9l\u00e9ment en t\u00eate de liste et le retourne. Pour aller plus loin... La liste cha\u00een\u00e9e vue en cours est une liste simplement cha\u00een\u00e9e : chaque \u00e9l\u00e9ment ne poss\u00e8de qu'un lien vers le suivant. Avec une liste doublement cha\u00een\u00e9e , chaque \u00e9l\u00e9ment poss\u00e8de un lien avec le suivant et avec le pr\u00e9c\u00e9dent. Cela permet les parcours de liste dans les deux sens. On propose les classes ci-dessous pour impl\u00e9menter cette structure. Ajouter les m\u00e9thodes insereDebut et insereFin \u00e0 la classe ListeDoublementChainee , permettant d'ins\u00e9rer des \u00e9l\u00e9ments au d\u00e9but ou \u00e0 la fin de la liste. class Maillon (): def __init__ ( self , e ): self . element = e self . suivant = None self . precedent = None class ListeDoublementChainee (): def __init__ ( self , m ): self . maillon_debut = m","title":"I. Les listes"},{"location":"tle/seq4/listes/#i-les-listes","text":"","title":"I. Les listes"},{"location":"tle/seq4/listes/#cours","text":"","title":"Cours"},{"location":"tle/seq4/listes/#tp-implementations","text":"Correction Impl\u00e9mentation 1 Correction Impl\u00e9mentation 2","title":"TP : Impl\u00e9mentations"},{"location":"tle/seq4/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 Exercices \u00b6 Exercice 1 : structures et interfaces \u00b6 A. Quelle op\u00e9ration ne fait pas partie de l\u2019interface d\u2019une pile ? 1. ajouter un \u00e9l\u00e9ment \u00e0 la pile 2. supprimer l\u2019\u00e9l\u00e9ment le plus r\u00e9cent de la pile 3. retirer l\u2019\u00e9l\u00e9ment le plus ancien de la pile B. Quelle op\u00e9ration ne fait pas partie de l\u2019interface d\u2019une file ? 1. ajouter un \u00e9l\u00e9ment \u00e0 la file 2. supprimer l\u2019\u00e9l\u00e9ment le plus r\u00e9cent de la file 3. retirer l\u2019\u00e9l\u00e9ment le plus ancien de la file C. Pour que deux impl\u00e9mentations du m\u00eame type abstrait soient interchangeables, il faut que : 1. la complexit\u00e9 en temps soit la m\u00eame dans les deux cas 2. l\u2019interface de la structure de donn\u00e9es soit la m\u00eame dans les deux cas 3. les deux impl\u00e9mentations soient parfaitement identiques Exercice 2 : choisir une structure de donn\u00e9es \u00b6 Associer une structure de donn\u00e9es adapt\u00e9e \u00e0 chaque situation. Dans une administration, on souhaite ins\u00e9rer dans une structure de donn\u00e9es les dol\u00e9ances re\u00e7ues afin de les traiter selon leur ordre d\u2019arriv\u00e9e. On aura plut\u00f4t int\u00e9r\u00eat \u00e0 les enregistrer dans : a) une liste b) une pile c) une file Pour un logiciel, on doit enregistrer la liste des actions dans une structure de donn\u00e9es de sorte \u00e0 voir la derni\u00e8re action en priorit\u00e9. On enregistrera donc les actions dans : a) une liste b) une pile c) une file On souhaite ins\u00e9rer dans une structure de donn\u00e9es les diff\u00e9rentes hauteurs d\u2019un arbre au fil des ann\u00e9es sans y ins\u00e9rer les ann\u00e9es. La structure de donn\u00e9es la plus adapt\u00e9e est : a) une liste b) une pile c) une file Exercice 3 : algorithmes sur les files et les piles \u00b6 Impl\u00e9mentation File Impl\u00e9mentation Pile Dans ces deux questions, on utilise une impl\u00e9mentation des structures en POO. Pour tester les fonctions, il faut importer les classes correspondantes dans le fichier de travail. Les structures ont les primitives (ici des m\u00e9thodes) usuelles : Pour les files : enfiler(elt) , defiler() , est_vide() testant si la file est vide. f = File() cr\u00e9e une nouvelle file. Pour les piles : empiler(elt) , depiler() , est_vide() testant si la file est vide. p = Pile() cr\u00e9e une nouvelle file. On dispose d\u2019une file contenant des entiers, \u00e9crire une fonction qui renvoie une file dont on aura enlev\u00e9 les nombres impairs, mais dont les nombres pairs sont dans le m\u00eame ordre qu\u2019initialement. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder On dispose d\u2019une pile contenant des entiers, \u00e9crire une fonction qui renvoie une pile dont on aura enlev\u00e9 les nombres pairs, mais dont les nombres impairs sont dans le m\u00eame ordre qu\u2019initialement. ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder Exercice 4 : synth\u00e8se \u00b6 Structure D\u00e9finition Cas d'utilisation Acc\u00e8s \u00e9l\u00e9ment (co\u00fbt) Ajout \u00e9l\u00e9ment (co\u00fbt) Liste cha\u00een\u00e9e Tableau statique Tableau dynamique File Pile Tableau associatif","title":"Synth\u00e8se"},{"location":"tle/seq4/synthese/#synthese","text":"","title":"Synth\u00e8se"},{"location":"tle/seq4/synthese/#exercices","text":"","title":"Exercices"},{"location":"tle/seq5/BDD_Relationnelles/","text":"body { text-align: justify} II : Les bases de donn\u00e9es relationnelles \u00b6 Cours : Les anomalies \u00b6 Diaporama de cours TD : Contraintes d\u2019int\u00e9grit\u00e9 et anomalies \u00b6 Exercice 1 : contraintes d\u2019int\u00e9grit\u00e9 \u00b6 On d\u00e9finit une table Citoyens (cl\u00e9 primaire : Id ), et une table Ville (cl\u00e9 primaire : Ville ). Id Nom Pr\u00e9nom Date de naissance Ville 1 Dupont Jeanette 15/12/1972 Paris 2 Terta Henry 12/06/1978 Nice 3 Grimard Aubin 25/11/1999 Marseille Ville Maire Population Paris Anne Hidalgo 2 175 601 Nice Christian Estrosi 342 522 Marseille Benoit Payan 861 635 Quelle est la cl\u00e9 \u00e9trang\u00e8re identifiable dans la table Citoyens ? Dans chacune des questions suivantes, indiquer quelle contrainte d\u2019int\u00e9grit\u00e9 n\u2019est pas respect\u00e9e. Que se passe-t-il si l\u2019on souhaite ins\u00e9rer l\u2019enregistrement suivant dans Citoyen ? ( 3 , Tartempion , Eva , 26 / 10 / 1992 , Paris ) Que se passe-t-il si l\u2019on souhaite ins\u00e9rer l\u2019enregistrement suivant dans Citoyen ? ( 4 , Tartempion , Roger , 01 / 08 / 1989 , Brest ) Que se passe-t-il si l\u2019on supprime l\u2019enregistrement suivant dans Ville ? ( Marseille , Benoit Payan , 861 635 ) Exercice 2 : conception d\u2019une table de livres \u00b6 Soit la table Livres suivante, dont la cl\u00e9 primaire est id : id titre publication auteur naissance note 1 Le temps des temp\u00eates 2020 Nicolas Sarkozy 1955 3 2 Pas plus de 4 heures de sommeil 2014 Marl\u00e8ne Schiappa 1982 5 3 Trop vite 2017 Nabilla Benatia 1992 1 4 Dune 1965 Frank Herbert 1920 10 Pour chacune des questions suivantes, indiquer quel type d\u2019anomalie est rep\u00e9r\u00e9 si c\u2019est le cas. Que se passe-t-il dans la table si je rajoute le livre \"J\u2019arr\u00eate de m\u2019\u00e9puiser ! 21 jours pour pr\u00e9venir le burn-out\" de Marl\u00e8ne Schiappa, n\u00e9e en 1982, livre paru en 2015, avec une note de 9 ? Que se passe-t-il si, apr\u00e8s avoir ins\u00e9r\u00e9 le n-uplet de la question pr\u00e9c\u00e9dente, je modifie la date de naissance de Marl\u00e8ne Schiappa dans l\u2019enregistrement dont l\u2019id est 1 ? Que se passe-t-il si on supprime le livre \"Trop vite\" de la table ? Proposer une autre structure de la base de donn\u00e9es permettant d\u2019\u00e9viter les anomalies rep\u00e9r\u00e9es. Exercice 3 : conception d\u2019une table de films \u00b6 Soit la table Films suivante, dont la cl\u00e9 primaire est filmID : filmID titre annee acteur principal nationalit\u00e9 1 Le Seigneur des Anneaux : la communaut\u00e9 de l\u2019anneau 2001 Elijah Wood anglaise 2 Le Seigneur des Anneaux : les deux tours 2002 Elijah Wood anglaise 3 Match Point 2005 Scarlett Johansson am\u00e9ricaine 4 OSS 117 : Le Caire, nid d\u2019espions 2006 Jean Dujardin fran\u00e7aise 5 Star Wars : Le retour du Jedi 1983 Mark Hamill am\u00e9ricaine Pour chacune des questions suivantes, indiquer quel type d\u2019anomalie est rep\u00e9r\u00e9 si c\u2019est le cas. Que se passe-t-il lorsque l\u2019on supprime l'enregistrement correspondant au filmID 5 ? Que se passe-t-il lorsque l\u2019on modifie la nationalit\u00e9 d\u2019Elijah Wood, qui est en fait am\u00e9ricaine, dans l'enregistrement correspondant au filmID 1 ? Que se passe-t-il lorsque l\u2019on ajoute l'enregistrement suivant : ( 6 , Star Wars : Un nouvel espoir , 1977 , Mark Hamill , am\u00e9ricaine ) ? Proposer une autre structure de la base de donn\u00e9es permettant d\u2019\u00e9viter les anomalies rep\u00e9r\u00e9es. Si l\u2019on voulait ajouter des informations sur les diff\u00e9rents acteurs des films, et pas seulement l\u2019acteur principal, quel mod\u00e8le pourrait-on proposer ?","title":"II. Les bases de donn\u00e9es relationnelles"},{"location":"tle/seq5/BDD_Relationnelles/#ii-les-bases-de-donnees-relationnelles","text":"","title":"II : Les bases de donn\u00e9es relationnelles"},{"location":"tle/seq5/BDD_Relationnelles/#cours-les-anomalies","text":"Diaporama de cours","title":"Cours : Les anomalies"},{"location":"tle/seq5/BDD_Relationnelles/#td-contraintes-dintegrite-et-anomalies","text":"","title":"TD : Contraintes d\u2019int\u00e9grit\u00e9 et anomalies"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/","text":"body { text-align: justify} I. Le mod\u00e8le relationnel \u00b6 Introduction Cours \u00b6 Il existe plusieurs moyens de structurer une base de donn\u00e9es, s\u2019appuyant sur des mod\u00e8les diff\u00e9rents comme le mod\u00e8le hi\u00e9rarchique, les bases de donn\u00e9es objet ou nosql. Le plus utilis\u00e9 aujourd\u2019hui est aussi l\u2019un des plus anciens : le mod\u00e8le relationnel . A. Repr\u00e9sentation \u00b6 Le mod\u00e8le relationnel , qui fut propos\u00e9 en 1970 par Edgar Frank Codd, consiste \u00e0 repr\u00e9senter les donn\u00e9es dans des tableaux, appel\u00e9s relations ou tables. Chaque relation peut \u00eatre vue comme une sorte de classe (POO) d\u00e9finie par un certain nombre d\u2019attributs. Prenons pour exemple une base de donn\u00e9es rassemblant les figures du monde de l\u2019informatique. On d\u00e9finit une premi\u00e8re table regroupant des informations personnelles : nom prenom naissance nationalite Structure de la table Une fois la structure d\u00e9finie, nous pouvons y ins\u00e9rer des donn\u00e9es. Sur chaque ligne, on ajoute un ensemble d\u2019\u00e9l\u00e9ments correspondant aux diff\u00e9rentes colonnes : un n-uplet , c\u2019est-\u00e0-dire une collection d\u2019\u00e9l\u00e9ments n\u2019ayant pas forc\u00e9ment le m\u00eame type. Par exemple : nom prenom naissance nationalite Lovelace Ada 1815 britannique Turing Alan 1912 britannique Insertion de deux tuples sur les deux premi\u00e8res lignes de la table pr\u00e9c\u00e9dente B. Vocabulaire \u00b6 D\u00e9finitions Une relation est un ensemble de n-uplets ayant les m\u00eames attributs. On la repr\u00e9sente par une table . Dans une relation : Chaque ligne correspond \u00e0 un n-uplet , qui peut \u00eatre d\u00e9sign\u00e9 par le terme enregistrement (\u00e9l\u00e9ment d\u2019une table). Exemple Lovelace, Ada, 1815, britannique Les attributs sont des caract\u00e9ristiques qui correspondent au nom des colonnes. Exemple nom, prenom, naissance, nationalite Le domaine d\u2019un attribut est son type : entier, flottant, caract\u00e8res, bool\u00e9en, etc. N.B. : il existe une grande vari\u00e9t\u00e9 de domaines dans le langage SQL que nous allons utiliser. Dans la partie th\u00e9orique, nous utiliseront ceux cit\u00e9s ci-dessus. Exemples nom est de type caract\u00e8res pr\u00e9nom est de type caract\u00e8res naissance est de type entier nationalite est de type caract\u00e8res L\u2019ensemble des attributs d\u2019une relation, associ\u00e9s \u00e0 leur domaine, constitue le sch\u00e9ma de la relation . Exemple Le sch\u00e9ma de la relation Figures est : {nom: caract\u00e8res, prenom: caract\u00e8res, naissance: annee, nationalite: caract\u00e8res} Une base de donn\u00e9es relationnelle est constitu\u00e9e d\u2019une ou de plusieurs relations. C. Cl\u00e9s primaires et \u00e9trang\u00e8res \u00b6 C.1. Cl\u00e9 primaire \u00b6 Pour pouvoir acc\u00e9der \u00e0 une instance d'une table, et \u00eatre s\u00fbr qu'il s'agit de la bonne, il faut pouvoir l\u2019identifier de mani\u00e8re unique. Dans notre table repr\u00e9sentant la relation Figures , avons-nous un attribut permettant de le faire ? Il n'y en a pas, car plusieurs personnes peuvent avoir le m\u00eame nom. Les valeurs des attributs ne sont pas uniques. Rajoutons donc un attribut id_f , dont le domaine est entier, dans lequel on stocke un nouveau num\u00e9ro \u00e0 chaque nouvel enregistrement ins\u00e9r\u00e9 : id_f nom prenom naissance nationalite 1 Lovelace Ada 1815 britannique 2 Turing Alan 1912 britannique Table de la relation Figures dans laquelle l\u2019attribut ID a \u00e9t\u00e9 ajout\u00e9. id_f est ce que l\u2019on appelle la cl\u00e9 primaire de la table. D\u00e9finition d\u2019une cl\u00e9 primaire : C'est l'attribut identifiant de mani\u00e8re unique un n-uplet d'une relation. Ses valeurs ne peuvent \u00eatre nulles. Nous aimerions aussi disposer, dans notre base, de donn\u00e9es sur les avanc\u00e9es dont ces figures sont \u00e0 l\u2019origine. Nous cr\u00e9ons donc une deuxi\u00e8me table Avanc\u00e9es , disposant elle aussi d\u2019une cl\u00e9 primaire id_a pour identifier chaque enregistrement de mani\u00e8re unique. id_a nom date 1 Premier programme informatique 1843 2 Machine universelle 1936 3 D\u00e9chiffrement d\u2019Enigma 1941 Table de la relation Avanc\u00e9es C.2. Cl\u00e9 \u00e9trang\u00e8re \u00b6 On veut \u00e0 pr\u00e9sent associer les diff\u00e9rentes avanc\u00e9es avec la figure qui en est \u00e0 l\u2019origine. Pour cela, on y ins\u00e8re un attribut qui correspond \u00e0 la cl\u00e9 primaire de la table Figures dans la table Avanc\u00e9es . id_a nom date id_f 1 Premier programme informatique 1843 1 2 Machine universelle 1936 2 3 D\u00e9chiffrement d\u2019Enigma 1941 2 Table de la relation Avanc\u00e9es dans laquelle on associe chaque enregistrement \u00e0 un enregistrement de Figures Les deux tables sont ainsi associ\u00e9es avec id_f , la cl\u00e9 primaire de Figures , qui est appel\u00e9e cl\u00e9 \u00e9trang\u00e8re de la table Avanc\u00e9es . D\u00e9finition d\u2019une cl\u00e9 \u00e9trang\u00e8re : attribut d'une table faisant r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre table. D. Sch\u00e9mas relationnels \u00b6 Chaque table d\u2019une base de donn\u00e9es peut \u00eatre repr\u00e9sent\u00e9e sous la forme d\u2019un sch\u00e9ma relationnel . Compl\u00e9ter le sch\u00e9ma donn\u00e9 pr\u00e9c\u00e9demment pour la relation Figures avec sa cl\u00e9 primaire identifi\u00e9e : {id_f: entier, nom: caract\u00e8res, prenom: caract\u00e8res, naissance: annee, nationalite: caract\u00e8res} Quel est celui, sous la m\u00eame forme, de la table Avanc\u00e9es ? (identifier ses cl\u00e9s) {id_a: entier, nom: caract\u00e8res, date: entier, #id_f: entier} Ces deux sch\u00e9mas relationnels forment le sch\u00e9ma relationnel de la base de donn\u00e9es. On le repr\u00e9sente souvent sous laforme d\u2019un diagramme UML (Unified Modelling Language) : E. Contraintes d\u2019int\u00e9grit\u00e9 \u00b6 Afin de maintenir des donn\u00e9es valides et coh\u00e9rentes tout au long de la vie de la base de donn\u00e9es, il faut s'assurer en permanence du respect des contraintes d'int\u00e9grit\u00e9 suivantes qui sont fix\u00e9es \u00e0 la cr\u00e9ation de la base de donn\u00e9es : L' int\u00e9grit\u00e9 de domaine Les valeurs de chaque attribut doivent appartenir au domaine fix\u00e9. L' int\u00e9grit\u00e9 de relation Chaque n-uplet est unique et doit \u00eatre identifi\u00e9 par une cl\u00e9 primaire qui ne peut \u00eatre nulle L' int\u00e9grit\u00e9 de r\u00e9f\u00e9rence entre deux relations Toute cl\u00e9 \u00e9trang\u00e8re doit correspondre \u00e0 une cl\u00e9 primaire existante. Conclusion \u00b6 En apportant une vision plus abstraite de la table avec la notion de relation, le mod\u00e8le relationnel permet de s'affranchir de la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es et stock\u00e9es en m\u00e9moire et de maintenir leur coh\u00e9rence gr\u00e2ce aux contraintes d\u2019int\u00e9grit\u00e9. TD : Mod\u00e9liser des tables \u00b6 Exercice 1 : la base de donn\u00e9es sur l'historique de l'informatique \u00b6 Nous avons utilis\u00e9 dans le cours une base de donn\u00e9es comprenant des tables de figures de l\u2019informatique et d'avanc\u00e9es dans le domaine. Le programme de NSI a des liens avec ces informations. On se propose de cr\u00e9er une 3\u00e8me table Programme dans cette base de donn\u00e9es, permettant d\u2019associer les contenus appris en NSI \u00e0 la figure en informatique qui les a invent\u00e9s. 1) Proposer le sch\u00e9ma relationnel de cette table Programme , qui inclura des contenus, auxquels sont associ\u00e9es des capacit\u00e9s et font partie d\u2019une des th\u00e9matiques du programme (pour des exemples, se r\u00e9f\u00e9rer au bulletin officiel disponible sur l\u2019ENT) . 2) Repr\u00e9senter les 3 tables sous la forme de diagramme. Les cl\u00e9s primaires et \u00e9trang\u00e8res doivent appara\u00eetre clairement. Exercice 2 : rangement d\u2019une m\u00e9diath\u00e8que \u00b6 La m\u00e9diath\u00e8que de vos parents commence \u00e0 n\u00e9cessiter un peu de rangement : on trouve par endroits des livres, des films, des s\u00e9ries, des disques\u2026 Pour savoir quels objets culturels sont effectivement pr\u00e9sents chez eux, ils se proposent de cr\u00e9er une base de donn\u00e9es. Celle-ci se d\u00e9composera en 4 tables : Livres , Films , S\u00e9ries et Disques . 1) Proposer un sch\u00e9ma relationnel pour chacune de ces tables ind\u00e9pendamment, en incluant les informations qui vous semblent pertinentes. 2) Comment modifier vos sch\u00e9ma pour prendre en compte que certains films et s\u00e9ries sont des adaptations de livres, et que des disques peuvent correspondre \u00e0 la bande originale de films/s\u00e9ries ? Repr\u00e9senter le diagramme de la base de donn\u00e9es. Exercice 3 : stocker les informations sur le lyc\u00e9e \u00b6 Dans un lyc\u00e9e, les \u00e9l\u00e8ves de terminale sont regroup\u00e9s par classe, qui a chacune ses d\u00e9l\u00e9gu\u00e9s, son professeur principal, etc. Les \u00e9l\u00e8ves ont chacun des caract\u00e9ristiques qui leur sont propres : comme le choix des 2 sp\u00e9cialit\u00e9s, des langues et des \u00e9ventuelles options, et un professeur r\u00e9f\u00e9rent. Les professeurs sont eux associ\u00e9s \u00e0 une mati\u00e8re. Repr\u00e9senter les informations d\u00e9crites ci-dessus sous la forme de tables (vous \u00eates libres d\u2019en d\u00e9cider le nombre). Vous pouvez ajouter d\u2019autres informations, mais elles ne doivent pas \u00eatre redondantes.","title":"I. Le mod\u00e8le relationnel"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#i-le-modele-relationnel","text":"Introduction","title":"I. Le mod\u00e8le relationnel"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#cours","text":"Il existe plusieurs moyens de structurer une base de donn\u00e9es, s\u2019appuyant sur des mod\u00e8les diff\u00e9rents comme le mod\u00e8le hi\u00e9rarchique, les bases de donn\u00e9es objet ou nosql. Le plus utilis\u00e9 aujourd\u2019hui est aussi l\u2019un des plus anciens : le mod\u00e8le relationnel .","title":"Cours"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#td-modeliser-des-tables","text":"","title":"TD\u00a0: Mod\u00e9liser des tables"},{"location":"tle/seq5/SQL/","text":"body { text-align: justify} III. Structured Query Language (SQL) \u00b6 Cours : Le SQL \u00b6 Diaporama de cours Notebook associ\u00e9 : sur Capytale, code f997-1034988 TD : Le langage SQL \u00b6 Fichier PDF Un magasin de meubles veut organiser son inventaire et ses ventes. Pour cela, il cr\u00e9e trois tables, une contenant l\u2019ensemble des produits disponibles \u00e0 la vente, une contenant la liste des clients enregistr\u00e9s, et une contenant l\u2019ensemble des achats. Les tables sont construites selon ce mod\u00e8le : Produits : Identifiant Nom Prix 01252369 Lit simple 150 98563242 Lit double 250 65872304 Table 90 66320520 Chaise 40 33220141 Bureau 110 Clients : Identifiant Nom Pr\u00e9nom 001235 Arnot Amanda 005463 Brahms Bruno 006522 Crestin C\u00e9line 008563 Dubois Damien Achats : ID Client Produit Date 1 001235 66320520 01/02/2020 2 001235 66320520 01/02/2020 3 001235 66320520 01/02/2020 4 001235 66320520 01/02/2020 5 001235 65872304 01/02/2020 6 005463 98563242 25/10/2019 7 006522 33220141 15/06/2021 Que repr\u00e9sentent les attributs Client et Produit dans la table Achats ? Compl\u00e9ter les commandes suivantes, permettant de cr\u00e9er les tables Clients et Achats, avec les domaines des attributs et les cl\u00e9s : Code CREATE TABLE Clients ( Identifiant ... Nom ... Pr\u00e9nom ... ); CREATE TABLE Achats ( ID ... Client ... Produit ... Date ... ); L\u2019entreprise aimerait conna\u00eetre tous ses produits valant plus de 100 euros. Ecrire la commande permettant de lire tous les \u00e9l\u00e9ments de la table Produits dont le prix est sup\u00e9rieur \u00e0 100 euros. L\u2019entreprise aimerait trier ses produits par ordre de r\u00e9f\u00e9rence croissant. Ecrire la commande correspondante. Ecrire la commande permettant de compter le nombre de transactions r\u00e9alis\u00e9es apr\u00e8s le 1er janvier 2020. Donner le r\u00e9sultat de cette commande : Code SELECT COUNT ( DISTINCT Client ) FROM Achats ; Damien vient d\u2019acheter un bureau. Ecrire la commande permettant de mettre \u00e0 jour la table des achats. Lors des soldes, le prix du lit simple est baiss\u00e9 \u00e0 120 euros. Mettre \u00e0 jour la table des produits. S\u00e9lectionner le nom des produits qui ont \u00e9t\u00e9 achet\u00e9s, sans avoir de doublons. Cours : Les SGBD \u00b6 Diaporama de cours TP : Manipulation d'une table en SQL \u00b6 Fichier PDF Dans ce TP, nous allons impl\u00e9menter la table contenant les figures de l\u2019informatique, et la manipuler avec le SGBD SQLite . Instructions T\u00e9l\u00e9charger une console sqlite3 , depuis l'ENT. T\u00e9l\u00e9charger aussi la base de donn\u00e9es > Figures.db < . Noter les requ\u00eates utilis\u00e9es sur votre cahier de TP. Lancer SQLite, et taper la commande .open Figures.db . Cette commande ouvre le fichier contenant la base de donn\u00e9es et importe son contenu. La base de donn\u00e9es a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9e : consulter les diff\u00e9rentes tables qu'elle contient avec la commande .table . Consulter les sch\u00e9ma relationnels des tables avec la commande .schema . On utilise la m\u00eame table que dans le TP d'introduction. Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s \u00e0 la base de donn\u00e9es. Regarder ce qu'elle contient, en utilisant une requ\u00eate de s\u00e9lection . Les enregistrements suivants doivent appara\u00eetre : 1 | Al-Khwarismi | Muhammad | 780 | ouzbek 2 | Hamilton | Margaret | 1936 | am\u00e9ricaine 3 | Lovelace | Ada | 1815 | britannique 4 | Knuth | Donald | 1938 | am\u00e9ricaine 5 | Chomsky | Noam | 1928 | am\u00e9ricaine 6 | Lamarr | Hedy | 1914 | autrichienne 7 | Turing | Alan | 1912 | britannique 8 | Berners-Lee | Tim | 1954 | britannique Ecrire une requ\u00eate d' insertion , pour ins\u00e9rer les n-uplets suivants : Code ( 9 , Hopper , Grace , 1906 , am\u00e9ricaine ) ( 10 , Von Neumann , John , 1903 , hongroise ) Ecrire les requ\u00eates de s\u00e9lection permettant de r\u00e9cup\u00e9rer : l'int\u00e9gralit\u00e9 de l'enregistrement d'identifiant 4. l\u2019ann\u00e9e de naissance d\u2019Alan Turing. Ecrire la commande permettant de r\u00e9cup\u00e9rer le nom et le pr\u00e9nom des personnes de nationalit\u00e9 britannique de cette table, dans l\u2019ordre croissant des dates de naissance. Ecrire la requ\u00eate permettant de compter toutes les personnes n\u00e9es apr\u00e8s l\u2019ann\u00e9e 1930. On se rend compte que la date de Tim Berners-Lee est fausse, car il est en r\u00e9alit\u00e9 n\u00e9 en 1955. Ecrire la requ\u00eate de mise \u00e0 jour permettant d'actualiser la date de naissance de Tim Berners-Lee avec la bonne valeur. On d\u00e9cide que Noam Chomsky n\u2019est plus digne d\u2019appartenir \u00e0 cette table. Supprimer Noam Chomsky de cette liste. TP : Manipulation de plusieurs tables en SQL \u00b6 Fichier PDF Instructions Nous allons utiliser \u00e0 nouveau SQLite , pour manipuler des bases de donn\u00e9es contenant plusieurs tables. Pour garder une trace des requ\u00eates \u00e9crites, noter les requ\u00eates utilis\u00e9es sur votre cahier de TP. I. Une base de donn\u00e9es de livres \u00b6 T\u00e9l\u00e9charger la base de donn\u00e9es > Bibliotheque.db < . On s'int\u00e9resse \u00e0 une base de donn\u00e9es de livres, avec une table Livres et une table Auteurs . II. 1. Cr\u00e9ation des tables \u00b6 Le sch\u00e9ma relationnel de la table Auteurs est le suivant : { id : entier, nom : caract\u00e8res, prenom : caract\u00e8res, ann_naissance : entier, langue_ecriture : caract\u00e8res} avec id la cl\u00e9 primaire . V\u00e9rifier que ce sch\u00e9ma correspond \u00e0 la table impl\u00e9ment\u00e9e avec l'instruction .schema . On d\u00e9finit la table Livres de la mani\u00e8re suivante : {id : entier, titre: caract\u00e8res, id_auteur: entier, ann_publi: entier, note: entier} Gr\u00e2ce \u00e0 l'instruction sqlite .schema , identifier : - la cl\u00e9 primaire : - la cl\u00e9 \u00e9trang\u00e8re, et la cl\u00e9 primaire \u00e0 laquelle elle fait r\u00e9f\u00e9rence : - les domaines SQL des attributs : V\u00e9rifier que les tables contiennent bien les enregistrements suivants : La table Auteurs : id nom prenom ann_naissance langue_ecriture 1 \u2018Orwell\u2019 \u2018George\u2019 1903 \u2018anglais\u2019 2 \u2018Herbert\u2019 \u2018Frank\u2019 1920 \u2018anglais\u2019 3 \u2018Asimov\u2019 \u2018Isaac\u2019 1920 \u2018anglais\u2019 4 \u2018Huxley\u2019 \u2018Aldous\u2019 1894 \u2018anglais\u2019 5 \u2018Bradbury\u2019 \u2018Ray\u2019 1920 \u2018anglais\u2019 6 \u2018K.Dick\u2019 \u2018Philip\u2019 1928 \u2018anglais\u2019 7 \u2018Barjavel\u2019 \u2018Ren\u00e9\u2019 1911 \u2018fran\u00e7ais\u2019 la table Livres : id titre id_auteur ann_publi note 1 \u20181984\u2019 1 1949 10 2 \u2018Dune\u2019 2 1965 8 3 \u2018Fondation\u2019 3 1951 9 4 \u2018Le meilleur des mondes\u2019 4 1931 7 5 \u2018Fahrenheit 451\u2019 5 1953 7 6 \u2018Chroniques martiennes\u2019 5 1950 8 Ins\u00e9rer dans la table Livres : \"Blade Runner\", \u00e9crit par K.Dick en 1968 et not\u00e9 \u00e0 8/10, \"Les robots\", \u00e9crit par Asimov en 1950 et not\u00e9 \u00e0 9/10. II.2. Les projections/s\u00e9lections \u00b6 S\u00e9lectionner les titres des livres dont l\u2019auteur est Asimov en les rangeant par rapport \u00e0 leur ann\u00e9e de publication. Projeter la table Livres sur son attribut ann_publi , sachant que l\u2019on ne veut pas de r\u00e9p\u00e9titions. Faire une s\u00e9lection permettant de compter le nombre de livres \u00e9crits apr\u00e8s 1950. II.3. Les jointures \u00b6 Que va faire la jointure suivante ? Code SELECT * FROM Livres INNER JOIN Auteurs ON Livres . id_auteur = Auteurs . id \u00c9crire une jointure permettant d\u2019afficher le titre des livres ainsi que le nom et pr\u00e9nom de leur auteur. \u00c9crire une jointure permettant d\u2019afficher le titre des livres dont la note est sup\u00e9rieure \u00e0 8 ainsi que la langue d\u2019\u00e9criture de leur auteur. II.4. Modification \u00b6 Mettre \u00e0 jour la note du livre dont le titre est \u00ab Blade Runner \u00bb pour la passer \u00e0 9. Supprimer de la table le livre dont le titre est \u00ab Fahrenheit 451 \u00bb. II. La base de donn\u00e9es de l\u2019histoire de l\u2019informatique \u00b6 Reprenons la base de donn\u00e9es sur l'histoire de l'informatique cr\u00e9\u00e9e dans le premier TP. T\u00e9l\u00e9charger la version actualis\u00e9e de la base de donn\u00e9es > BDDInformatique.db < . Dans cette base de donn\u00e9es, qui contient d\u00e9j\u00e0 la table Figures, on a cr\u00e9\u00e9 les 2 tables Avanc\u00e9es (d\u00e9finie dans le cours) et Programme (d\u00e9finie en TD). Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s : Dans Avanc\u00e9es : id_a nom date id_f 1 Premier compilateur 1951 9 2 D\u00e9veloppement de logiciels pour la NASA 1965 2 3 Premier programme informatique 1843 3 4 Langage TeX 1976 4 5 Machine universelle 1936 7 6 D\u00e9chiffrement d\u2019Enigma 1941 7 7 Principe de transmission du signal \u00e0 la base du Wifi 1941 6 Pour Programme : id_p contenu capacite theme id_f 1 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 Comprendre que la calculabilit\u00e9 ne d\u00e9pend pas du langage utilis\u00e9. Langages et programmation 7 2 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 Montrer, sans formalisme th\u00e9orique, que le probl\u00e8me de l\u2019arr\u00eat est ind\u00e9cidable. Langages et programmation 7 V\u00e9rifier le contenu des tables, avec une s\u00e9lection sur l'ensemble des enregistrements. Ajouter les enregistrements suivants : A Avanc\u00e9es : Code ( 8 , Le Web , 1989 , 8 ) ( 9 , Mod\u00e8le d \u2019 architecture des ordinateurs , 1945 , 10 ) A Programme : Code ( 3 , Mod\u00e8le d \u2019 architecture s\u00e9quentielle ( von Neumann ), Distinguer les r\u00f4les et les caract\u00e9ristiques des diff\u00e9rents constituants d \u2019 une machine , Architectures mat\u00e9rielles , 10 ) ( 4 , Constructions \u00e9 l\u00e9mentaires , Mettre en \u00e9 vidence un corpus de constructions \u00e9 l\u00e9mentaires , Langages et programmation , 3 ) Nous allons faire des jointures sur ces tables. Pensez \u00e0 utiliser des alias pour rendre les requ\u00eates plus lisibles. \u00c9crire une jointure affichant les noms et pr\u00e9noms des figures avec les dates de leurs avanc\u00e9es. \u00c9crire une jointure affichant les noms des avanc\u00e9es d\u00e9couvertes par une figure britannique. \u00c9crire une jointure affichant les contenus et capacit\u00e9s du programme que nous devons \u00e0 des recherches d\u2019Alan Turing.","title":"III. Structured Query Language (SQL)"},{"location":"tle/seq5/SQL/#iii-structured-query-language-sql","text":"","title":"III. Structured Query Language (SQL)"},{"location":"tle/seq5/SQL/#cours-le-sql","text":"Diaporama de cours Notebook associ\u00e9 : sur Capytale, code f997-1034988","title":"Cours : Le SQL"},{"location":"tle/seq5/SQL/#td-le-langage-sql","text":"Fichier PDF Un magasin de meubles veut organiser son inventaire et ses ventes. Pour cela, il cr\u00e9e trois tables, une contenant l\u2019ensemble des produits disponibles \u00e0 la vente, une contenant la liste des clients enregistr\u00e9s, et une contenant l\u2019ensemble des achats. Les tables sont construites selon ce mod\u00e8le : Produits : Identifiant Nom Prix 01252369 Lit simple 150 98563242 Lit double 250 65872304 Table 90 66320520 Chaise 40 33220141 Bureau 110 Clients : Identifiant Nom Pr\u00e9nom 001235 Arnot Amanda 005463 Brahms Bruno 006522 Crestin C\u00e9line 008563 Dubois Damien Achats : ID Client Produit Date 1 001235 66320520 01/02/2020 2 001235 66320520 01/02/2020 3 001235 66320520 01/02/2020 4 001235 66320520 01/02/2020 5 001235 65872304 01/02/2020 6 005463 98563242 25/10/2019 7 006522 33220141 15/06/2021 Que repr\u00e9sentent les attributs Client et Produit dans la table Achats ? Compl\u00e9ter les commandes suivantes, permettant de cr\u00e9er les tables Clients et Achats, avec les domaines des attributs et les cl\u00e9s : Code CREATE TABLE Clients ( Identifiant ... Nom ... Pr\u00e9nom ... ); CREATE TABLE Achats ( ID ... Client ... Produit ... Date ... ); L\u2019entreprise aimerait conna\u00eetre tous ses produits valant plus de 100 euros. Ecrire la commande permettant de lire tous les \u00e9l\u00e9ments de la table Produits dont le prix est sup\u00e9rieur \u00e0 100 euros. L\u2019entreprise aimerait trier ses produits par ordre de r\u00e9f\u00e9rence croissant. Ecrire la commande correspondante. Ecrire la commande permettant de compter le nombre de transactions r\u00e9alis\u00e9es apr\u00e8s le 1er janvier 2020. Donner le r\u00e9sultat de cette commande : Code SELECT COUNT ( DISTINCT Client ) FROM Achats ; Damien vient d\u2019acheter un bureau. Ecrire la commande permettant de mettre \u00e0 jour la table des achats. Lors des soldes, le prix du lit simple est baiss\u00e9 \u00e0 120 euros. Mettre \u00e0 jour la table des produits. S\u00e9lectionner le nom des produits qui ont \u00e9t\u00e9 achet\u00e9s, sans avoir de doublons.","title":"TD : Le langage SQL"},{"location":"tle/seq5/SQL/#cours-les-sgbd","text":"Diaporama de cours","title":"Cours : Les SGBD"},{"location":"tle/seq5/SQL/#tp-manipulation-dune-table-en-sql","text":"Fichier PDF Dans ce TP, nous allons impl\u00e9menter la table contenant les figures de l\u2019informatique, et la manipuler avec le SGBD SQLite . Instructions T\u00e9l\u00e9charger une console sqlite3 , depuis l'ENT. T\u00e9l\u00e9charger aussi la base de donn\u00e9es > Figures.db < . Noter les requ\u00eates utilis\u00e9es sur votre cahier de TP. Lancer SQLite, et taper la commande .open Figures.db . Cette commande ouvre le fichier contenant la base de donn\u00e9es et importe son contenu. La base de donn\u00e9es a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9e : consulter les diff\u00e9rentes tables qu'elle contient avec la commande .table . Consulter les sch\u00e9ma relationnels des tables avec la commande .schema . On utilise la m\u00eame table que dans le TP d'introduction. Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s \u00e0 la base de donn\u00e9es. Regarder ce qu'elle contient, en utilisant une requ\u00eate de s\u00e9lection . Les enregistrements suivants doivent appara\u00eetre : 1 | Al-Khwarismi | Muhammad | 780 | ouzbek 2 | Hamilton | Margaret | 1936 | am\u00e9ricaine 3 | Lovelace | Ada | 1815 | britannique 4 | Knuth | Donald | 1938 | am\u00e9ricaine 5 | Chomsky | Noam | 1928 | am\u00e9ricaine 6 | Lamarr | Hedy | 1914 | autrichienne 7 | Turing | Alan | 1912 | britannique 8 | Berners-Lee | Tim | 1954 | britannique Ecrire une requ\u00eate d' insertion , pour ins\u00e9rer les n-uplets suivants : Code ( 9 , Hopper , Grace , 1906 , am\u00e9ricaine ) ( 10 , Von Neumann , John , 1903 , hongroise ) Ecrire les requ\u00eates de s\u00e9lection permettant de r\u00e9cup\u00e9rer : l'int\u00e9gralit\u00e9 de l'enregistrement d'identifiant 4. l\u2019ann\u00e9e de naissance d\u2019Alan Turing. Ecrire la commande permettant de r\u00e9cup\u00e9rer le nom et le pr\u00e9nom des personnes de nationalit\u00e9 britannique de cette table, dans l\u2019ordre croissant des dates de naissance. Ecrire la requ\u00eate permettant de compter toutes les personnes n\u00e9es apr\u00e8s l\u2019ann\u00e9e 1930. On se rend compte que la date de Tim Berners-Lee est fausse, car il est en r\u00e9alit\u00e9 n\u00e9 en 1955. Ecrire la requ\u00eate de mise \u00e0 jour permettant d'actualiser la date de naissance de Tim Berners-Lee avec la bonne valeur. On d\u00e9cide que Noam Chomsky n\u2019est plus digne d\u2019appartenir \u00e0 cette table. Supprimer Noam Chomsky de cette liste.","title":"TP : Manipulation d'une table en SQL"},{"location":"tle/seq5/SQL/#tp-manipulation-de-plusieurs-tables-en-sql","text":"Fichier PDF Instructions Nous allons utiliser \u00e0 nouveau SQLite , pour manipuler des bases de donn\u00e9es contenant plusieurs tables. Pour garder une trace des requ\u00eates \u00e9crites, noter les requ\u00eates utilis\u00e9es sur votre cahier de TP.","title":"TP\u00a0: Manipulation de plusieurs tables en SQL"},{"location":"tle/seq5/approfondissement/","text":"body { text-align: justify} Pour aller plus loin... \u00b6 A. Des bases de donn\u00e9es accessibles \u00b6 Entra\u00eenez-vous sur les bases de donn\u00e9es du CNAM : https://deptfod.cnam.fr/bd/tp/ B. Du SQL en Python \u00b6 Apr\u00e8s avoir r\u00e9solution le type bac sur la base de donn\u00e9es de cerveaux par \u00e9crit, tester","title":"Approfondissement"},{"location":"tle/seq5/approfondissement/#pour-aller-plus-loin","text":"","title":"Pour aller plus loin..."},{"location":"tle/seq5/approfondissement/#a-des-bases-de-donnees-accessibles","text":"Entra\u00eenez-vous sur les bases de donn\u00e9es du CNAM : https://deptfod.cnam.fr/bd/tp/","title":"A. Des bases de donn\u00e9es accessibles"},{"location":"tle/seq5/approfondissement/#b-du-sql-en-python","text":"Apr\u00e8s avoir r\u00e9solution le type bac sur la base de donn\u00e9es de cerveaux par \u00e9crit, tester","title":"B. Du SQL en Python"},{"location":"tle/seq5/entrainement/","text":"body { text-align: justify} Pour s'entra\u00eener \u00b6 A. Des bases de donn\u00e9es accessibles \u00b6 Entra\u00eenez-vous sur les bases de donn\u00e9es du CNAM : https://deptfod.cnam.fr/bd/tp/ B. Du SQL en Python \u00b6 Apr\u00e8s avoir r\u00e9solution le type bac sur la base de donn\u00e9es de cerveaux par \u00e9crit ( pdf ici ), t\u00e9l\u00e9charger la base de donn\u00e9es neurosciences.db . On peut manipuler des fichiers .db en Python avec la biblioth\u00e8que sqlite3 . Tester les requ\u00eates du type bac sur la base de donn\u00e9es, apr\u00e8s l'avoir charg\u00e9e dans un fichier Python. Importer la biblioth\u00e8que : Code import sqlite3 Charger la biblioth\u00e8que : Code conn = sqlite3 . connect ( 'neurosciences.db' ) cursor = conn . cursor () On peut ensuite \u00e9crire des requ\u00eates en SQL en les appliquant sur la variable cursor . Exemple Code cursor . execute ( \"\"\"SELECT nom, date FROM base\"\"\" ) elt1 = cursor . fetchone () # permet de r\u00e9cup\u00e9rer le premier enregistrement de la requ\u00eate rows = cursor . fetchall () # permet de r\u00e9cup\u00e9rer tous les enregistrements Utiliser cette syntaxe pour tester toutes les requ\u00eates du probl\u00e8me. A chaque fois, visualiser le r\u00e9sultat et v\u00e9rifier qu'il correspond bien \u00e0 ce \u00e0 quoi on s'attend.","title":"Pour s'entra\u00eener"},{"location":"tle/seq5/entrainement/#pour-sentrainer","text":"","title":"Pour s'entra\u00eener"},{"location":"tle/seq5/entrainement/#a-des-bases-de-donnees-accessibles","text":"Entra\u00eenez-vous sur les bases de donn\u00e9es du CNAM : https://deptfod.cnam.fr/bd/tp/","title":"A. Des bases de donn\u00e9es accessibles"},{"location":"tle/seq5/entrainement/#b-du-sql-en-python","text":"Apr\u00e8s avoir r\u00e9solution le type bac sur la base de donn\u00e9es de cerveaux par \u00e9crit ( pdf ici ), t\u00e9l\u00e9charger la base de donn\u00e9es neurosciences.db . On peut manipuler des fichiers .db en Python avec la biblioth\u00e8que sqlite3 . Tester les requ\u00eates du type bac sur la base de donn\u00e9es, apr\u00e8s l'avoir charg\u00e9e dans un fichier Python. Importer la biblioth\u00e8que : Code import sqlite3 Charger la biblioth\u00e8que : Code conn = sqlite3 . connect ( 'neurosciences.db' ) cursor = conn . cursor () On peut ensuite \u00e9crire des requ\u00eates en SQL en les appliquant sur la variable cursor . Exemple Code cursor . execute ( \"\"\"SELECT nom, date FROM base\"\"\" ) elt1 = cursor . fetchone () # permet de r\u00e9cup\u00e9rer le premier enregistrement de la requ\u00eate rows = cursor . fetchall () # permet de r\u00e9cup\u00e9rer tous les enregistrements Utiliser cette syntaxe pour tester toutes les requ\u00eates du probl\u00e8me. A chaque fois, visualiser le r\u00e9sultat et v\u00e9rifier qu'il correspond bien \u00e0 ce \u00e0 quoi on s'attend.","title":"B. Du SQL en Python"},{"location":"tle/seq6/arbres/","text":"body { text-align: justify} I. La structure d'arbre \u00b6 Cours \u00b6 Les structures lin\u00e9aires sont peu pratiques pour faire des recherches, des ajouts ou des suppressions de donn\u00e9es ordonn\u00e9es. Les structures arborescentes ou arbres , dont les utilisations en informatique sont multiples, sont plus adapt\u00e9es \u00e0 cela. A. Des exemples \u00b6 A.I. G\u00e9ographie de la France \u00b6 Identifier, sur la repr\u00e9sentation ci-dessous, \u00e0 quoi correspondent les diff\u00e9rentes lignes de l'arbre. graph TB A[France] --> B[Auvergne Rh\u00f4ne-Alpes] B --> F[Ain] B --> G[Ard\u00eache] B --> I[...] B --> H[Haute-Savoie] A --> C[Bourgogne FC] A --> D[...] A --> E[PACA] C --> J[C\u00f4tes d'Or] C --> K[...] E --> L[...] E --> M[Vaucluse] Solution La premi\u00e8re ligne correspond au pays, la deuxi\u00e8me aux r\u00e9gions, la troisi\u00e8me au d\u00e9partement. Il y a une relation hi\u00e9rarchique entre ces 3 \u00e9l\u00e9ments : du plus grand au plus petit. A.II. Une arborescence de fichiers \u00b6 Ci-dessous un exemple de stockage de fichiers et dossier sur un ordinateur. Repr\u00e9sentez-le de mani\u00e8re similaire \u00e0 l'arbre du premier exemple : Solution graph TB A[Dossier personnel] --> B[Bureau] A --> C[Documents] A --> D[Images] A --> E[Musique] A --> G[T\u00e9l\u00e9chargements] A --> H[Vid\u00e9os] B --> I[Document] C --> J[Factures] C --> K[Budget 2016] C --> L[Projets] D --> M[Vacances] D --> N[Anniversaire] D --> O[Rando] E --> P[Pop] E --> Q[Electro] E --> R[Classique] G --> S[Logiciel] G --> T[Document] H --> U[Montage] H --> V[Films] H --> W[S\u00e9ries] A.III. Un tournoi \u00b6 Repr\u00e9senter un tournoi \u00e0 partir des quarts de finales jusqu\u2019\u00e0 la repr\u00e9sentation du vainqueur en utilisant un arbre. Les quarts de finales opposent les \u00e9quipes suivantes : France-Angleterre (vainqueur France), Maroc-Portugal (vainqueur Maroc), Pays-Bas-Argentine (vainqueur Argentine) et Croatie-Br\u00e9sil (vainqueur Croatie). En demi-finale, la France bat le Maroc et l'Argentine la Croatie. Je crois que vous connaissez le r\u00e9sultat de la finale... Solution graph TB A[Argentine] --> B[Argentine] A --> C[France] B --> D[Croatie] B --> E[Argentine] D --> F[Croatie] D --> G[Br\u00e9sil] E --> H[Pays-Bas] E --> I[Argentine] C --> K[France] C --> L[Maroc] K --> M[France] K --> N[Angleterre] L --> O[Maroc] L --> P[Portugal] B. D\u00e9finitions \u00b6 B.I. Vocabulaire \u00b6 D\u00e9finition Un arbre est un ensemble organis\u00e9 de n\u0153uds reli\u00e9s par des branches ou ar\u00eates . Les n\u0153uds ont une relation hi\u00e9rarchique les uns par rapport aux autres. Le vocabulaire utilis\u00e9 est emprunt\u00e9, entre autres, \u00e0 la g\u00e9n\u00e9alogie et \u00e0 la nature : - Chaque n\u0153ud \u00e0 un p\u00e8re , dont il est le fils , sauf la racine . - Un n\u0153ud qui n'a pas de fils est appel\u00e9 une feuille . - Un n\u0153ud avec une valeur (texte, nombre, etc) est dit \u00e9tiquet\u00e9 . Si tous les n\u0153uds de l'arbre ont une \u00e9tiquette , l'arbre est aussi dit \u00e9tiquet\u00e9. Repr\u00e9sentation : L'arbre informatique est un arbre... renvers\u00e9. La racine est g\u00e9n\u00e9ralement repr\u00e9sent\u00e9e tout en haut. Sur l'arbre ci-dessous : identifier sa racine et distinguer les n\u0153uds des feuilles. Solution La racine est A. Des feuilles sont par exemple D ou H, alors que B ou C sont des noeuds. identifier le p\u00e8re du n\u0153ud \u00e9tiquet\u00e9 \"H\" et donner le(s) fils du n\u0153ud \u00e9tiquet\u00e9 \"B\". Solution Le p\u00e8re de H est C et les fils de B sont D, E et F. graph TB A --> B A --> C B --> D B --> E B --> F C --> G C --> H B.II. Mesures \u00b6 D\u00e9finitions la taille d'un arbre correspond \u00e0 son nombre de n\u0153uds. la profondeur d'un n\u0153ud correspond au nombre d'ar\u00eates/de n\u0153uds de la racine jusqu'\u00e0 ce n\u0153ud (la convention utilis\u00e9e doit vous \u00eatre pr\u00e9cis\u00e9e !) . Nous utiliserons le nombre de noeuds, donc que la racine est \u00e0 la profondeur 1. la hauteur d'un arbre correspond \u00e0 la profondeur de son n\u0153ud le plus profond. Exemple : Donner la taille et la hauteur de l'arbre de la partie pr\u00e9c\u00e9dente. Quelle est la profondeur du n\u0153ud \u00e9tiquet\u00e9 \"E\" ? \"C\" ? Sa taille est de 8. La profondeur de E est 3, celle de C est 2. Exercice : Dessiner un arbre de taille 9, \u00e9tiquet\u00e9 par des nombres de 0 \u00e0 8, de racine 0 et de hauteur 3. graph TB A((0)) --> B((1)) A --> E((4)) A --> C((2)) B --> D((3)) B --> F((7)) C --> G((5)) E --> H((6)) E --> J((8)) C. Les arbres binaires \u00b6 C.I. D\u00e9finition \u00b6 D\u00e9finitions Un arbre est dit binaire si chacun de ses n\u0153uds admet au plus deux fils, appel\u00e9s fils gauche et fils droit . On appelle sous-arbre gauche , et respectivement sous-arbre droit , d\u2019un n\u0153ud l\u2019arbre issu du fils gauche, respectivement fils droit, de ce n\u0153ud. Exemple : entourer les sous-arbres gauche et droit de la racine de l'arbre binaire ci-dessous. graph TB A --> B A --> C B --> D B --> E C --> G Exercice : Parmi les exemples 1, 2, et 3 du cours, le(s)quel(s) est/sont des arbres binaires ? Seul l'arbre de l'exemple 3 est un arbre binaire. Dans les autres, un noeud peut avoir plus de deux fils. C.II. Mesures \u00b6 C.II.a. Vocabulaire \u00b6 Ces d\u00e9finitions sont donn\u00e9es \u00e0 titre indicatif, pour les besoins des d\u00e9monstrations suivantes. - un arbre binaire complet est un arbre dont toutes les feuilles sont \u00e0 la m\u00eame profondeur. - un arbre binaire filiforme est un arbre dont tous les n\u0153uds ont au plus 1 fils. C.II.b. Encadrement de la hauteur \u00b6 Dessiner un arbre complet de taille \\(n=7\\) . Quelle est sa hauteur \\(h\\) ? L'exprimer en fonction de \\(n\\) . Solution graph TB A(( )) --> B(( )) A --> C(( )) B --> D(( )) B --> E(( )) C --> G(( )) C --> H(( )) Sa hauteur est de 3, et \\(n\\) vaut \\(7=2^3-1\\) . Donc \\(7+1 = 2^3\\) , soit en g\u00e9n\u00e9ralisant, \\(n+1=2^h\\) . La fonction inverse de la fonction qui transforme \\(x\\) en \\(2^x\\) et la fonction \\(log_2\\) , donc : \\(log_2(n+1) = log_2(2^h) = h\\) Dessiner un arbre filiforme de taille \\(n=7\\) . Quelle est sa hauteur ? L'exprimer en fonction de \\(n\\) . Solution graph TB A(( )) --> B(( )) B --> C(( )) C --> D(( )) D --> E(( )) E --> F(( )) F --> G(( )) \\(h = n\\) . En d\u00e9duire l'encadrement de la hauteur \\(h\\) d'un arbre binaire en fonction de sa taille \\(n\\) . Solution La valeur renvoy\u00e9e par le logarithme n'est pas toujours enti\u00e8re. Pour qu'elle le soit dans tous les cas, on l'arrondit \u00e0 l'entier sup\u00e9rieur : \\(\\lceil log_2(n+1) \\rceil < h\\) On en d\u00e9duit que \\(\\lceil log2(n+1) \\rceil \\leq h \\leq n\\) . C.II.c. Encadrement de la taille \u00b6 Dessiner l'arbre binaire de hauteur \\(h=3\\) comportant le plus de n\u0153uds possibles. De quel type d'arbre s'agit-il ? Exprimer sa taille \\(n\\) en fonction de \\(h\\) . Solution graph TB A(( )) --> B(( )) A --> C(( )) B --> D(( )) B --> E(( )) C --> G(( )) C --> H(( )) Il s'agit d'un arbre complet. \\(n=2^0+2^1+2^2=7=2^3-1\\) . Soit \\(n = 2^{h}-1\\) . Dessiner l'arbre binaire de hauteur \\(h=3\\) comportant le moins de n\u0153uds possibles. De quel type d'arbre s'agit-il ? Exprimer sa taille \\(n\\) en fonction de \\(h\\) . Solution graph TB A(( )) --> B(( )) B --> D(( )) Il s'agit d'un arbre filiforme. \\(n=3=h\\) . En d\u00e9duire l'encadrement de la taille \\(n\\) > d'un arbre binaire en fonction de sa hauteur \\(h\\) . Solution On en conclut, en g\u00e9n\u00e9ralisant, que \\(h<n <2^{h}-1\\) . C.III. Les arbres binaires de recherche \u00b6 Un arbre binaire de recherche (ABR) est un arbre vide ou un arbre binaire ayant les propri\u00e9t\u00e9s suivantes : - tous les n\u0153uds sont \u00e9tiquet\u00e9s par des nombres, - la racine est sup\u00e9rieure ou \u00e9gale \u00e0 tout n\u0153ud du sous-arbre gauche, - la racine est inf\u00e9rieure \u00e0 tout n\u0153ud du sous-arbre droit, - les deux sous-arbres de la racine sont eux-m\u00eames des ABR. Exemple : donner un arbre binaire satisfaisant les conditions ci-dessus pour \u00eatre un ABR. graph TB A((10 )) --> B((6)) A --> C((17)) B --> D((1)) B --> E((8)) C --> G((14)) C --> H((22)) Exercice : construire un ABR \u00e0 partir des nombres suivants, en les ins\u00e9rant les uns \u00e0 la suite des autres : 25, 11, 31, 4, 9, 42, 30, 28, 18. graph TB A((25)) --> B((11)) A --> C((31)) B --> D((4)) D --> F((9)) B --> E((18)) C --> G((30)) C --> H((42)) G --> I((28)) TD : Exercices sur les arbres \u00b6 Exercice 1 : un arbre g\u00e9n\u00e9alogique \u00b6 Expliquez les choix faits dans la construction de cet arbre g\u00e9n\u00e9alogique. Peut-on parler d\u2019arbre binaire ? Quelle est la racine de l\u2019arbre ? Donner le p\u00e8re de Marie-Th\u00e9r\u00e8se, les fils de Louis le grand dauphin. Donner deux exemples de n\u0153ud, de feuille. Donner la profondeur du n\u0153ud \u00e9tiquet\u00e9 \"Marie-Anne\" et la profondeur de l\u2019arbre. Exercice 2 : repr\u00e9senter une expression arithm\u00e9tique \u00b6 graph TB A((*)) --> B; B(('-')) --> C((/)); B-->D((t)) C --> E((y)) C --> F((2)) A-->G((+)) G-->H((75)) G-->I((z)) Quelle expression l\u2019arbre ci-dessus peut-t-il repr\u00e9senter ? Donner l\u2019arbre permettant de repr\u00e9senter \\(3 + (7/3-1)^3\\) . Exercice 3 : \u00b6 Les langages informatiques sont form\u00e9s \u00e0 partir d\u2019une grammaire, d\u00e9finissant une utilisation correcte du langage. Pour interpr\u00e9ter le langage Python, un arbre syntaxique du code est utilis\u00e9. Pour le code pr\u00e9sent\u00e9 ci-dessous, on propose une version simplifi\u00e9e de cet arbre : k = 3 for i in range ( 4 ): k = k * 2 graph TB A(body) --> B; B(assign) --> C((k)); B-->D((3)) A-->G(for) G-->H((i)) G-->I(range) G-->J(body) I-->K((4)) J-->L(assign) L-->M((k)) L-->N((*)) N-->O((k)) N-->P((2)) Proposer une adaptation de cet arbre pour repr\u00e9senter le code suivant : k = 2 for i in range ( 1 , 5 ): k = k * 2 + 1 TP : Impl\u00e9mentation des arbres binaires \u00b6 Pour manipuler des arbres binaires, il faut en utiliser une impl\u00e9mentation Python. Comme pour les listes, les piles et les files, nous allons proposer plusieurs impl\u00e9mentations de cette structure. A. Repr\u00e9sentation imbriqu\u00e9e avec un p-uplet \u00b6 On peut repr\u00e9senter les arbres binaires de mani\u00e8re imbriqu\u00e9e avec des p-uplets (type Python : tuple ). L\u2019arbre vide est repr\u00e9sent\u00e9 par un p-uplet vide, et, dans tous les autres cas, un n\u0153ud est un p-uplet de 3 valeurs contenant : l\u2019\u00e9tiquette du n\u0153ud, le sous-arbre gauche (\u00e9ventuellement vide) , le sous-arbre droit (\u00b4eventuellement vide) . A.I. Exemple \u00b6 graph TB A((E)) --> B(X) A --> C(L) B --> D(E) B --> E(M) E --> G(P) C --> H(E) L'arbre ici-dessus se repr\u00e9sente de la mani\u00e8re suivante : exemple = ( 'E' , ( 'X' , ( 'E' , (), ()), ( 'M' , ( 'P' , (), ()), ()) ), ( 'L' , ( 'E' , (), ()), () ) ) A.II. Application \u00b6 Repr\u00e9senter l'arbre suivant avec cette m\u00e9thode. graph TB A(( )) --> B(2) A --> C(0) B --> D(2) B --> E(3) B. Avec une classe \u00b6 On se propose dans un deuxi\u00e8me temps d\u2019utiliser la classe ArbreBinaire suivante : class ArbreBinaire : def __init__ ( self , r , g , d ): self . racine = r self . gauche = g self . droit = d gauche et droite sont des arbres binaires, et l\u2019arbre vide est repr\u00e9sent\u00e9 par None. Instancier un objet de cette classe pour repr\u00e9senter notre arbre. B.I. Exemple \u00b6 L'arbre de l'exemple donn\u00e9 en A.I. se repr\u00e9sente avec cette classe de la mani\u00e8re suivante : exemple = ArbreBinaire ( 'E' , ArbreBinaire ( 'X' , ArbreBinaire ( 'E' , None , None ), ArbreBinaire ( 'M' , ArbreBinaire ( 'P' , None , None ), None ) ), ArbreBinaire ( 'L' , ArbreBinaire ( 'E' , None , None ), None ,) ) B.II. Application \u00b6 Repr\u00e9senter l'arbre de la partie A.II. avec cette classe. Pour visualiser le r\u00e9sultat, utiliser la m\u00e9thode r\u00e9cursive affiche qui permet de visualiser l\u2019arbre. def affiche ( self , space = 0 ): spaces = \" \" * space print ( spaces , self . racine ) if self . gauche : self . gauche . affiche ( space + 1 ) if self . droit : self . droit . affiche ( space + 1 ) B.III. Am\u00e9lioration de la classe ArbreBinaire \u00b6 Rajouter les accesseurs et les mutateurs des attributs de cette classe (not\u00e9s getRacine , getABGauche , getABDroit , setRacine , setABGauche , setABDroit ). Nous allons utiliser cette classe et ces m\u00e9thodes dans un prochain TP.","title":"I. La structure d'arbre"},{"location":"tle/seq6/arbres/#i-la-structure-darbre","text":"","title":"I. La structure d'arbre"},{"location":"tle/seq6/arbres/#cours","text":"Les structures lin\u00e9aires sont peu pratiques pour faire des recherches, des ajouts ou des suppressions de donn\u00e9es ordonn\u00e9es. Les structures arborescentes ou arbres , dont les utilisations en informatique sont multiples, sont plus adapt\u00e9es \u00e0 cela.","title":"Cours"},{"location":"tle/seq6/arbres/#td-exercices-sur-les-arbres","text":"","title":"TD : Exercices sur les arbres"},{"location":"tle/seq6/arbres/#tp-implementation-des-arbres-binaires","text":"Pour manipuler des arbres binaires, il faut en utiliser une impl\u00e9mentation Python. Comme pour les listes, les piles et les files, nous allons proposer plusieurs impl\u00e9mentations de cette structure.","title":"TP : Impl\u00e9mentation des arbres binaires"},{"location":"tle/seq6/arbres_algo/","text":"body { text-align: justify} II. Les algorithmes sur les arbres \u00b6 Cours \u00b6 A. Les parcours \u00b6 Parcourir un arbre binaire consiste \u00e0 acc\u00e9der \u00e0 l'information contenue dans ses n\u0153uds : \u00e0 leur \u00e9tiquette. A.I. Parcours en profondeur \u00b6 D\u00e9finition Un parcours en profondeur consiste \u00e0 parcourir les n\u0153uds en suivant les branches. On consid\u00e8re que chaque n\u0153ud d'un arbre binaire est visit\u00e9 3 fois, dans l'ordre suivant : - une fois par la gauche, - une fois par en-dessous, - une fois par la droite. Illustrons-le sur l'arbre suivant : graph TB A --> B A --> C B --> D B --> E C --> G C --> H Parcours pr\u00e9fixe : on liste chaque n\u0153ud la premi\u00e8re fois qu'il est rencontr\u00e9. Quel est le parcours pr\u00e9fixe de l'arbre pr\u00e9c\u00e9dent ? A, B, D, E, C, G, H. Parcours infixe : on liste chaque n\u0153ud la deuxi\u00e8me fois qu'il est rencontr\u00e9. Quel est le parcours infixe de l'arbre pr\u00e9c\u00e9dent ? D, B, E, A, G, C, H Parcours suffixe ou postfixe : on liste chaque n\u0153ud la derni\u00e8re fois qu'il est rencontr\u00e9. quel est le parcours sufixe de l'arbre pr\u00e9c\u00e9dent ? D, E, B, G, H, C, A A.II. Parcours en largeur \u00b6 D\u00e9finition Dans un parcours en largeur , on liste dans les noeuds par ordre de profondeur croissante. Repr\u00e9senter ce parcours sur l'arbre ci-dessous : graph TB A --> B A --> C B --> D B --> E C --> G C --> H Solution A, B, C, D, E, G, H B. Sur les ABR \u00b6 Dans un ABR, les n\u0153uds sont ordonn\u00e9s. Cela facilite donc les recherches, et l'insertion d'un nouveau n\u0153ud ne peut se faire au hasard. B.I. Recherche \u00b6 Quel algorithme appliquer pour faire une recherche dans un ABR ? On parcourt l'arbre en commen\u00e7ant par la racine : - si elle est \u00e9gale \u00e0 la valeur recherch\u00e9e, la valeur est trouv\u00e9e, - sinon si celle-ci est plus petite que la valeur recherch\u00e9e, on continue le parcours dans le sous-arbre droit , - sinon, on continue dans le sous-arbre gauche . Dans les deux derniers cas, on r\u00e9applique l'algorithme en partant de la racine du sous-arbre en question, jusqu'\u00e0 tomber sur un sous-arbre vide . B.II. Insertion \u00b6 Quel algorithme appliquer pour ins\u00e9rer un \u00e9l\u00e9ment dans un ABR ? On applique le m\u00eame algorithme que pour rechercher un \u00e9l\u00e9ment, sauf que lorsque l'on arrive sur un sous-arbre vide, on le remplace par un sous-arbre ayant la valeur \u00e0 ins\u00e9rer comme racine. En appliquant ces algorithmes, rechercher 6 et 3, et ins\u00e9rer 10 et 1 dans l'ABR suivant : graph TB A[8] --> B[4] A --> C[12] B --> D[2] B --> E[6] E --> F[7] C --> G[9] C --> H[15] H --> J[20] Solution 6<8 -> sous-arbre gauche -> 6>4 -> sous-arbre droit -> 6 trouv\u00e9 3<8 -> sous-arbre gauche -> 3<4 -> sous-arbre gauche -> 3>2 -> sous-arbre droit -> arbre vide : valeur non-trouv\u00e9e. graph TB A[8] --> B[4] A --> C[12] B --> D[2] D --> K[1] B --> E[6] E --> F[7] C --> G[9] G --> I[10] C --> H[15] H --> J[20] TD : Propri\u00e9t\u00e9s et algorithmique sur les arbres \u00b6 Ce TD traite de deux exemples d'arbres, dont on extrait les propri\u00e9t\u00e9s et sur lesquels on applique les diff\u00e9rents parcours. A. L'arbre de la nouvelle ann\u00e9e \u00b6 On consid\u00e8re l'arbre suivant : graph TB A((B)) --> B(O) A --> C(N) B --> D(N) B --> E(E) E --> G(N) E --> H(N) C --> I( ) C --> J(A) J --> K(E) J --> L(E) A.I. Propri\u00e9t\u00e9s \u00b6 Donner la taille et la hauteur de cet arbre. Est-ce un arbre binaire ? Un arbre binaire de recherche ? Justifier. A.II. Parcours \u00b6 Donner les parcours en profondeur pr\u00e9fixe, infixe et suffixe de cet arbre. Donner le parcours en largeur de cet arbre. B. Arbre de recherche \u00b6 On consid\u00e8re l'arbre suivant : graph TB A((9)) --> B(3) A --> C(13) B --> D(2) B --> E(5) C --> I(11) C --> J(17) J --> L(19) Justifier qu'il s'agit bien d'un arbre binaire de recherche . Appliquer l' algorithme d'insertion pour y ajouter le chiffre 7. Appliquer l' algorithme de recherche pour trouver les nombres 11 et 14. Donner les parcours en profondeur pr\u00e9fixe, indixe et suffixe de cet arbre. Quel parcours permet d'obtenir la liste des nombres dans l'ordre croissant ? Donner le parcours en largeur de cet arbre. TP : Algorithmes sur les arbres binaires \u00b6 Dans ce TP, nous utilisons la classe ArbreBinaire d\u00e9finie dans le TP sur l'impl\u00e9mentation des arbres binaires, et l'arbre d'exemple du m\u00eame TP. A. Calcul de mesures \u00b6 B.I. La taille \u00b6 1) On propose une description d\u2019un algorithme r\u00e9cursif permettant de calculer la taille d\u2019un arbre binaire. A partir de celle-ci, proposer un pseudo-code de l\u2019algorithme. Description La taille de l\u2019arbre correspond \u00e0 la somme de la taille de ses sous-arbres . On parcourt donc les sous-arbres gauche et droit r\u00e9cursivement, et on incr\u00e9mente la taille \u00e0 chaque fois que l\u2019on rencontre un nouveau n\u0153ud. L\u2019algorithme s\u2019arr\u00eate lorsque l\u2019appel r\u00e9cursif se fait sur un arbre vide. 2) Tester cet algorithme en l\u2019impl\u00e9mentant en Python et en utilisant l\u2019arbre d'exemple impl\u00e9ment\u00e9 pr\u00e9c\u00e9demment avec la classe ArbreBinaire . N'oubliez pas que vous pouvez afficher le r\u00e9sultat avec la m\u00e9thode affiche . B.II. La hauteur \u00b6 Description L\u2019algorithme qui permet de calculer la hauteur d\u2019un arbre binaire est similaire \u00e0 celui utilis\u00e9 pour la taille. La diff\u00e9rence est qu\u2019\u00e0 chaque niveau de profondeur atteint (chaque nouvel appel r\u00e9cursif), on incr\u00e9mente de 1 la hauteur, et on s\u00e9lectionne le maximum des hauteurs entre celle du sous-arbre gauche et celle du sous-arbre droit. 1) Proposer un pseudo-code de cet algorithme. 2) L\u2019impl\u00e9menter sur le m\u00eame arbre qu\u2019en I.A. N.B.: on pourra utiliser la fonction max de Python pour s\u00e9lectionner la plus grande des deux hauteurs. B. II. Les parcours \u00b6 II.A. Parcours en profondeur \u00b6 1) Donner les parcours pr\u00e9fixe, infixe et postfixe de l\u2019arbre d'exemple du TP pr\u00e9c\u00e9dent : graph TB A(( )) --> B(2) A --> C(0) B --> D(2) B --> E(3) On propose une fonction qui effectue un de ces parcours en profondeur d\u2019un arbre binaire et stocke le r\u00e9sultat dans une liste Python. def parcours ( arbre ): if arbre == None : return [] else : r = arbre . getRacine () ag = arbre . getABGauche () ad = arbre . getABDroit () return parcours ( ag ) + [ r ] + parcours ( ad ) 2) A quel parcours ce code-correspond-il ? Justifier. 3) Combien de fois acc\u00e8de-t-on \u00e0 chaque n\u0153ud de l\u2019arbre ? En d\u00e9duire la complexit\u00e9 de cet algorithme en fonction de la taille de l\u2019arbre \\(n\\) . 4) Modifier le code pour obtenir les deux autres parcours en profondeur. 5) Tester ces parcours sur l\u2019arbre d'exemple et v\u00e9rifier leur bon fonctionnement gr\u00e2ce aux r\u00e9sultats obtenus \u201d\u00e0 la main\u201d. 6) Proposer une autre version de chacun de ces parcours, qui ne renvoie pas une liste Python mais affiche au fur et \u00e0 mesure les n\u0153uds de l\u2019arbre rencontr\u00e9s. II.B. Parcours en largeur \u00b6 On fournit un code du parcours en largeur d\u2019un arbre binaire. def parcoursLargeur ( arbre ): f = File () parcours = [] f . enfiler ( arbre ) while not ( f . vide ()): e = f . defiler () parcours . append ( e . getRacine ()) if e . getABGauche () != None : f . enfiler ( e . getABGauche ()) if e . getABDroit () != None : f . enfiler ( e . getABDroit ()) return parcours 1) Identifier les types des entr\u00e9es et sorties, ainsi que celui de la variable temporaire. 1) Indiquer le contenu des variables e , f et parcours \u00e0 l\u2019initialisation (code ex\u00e9cut\u00e9 jusqu\u2019\u00e0 la ligne 4) et \u00e0 la fin de chaque passage de boucle lorsque la fonction est appliqu\u00e9e \u00e0 l\u2019arbre d'exemple utilis\u00e9 dans les parties pr\u00e9c\u00e9dentes. On repr\u00e9sentera l\u2019arbre sch\u00e9matiquement. 2) Quelle est l\u2019utilit\u00e9 de f ? 3) Recopier cette fonction sur ordinateur en ajoutant sa sp\u00e9cification (les types des variables d\u2019entr\u00e9e et sortie) . On n\u2019oubliera pas d\u2019importer une impl\u00e9mentation de structure de file. 4) Tester le programme sur l\u2019arbre d'exemple. TP : Algorithmes sur les arbres binaires de recherche \u00b6 A. Repr\u00e9sentation \u00b6 On propose d\u2019utiliser une autre repr\u00e9sentation pour manipuler des arbres binaires de recherche. On utilise deux classes : Noeud et ABR . class ABR : def __init__ ( self , racine ): self . racine = racine def affiche_abr ( self ): if self is None : representation = \"L'arbre est vide !\" else : representation = self . racine . affiche () return representation class Noeud : def __init__ ( self , valeur , fils_gauche , fils_droit ): self . valeur = valeur self . fils_gauche = fils_gauche self . fils_droit = fils_droit def affiche ( self , space = 0 ): spaces = \" \" * space print ( spaces , self . valeur ) if self . fils_gauche : self . fils_gauche . affiche ( space + 1 ) if self . fils_droit : self . fils_droit . affiche ( space + 1 ) Exemple d'utilisation des classes : Le code suivant repr\u00e9sente l'arbre ci-dessous : n7 = Noeud ( 7 , None , None ) n6 = Noeud ( 6 , None , n7 ) n2 = Noeud ( 2 , None , None ) n4 = Noeud ( 4 , n2 , n6 ) n20 = Noeud ( 20 , None , None ) n15 = Noeud ( 15 , None , n20 ) n9 = Noeud ( 9 , None , None ) n12 = Noeud ( 12 , n9 , n15 ) n8 = Noeud ( 8 , n4 , n12 ) a = ABR ( n8 ) graph TB A((8)) --> B((4)) A --> C((12)) B --> D((2)) B --> E((6)) E --> G((7)) C --> H((9)) C --> I((15)) I --> J((20)) R\u00e9cup\u00e9rer le fichier suivant sur l'ENT. Utiliser ces classes pour repr\u00e9senter l\u2019ABR du TD pr\u00e9c\u00e9dent (ci-dessous), en vous aidant de l\u2019exemple. graph TB A((9)) --> B(3) A --> C(13) B --> D(2) B --> E(5) C --> I(11) C --> J(17) J --> L(19) 2) Afficher l\u2019arbre obtenu en utilisant la m\u00e9thode affiche_abr . B. Algorithme de recherche \u00b6 Nous allons cette fois-ci \u00e9crire des m\u00e9thodes pour les deux classes, en nous inspirant de ce qui a \u00e9t\u00e9 fait pour la fonction d\u2019affichage (impl\u00e9ment\u00e9e dans les deux classes) . Le principe est d\u2019effectuer la recherche dans la classe Noeud (en consid\u00e9rant qu\u2019on peut la faire en partant de n\u2019importe quel noeud de l\u2019ABR) et donc de cr\u00e9er une m\u00e9thode rechercher dans celle-ci, puis de cr\u00e9er une m\u00e9thode rechercher_abr dans la classe ABR , en appelant la m\u00e9thode rechercher de la classe Noeud sur la racine de l\u2019ABR. 1) Impl\u00e9menter ces m\u00e9thodes pour rechercher une cl\u00e9 dans un ABR, \u00e0 partir de l\u2019algorithme d\u00e9crit dans le cours. 2) Les tester sur l\u2019ABR d'exemple utilis\u00e9 dans les TP pr\u00e9c\u00e9dents. C. Algorithme d'insertion \u00b6 De la m\u00eame mani\u00e8re que pour la recherche, impl\u00e9menter une m\u00e9thode inserer dans la classe Noeud et une dans la classe ABR , inserer_abr , qui permettent d\u2019ins\u00e9rer une cl\u00e9. Les tester sur le m\u00eame ABR que l'algorithme de recherche.","title":"II. Les algorithmes sur les arbres"},{"location":"tle/seq6/arbres_algo/#ii-les-algorithmes-sur-les-arbres","text":"","title":"II. Les algorithmes sur les arbres"},{"location":"tle/seq6/arbres_algo/#cours","text":"","title":"Cours"},{"location":"tle/seq6/arbres_algo/#td-proprietes-et-algorithmique-sur-les-arbres","text":"Ce TD traite de deux exemples d'arbres, dont on extrait les propri\u00e9t\u00e9s et sur lesquels on applique les diff\u00e9rents parcours.","title":"TD : Propri\u00e9t\u00e9s et algorithmique sur les arbres"},{"location":"tle/seq6/arbres_algo/#tp-algorithmes-sur-les-arbres-binaires","text":"Dans ce TP, nous utilisons la classe ArbreBinaire d\u00e9finie dans le TP sur l'impl\u00e9mentation des arbres binaires, et l'arbre d'exemple du m\u00eame TP.","title":"TP : Algorithmes sur les arbres binaires"},{"location":"tle/seq6/arbres_algo/#tp-algorithmes-sur-les-arbres-binaires-de-recherche","text":"","title":"TP : Algorithmes sur les arbres binaires de recherche"},{"location":"tle/seq7/architecture/","text":"body { text-align: justify} I. Architecture des r\u00e9seaux informatiques \u00b6 Cours \u00b6 Diaporama disponible : Exemple de r\u00e9seau informatique : A. El\u00e9ments physiques des r\u00e9seaux \u00b6 Indiquer les diff\u00e9rentes cat\u00e9gories des \u00e9l\u00e9ments physiques des r\u00e9seaux, et donner des exemples pour chacune. P\u00e9riph\u00e9riques terminaux : serveurs, ordinateurs, t\u00e9l\u00e9phones,... P\u00e9riph\u00e9riques interm\u00e9diaires : switchs (concentrateurs), routeurs Connexions : sans fil (Wifi, Bluetooth,...) ou filaire (Ethernet, fibre,...) B. Communication dans un r\u00e9seau local \u00b6 Identifiquer les r\u00e9seaux locaux sur le sch\u00e9ma. D\u00e9crire le r\u00f4le de TCP (Transmission Control Protocol) . R\u00e9ponse TCP est un protocole s'assurant de la transmission des donn\u00e9es. Il pr\u00e9voit de v\u00e9rifier qu'elles sont bien toutes arriv\u00e9es au destinataire (envoi d'accus\u00e9s de r\u00e9ception) et qu'elles puissent \u00eatre remises dans l'ordre (ajout d'un num\u00e9ro \u00e0 chaque segment) . D\u00e9crire le r\u00f4le d' IP (Internet Protocol) . Expliquer \u00e0 quoi sert une adresse IP et d\u00e9tailler le format IPv4. A quoi sert un masque de sous-r\u00e9seau ? R\u00e9ponse IP guide les paquets dans le r\u00e9seau : il assure le routage, gr\u00e2ce aux adresses IP associ\u00e9es aux machines. Une adresse IP identifie une machine de mani\u00e8re unique sur un r\u00e9seau. Le format IPv4 utilise 4 nombres cod\u00e9s sur chacun 1 octet, donc pouvant aller de 0 \u00e0 255 ( \\(2^8-1\\) ). L'adresse IP d\u00e9pend du r\u00e9seau local, ou sous-r\u00e9seau de la machine : le masque de sous-r\u00e9seau permet d'obtenir l'adresse IP de ce sous-r\u00e9seau en faisant un ET logique entre l'adresse IP de la machine et le masque. D\u00e9crire le r\u00f4le d'un switch . R\u00e9ponse Un switch permet de diriger les paquets \u00e0 l'int\u00e9rieur d'un r\u00e9seau local. Il utilise le protocole ARP pour associer une adresse IP (d\u00e9pendant du r\u00e9seau) une adresse MAC (adresse physique d'une carte r\u00e9seau), ce qui est n\u00e9cessaire \u00e0 l'acheminement des donn\u00e9es. D\u00e9crire le mod\u00e8le TCP/IP et ses difff\u00e9rentes couches. R\u00e9ponse Dans ce mod\u00e8le, diff\u00e9rents protocoles sont associ\u00e9s \u00e0 diff\u00e9rentes couches : ils fonctionnent en partie ensemble, chaque protocole ajoutant des informations diff\u00e9rentes aux donn\u00e9es transport\u00e9es. Ce mod\u00e8le est hi\u00e9rarchique : un protocole d'une couche sup\u00e9rieure encapsule les donn\u00e9es format\u00e9es par les protocoles des couches inf\u00e9rieures. Les protocoles utilis\u00e9s d\u00e9pendent de l'application voulue : transf\u00e9rer des fichiers, acc\u00e9der aux donn\u00e9es du web, etc. C. Communication entre r\u00e9seaux \u00b6 Que se passe-t-il lorsque l'on veut faire communiquer deux ordinateurs de deux sous-r\u00e9seaux diff\u00e9rents ? Votre explication doit inclure les mots passerelle , routeur et table de routage . R\u00e9ponse Pour sortir d'un r\u00e9seau local, les donn\u00e9es doivent passer par une passerelle. C'est le routeur qui permet de relier un r\u00e9seau local au r\u00e9seau Internet.*** Les routeurs guident les paquets dans le r\u00e9seau gr\u00e2ce \u00e0 leur table de routage qui leur indique par o\u00f9 aller pour chaque r\u00e9seau de destination, jusqu'\u00e0 leur arriv\u00e9e dans le r\u00e9seau de la machine de destination. On se trouve alors dans le cas du B. TD : Architecture des r\u00e9seaux informatiques \u00b6 Exercice 1 : \u00b6 V\u00e9rifier que les adresses machines et adresses r\u00e9seau de ce r\u00e9seau sont coh\u00e9rentes, en faisant les v\u00e9rifications n\u00e9cessaires sur les adresses IP et masques de r\u00e9seau . Exercice 2 : \u00b6 On consid\u00e8re le r\u00e9seau du cours : a) Citer les machines appartenant aux diff\u00e9rents r\u00e9seaux locaux 1, 2 et 3 (connect\u00e9es aux switchs ayant ces num\u00e9ros) . Les adresses IP qui leur sont associ\u00e9es sont, respectivement 192.168.1.0 /24, 192.168.2.0 /24 et 128.10.0.0 /16. b) On attribue les adresses IP suivantes : 192.168.1.1 /24 \u00e0 M1 192.168.2.1 /24 \u00e0 M4 128.10.1.1 /16 \u00e0 M7 Attribuer des adresses IP aux machines M2, M3, M5, M6 et M8. c) On attribue les adresses IP suivantes : 192.168.1.254 \u00e0 l\u2019 interface r\u00e9seau eth0 de RA connect\u00e9e au r\u00e9seau 1, 192.168.2.254 pour eth1 connect\u00e9e au r\u00e9seau 2, 172.168.3.1 /24 pour eth2 connect\u00e9e au m\u00eame r\u00e9seau que RB, et 172.168.4.1 /24 pour eth3 celle connect\u00e9e \u00e0 RC. De la m\u00eame mani\u00e8re, attribuer des adresses IP aux deux interfaces r\u00e9seau de RB et aux deux de RC sachant que les deux routeurs communiquent sur le r\u00e9seau 192.168.7.0/24. TP : Mise en \u0153uvre d\u2019un r\u00e9seau \u00b6 Nous allons simuler des r\u00e9seaux informatiques avec le logiciel Filius , dont l'interface est la suivante : A. Un r\u00e9seau local \u00b6 Cr\u00e9er un r\u00e9seau de 2 ordinateurs , reli\u00e9s par un switch . S\u00e9lectionner les machines pour changer le nom en M1 et M2. Attribuer \u00e0 chacune une adresse IP diff\u00e9rente (qui doit \u00eatre dans le m\u00eame r\u00e9seau). Noter l\u2019 adresse MAC des 2 machines. En mode simulation (fl\u00e8che verte), s\u00e9lectionner M1 pour installer le logiciel \"Lignes de commande\". Faire un clic droit sur chaque machine et activer \"Afficher l\u2019\u00e9change de donn\u00e9es\". Lancer le logiciel de ligne de commande sur M1 et faire un ping pour tester la connexion entre M1 et M2. D\u2019apr\u00e8s la fen\u00eatre \"\u00e9changes de donn\u00e9es\" : quels protocoles ont \u00e9t\u00e9 utilis\u00e9 ? Que s\u2019est-il pass\u00e9 exactement ? B. Fonctionnement d\u2019un switch \u00b6 Repasser en mode construction de r\u00e9seau et rajouter un ordinateur M3 connect\u00e9 au m\u00eame r\u00e9seau que M1 et M2. En mode simulation , s\u00e9lectionner le switch . Appara\u00eet alors une table d\u2019association adresse MAC-port , qui doit \u00eatre vide. La fermer pour l\u2019instant. Faire un clic droit sur chaque machine et activer \"Afficher l\u2019\u00e9change de donn\u00e9es\". Lancer la console de M1 et tester sa connexion avec M3. Rouvrir la table d\u2019association du switch . Que remarquez-vous ? Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau1.fls . C. Fonctionnement d\u2019un routeur \u00b6 Nous allons \u00e0 pr\u00e9sent cr\u00e9er 2 r\u00e9seaux locaux connect\u00e9s par un routeur. Vous pouvez reprendre le r\u00e9seau cr\u00e9\u00e9 pr\u00e9c\u00e9demment, que nous allons connecter \u00e0 un deuxi\u00e8me r\u00e9seau local . Nommer les 3 ordinateurs M1, M2 et M3 et leur attribuer respectivement les adresses IP 192.168.1.1, 192.168.1.2 et 192.168.1.3 (changer les adresses si vous en aviez des diff\u00e9rentes) . Cr\u00e9er un second r\u00e9seau local avec 2 ordinateurs reli\u00e9s \u00e0 un switch , nomm\u00e9s M4 et M5, et leur attribuer respectivement les adresses IP 192.168.2.1 et 192.168.2.2. Rajouter un routeur appel\u00e9 R1 sur votre sch\u00e9ma, et relier les switchs au routeur. Dans la configuration du routeur, cocher \"routage automatique\". En mode simulation , installer le logiciel de lignes de commandes sur les machines M1 et M4. Faire un ping de M1 sur M4. V\u00e9rifier... que \u00e7a ne marche pas, car les passerelles ne sont pas bien configur\u00e9es ! Dans la configuration du routeur, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M1, M2 et M3, et lui attribuer l\u2019adresse IP 192.168.1.254. Indiquer cette adresse comme la passerelle de M1, M2 et M3. Dans la configuration du routeur, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M4 et M5, et lui attribuer l\u2019adresse IP 192.168.2.254. Indiquer cette adresse comme la passerelle de M4 et M5. Faire un nouveau ping en mode simulation entre M1 et M4. Cette requ\u00eate devrait \u00e0 pr\u00e9sent fonctionner ! Les deux r\u00e9seaux sont connect\u00e9s. Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau2.fls . D. Un r\u00e9seau avec deux routeurs \u00b6 Reprendre le sch\u00e9ma que vous avez fait \u00e0 la question d\u2019avant et y ajouter un 3\u00e8me r\u00e9seau local , compos\u00e9 d\u2019un ordinateur (M6), reli\u00e9 \u00e0 un switch. Ajouter un second routeur appel\u00e9 R2, et le relier au switch et au routeur R1. Rajouter une liaison \u00e0 R1 si vous ne lui en avez mis que 2 (\"G\u00e9rer les connexions\" et \"Ajouter une interface locale\"). Configurer M6 en lui attribuant l\u2019adresse IP 172.0.1.1 et la passerelle 172.0.1.254. Dans la configuration de R2, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M6, et lui attribuer l\u2019adresse IP 172.0.1.254. Cocher \"routage automatique\". Il faut maintenant configurer le chemin entre les routeurs R1 et R2. Attribuer l\u2019adresse 192.168.3.1 \u00e0 l\u2019interface de R1 le connectant \u00e0 R2. De la m\u00eame mani\u00e8re, choisir une adresse IP pour l\u2019interface de R2 le connectant \u00e0 R1. Faire un ping entre M1 et M6. La connexion se fait-elle bien ? Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau3.fls .","title":"I. Architecture des r\u00e9seaux"},{"location":"tle/seq7/architecture/#i-architecture-des-reseaux-informatiques","text":"","title":"I. Architecture des r\u00e9seaux informatiques"},{"location":"tle/seq7/architecture/#cours","text":"Diaporama disponible : Exemple de r\u00e9seau informatique :","title":"Cours"},{"location":"tle/seq7/architecture/#td-architecture-des-reseaux-informatiques","text":"","title":"TD : Architecture des r\u00e9seaux informatiques"},{"location":"tle/seq7/architecture/#tp-mise-en-uvre-dun-reseau","text":"Nous allons simuler des r\u00e9seaux informatiques avec le logiciel Filius , dont l'interface est la suivante :","title":"TP\u00a0: Mise en \u0153uvre d\u2019un r\u00e9seau"},{"location":"tle/seq7/graphes/","text":"body { text-align: justify} II. Vocabulaire sur les graphes \u00b6 Introduction \u00b6 Exemple 1 On peut mod\u00e9liser des r\u00e9seaux informatiques par une structure appel\u00e9e graphe . Dans cet exemple, les lettres A, B et C repr\u00e9sentent des routeurs et les lignes entre eux repr\u00e9sentent leurs connexions. Exemple 2 On peut \u00e9galement utiliser des graphes pour repr\u00e9senter les relations entre utilisateurs de r\u00e9seaux sociaux. Consid\u00e9rons un r\u00e9seau social sur lequel : - A est ami avec B, C et D - B est ami avec A et D - C est ami avec A, E et D - D est ami avec tous les autres abonn\u00e9s - E est ami avec C, D et F - F est ami avec E et D Repr\u00e9senter ce r\u00e9seau social sous la forme d\u2019un graphe. A. D\u00e9finitions et vocabulaire \u00b6 D\u00e9finition Un graphe G est un couple G = (V,E) avec V un ensemble de sommets , repr\u00e9sent\u00e9s par des points, et E un ensemble d\u2019 ar\u00eates , repr\u00e9sent\u00e9es par des lignes (V pour Vertex, soit sommet en anglais, E pour Edge, soit ar\u00eate) . Vocabulaire : l\u2019 ordre d\u2019un graphe est le nombre de ses sommets, 2 sommets sont dit adjacents s\u2019ils sont reli\u00e9s par une ar\u00eate, le degr\u00e9 d\u2019un sommet est le nombre d\u2019ar\u00eates issues de ce sommet. Exemples Le graphe de l\u2019exemple 1 est d\u2019ordre 3, et chacun de ses sommets est adjacent aux deux autres et donc de degr\u00e9 2. Quel est l\u2019ordre du graphe repr\u00e9sentant le r\u00e9seau social d\u2019introduction (exemple 2) ? Quels sommets sont adjacents et quel est le degr\u00e9 de chacun d\u2019entre eux ? Vocabulaire On appelle cha\u00eene toute suite d\u2019ar\u00eates dont l\u2019extr\u00e9mit\u00e9 de l\u2019une (sauf la derni\u00e8re) est l\u2019origine de la suivante. Sa longueur correspond au nombre d\u2019ar\u00eates. On appelle cycle une cha\u00eene ferm\u00e9e dont toutes les ar\u00eates sont distinctes. Exemple 3 Identifier une cha\u00eene de longueur 3 : Identifier un cycle : B. Les diff\u00e9rents types de graphes \u00b6 B.I. Graphes non-orient\u00e9s \u00b6 D\u00e9finition Un graphe non-orient\u00e9 est un graphe dont les ar\u00eates n\u2019ont pas de sens. Cela signifie que, pour un graphe G = (V,E) avec V = {A,B,C}, les \u00e9l\u00e9ments (A,B) et (B,A) sont identiques. C'est le cas de l' exemple 1 . B.II. Graphes orient\u00e9s \u00b6 D\u00e9finition Un graphe orient\u00e9 est un graphe dont les liens, les arcs, ont un sens. Cela signifie que, pour un graphe G = (V,E) avec V = {A,B,C}, les \u00e9l\u00e9ments (A,B) et (B,A) sont distincts. Exemple 6 Imaginons un site web compos\u00e9 de 3 pages nomm\u00e9es A, B et C et repr\u00e9sent\u00e9 ci-contre : - sur A sont pr\u00e9sents des liens vers B et C, - sur B est pr\u00e9sent un lien vers C. Vocabulaire Soit (A,B) un arc de G : - A est appel\u00e9 le pr\u00e9d\u00e9cesseur de B, - B est appel\u00e9 le successeur de A. - Un chemin est une suite d\u2019arcs dont l\u2019extr\u00e9mit\u00e9 de l\u2019un (sauf la derni\u00e8re) est l\u2019origine du suivant. B.III. Graphes pond\u00e9r\u00e9s \u00b6 D\u00e9finitions On dit qu\u2019un graphe est pond\u00e9r\u00e9 quand ses ar\u00eates ou ses arcs sont coupl\u00e9s avec des nombres. Ceux-ci sont appel\u00e9s des poids. On associe un chemin dans un graphe pond\u00e9r\u00e9 \u00e0 un poids en effectuant la somme des poids de ses diff\u00e9rentes ar\u00eates. Exemple 7 : Un r\u00e9seau routier repr\u00e9sentant les connexions entre villes, avec comme poids le nombre de km les s\u00e9parant. Donner diff\u00e9rents chemins possibles pour aller de G \u00e0 E et leur poids associ\u00e9.","title":"II. Les graphes"},{"location":"tle/seq7/graphes/#ii-vocabulaire-sur-les-graphes","text":"","title":"II. Vocabulaire sur les graphes"},{"location":"tle/seq7/graphes/#introduction","text":"Exemple 1 On peut mod\u00e9liser des r\u00e9seaux informatiques par une structure appel\u00e9e graphe . Dans cet exemple, les lettres A, B et C repr\u00e9sentent des routeurs et les lignes entre eux repr\u00e9sentent leurs connexions. Exemple 2 On peut \u00e9galement utiliser des graphes pour repr\u00e9senter les relations entre utilisateurs de r\u00e9seaux sociaux. Consid\u00e9rons un r\u00e9seau social sur lequel : - A est ami avec B, C et D - B est ami avec A et D - C est ami avec A, E et D - D est ami avec tous les autres abonn\u00e9s - E est ami avec C, D et F - F est ami avec E et D Repr\u00e9senter ce r\u00e9seau social sous la forme d\u2019un graphe.","title":"Introduction"},{"location":"tle/seq7/graphes/#a-definitions-et-vocabulaire","text":"D\u00e9finition Un graphe G est un couple G = (V,E) avec V un ensemble de sommets , repr\u00e9sent\u00e9s par des points, et E un ensemble d\u2019 ar\u00eates , repr\u00e9sent\u00e9es par des lignes (V pour Vertex, soit sommet en anglais, E pour Edge, soit ar\u00eate) . Vocabulaire : l\u2019 ordre d\u2019un graphe est le nombre de ses sommets, 2 sommets sont dit adjacents s\u2019ils sont reli\u00e9s par une ar\u00eate, le degr\u00e9 d\u2019un sommet est le nombre d\u2019ar\u00eates issues de ce sommet. Exemples Le graphe de l\u2019exemple 1 est d\u2019ordre 3, et chacun de ses sommets est adjacent aux deux autres et donc de degr\u00e9 2. Quel est l\u2019ordre du graphe repr\u00e9sentant le r\u00e9seau social d\u2019introduction (exemple 2) ? Quels sommets sont adjacents et quel est le degr\u00e9 de chacun d\u2019entre eux ? Vocabulaire On appelle cha\u00eene toute suite d\u2019ar\u00eates dont l\u2019extr\u00e9mit\u00e9 de l\u2019une (sauf la derni\u00e8re) est l\u2019origine de la suivante. Sa longueur correspond au nombre d\u2019ar\u00eates. On appelle cycle une cha\u00eene ferm\u00e9e dont toutes les ar\u00eates sont distinctes. Exemple 3 Identifier une cha\u00eene de longueur 3 : Identifier un cycle :","title":"A. D\u00e9finitions et vocabulaire"},{"location":"tle/seq7/graphes/#b-les-differents-types-de-graphes","text":"","title":"B. Les diff\u00e9rents types de graphes"},{"location":"tle/seq7/routage/","text":"body { text-align: justify} III. Routage \u00b6 Cours \u00b6 Diaporama disponible : On consid\u00e8re l'exemple de r\u00e9seau suivant : A. Les tables de routage \u00b6 Repr\u00e9senter les tables de routage des routeurs A et G avec les informations concernant les r\u00e9seaux auxquels ils sont directement connect\u00e9s. B. Routing Information Protocol (RIP) \u00b6 Principe de RIP : Repr\u00e9senter les tables de routage des routeurs A et G apr\u00e8s application de RIP : C. Open Short Path First \u00b6 Principe du protocole OSPF : Algorithme de Dijkstra : On part d\u2019un sommet source et on cherche \u00e0 rejoindre un sommet de destination. On utilise un tableau regroupant toutes les poids des chemins reliant la source \u00e0 chaque sommet, mis \u00e0 jour au fur et \u00e0 mesure. Initialisation du tableau avec la valeur \" ... \" pour tous les sommets, sauf la source, mise \u00e0 0. Mise \u00e0 jour de la valeur des sommets voisins avec la valeur du sommet de d\u00e9part + le poids de ar\u02c6ete permettant de l\u2019atteindre. On r\u00e9it\u00e8re ces \u00e9tapes \u00e0 partir du sommet associ\u00e9 \u00e0 la plus petite distance, non d\u00e9j\u00e0 trait\u00e9. Si une valeur de distance est d\u00e9j\u00e0 attribu\u00e9e \u00e0 un sommet, on ne met celle-ci \u00e0 jour que si la nouvelle est inf\u00e9rieure. L\u2019algorithme s\u2019arr\u00eate lorsque l\u2019on arrive au sommet destination. TD : Routage \u00b6 Exercice 1 : \u00b6 1) Repr\u00e9senter ce r\u00e9seau sous la forme d\u2019un graphe dont les sommets sont les routeurs. 2) Appliquer RIP pour trouver le plus court chemin entre A et F. 3) Les d\u00e9bits des connexions entre routeurs sont indiqu\u00e9s ci-dessus en Mb/s : - A \u2013 B : 10 - A \u2013 H : 1 - B \u2013 D : 100 - C \u2013 D : 10 - C \u2013 H : 10 - D \u2013 E : 10 - E \u2013 F : 100 - F \u2013 G : 1 - H \u2013 F : 10 Ajouter les co\u00fbts des connexions au graphe et appliquer OSPF pour d\u00e9terminer le plus court chemin entre M1 et M11. Exercice 2 : \u00b6 On reprend le m\u00eame r\u00e9seau que dans l\u2019exercice 2 sur l\u2019architecture des r\u00e9seaux : Compl\u00e9ter la table de routage du routeur RA apr\u00e8s application du protocole RIP : Routeur R\u00e9seau Interface Passerelle M\u00e9trique A 192.168.1.0/24 192.168.2.0/24 128.10.0.0/16 Exercice 3 : \u00b6 On consid\u00e8re un r\u00e9seau, assimil\u00e9 \u00e0 un graphe o\u00f9 chaque sommet repr\u00e9sente un routeur impl\u00e9mentant le protocole OSPF. Les chiffres indiqu\u00e9s sur les liens sont les co\u00fbts suppos\u00e9s des m\u00e9triques OSPF assign\u00e9es \u00e0 chaque liaison inter-routeur. 1) Quelle sera la route utilis\u00e9e entre G et E apr\u00e8s convergence (c\u2019est-\u00e0-dire lorsque les routeurs auront effectu\u00e9 suffisamment d\u2019\u00e9changes de tables de routage pour que toutes les relations d\u2019adjacence soient propag\u00e9es) ? Quelle aurait \u00e9t\u00e9 cette route avec le protocole RIP ? 2) On veut d\u00e9terminer la table de routage de B sous la forme : Destination Passerelle M\u00e9trique A C a) Quel est l\u2019 algorithme utilis\u00e9 dans la pratique pour d\u00e9terminer le chemin optimal entre B et chacun des routeurs destinataires envisag\u00e9s ? b) Donner la table de routage compl\u00e8te de B apr\u00e8s convergence. 3) On connecte le routeur D \u00e0 un routeur R suppl\u00e9mentaire, \u00e0 une distance de 3, lui-m\u00eame connect\u00e9 \u00e0 un r\u00e9seau inconnu (r\u00e9seau myst\u00e8re). Apr\u00e8s quelques minutes de fonctionnement du r\u00e9seau, la convergence est \u00e9tablie et R \u00e9change sa table de routage avec chaque routeur A \u00e0 H. En voici un extrait : Destination Passerelle M\u00e9trique C D 8 D D 3 ... ... ... I I 2 J J 1 K I 6 L J 2 M J 5 a) A partir de ces informations, compl\u00e9ter la table de routage de B, renseign\u00e9e \u00e0 la question 2) b). b) Dessiner une topologie possible des routeurs I \u00e0 M du r\u00e9seau myst\u00e8re (il y a diff\u00e9rentes possibilit\u00e9s!). Elle doit \u00eatre compatible avec les tables de routage de B et de R. Exercice 4 : \u00b6 On cherche \u00e0 appliquer l\u2019algorithme de Dijsktra sur le graphe suivant, repr\u00e9sentant un r\u00e9seau de routeurs : 1) Appliquer l\u2019algorithme pour trouver le plus court chemin de A \u00e0 F. A chaque \u00e9tape, on actualisera la liste couts contenant les poids des chemins reliant la source \u00e0 chaque sommet et une liste des pr\u00e9d\u00e9cesseurs pred . On consid\u00e8re que l\u2019on passe \u00e0 une autre \u00e9tape lorsque l\u2019on consid\u00e8re tous les voisins d\u2019un sommet diff\u00e9rent. couts : Etape A B C D E F G H Sommet choisi init 1 2 3 4 5 6 pred : Etape A B C D E F G H Sommet choisi init 1 2 3 4 5 6 2) M\u00eame question pour trouver le plus court chemin de B \u00e0 G. Ne donner que le plus court chemin. TP : Routage statique \u00b6 A. Routage statique \u00b6 Reprendre le fichier reseaux3.fls cr\u00e9\u00e9 dans le TP de simulation pr\u00e9c\u00e9dent : \"Mise en oeuvre d'un r\u00e9seau\". Nous allons maintenant \u00e9crire les tables de routage des routeurs de ce r\u00e9seau manuellement (dans le TP pr\u00e9c\u00e9dent, elles \u00e9taient g\u00e9n\u00e9r\u00e9es automatiquement) . Dans R1 et R2, d\u00e9cocher \"routage automatique\" et v\u00e9rifier qu\u2019il n\u2019est pas possible de faire un ping qui fonctionne de M1 \u00e0 M6. Les tables de routage sont compos\u00e9es de 4 parties : - L\u2019 adresse IP de destination - Le masque de cette adresse - La passerelle (le prochain point d\u2019acc\u00e8s) - L\u2019 interface (l\u00e0 d\u2019o\u00f9 l\u2019on part) Dans R1 : - Aller dans \"table de routage\", - d\u00e9cocher \"afficher toutes les lignes\", - cliquer sur \"nouvelle ligne\" - \u00e9crire la ligne permettant au routeur de se connecter au r\u00e9seau 172.0.1.0. Dans R2 : - Faire la m\u00eame proc\u00e9dure que pour R1. - \u00c9crire la ligne permettant au routeur de se connecter au r\u00e9seau 192.168.1.0. Faire un ping de M1 vers M6 et v\u00e9rifier que la connexion se fait bien. Faire un ping de M6 vers M4. Que se passe-t-il ? Indiquer sur le sch\u00e9ma ci-dessous toutes les adresses IP attribu\u00e9es (celles des ordinateurs, des interfaces des routeurs) : Compl\u00e9ter les tables de routage de R1 et R2 pour que la connexion puisse se faire entre M6 et M3. Se r\u00e9f\u00e9rer au sch\u00e9ma pour identifier les bonnes adresses IP. Compl\u00e9ter les tables de routage de R1 et R2 pour que tous les r\u00e9seaux y soient inscrits, m\u00eame les r\u00e9seaux auxquels les routeurs sont directement connect\u00e9s (ils sont sinon inscrits automatiquement par Filius) . B. Un plus grand r\u00e9seau \u00b6 Reprendre le r\u00e9seau pr\u00e9c\u00e9dent et rajouter un 4\u00e8me r\u00e9seau avec 2 ordinateurs M7 et M8, reli\u00e9s \u00e0 un switch, lui-m\u00eame reli\u00e9 \u00e0 un routeur R3. Connecter R3 \u00e0 R2. Utiliser l\u2019adresse 172.0.2.0 \u00e0 pour ce nouveau r\u00e9seau local, et distribuer les adresses IP en cons\u00e9quence aux ordinateurs et interfaces des routeurs. \u00c9tablir la table de routage de R3, et modifier celle de R1 et R2 pour faire communiquer toutes les machines entre elles. Prendre soin d\u2019ajouter tous les r\u00e9seaux dans les diff\u00e9rentes tables de routage.","title":"III. Le routage"},{"location":"tle/seq7/routage/#iii-routage","text":"","title":"III. Routage"},{"location":"tle/seq7/routage/#cours","text":"Diaporama disponible : On consid\u00e8re l'exemple de r\u00e9seau suivant :","title":"Cours"},{"location":"tle/seq7/routage/#td-routage","text":"","title":"TD : Routage"},{"location":"tle/seq7/routage/#tp-routage-statique","text":"","title":"TP\u00a0: Routage statique"},{"location":"tle/seq8/os/","text":"body { text-align: justify} I. Les syst\u00e8mes d'exploitation \u00b6 Cours \u00b6 A.I. Diff\u00e9rents syst\u00e8mes d\u2019exploitation \u00b6 Faire des recherches sur les diff\u00e9rents syst\u00e8mes d\u2019exploitation (\"Operating System\" -OS- en anglais) utilis\u00e9s aujourd\u2019hui. Quels sont les plus utilis\u00e9s, et sur quelles machines ? De quel OS sont-ils issus ? Sont-ils libres ou propri\u00e9taires ? Le premier syst\u00e8me d\u2019exploitation multit\u00e2che est Multics , n\u00e9 en 1965, mais c\u2019est le syst\u00e8me UNIX , n\u00e9 quelques ann\u00e9es plus tard dans les laboratoires Bell, qui servira de base \u00e0 des OS encore utilis\u00e9s aujourd\u2019hui. UNIX est un syst\u00e8me propri\u00e9taire, c\u2019est-\u00e0-dire dont le code source n\u2019est pas connu de tous et donc non-modifiable. C\u2019est en opposition avec cette id\u00e9ologie que Linus Torvalds cr\u00e9a un clone libre d\u2019UNIX en 1991 appel\u00e9 Linux. S\u2019il est aujourd\u2019hui moins utilis\u00e9 que d\u2019autres OS sur les ordinateurs, c\u2019est l\u2019 OS le plus utilis\u00e9 au monde en comptant les serveurs et les smartphones . Les ordinateurs personnels sont g\u00e9n\u00e9ralement \u00e9quip\u00e9s de Microsoft Windows, qui est un OS propri\u00e9taire. C\u2019est aussi le cas de macOS, utilis\u00e9 sur les ordinateurs Apple, qui se base sur UNIX. A.II. Les fonctions d\u2019un syst\u00e8me d\u2019exploitation \u00b6 Faire un r\u00e9sum\u00e9 de la vid\u00e9o ci-dessus, pour extraire les fonctions d'un syst\u00e8me d'exploitation. Un syst\u00e8me d\u2019exploitation ou OS pour Operating System est un logiciel qui est une couche d\u2019abstraction entre les applications de l\u2019ordinateur et le mat\u00e9riel. Il donne acc\u00e8s aux diff\u00e9rentes ressources. Les utilisateurs peuvent utiliser les applications ou bien interagir avec l\u2019OS directement. Il est compos\u00e9 d\u2019un noyau auquel nous n\u2019avons pas acc\u00e8s directement. Celui-ci g\u00e8re l\u2019acc\u00e8s aux ressources, g\u00e8re l\u2019acc\u00e8s aux fichiers,... Il est possible d\u2019interagir avec l\u2019OS via des commandes. Le BIOS sert \u00e0 d\u00e9marrer l\u2019ordinateur : il lance l\u2019OS. A.III. Les commandes Linux \u00b6 Sous Linux, il est simple d'interagir directement avec le syst\u00e8me d'exploitation, gr\u00e2ce \u00e0 des lignes de commandes tap\u00e9es sur un terminal . Ci-dessous un ensemble de commandes qui sont souvent utilis\u00e9es. Rechercher quelle action elles ont sur l'ordinateur. Nom de la commande Action associ\u00e9e ls cp mv rm cd cat echo touch","title":"Syst\u00e8mes d'exploitation"},{"location":"tle/seq8/os/#i-les-systemes-dexploitation","text":"","title":"I. Les syst\u00e8mes d'exploitation"},{"location":"tle/seq8/os/#cours","text":"","title":"Cours"},{"location":"tle/seq8/processus/","text":"body { text-align: justify} II. Les processus \u00b6 Cours \u00b6 A. Processus \u00b6 D\u00e9finition Un programme correspond \u00e0 un ensemble d\u2019instructions susceptibles d\u2019\u00eatre ex\u00e9cut\u00e9es. Lorsqu\u2019elle sont effectivement ex\u00e9cut\u00e9es, un processus est cr\u00e9\u00e9. Un processus est donc une instance d\u2019un programme. On peut avoir l\u2019impression qu\u2019un ensemble de processus est ex\u00e9cut\u00e9 simultan\u00e9ment sur l\u2019ordinateur, lorsque l\u2019on a plusieurs logiciels d\u2019ouverts. En r\u00e9alit\u00e9, un processeur ne peut ex\u00e9cuter qu\u2019autant d\u2019instructions qu\u2019il a de c\u0153urs. Il faut donc g\u00e9rer l\u2019ex\u00e9cution de ces processus \u00e0 tour de r\u00f4le. On associe donc un \u00e9tat \u00e0 chaque processus, pour indiquer s\u2019il peut s\u2019ex\u00e9cuter ou bien s\u2019il s\u2019ex\u00e9cute. Ajouter, \u00e0 c\u00f4t\u00e9 de la figure suivante, la signification des diff\u00e9rents \u00e9tats : B. Cr\u00e9ation d\u2019un processus \u00b6 D\u00e9crire la cr\u00e9ation des processus sur l'ordinateur, et d\u00e9finir son PID et PPID . C. L\u2019ordonnancement \u00b6 La question de quel processus doit s\u2019ex\u00e9cuter dans quel ordre est g\u00e9r\u00e9e par un ordonnanceur (\u201dscheduler\u201d en anglais), qui est une partie du syst\u00e8me d\u2019exploitation de l\u2019ordinateur. Il peut utiliser plusieurs strat\u00e9gies : (a) Premier arriv\u00e9, premier servi (b) A priorit\u00e9s constantes (c) Le tourniquet (\u201dround robin\u201d) D. L\u2019interblocage \u00b6 Lorsque des processus attendent chacun des ressources qui sont utilis\u00e9es par les autres, on atteint la situation d\u2019 interblocage (\u201ddeadlock\u201d en anglais). Tous les processus sont en attente, leur ex\u00e9cution est bloqu\u00e9e ind\u00e9finiment. C\u2019est donc une situation que l\u2019on veut \u00e9viter ! Exemple Un processus P1 utilise une ressource R1 et a besoin d\u2019une ressource R2 pour continuer de s\u2019ex\u00e9cuter. Or, R2 est utilis\u00e9e par un processus P2, qui a besoin de la ressource R1 pour terminer son ex\u00e9cution et lib\u00e9rer R2. TD : Commandes Linux et processus \u00b6 Exercice 1 \u00b6 Avec une ligne de commande dans un terminal sous Linux, on obtient l'affichage suivant : La documentation Linux donne la signification des diff\u00e9rents champs : - UID : identifiant utilisateur effectif ; - PID : identifiant de processus ; - PPID : PID du processus parent ; - C : partie enti\u00e8re du pourcentage d'utilisation du processeur par rapport au temps de vie des processus ; - STIME : l'heure de lancement du processus ; - TTY : terminal de contr\u00f4le ; - TIME : temps d'ex\u00e9cution ; - CMD : nom de la commande du processus. Parmi les quatre commandes suivantes, laquelle a permis cet affichage ? a. ls -l b. ps \u2013ef c. cd .. d. chmod 741 processus.txt Quel est l'identifiant du processus parent \u00e0 l'origine de tous les processus concernant le navigateur Web (chromium-browser) ? Quel est l'identifiant du processus dont le temps d'ex\u00e9cution est le plus long ? Exercice 2 \u00b6 La commande UNIX ps pr\u00e9sente un clich\u00e9 instantan\u00e9 des processus en cours d'ex\u00e9cution. Avec l\u2019option \u2212eo pid,ppid,stat,command , cette commande affiche dans l\u2019ordre l\u2019identifiant du processus PID (process identifier), le PPID (parent process identifier), l\u2019\u00e9tat STAT et le nom de la commande \u00e0 l\u2019origine du processus. Les valeurs du champ STAT indique l\u2019\u00e9tat des processus : R : processus en cours d\u2019ex\u00e9cution S : processus endormi Sur un ordinateur, on ex\u00e9cute la commande ps \u2212eo pid,ppid,stat,command et on obtient un affichage dont on donne ci-dessous un extrait. \u00c0 l'aide de cet affichage, r\u00e9pondre aux questions ci-dessous. Quel est le nom de la premi\u00e8re commande ex\u00e9cut\u00e9e par le syst\u00e8me d'exploitation lors du d\u00e9marrage ? Quels sont les identifiants des processus actifs sur cet ordinateur au moment de l\u2019appel de la commande ps ? Justifier la r\u00e9ponse. Depuis quelle application a-t-on ex\u00e9cut\u00e9 la commande ps ? Donner les autres commandes qui ont \u00e9t\u00e9 ex\u00e9cut\u00e9es \u00e0 partir de cette application. Expliquer l'ordre dans lequel les deux commandes python programme1.py et python programme2.py ont \u00e9t\u00e9 ex\u00e9cut\u00e9es. Peut-on pr\u00e9dire que l'une des deux commandes python programme1.py et python programme2.py finira avant l\u2019autre ? TD : Ordonnancement des processus \u00b6 Exercice 1 \u00b6 Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources. Programme 1 Programme 2 Programme 3 demander (table tra\u00e7ante) demander (modem) demander (imprimante) demander (modem) demander (imprimante) demander (table tra\u00e7ante) ex\u00e9cution ex\u00e9cution ex\u00e9cution lib\u00e9rer (modem) lib\u00e9rer (imprimante) lib\u00e9rer (table tra\u00e7ante) lib\u00e9rer (table tra\u00e7ante) lib\u00e9rer (modem) lib\u00e9rer (imprimante) On appelle p1, p2 et p3 les processus associ\u00e9s respectivement aux programmes 1, 2 et 3. Les processus s'ex\u00e9cutent de mani\u00e8re concurrente. Justifier qu'une situation d'interblocage peut se produire. Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire. Aucune justification n'est attendue. Supposons que le processus p1 demande la table tra\u00e7ante alors qu'elle est en cours d'utilisation par le processus p3. Parmi les \u00e9tats suivants, quel sera l'\u00e9tat du processus p1 tant que la table tra\u00e7ante n'est pas disponible : a) \u00e9lu b) bloqu\u00e9 c) pr\u00eat d) termin\u00e9 Exercice 2 \u00b6 Les \u00e9tats possibles d\u2019un processus sont : pr\u00eat, \u00e9lu, termin\u00e9 et bloqu\u00e9. a. Expliquer \u00e0 quoi correspond l\u2019\u00e9tat \u00e9lu. b. Proposer un sch\u00e9ma illustrant les passages entre les diff\u00e9rents \u00e9tats. On suppose que quatre processus C\u2081, C\u2082, C\u2083 et C\u2084 sont cr\u00e9\u00e9s sur un ordinateur, et qu\u2019aucun autre processus n\u2019est lanc\u00e9 sur celui-ci, ni pr\u00e9alablement ni pendant l\u2019ex\u00e9cution des quatre processus. L\u2019ordonnanceur, pour ex\u00e9cuter les diff\u00e9rents processus pr\u00eats, les place dans une structure de donn\u00e9es de type file. Un processus pr\u00eat est enfil\u00e9 et un processus \u00e9lu est d\u00e9fil\u00e9. a. Parmi les propositions suivantes, recopier celle qui d\u00e9crit le fonctionnement des entr\u00e9es/sorties dans une file : i. Premier entr\u00e9, dernier sorti | ii. Premier entr\u00e9, premier sorti | iii. Dernier entr\u00e9, premier sorti b. On suppose que les quatre processus arrivent dans la file et y sont plac\u00e9s dans l\u2019ordre C\u2081, C\u2082, C\u2083 et C\u2084. Les temps d\u2019ex\u00e9cution totaux de C\u2081, C\u2082, C\u2083 et C\u2084 sont respectivement 100 ms, 150 ms, 80 ms et 60 ms. Apr\u00e8s 40 ms d\u2019ex\u00e9cution, le processus C\u2081 demande une op\u00e9ration d\u2019\u00e9criture disque, op\u00e9ration qui dure 200 ms. Pendant cette op\u00e9ration d\u2019\u00e9criture, le processus C\u2081 passe \u00e0 l\u2019\u00e9tat bloqu\u00e9. Apr\u00e8s 20 ms d\u2019ex\u00e9cution, le processus C\u2083 demande une op\u00e9ration d\u2019\u00e9criture disque, op\u00e9ration qui dure 10 ms. Pendant cette op\u00e9ration d\u2019\u00e9criture, le processus C\u2083 passe \u00e0 l\u2019\u00e9tat bloqu\u00e9. Sur la frise chronologique donn\u00e9e ci-dessous, les \u00e9tats du processus C\u2082 sont donn\u00e9s. Compl\u00e9ter la frise avec les \u00e9tats des processus C1, C3 et C4. On trouvera ci- dessous deux programmes r\u00e9dig\u00e9s en pseudo-code Verrouiller un fichier signifie que le programme demande un acc\u00e8s exclusif au fichier et l\u2019obtient si le fichier est disponible. Programme 1 Programme 2 Verrouiller fichier_1 Verrouiller fichier_2 Calculs sur fichier_1 Verrouiller fichier_1 Verrouiller fichier_2 Calculs sur fichier_1 Calculs sur fichier_1 Calculs sur fichier_2 Calculs sur fichier_2 D\u00e9verrouiller fichier_1 Calculs sur fichier 1 D\u00e9verrouiller fichier_2 D\u00e9verrouiller fichier_2 D\u00e9verrouiller fichier_1 a. En supposant que les processus correspondant \u00e0 ces programmes s'ex\u00e9cutent simultan\u00e9ment (ex\u00e9cution concurrente), expliquer le probl\u00e8me qui peut \u00eatre rencontr\u00e9. b. Proposer une modification du programme 2 permettant d\u2019\u00e9viter ce probl\u00e8me.","title":"II. Les processus"},{"location":"tle/seq8/processus/#ii-les-processus","text":"","title":"II. Les processus"},{"location":"tle/seq8/processus/#cours","text":"","title":"Cours"},{"location":"tle/seq8/processus/#td-commandes-linux-et-processus","text":"","title":"TD : Commandes Linux et processus"},{"location":"tle/seq8/processus/#td-ordonnancement-des-processus","text":"","title":"TD : Ordonnancement des processus"},{"location":"tle/seq9/entrainement/","text":"body { text-align: justify} Pour s'entra\u00eener... \u00b6 A. Un sujet du bac \u00b6 ![Un probl\u00e8me sur le chiffrement avec le XOR] B. Un probl\u00e8me \u00b6","title":"S\u00e9curisation des communications"},{"location":"tle/seq9/entrainement/#pour-sentrainer","text":"","title":"Pour s'entra\u00eener..."},{"location":"tle/seq9/entrainement/#a-un-sujet-du-bac","text":"![Un probl\u00e8me sur le chiffrement avec le XOR]","title":"A. Un sujet du bac"},{"location":"tle/seq9/entrainement/#b-un-probleme","text":"","title":"B. Un probl\u00e8me"},{"location":"tle/seq9/programme/","text":"Programme \u00b6","title":"Programme"},{"location":"tle/seq9/programme/#programme","text":"","title":"Programme"},{"location":"tle/seq9/securisation/","text":"body { text-align: justify} S\u00e9curiser les communications \u00b6 Cours \u00b6 A. M\u00e9thodes de chiffrement \u00b6 A.I. Probl\u00e9matique \u00b6 Que veut dire \"communiquer de mani\u00e8re s\u00e9curis\u00e9e\" ? Cela veut dire pouvoir envoyer des messages de mani\u00e8re \u00e0 pr\u00e9server : - la confidentialit\u00e9 : ces messages ne doivent pas pouvoir \u00eatre lus par quelqu\u2019un d\u2019autre que l\u2019\u00e9metteur et le destinataire. - leur int\u00e9grit\u00e9 : ils ne doivent pas pouvoir \u00eatre modifi\u00e9s, - l\u2019 authentification de l\u2019\u00e9metteur et du destinataire. Les m\u00e9thodes d\u00e9crites dans ce cours permettent d\u2019assurer la confidentialit\u00e9 des messages principalement, et g\u00e9n\u00e9ralement leur int\u00e9grit\u00e9 et l\u2019 authentification des acteurs impliqu\u00e9s. A.II. Chiffrement sym\u00e9trique et asym\u00e9trique \u00b6 D\u00e9finition Une cl\u00e9 de chiffrement est une information (de n'importe quel type : entier, caract\u00e8res,...) n\u00e9cessaire pour chiffrer et d\u00e9chiffrer un message. A.II.a. Le chiffrement sym\u00e9trique \u00b6 D\u00e9finition Le chiffrement sym\u00e9trique repose sur l\u2019utilisation d\u2019 une cl\u00e9 qui est la m\u00eame pour chiffrer et pour d\u00e9chiffrer le message. Cette m\u00e9thode est-elle s\u00e9curis\u00e9e ? Si deux interlocuteurs poss\u00e8dent cette cl\u00e9, il est facile pour eux d\u2019\u00e9changer des messages de mani\u00e8re s\u00e9curis\u00e9e (confidentielle, int\u00e8gre et authentifiant les interlocuteurs). Quel est son inconv\u00e9nient ? Le probl\u00e8me est qu\u2019ils faut que chacun ait pr\u00e9alablement r\u00e9cup\u00e9r\u00e9 la cl\u00e9... en utilisant un autre canal que celui sur lequel ils veulent communiquer (sinon tout le monde l\u2019aura). A.II.b. Le chiffrement asym\u00e9trique \u00b6 D\u00e9finition Le chiffrement asym\u00e9trique utilise deux cl\u00e9s : une cl\u00e9 publique qui sert \u00e0 chiffrer le message et une cl\u00e9 priv\u00e9e qui sert \u00e0 le d\u00e9chiffrer. La cl\u00e9 publique , comme son nom l\u2019indique, est accessible \u00e0 tout le monde et tout un chacun peut chiffrer des messages avec. La cl\u00e9 priv\u00e9e n\u2019est connue que du destinataire du message : il est le seul \u00e0 pouvoir le d\u00e9chiffrer. Quel est le principal avantage de cette m\u00e9thode ? Il n\u2019y a ici pas besoin d\u2019utiliser un autre canal pour transf\u00e9rer la cl\u00e9 qui permet de chiffrer, car elle est connue de tous. La communication est-elle s\u00e9curis\u00e9e ? La confidentialit\u00e9 est assur\u00e9e, mais pas l'int\u00e9grit\u00e9 ni l'authentification : tout le monde ayant la cl\u00e9 publique, un message peut \u00eatre remplac\u00e9 par un autre, par quelqu'un d'autre, chiffr\u00e9 avec la m\u00eame cl\u00e9. B. HTTPS (Secure Hypertext Transfer Protocol) \u00b6 En pratique, on utilise g\u00e9n\u00e9ralement une combinaison des deux m\u00e9thodes : tout d\u2019abord un chiffrement asym\u00e9trique pour \u00e9changer la cl\u00e9 sym\u00e9trique qui servira au reste des \u00e9changes. Cette m\u00e9thode est celle utilis\u00e9e lorsqu\u2019on cherche \u00e0 \u00e9tablir une connexion avec le serveur d\u2019un site Web en HTTPS. Solution TD : Exemples de chiffrements \u00b6 A. Le code de C\u00e9sar \u00b6 A.I. Chiffrement sym\u00e9trique \u00b6 Le codage de C\u00e9sar avec une cl\u00e9 de 13 permet de r\u00e9aliser un chiffrement sym\u00e9trique . On d\u00e9cale tout simplement chaque lettre de l\u2019alphabet du message initial de 13 pour obtenir le message chiffr\u00e9 : Lettre initiale A B C D E F G H I J K L M Lettre chiffr\u00e9e N O P Q R S T U V W X Y Z Lettre initiale N O P Q R S T U V W X Y Z Lettre chiffr\u00e9e A B C D E F G H I J K L M En utilisant cette m\u00e9thode, chiffrer \"INFORMATIQUE\". V\u00e9rifier qu\u2019en utilisant la m\u00eame cl\u00e9, on parvient \u00e0 d\u00e9chiffrer le message. A.II. Chiffrement asym\u00e9trique \u00b6 Comment peut-on obtenir un chiffrement asym\u00e9trique en utilisant le principe du codage de C\u00e9sar ? Le mettre en \u0153uvre pour chiffrer \"NSI\", en utilisant une cl\u00e9 publique de 5 (remplir le tableau ci-dessous) . Cela signifie que l'on fait 5 d\u00e9placements sur la droite pour coder chaque lettre. Pour une cl\u00e9 de 5 (chiffrement) : Lettre initiale A B C D E F G H I J K L M Lettre chiffr\u00e9e Lettre initiale N O P Q R S T U V W X Y Z Lettre chiffr\u00e9e Quelle est la cl\u00e9 priv\u00e9e qu\u2019il faut utiliser pour d\u00e9chiffrer le message ? Compl\u00e9ter le tableau correspondant pour v\u00e9rifier que l\u2019on peut bien d\u00e9chiffrer le message. Pour une cl\u00e9 de .......... (d\u00e9chiffrement) : Lettre initiale A B C D E F G H I J K L M Lettre chiffr\u00e9e Lettre initiale N O P Q R S T U V W X Y Z Lettre chiffr\u00e9e D\u00e9chiffrer le message chiffr\u00e9 \u00e0 la question 2. B. Le XOR \u00b6 Rappeler la table de v\u00e9rit\u00e9 du XOR ( ou exclusif ) : a b a xor b 0 0 0 1 1 0 1 1 On consid\u00e8re m le message initial, mc le message chiffr\u00e9 et c la cl\u00e9. 1. Montrer que si mc = m XOR c , alors mc XOR c = (m XOR c) XOR c = m . Aide : Cela revient \u00e0 ajouter une colonne dans la table de v\u00e9rit\u00e9, correspondant \u00e0 une expression \u00e0 exprimer en fonction de a, de b, et de l'op\u00e9rateur xor. Que peut-on en d\u00e9duire sur la m\u00e9thode pour d\u00e9chiffrer un message qui a \u00e9t\u00e9 chiffr\u00e9 avec le XOR ? A l\u2019aide de la table ASCII fournie ci-dessus, chiffrer le message : \"TURING\" avec la cl\u00e9 \"ENIGMA\" en utilisant le XOR sur le code ASCII binaire de chaque lettre. Donner le r\u00e9sultat en binaire. Convertir le r\u00e9sultat en d\u00e9cimal. Pour les plus curieux, vous pouvez rechercher sur le Web \u00e0 quels caract\u00e8res correspondent les lettres chiffr\u00e9es (ils ne sont pas dans la liste ci-dessus) . A partir des lettres chiffr\u00e9es en binaire, v\u00e9rifier que l\u2019on parvient \u00e0 d\u00e9chiffrer le message. Que faut-il faire si la cl\u00e9 est, par exemple, \"NSI\" ? (il n'est pas demand\u00e9 de faire le chiffrement) C. Le code RSA \u00b6 Le syst\u00e8me RSA est bas\u00e9 sur l'utilisation d'entiers qui ne sont pas choisis au hasard : des entiers (tr\u00e8s grands en pratique) qui se factorisent en produits de nombres premiers (exemple : 9967 * 9973 = 99400891). C'est un chiffrement asym\u00e9trique . 1. Chiffrement \u00b6 Choix de la cl\u00e9 publique Soit \\(N = 437\\) , le produit de deux nombres premiers : \\(437 = 23*19=p*q\\) . On consid\u00e8re alors l\u2019entier \\(n = (p-1)*(q-1) = 22*18 = 96\\) et on choisit \\(c = 41\\) un nombre premier strictement inf\u00e9rieur \u00e0 \\(n\\) . La cl\u00e9 publique pour notre exemple est le couple \\((c, N) = (41, 437)\\) Exemple Prenons la lettre \"b\" , cod\u00e9e en Unicode par le nombre 98 . Pour coder la lettre \"b\" , on d\u00e9termine le reste dans la division euclidienne de \\(98^c\\) par \\(N\\) . Ce qui donne ici 110, c\u2019est \u00e0 dire la lettre \"n\" . Question : Appliquer la m\u00eame m\u00e9thode pour coder la lettre \"a\" ( 97 en code ASCII). 2. D\u00e9chiffrement \u00b6 Choix de la cl\u00e9 priv\u00e9e On cherche la cl\u00e9 priv\u00e9e \\((d,N)\\) (donc \\(d\\) , \\(N\\) faisant partie de la cl\u00e9 publique) . \\(d\\) est un entier tel que le reste de la division euclidienne de \\(c*d\\) par \\(n\\) est \\(1\\) (des m\u00e9thodes math\u00e9matiques permettent de d\u00e9terminer \\(d\\) ) . La cl\u00e9 priv\u00e9e pour notre exemple est : \\((d, N) = (29,437)\\) . Exemple Pour d\u00e9coder la lettre \u201dn\u201d (codage de \"b\" ) , on utilise la cl\u00e9 priv\u00e9e qui est \\((29,437)\\) : on calcule le reste de la division euclidienne de \\(110^d\\) par \\(N\\) . Ici, le reste dans la division de \\(110^{29}\\) par \\(437\\) donne bien \\(98\\) . Question : appliquer cette m\u00e9thode pour d\u00e9chiffrer le code obtenu dans la partie pr\u00e9c\u00e9dente. TP : Impl\u00e9mentation de chiffrements \u00b6 Introduction \u00b6 Beaucoup de chiffrements n\u00e9cessitent de passer par la repr\u00e9sentation des caract\u00e8res sous la forme d'entiers, en utilisant Unicode. Pour avoir la repr\u00e9sentation d'un caract\u00e8re sous forme de nombre, ou r\u00e9ciproquement le caract\u00e8re correspondant \u00e0 un nombre donn\u00e9, on utilise les fonctions Python suivantes : - La fonction ord qui prend en param\u00e8tre un caract\u00e8re et renvoie sa transcription avec Unicode (int\u00e9grant le code ASCII , qui est celui utilis\u00e9 pour coder des caract\u00e8res non-sp\u00e9ciaux) . - Sa fonction r\u00e9ciproque chr qui renvoie le caract\u00e8re correspondant \u00e0 un nombre Unicode . Tester la fonction ord sur des lettres majuscules pour obtenir leur code ASCII. Quel est le nombre codant le 'A' ? code ASCII du 'A' : Tester la fonction chr avec des entiers divers, puis v\u00e9rifier que l'on retrouve bien le caract\u00e8re A lors qu'on met son code ASCII en param\u00e8tre. A. Le XOR \u00b6 Nous allons \u00e9crire une fonction chiffrement_xor qui prend en entr\u00e9e un message sous la forme d'une cha\u00eene de caract\u00e8res et une cl\u00e9 du m\u00eame type, et retourne le message chiffr\u00e9 avec le XOR, sous la forme d'une cha\u00eene de caract\u00e8res \u00e9galement. Nous allons utiliser : L'op\u00e9rateur ^ qui effectue le XOR entre deux nombres x et y avec la syntaxe x^y . Une cl\u00e9 (sym\u00e9trique) qui fera la m\u00eame taille que le message (vous pouvez utiliser l'exemple pris en TD). Identifier les diff\u00e9rentes \u00e9tapes de l'algorithme, \u00e0 \u00e9crire ci-dessous. Solution possible On pourra appliquer les \u00e9tapes suivantes, pour chaque caract\u00e8re du message : - r\u00e9cup\u00e9rer le code ascii du caract\u00e8re dans une variable, - r\u00e9cup\u00e9rer le code ascii du caract\u00e8re de la cl\u00e9 associ\u00e9 au caract\u00e8re dans une autre variable, - calculer le xor entre ces deux nombres, - ajouter la conversion en caract\u00e8re de ce r\u00e9sultat au reste du message chiffr\u00e9. Impl\u00e9menter cette fonction xor et afficher le message chiffr\u00e9. def xor ( message , cle ): ... message = ... cle = ... print ( xor ( message , cle )) Aide Pour chaque caract\u00e8re \u00e0 chiffrer, il faut lui associer un caract\u00e8re de la cl\u00e9, qui ne fait pas forc\u00e9ment la m\u00eame taille. Ils n'ont donc pas le m\u00eame indice ! Utiliser le modulo % et une caract\u00e9ristique de la cl\u00e9 pour la \"r\u00e9p\u00e9ter\"comme fait en TD. Le XOR permettant de faire un chiffrement sym\u00e9trique, comment trouve-t-on le message initial ? Faire le test ci-dessous. Aide Le XOR \u00e9tant un chiffrement sym\u00e9trique, appliquer la m\u00eame fonction avec la m\u00eame cl\u00e9 au message chiffr\u00e9 permet d'obtenir \u00e0 nouveau le message initial. B. Le code de C\u00e9sar \u00b6 \u00c9crire une fonction cesar permettant de chiffrer et (avec une cl\u00e9 priv\u00e9e potentiellement diff\u00e9rente) de d\u00e9chiffrer un message. On pourra pour cela utiliser n\u2019importe quelle cl\u00e9 publique cle comprise entre 1 et 25. Le message \u00e0 chiffrer message sera \u00e9crit en majuscules. On ne chiffre pas les caract\u00e8res qui ne sont pas des lettres majuscules (on garde le caract\u00e8re initial). Ecrire une premi\u00e8re version de la fonction, utilisant une variable alphabet contenant toutes les lettres majuscules, pour obtenir l'indice de la lettre chiffr\u00e9e \u00e0 partir de l'indice de la lettre non-chiffr\u00e9e. def cesar ( message , cle ): alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' ... Aide 1 Si l'on d\u00e9passe la taille de l'alphabet, il faut revenir au d\u00e9but. Pensez donc au modulo : % ! Aide Pour obtenir l'indice de la lettre chiffr\u00e9e, il faut avoir l'indice de la lettre non-chiffr\u00e9e. On peut l'obtenir en calculant sa position par rapport au A et avec la fonction ord, ou bien avec une fonction auxiliaire qui recherche l'indice d'une occurrence dans une cha\u00eene de caract\u00e8res. Tester votre fonction sur le message \"CLEOPATRE EST EN DANGER !\" : cle = ... Ecrire une deuxi\u00e8me version de la fonction, utilisant cette fois-ci un dictionnaire correspondance donnant la correspondance entre chaque lettre majuscule et sa version chiffr\u00e9e. Ce dictionnaire est g\u00e9n\u00e9r\u00e9 par compr\u00e9hension, gr\u00e2ce \u00e0 la fonction chr et au code ASCII du A . Tester la fonction sur le message. def cesar_dico ( message , cle ): correspondance = { chr ( i +... ): chr (( i + cle ) ...+... ) for i in range ( 26 )} ... print ( cesar_dico ( ... )) D\u00e9chiffrer le message. C. Le syst\u00e8me RSA \u00b6 \u00c9crire un programme qui chi\ufb00re et d\u00e9chi\ufb00re un message en utilisant le syst\u00e8me RSA avec les cl\u00e9s utilis\u00e9es en TD : - cl\u00e9 publique : (41, 437) - cl\u00e9 priv\u00e9e : (29, 437) On cr\u00e9era une fonction chiffrement_RSA(message, cle_publique) et une fonction dechiffrement_RSA(message_chiffre) qui retournent respectivement le message chiffr\u00e9 (en caract\u00e8res) et le message d\u00e9chiffr\u00e9 (en caract\u00e8res). On part du principe que la cl\u00e9 publique est connue de tous, et peut donc \u00eatre utilis\u00e9e en param\u00e8tre de la fonction de chiffrement, alors que la cl\u00e9 priv\u00e9e n'est connue que du destinataire : lui seul a la fonction permettant de d\u00e9chiffrer le message dans laquelle la cl\u00e9 priv\u00e9e est \u00e9crite \"en dur\". N.B. : Voici un autre exemple de cl\u00e9s qui peuvent \u00eatre utilis\u00e9s : cl\u00e9 publique (103, 697); cl\u00e9 priv\u00e9e (87, 697). N.B.bis : L'utilisation de ord et chr est de mise car on convertit les caract\u00e8res en nombres avant de leur appliquer une formule math\u00e9matique. def chiffrement_RSA ( message , cle_publique ): ... def dechiffrement_RSA ( message_chiffre ): ... message = ... cle_publique = ... #tester le chiffement #tester le d\u00e9chiffrement Pour aller plus loin... Le calcul du reste dans la division euclidienne d'un grand nombre \u00e0 une puissance donn\u00e9e peut \u00eatre tr\u00e8s co\u00fbteux en temps. Pour \u00e9viter ce probl\u00e8me, on d\u00e9compose le nombre en puissances de 2, en utilisant l'algorithme d'exponentiation modulaire. Calculons d'abord efficacement \\(x^n\\) , avec l'algorithme d' exponentiation rapide . Son principe est expliqu\u00e9 ici : https://fr.wikipedia.org/wiki/Exponentiation_rapide On en propose une version it\u00e9rative. V\u00e9rifier qu'elle fonctionne bien en rajoutant des tests. def exponentiation_rapide ( x , n ): p = 1 while n > 0 : if n % 2 == 1 : p = p * x n = n - 1 else : x = x * x n = n // 2 return p # tests ... Proposer une version r\u00e9cursive de cet algorithme (correspondant \u00e0 la description de Wikip\u00e9dia) : def exponentiation_rec ( x , n ): ... Cet algorithme n'est pas exactement celui qu'on recherche : l'adapter pour obtenir ce r\u00e9sultat modulo une valeur \\(m\\) : def exponentiation_mod_rec ( x , n , m ): ... Adapter les fonctions de chiffrement pour utiliser cette fonction calculant l'exponentiation modulaire : def chiffrement_rsa_rapide ( message , cle_publique ): ... def dechiffrement_rsa_rapide ( message_chiffre ): ... message = ... cle_publique = ... #tester le chiffement #tester le d\u00e9chiffrement","title":"8. S\u00e9curiser les communications"},{"location":"tle/seq9/securisation/#securiser-les-communications","text":"","title":"S\u00e9curiser les communications"},{"location":"tle/seq9/securisation/#cours","text":"","title":"Cours"},{"location":"tle/seq9/securisation/#td-exemples-de-chiffrements","text":"","title":"TD : Exemples de chiffrements"},{"location":"tle/seq9/securisation/#tp-implementation-de-chiffrements","text":"","title":"TP : Impl\u00e9mentation de chiffrements"}]}