{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"body { text-align: justify} Les sciences informatiques au lyc\u00e9e \u00b6 L'informatique est arriv\u00e9e en lyc\u00e9e g\u00e9n\u00e9ral et n\u00e9cessite des ressources ! Voici des supports pour mes cours en Num\u00e9rique et Sciences Informatiques et en Sciences num\u00e9riques et technologie . Pour la classe de 2nde : Ce cours pose les jalons d'une culture num\u00e9rique en abordant des th\u00e8mes divers (Internet, le Web, jusqu'\u00e0 la photographie num\u00e9rique et les r\u00e9seaux sociaux) et introduit \u00e0 la programmation avec Python. Pour la classe de 1\u00e8re : Ce cours aborde plusieurs domaines de l'informatique : la programmation en Python y occupe une bonne place, \u00e0 laquelle on associe l'algorithmique, mais le Web (HTML/CSS/Javascript), les r\u00e9seaux et l'architecture de la machine sont aussi pr\u00e9sents. Pourquoi choisir NSI en premi\u00e8re ? pour ma\u00eetriser la programmation , pour conna\u00eetre les diff\u00e9rents domaines des sciences informatiques , pour d\u00e9velopper le raisonnement logique , la rigueur et l' abstraction , pour apprendre la m\u00e9thodologie de projet , et d\u00e9velopper sa cr\u00e9ativit\u00e9 scientfique. Attention ! Le cours de NSI est bien diff\u00e9rent du cours de SNT, il est beaucoup plus port\u00e9 sur la science que sur l'aspect culture g\u00e9n\u00e9rale. Il faut s'attendre \u00e0 devoir s'investir beaucoup plus pour r\u00e9ussir. Pour la classe de terminale : Ce cours compl\u00e8te et approfondit les diff\u00e9rents domaines abord\u00e9s en 1\u00e8re (sauf le Web) : la programmation et les structures de donn\u00e9es sont tr\u00e8s pr\u00e9sentes, ainsi que des notions plus pouss\u00e9es d'algorithmiques et d'informatique th\u00e9orique, les bases de donn\u00e9es sont introduites avec le langage SQL, et r\u00e9seau et architecture sont aussi trait\u00e9s. Pourquoi choisir NSI en terminale ? pour approfondir ses comp\u00e9tences en programmation et d\u00e9velopper des projets plus ambitieux , pour acqu\u00e9rir une culture scientifique solide et vaste du domaine et en traiter des probl\u00e8mes plus complexes , pour d\u00e9velopper un projet d'orientation scientifique ou en lien avec l' informatique . Attention ! Des r\u00e9sultats trop justes en premi\u00e8re ont tr\u00e8s peu de chances de s'am\u00e9liorer en terminale. Il faut \u00eatre particuli\u00e8rement motiv\u00e9 pour garder la sp\u00e9cialit\u00e9, et pr\u00e9senter les \u00e9preuves du baccalaur\u00e9at au mois de mars ! Pour quelle orientation ? \u00b6 Cette sp\u00e9cialit\u00e9, comme les autres, s'inscrit dans un cursus g\u00e9n\u00e9raliste et n'a pas vocation \u00e0 former uniquement de futurs informaticiens. Elle est n\u00e9anmoins bien s\u00fbr adapt\u00e9e \u00e0 tous ceux qui comptent s'orienter vers un domaine de l'informatique, mais aussi ceux ayant des projets plus g\u00e9n\u00e9ralistes en sciences, en ing\u00e9nierie, ou bien transversaux. Des d\u00e9bouch\u00e9es courantes : - licences (informatique, math\u00e9matiques, ou autre en fonction de la 2\u00e8me sp\u00e9cialit\u00e9), - BUT (informatique, R et T, STID, information communication...) - \u00e9coles d'ing\u00e9nieurs post-baccalaur\u00e9at (sp\u00e9cialit\u00e9 maths conseill\u00e9e en terminale, avec une autre sp\u00e9cialit\u00e9 scientifique) , - classe pr\u00e9paratoire (MPII pour ceux conservant la sp\u00e9cialit\u00e9 en terminale, MPSI/PCSI pour ceux ne l'ayant qu'en premi\u00e8re) .","title":"Home"},{"location":"#les-sciences-informatiques-au-lycee","text":"L'informatique est arriv\u00e9e en lyc\u00e9e g\u00e9n\u00e9ral et n\u00e9cessite des ressources ! Voici des supports pour mes cours en Num\u00e9rique et Sciences Informatiques et en Sciences num\u00e9riques et technologie . Pour la classe de 2nde : Ce cours pose les jalons d'une culture num\u00e9rique en abordant des th\u00e8mes divers (Internet, le Web, jusqu'\u00e0 la photographie num\u00e9rique et les r\u00e9seaux sociaux) et introduit \u00e0 la programmation avec Python. Pour la classe de 1\u00e8re : Ce cours aborde plusieurs domaines de l'informatique : la programmation en Python y occupe une bonne place, \u00e0 laquelle on associe l'algorithmique, mais le Web (HTML/CSS/Javascript), les r\u00e9seaux et l'architecture de la machine sont aussi pr\u00e9sents. Pourquoi choisir NSI en premi\u00e8re ? pour ma\u00eetriser la programmation , pour conna\u00eetre les diff\u00e9rents domaines des sciences informatiques , pour d\u00e9velopper le raisonnement logique , la rigueur et l' abstraction , pour apprendre la m\u00e9thodologie de projet , et d\u00e9velopper sa cr\u00e9ativit\u00e9 scientfique. Attention ! Le cours de NSI est bien diff\u00e9rent du cours de SNT, il est beaucoup plus port\u00e9 sur la science que sur l'aspect culture g\u00e9n\u00e9rale. Il faut s'attendre \u00e0 devoir s'investir beaucoup plus pour r\u00e9ussir. Pour la classe de terminale : Ce cours compl\u00e8te et approfondit les diff\u00e9rents domaines abord\u00e9s en 1\u00e8re (sauf le Web) : la programmation et les structures de donn\u00e9es sont tr\u00e8s pr\u00e9sentes, ainsi que des notions plus pouss\u00e9es d'algorithmiques et d'informatique th\u00e9orique, les bases de donn\u00e9es sont introduites avec le langage SQL, et r\u00e9seau et architecture sont aussi trait\u00e9s. Pourquoi choisir NSI en terminale ? pour approfondir ses comp\u00e9tences en programmation et d\u00e9velopper des projets plus ambitieux , pour acqu\u00e9rir une culture scientifique solide et vaste du domaine et en traiter des probl\u00e8mes plus complexes , pour d\u00e9velopper un projet d'orientation scientifique ou en lien avec l' informatique . Attention ! Des r\u00e9sultats trop justes en premi\u00e8re ont tr\u00e8s peu de chances de s'am\u00e9liorer en terminale. Il faut \u00eatre particuli\u00e8rement motiv\u00e9 pour garder la sp\u00e9cialit\u00e9, et pr\u00e9senter les \u00e9preuves du baccalaur\u00e9at au mois de mars !","title":"Les sciences informatiques au lyc\u00e9e"},{"location":"#pour-quelle-orientation","text":"Cette sp\u00e9cialit\u00e9, comme les autres, s'inscrit dans un cursus g\u00e9n\u00e9raliste et n'a pas vocation \u00e0 former uniquement de futurs informaticiens. Elle est n\u00e9anmoins bien s\u00fbr adapt\u00e9e \u00e0 tous ceux qui comptent s'orienter vers un domaine de l'informatique, mais aussi ceux ayant des projets plus g\u00e9n\u00e9ralistes en sciences, en ing\u00e9nierie, ou bien transversaux. Des d\u00e9bouch\u00e9es courantes : - licences (informatique, math\u00e9matiques, ou autre en fonction de la 2\u00e8me sp\u00e9cialit\u00e9), - BUT (informatique, R et T, STID, information communication...) - \u00e9coles d'ing\u00e9nieurs post-baccalaur\u00e9at (sp\u00e9cialit\u00e9 maths conseill\u00e9e en terminale, avec une autre sp\u00e9cialit\u00e9 scientifique) , - classe pr\u00e9paratoire (MPII pour ceux conservant la sp\u00e9cialit\u00e9 en terminale, MPSI/PCSI pour ceux ne l'ayant qu'en premi\u00e8re) .","title":"Pour quelle orientation ?"},{"location":"about/","text":"Ing\u00e9nieure en informatique, docteure en neurosciences computationnelles et professeure en lyc\u00e9e g\u00e9n\u00e9ral, j'enseigne en NSI et en SNT dans l'acad\u00e9mie de Paris depuis l'ann\u00e9e scolaire 2020-2021. Parcours : Contributions scientifiques :","title":"A propos"},{"location":"culture_g%C3%A9/","text":"Ressources par th\u00e9matique \u00b6 En construction... Je reviens dans quelques caf\u00e9s !","title":"Culture g\u00e9n\u00e9rale"},{"location":"culture_g%C3%A9/#ressources-par-thematique","text":"En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources par th\u00e9matique"},{"location":"ressources/","text":"Ressources \u00b6 En construction... Je reviens dans quelques caf\u00e9s !","title":"Liens"},{"location":"ressources/#ressources","text":"En construction... Je reviens dans quelques caf\u00e9s !","title":"Ressources"},{"location":"1ere/1ere/","text":"Les cours de premi\u00e8re \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Pr\u00e9sentation"},{"location":"1ere/1ere/#les-cours-de-premiere","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de premi\u00e8re"},{"location":"1ere/seq1/archi/","text":"body { text-align: justify} II. L'architecture mat\u00e9rielle des ordinateurs \u00b6 Cours \u00b6 A. Les circuits \u00b6 Un ordinateur fonctionne avec des 0 et des 1 , qu'il faut repr\u00e9senter de mani\u00e8re physique. Avant d'utiliser des transistors, les ordinateurs \u00e9taient \u00e9quip\u00e9s de tubes \u00e0 vide (tous deux sont des composants \u00e9lectroniques). L'apparition des transistors a permis de miniaturiser les machines. Dans les diff\u00e9rents cas, le passage d'un courant repr\u00e9sente le 1 , alors que l'absence de courant repr\u00e9sente le 0 . Les transistors peuvent aujourd'hui \u00eatre aussi petit que 10 nanom\u00e8tres, on ne les distingue pas \u00e0 l'oeil nu. Ils sont agenc\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres et reli\u00e9s sur des circuits int\u00e9gr\u00e9s . Les circuits les plus simples sont les circuits logiques , faits \u00e0 partir de portes logiques qui permettent de r\u00e9aliser des op\u00e9rations bool\u00e9ennes. En combinant des circuits logiques, on parvient \u00e0 fabriquer les circuits essentiels au fonctionnement de l'ordinateur, comme la m\u00e9moire et le processeur. B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Il existe diff\u00e9rents types de m\u00e9moires. Globalement, on regroupe : La m\u00e9moire vive ou RAM (Random Access Memory) : Elle peut se repr\u00e9senter comme des tableaux d\u2019octets, chacun identifi\u00e9 par une adresse. A cause des composants \u00e9lectroniques utilis\u00e9s, il faut une alimentation \u00e9lectrique pour conserver les donn\u00e9es. C\u2019est pour cela que la m\u00e9moire vive est volatile : les donn\u00e9es sont perdues en cas de coupure de courant. Elle permet d\u2019acc\u00e9der aux donn\u00e9es en lecture et en \u00e9criture avec une vitesse relativement rapide. la m\u00e9moire morte ou ROM (Read-Only Memory) : Elle sert \u00e0 stocker les programmes qui ne doivent pas \u00eatre modif\u00e9s et n'est donc accessible qu'en lecture . Elle contient le n\u00e9cessaire pour faire d\u00e9marrer un ordinateur, et est non-volatile . La m\u00e9moire de masse : C'est une m\u00e9moire non-volatile , \u00e0 laquelle on peut acc\u00e9der en lecture et en \u00e9criture . Elle permet de stocker une grande quantit\u00e9 de donn\u00e9es, mais n'y acc\u00e8de pas rapidement. Ce sont les disques durs SSD ou HDD ou bien les cl\u00e9s USB par exemple. Plus on s'\u00e9loigne du processeur, plus la capacit\u00e9 de la m\u00e9moire utilis\u00e9e augmente et plus le temps d'acc\u00e8s aux donn\u00e9es s'allonge. B.2. Le processeur \u00b6 Les instructions des programmes sont ex\u00e9cut\u00e9es par le processeur ou CPU (Central Processing Unit) en anglais. Il est qualifi\u00e9 de microprocesseur lorsque tous ses composants sont suffisamment petits pour \u00eatre regroup\u00e9s dans un m\u00eame bo\u00eetier. Il est constitu\u00e9 de 3 parties : - les registres qui correspondent \u00e0 une petite quantit\u00e9 de m\u00e9moire. Leur nombre et taille varient en fonction du type de CPU. Ils sont typiquement nomm\u00e9s R1, R2, R3,... - l\u2019 Unit\u00e9 Arithm\u00e9tique et Logique (UAL ou ALU en anglais), qui est charg\u00e9e de l\u2019ex\u00e9cution des calculs. Elle est compos\u00e9e de circuits comme l\u2019additionneur de la partie pr\u00e9c\u00e9dente. - l\u2019 unit\u00e9 de commande/de contr\u00f4le qui coordonne l\u2019ex\u00e9cution de toutes les op\u00e9rations. Le rythme auquel les instructions sont trait\u00e9es d\u00e9pend de la fr\u00e9quence de l'horloge du processeur. Une seule instruction peut \u00eatre trait\u00e9e \u00e0 la fois, donc pour aller plus vite, il faut une grande fr\u00e9quence. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 La plupart des ordinateurs utilis\u00e9s aujourd'hui sont bas\u00e9s sur l' architecture de von Neumann , \u00e9labor\u00e9e en 1945. Il s'agit de la premi\u00e8re architecture stockant au m\u00eame endroit les donn\u00e9es et les programmes : dans la m\u00e9moire vive. Elle est constitu\u00e9e : - d'une m\u00e9moire , correspondant \u00e0 de la RAM, contenant programme et donn\u00e9es, - d'une UAL avec des registres comme un accumulateur , - d'une unit\u00e9 de commande , - d'un syst\u00e8me d\u2019 entr\u00e9es-sorties . Les entr\u00e9es et sorties permettent \u00e0 l\u2019ordinateur d\u2019interagir avec l\u2019ext\u00e9rieur. Chaque p\u00e9riph\u00e9rique est r\u00e9gi par un contr\u00f4leur (un ensemble de composants \u00e9lectroniques) adapt\u00e9, permettant d\u2019encoder et de d\u00e9coder les donn\u00e9es envoy\u00e9es et re\u00e7ues. Un p\u00e9riph\u00e9rique d'entr\u00e9e (comme une souris) permet d'obtenir des informations, alors qu'un p\u00e9riph\u00e9rique de sortie (comme un \u00e9cran) permet d'envoyer des informations vers l'ext\u00e9rieur. C.2. Connecter les composants \u00b6 Les donn\u00e9es circulent entre les composants de l\u2019ordinateur (principalement entre le processeur et la m\u00e9moire) gr\u00e2ce \u00e0 des bus. Il en existe 3 grands types : - les bus d\u2019adresse , transportant les adresses des cases m\u00e9moires auxquelles on veut acc\u00e9der, - les bus de donn\u00e9es , transportant les donn\u00e9es en elles-m\u00eames, - les bus de commande/contr\u00f4le synchronisant l\u2019ensemble (en indiquant le type d\u2019actions \u00e0 ex\u00e9cuter, comme la lecture ou l\u2019\u00e9criture d\u2019une donn\u00e9e en m\u00e9moire). Les diff\u00e9rents composants d\u00e9crits dans les parties pr\u00e9c\u00e9dentes, ainsi que d\u2019autres qui am\u00e9liorent les ordinateurs d\u2019aujourd\u2019hui, ont besoin d\u2019\u00eatre interconnect\u00e9s de mani\u00e8re fiable : ils sont regroup\u00e9s sur une carte m\u00e8re . Elle int\u00e8gre : le processeur, les barrettes de m\u00e9moire RAM, le(s) disque(s) dur(s), les ports d\u2019entr\u00e9e-sortie, les diff\u00e9rents p\u00e9riph\u00e9riques (lecteurs DVD, carte m\u00e9moire,...) la carte r\u00e9seau, la carte graphique, l\u2019alimentation, les syst\u00e8mes de refroidissement. C.2. Les architectures multiprocesseurs \u00b6 L\u2019architecture d\u00b4ecrite pr\u00e9c\u00e9demment est une architecture monoprocesseur : ne comportant qu\u2019un processeur. Pour augmenter la puissance des ordinateurs, on a mis\u00e9 pendant longtemps sur l\u2019augmentation de leur fr\u00e9quence d\u2019horloge. Celle-ci est cependant devenue de plus en plus difficile, comme illustr\u00e9 sur la figure ci-contre, \u00e0 cause d\u2019un probl\u00e8me de surchauffe. L\u2019id\u00e9e a depuis \u00e9t\u00e9 d\u2019utiliser plusieurs processeurs dans un seul ordinateur : on parle d\u2019 ordinateur multiprocesseur . Cela cr\u00e9e des probl\u00e8mes de partage de la m\u00e9moire, pour lesquels il a fallu \u00e9tablir des stat\u00e9gies. On utilise de la m\u00e9moire cache, d\u2019acc\u00e8s tr\u00e8s rapide, soit partag\u00e9e pour les diff\u00e9rents processeurs, soit d\u00e9di\u00e9e \u00e0 chacun. Il faut de plus adapter les programmes \u00e0 l'architecture. Aujourd\u2019hui, on ne se contente en fait pas de multiplier les processeurs, on utilise \u00e9galement des processeurs ayant plusieurs coeurs ( architecture multicoeur ) : plusieurs unit\u00e9s de traitement ind\u00e9pendantes. Questionnaire sur le cours \u00b6 A. Les circuits \u00b6 Faire un sch\u00e9ma permettant de placer les termes suivants : processeur, porte logique, transistor, additionneur. Votre sch\u00e9ma repr\u00e9sentera au centre le plus petit des \u00e9l\u00e9ments, et autour les \u00e9l\u00e9ments faits \u00e0 partir des autres. B. Les principaux composants de l'ordinateur \u00b6 B.1. La m\u00e9moire \u00b6 Par quelles caract\u00e9ristiques diff\u00e9rencie-t-on les diff\u00e9rents types de m\u00e9moires ? Faire un sch\u00e9ma avec ces caract\u00e9ristiques et les types de m\u00e9moires associ\u00e9s. Faire un sch\u00e9ma pouvant repr\u00e9senter la m\u00e9moire vive de l'ordinateur. B.2. Le processeur \u00b6 Relever les diff\u00e9rents composants d'un processeur. Lequel pourrait \u00eatre associ\u00e9, si on les comparait au corps humain, au cerveau, et lequel serait les mains ? Repr\u00e9senter des cycles d'horloge d'un processeur et indiquer \u00e0 quel moment de nouvelles op\u00e9rations sont faites. Rechercher l'ordre de grandeur en Hz de la fr\u00e9quence des processeurs actuels. C. Les architectures \u00b6 C.1. L'architecture de von Neumann \u00b6 Quelle est l'id\u00e9e nouvelle de John Von Neumann lorsqu'il propose son architecture ? Que faut-il donc ajouter aux principaux composants de l'ordinateur pour avoir une machine utilisable ? Les p\u00e9riph\u00e9riques suivants sont-ils des entr\u00e9es, des sorties, ou bien les deux ? Composant Entr\u00e9e Sortie Clavier Imprimante Scanner Disque Souris Ecran C.2. Connecter les composants \u00b6 Expliquer comment les diff\u00e9rents composants d'un ordinateurs sont connect\u00e9s. Compl\u00e9ter le sch\u00e9ma suivant avec des fl\u00e8ches repr\u00e9sentant les diff\u00e9rents types de bus, permettant la communication entre les composants. C.2. Les architectures multiprocesseurs \u00b6 Sur quel param\u00e8tre peut-on jouer pour augmenter la puissance des ordinateurs, sans toucher aux processeurs ? Pourquoi alors augmenter le nombre de processeurs ? A quel probl\u00e8me faut-il alors penser ? TD : L'additionneur binaire \u00b6 A. Repr\u00e9sentation \u00e9lectronique des op\u00e9rateurs bool\u00e9ens \u00b6 On repr\u00e9sente physiquement les bool\u00e9ens et leurs op\u00e9rateurs \u00e0 partir de transistors, de tr\u00e8s petits composants \u00e9lectroniques qui : - laissent passer le courant, qui est alors \u00e0 sa valeur maximale : c'est un 1 , qui repr\u00e9sente le True bool\u00e9en. - ou ne le laissent pas passer : c'est un 0 , qui repr\u00e9sente le False bool\u00e9en. L'impl\u00e9mentation physique des op\u00e9rateurs s'appelle des portes logiques , que l'on repr\u00e9sente classiquement de la mani\u00e8re suivante : Op\u00e9rateur bool\u00e9en Porte logique NON( A ) A ET B A OU B A XOR B En combinant ces portes logiques, on construit des circuits \u00e9lectroniques effectuant des op\u00e9rations. R\u00e9\u00e9crire la table de v\u00e9rit\u00e9 du XOR en utilisant les valeurs 0 et 1 \u00e0 la place de False et True . V\u00e9rifier que le circuit ci-dessous fait bien le calcul du XOR, en attribuant toutes les valeurs possibles (entre 0 et 1) aux entr\u00e9es A et B et en calculant la valeur de la sortie S. A partir de ce circuit, trouver l'expression bool\u00e9enne constitu\u00e9e des op\u00e9rateurs NON, ET et OU qui permet de calculer le XOR. Programmer une fonction xor prenant en param\u00e8tres deux bool\u00e9ens a et b et renvoyant un bool\u00e9en, en utilisant les op\u00e9rateurs bool\u00e9ens not , and et or . Utiliser l'expression obtenue \u00e0 la question 3. On veut programmer la fonction \u00e9quivalente xor1bit fonctionnant sur des entiers (ne prenant que les valeurs 0 ou 1 ). Pour cela : Ecrire une fonction non1bit(a) prenant un 0 ou un 1 en entr\u00e9e, et renvoyant l'oppos\u00e9. Ecrire la fonction xor1bit(a,b) , en utilisant non1bit \u00e0 la place du not , le & \u00e0 la place du and et le | \u00e0 la place du or . B. L'additionneur 1 bit \u00b6 Un additionneur 1 bit est un circuit permettant d'additionner deux bits entre eux. Il dispose de : Trois entr\u00e9es : - a : le premier bit, - b : le deuxi\u00e8me bit, - re : la retenue entrante (peut exister dans le cas o\u00f9 l'on combine les additionneurs) Deux sorties : - s : la somme des deux bits, - rs : la retenue sortante. Aller voir le circuit \u00e9lectronique correspondant \u00e0 l'URL suivante : https://www.cahier-nsi.fr/additionneur1bit/ Compl\u00e9ter la table de v\u00e9rit\u00e9 de l'additionneur en changeant les valeurs d'entr\u00e9e du circuit : a b re s rs 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 De cette table, d\u00e9duire combien fait 1 + 1 en binaire. On donne l'expression bool\u00e9enne de s = (a XOR b) XOR re V\u00e9rifier qu'elle convient en calculant sa valeur pour les 3 premi\u00e8res lignes de la table de v\u00e9rit\u00e9. Faire de m\u00eame avec rs = (a ET b) OU ((a XOR b) ET re) . Programmer une fonction add1bit , prenant en param\u00e8tres trois entiers a , b et la retenue re , et renvoyant en sortie s et la retenue rs . On utilisera la fonction xor1bit d\u00e9finie dans la partie A. N.B.: Pour qu'une fonction renvoie 2 valeurs en sortie, il faut les s\u00e9parer par une , , apr\u00e8s le return . TP : Programmer au plus pr\u00e8s de la machine \u00b6 La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Saisir le programme suivant : MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT Indiquer les cases m\u00e9moires qui sont modifi\u00e9es au fur et \u00e0 mesure : adresse valeur Que fait l'instruction STR R0,75 ? L'ensemble des lignes d'instructions est-il ex\u00e9cut\u00e9 ? Si non, lesquelles ne le sont pas ? Faire une hypoth\u00e8se sur ce que font les instructions CMP et BNE. V\u00e9rifier gr\u00e2ce \u00e0 une recherche Web. En d\u00e9duire ce que fait ce programme. Donner son code \u00e9quivalent en Python.","title":"I. Architecture des ordinateurs"},{"location":"1ere/seq1/archi/#ii-larchitecture-materielle-des-ordinateurs","text":"","title":"II. L'architecture mat\u00e9rielle des ordinateurs"},{"location":"1ere/seq1/archi/#cours","text":"","title":"Cours"},{"location":"1ere/seq1/archi/#questionnaire-sur-le-cours","text":"","title":"Questionnaire sur le cours"},{"location":"1ere/seq1/archi/#td-ladditionneur-binaire","text":"","title":"TD : L'additionneur binaire"},{"location":"1ere/seq1/archi/#tp-programmer-au-plus-pres-de-la-machine","text":"La machine comprend un langage qui n'est constitu\u00e9 que de 0 et de 1, ce qui ne nous est pas facile \u00e0 manipuler... Pour le faire, les langages assembleur ont \u00e9t\u00e9 d\u00e9velopp\u00e9s. Ils sont proches du fonctionnement de la machine, mais utilisent des instructions qui nous sont plus compr\u00e9hensibles. Nous allons manipuler un de ces langages avec le simulateur suivant : http://www.peterhigginson.co.uk/AQA/ On retrouve les principaux composants de l'ordinateur. Identifier les diff\u00e9rentes parties du processeur. Nous allons utiliser l'\u00e9diteur situ\u00e9 \u00e0 gauche, permettant de faire de l'assembleur. Saisir les lignes suivantes : MOV R0,#42 STR R0,150 HALT Cliquer sur le bouton \"Submit\". Vous allez voir des nombres appara\u00eetre dans la m\u00e9moire : Le programme a \u00e9t\u00e9 stock\u00e9 dans la m\u00e9moire, en attendant d'\u00eatre ex\u00e9cut\u00e9. Il a \u00e9t\u00e9 stock\u00e9 sous la forme de 3 instructions machine correspondant aux 3 lignes du programme, dans 3 cases de la m\u00e9moire. Pour voir \u00e0 quoi ressemblent les instructions sous la forme de 0 et de 1, cliquer sur \"OPTIONS\" et \"binary\". Revenir \u00e0 l'affichage en d\u00e9cimal avec \"OPTIONS\" > \"signed\". Pour ex\u00e9cuter le programme charg\u00e9 en m\u00e9moire, cliquer sur le bouton \"RUN\". Pour aller plus ou moins vite, utiliser les boutons >> et <<. Que fait le programme (c'est-\u00e0-dire qu'est-ce qui a \u00e9t\u00e9 modifi\u00e9 ?) ? En d\u00e9duire ce que font les instructions MOV ( \"move\" ) et STR ( \"store\" ). Qu'y a-t-il dans le registre PC ? N.B.: Pour relancer la simulation en repartant de z\u00e9ro, il faut cliquer sur \"RESET\" et sur \"OPTIONS\" > \"clear memory\". Cela r\u00e9initialisera le contenu des registres et de la m\u00e9moire. Il faut ensuite cliquer sur \"ASSEMBLE\" avant de relancer. Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place de R0. Testez vos modifications en ex\u00e9cutant la simulation. Saisir le programme suivant : MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT Indiquer les cases m\u00e9moires qui sont modifi\u00e9es au fur et \u00e0 mesure : adresse valeur Que fait l'instruction STR R0,75 ? L'ensemble des lignes d'instructions est-il ex\u00e9cut\u00e9 ? Si non, lesquelles ne le sont pas ? Faire une hypoth\u00e8se sur ce que font les instructions CMP et BNE. V\u00e9rifier gr\u00e2ce \u00e0 une recherche Web. En d\u00e9duire ce que fait ce programme. Donner son code \u00e9quivalent en Python.","title":"TP : Programmer au plus pr\u00e8s de la machine"},{"location":"1ere/seq1/logique/","text":"body { text-align: justify} I. La logique bool\u00e9enne \u00b6 Cours \u00b6 Introduction \u00b6 L'informatique est bas\u00e9e sur l'utilisation de 1 et de 0 : ils repr\u00e9sentent le vrai et le faux, True et False en Python, et correspondent au type bool\u00e9en . Nous avons vu que les expressions bool\u00e9ennes permettent de diff\u00e9rencier diff\u00e9rents cas dans un programme. Nous avons vu des op\u00e9rateurs qui permettent de comparer des nombres ( int ou float ), et renvoient des bool\u00e9ens ( bool ). Pour combiner ces expressions bool\u00e9ennes, on utilise des op\u00e9rateurs bool\u00e9ens . Passons en revue ces op\u00e9rateurs, en consid\u00e9rant le probl\u00e8me suivant : Au milieu du d\u00e9sert, deux sphinx gardent chacun une porte. Une des deux portes continue dans le d\u00e9sert, l'autre m\u00e8ne vers une oasis. L'un des deux sphinx dit toujours la v\u00e9rit\u00e9, l'autre ment toujours. On veut savoir par o\u00f9 aller pour acc\u00e9der \u00e0 l'oasis. I.A. Le NON (NOT) \u00b6 L'op\u00e9rateur NON (NOT en anglais) inverse la valeur d'une variable bool\u00e9enne . Si A vaut False , non( A ) vaut True et r\u00e9ciproquement. On r\u00e9sume cela avec une table, dite table de v\u00e9rit\u00e9 de l'op\u00e9rateur NON : A NON( A ) False True True False La table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne indique la valeur de l'expression pour chaque valeur possible de ses variables. Application au probl\u00e8me : On veut demander l'information, si l'on s'adresse \u00e0 celui qui dit la v\u00e9rit\u00e9 - donc \u00e0 celui qui ne ment pas. On utilise une variable bool\u00e9enne menteur qui vaut True si le sphinx auquel on s'adresse ment, False s'il dit la v\u00e9rit\u00e9 : if not ( menteur ): print ( \"Pouvez-vous m'indiquer l'oasis ?\" ) I.B. Le ET (AND) \u00b6 L'op\u00e9rateur ET (AND en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A ET B est vrai si A est vraie et B est vraie. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A ET B False False False True False False False True False True True True Application au probl\u00e8me : Si le sphinx auquel on s'adresse n'est pas un menteur et s'il nous dit qu'il se trouve devant la porte menant \u00e0 l'oasis, on veut prendre ce chemin. On utilise une variable porte valant True si le sphinx dit qu'elle m\u00e8ne \u00e0 l'oasis, False sinon : if not ( menteur ) and porte : print ( \"Je prends ce chemin.\" ) I.C. Le OU (OR) \u00b6 L'op\u00e9rateur OU (OR en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A OU B est vrai si A est vraie, B est vraie, ou bien les deux le sont. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A OU B False False False True False True False True True True True True Application au probl\u00e8me : Si le sphinx auquel on s'adresse n'est pas un menteur et s'il nous dit qu'il se trouve devant la porte menant \u00e0 l'oasis ou s'il est un menteur et qu'il nous dit que la porte continue dans le d\u00e9sert, on veut prendre ce chemin. if ( not ( menteur ) and porte ) or ( menteur and not ( porte )): print ( \"Je prends ce chemin.\" ) I.D. Le OU exclusif (XOR) \u00b6 L'op\u00e9rateur OU EXCLUSIF (XOR en anglais) permet d'associer deux expressions bool\u00e9ennes de la mani\u00e8re suivante : A OU B est vrai si A est vraie ou bien B est vraie. Cela donne la table de v\u00e9rit\u00e9 suivante : A B A OU B False False False True False True False True True True True False Application au probl\u00e8me : Si le sphinx auquel on s'adresse est un menteur ou (exclusif) s'il nous dit qu'il ne se trouve pas devant la porte menant \u00e0 l'oasis (et donc qu'il ne ment pas), on ne veut pas prendre ce chemin. from operator import xor if xor ( menteur , not ( porte )): print ( \"Je ne prends pas ce chemin.\" ) N.B. : L'utilisation de cette fonction n'est pas \u00e0 apprendre par coeur. Conclusion \u00b6 Une bonne utilisation des op\u00e9rateurs bool\u00e9ens permet notamment de mieux g\u00e9rer les diff\u00e9rentes conditions trait\u00e9es dans les programmes. La logique bool\u00e9enne trouve aussi des applications dans la conception de circuits \u00e9lectroniques. Nous ne savons en fait pas quel sphinx ment et lequel dit la v\u00e9rit\u00e9. Nous n'avons le droit de ne poser qu'une question \u00e0 un des deux sphinx pour savoir o\u00f9 aller. Laquelle devons-nous choisir pour aller \u00e0 coup s\u00fbr vers l'oasis ? Exercices : les expressions bool\u00e9ennes \u00b6 Exercice 0 (am\u00e9lioration du TP sur les fonctions) : \u00b6 On dispose d'une fonction pair(n) , renvoyant si un entier n est pair ou non : def pair ( n ): return n % 2 == 0 On consid\u00e8re une variable m repr\u00e9sentant un mois de l'ann\u00e9e. Quelle instruction \u00e9crire pour tester \"m est-t-il impair\" ? Ecrire le programme Python traduisant l'algorithme suivant : Si n est impair et qu il est un mois de la fin de l ann\u00e9e nb_jours vaut 30 Faire la m\u00eame chose avec l'algorithme suivant : Si n est pair et qu il est un mois du d\u00e9but de l ann\u00e9e nb_jours vaut 30 Comment combiner les conditions des questions 2 et 3 ? Compl\u00e9ter la fonction suivante, permettant de tester tous les mois de l'ann\u00e9e : def nombre_jours ( m ): if m == 2 : nb = 28 elif ... nb = 30 ... return nb Exercice 1 : Vrai ou Faux \u00b6 Si a vaut True et b vaut False , not(a or b) s'\u00e9value \u00e0 True . L'expression not(a or b) a la m\u00eame valeur que l'expression (not a) or (not b) . Si a vaut True et b vaut True , not(a and b) s'\u00e9value \u00e0 True . L'expression not(a and b) a la m\u00eame valeur que l'expression not(a) or not(b) . Exercice 2 : \u00b6 S\u00e9lectionner la(les) bonne(s) r\u00e9ponse(s) parmi les diff\u00e9rentes propositions. L'expression bool\u00e9enne a or not(b) s'\u00e9value \u00e0 True . Quelles peuvent \u00eatre les valeurs de a et de b ? a vaut True et b vaut True a vaut True et b vaut False a vaut False et b vaut True a vaut False et b vaut False Parmi les expressions suivantes, laquelle s'\u00e9value en True ? True and (False and True) True or (False and True) False and (False and True) False or (False and True) Exercice 3 : \u00b6 On consid\u00e8re l'expression a and b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut False , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? On consid\u00e8re l'expression a or b o\u00f9 a et b sont deux expressions bool\u00e9ennes. Si a vaut True , quelle sera la valeur de l'expression, en fonction de la valeur de b ? Que pouvez-vous en d\u00e9duire ? Conclusion (\u00e0 retenir) : TD : Qui faut-il croire ? \u00b6 A. Un village perdu \u00b6 Vous voyagez dans un endroit que vous ne connaissez pas, et demandez votre chemin \u00e0 deux locaux que vous croisez. Vous souhaitez savoir o\u00f9 se trouve le village qui est votre objectif. Ils d\u00e9cident de jouer \u00e0 un jeu avec vous : ils vont vous donner des informations, et soit toutes ces informations seront vraies, soit elles seront toutes fausses. En appliquant la logique bool\u00e9enne, vous devez \u00eatre capable d'obtenir l'information que vous recherchez. Voici leurs propos : X : \"Le village se trouve dans la vall\u00e9e.\" Y : \"Non, il ne s\u2019y trouve pas.\" X : \"Ou alors dans les collines.\" On mod\u00e9lise le probl\u00e8me avec les variables suivantes : - V et C qui valent True si, respectivement, le village se trouve dans la vall\u00e9e ou dans les collines, et False sinon, - X et Y qui valent True si respectivement les affirmations de X et de Y sont vraies, et False sinon. Traduire X et Y en fonction de V , C , et des op\u00e9rateurs bool\u00e9ens qui conviennent. Compl\u00e9ter la table de v\u00e9rit\u00e9 suivante (on part du principe que le village ne peut \u00eatre que soit dans la vall\u00e9e, soit dans la colline) : V C X Y False True True False En d\u00e9duire o\u00f9 se trouve le village. \\pagebreak B. Au tribunal \u00b6 Vous \u00eates dans le jury d'un tribunal et \u00e9coutez les t\u00e9moins d'une enqu\u00eate. On sait que chacun des t\u00e9moins soit toujours dit la v\u00e9rit\u00e9, soit ment toujours. Notre but est d'identifier ceux qui mentent et ceux qui ne mentent pas pour prononcer le verdict le plus juste possible. Les trois t\u00e9moins s'expriment : Ap : \"Personne ne doit croire C.\" Bp : \"A et C disent toujours la v\u00e9rit\u00e9.\" Cp : \"B dit la v\u00e9rit\u00e9.\" On mod\u00e9lise le probl\u00e8me avec les variables suivantes : A , B et C qui valent True si, respectivement, les t\u00e9moins A, B et C disent la v\u00e9rit\u00e9, et False sinon. Traduire Ap, Bp et Cp sous la forme d'expressions bool\u00e9ennes en utilisant les op\u00e9rateurs appropri\u00e9s. Compl\u00e9ter la table de v\u00e9rit\u00e9 suivante : A B C Ap Bp Cp False False False False False True False True False False True True True False False True False True True True False True True True Comment pouvez-vous en d\u00e9duire qui dit la v\u00e9rit\u00e9 et qui ment ?","title":"I. Logique"},{"location":"1ere/seq1/logique/#i-la-logique-booleenne","text":"","title":"I. La logique bool\u00e9enne"},{"location":"1ere/seq1/logique/#cours","text":"","title":"Cours"},{"location":"1ere/seq1/logique/#exercices-les-expressions-booleennes","text":"","title":"Exercices : les expressions bool\u00e9ennes"},{"location":"1ere/seq1/logique/#td-qui-faut-il-croire","text":"","title":"TD : Qui faut-il croire ?"},{"location":"1ere/seq2/entiers_positifs/","text":"body { text-align: justify} I. Les entiers positifs \u00b6 Cours \u00b6 Le type de variables int pour \"integer\" de Python permet de manipuler des entiers. Ils sont ne sont en fait pas repr\u00e9sent\u00e9s comme nous en avons l'habitude : on utilise une autre base . A. La base 10 (d\u00e9cimale) \u00b6 La base 10 est celle que nous utilisons naturellement aujourd'hui. D\u00e9finitions Elle est constitu\u00e9e de 10 chiffres, de 0 \u00e0 9, et chacun des chiffres utilis\u00e9 a une valeur diff\u00e9rente en fonction de sa position (on parle de num\u00e9ration de position ), nomm\u00e9e rang du chiffre. A chaque rang est associ\u00e9e une puissance de 10 diff\u00e9rente. Exemples Prenons le nombre \\(2005_{10}\\) (la notation \\(nombre_{10}\\) indique que l'on consid\u00e8re sa repr\u00e9sentation dans la base 10). Rang Chiffre 3 2 2 0 1 0 0 5 On peut d\u00e9composer ce nombre de la mani\u00e8re suivante : \\(2005_{10} = 2\\times10^3 + 0\\times10^2 + 0\\times10^1 + 5\\times10^0 = 2000 + 5\\) Faire la m\u00eame chose avec le nombre \\(1990_{10}\\) . Solution \\(1990_{10} = 1\\times10^3 + 9\\times10^2 + 9\\times10^1 + 0\\times10^0 = 1000 + 900 + 90\\) Qu'a-t-on fait pour d\u00e9composer ces nombres dans la base 10 ? On a multipli\u00e9 chacun de ses chiffres par \\(10^{rang}\\) . B. La base 2 (binaire) \u00b6 D\u00e9finition La base binaire est constitu\u00e9e de 2 nombres : 0 et 1 (un bit ), et est tr\u00e8s utilis\u00e9e en informatique. B.1. Du binaire au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en binaire \u00e0 sa repr\u00e9sentation en base d\u00e9cimale, on multiplie chaque chiffre par la puissance de 2 associ\u00e9e \u00e0 son rang (comme pour la base d\u00e9cimale, mais avec 2 au lieu de 10). Les puissances de 2 usuelles sont \u00e0 conna\u00eetre et/ou \u00e0 savoir retrouver : Puissance de 2 Valeur \\(2^0\\) \\(1\\) \\(2^1\\) \\(2\\) \\(2^2\\) \\(4\\) \\(2^3\\) \\(8\\) \\(2^4\\) \\(16\\) \\(2^5\\) \\(32\\) \\(2^6\\) \\(64\\) \\(2^7\\) \\(128\\) \\(2^8\\) \\(256\\) \\(2^9\\) \\(512\\) \\(2^10\\) \\(1024\\) Exemples Pour convertir \\(1010_2\\) , remplir le tableau puis \u00e9crire sa d\u00e9composition en fonction des puissances de 2. Rang Chiffre 3 2 1 0 Solution Rang Chiffre 3 1 2 0 1 1 0 0 \\(1010_2 = 1\\times2^3 + 0\\times2^2 + 1\\times2^1 + 0\\times2^0 = 8 + 2 = 10_{10}\\) Faire la m\u00eame chose avec le nombre \\(0110 0100_2\\) . Solution \\(0110 0100_2 = 1\\times2^6 + 1\\times2^5 + 1\\times2^2 = 64+32+4 = 80_{10}\\) B.2. Du d\u00e9cimal au binaire \u00b6 Pour passer d'un nombre en \u00e9criture d\u00e9cimale \u00e0 sa repr\u00e9sentation en binaire, on utilise l' algorithme suivant : - On fait la division euclidienne ce nombre par 2 et on stocke le reste. - On remplace ce nombre par le quotient de sa division euclidienne par 2. - On s'arr\u00eate lorsque ce quotient devient 0. - Le nombre en repr\u00e9sentation binaire se lit en associant les restes des divisions successives, en commen\u00e7ant par la derni\u00e8re . Exemple B.3. Nombre de bits n\u00e9cessaires \u00b6 Pour trouver le nombre de bits n\u00e9cessaires pour repr\u00e9senter un nombre d\u00e9cimal, on cherche la puissance de 2 sup\u00e9rieure la plus proche \u00e0 ce nombre. Le nombre de bits est donn\u00e9 par la puissance. C. La base 16 (hexad\u00e9cimale) \u00b6 La base 2 est \u00e0 la base du fonctionnement de l'informatique, mais son utilisation peut \u00eatre laborieuse lorsque l'on veut manipuler des nombres relativement grands. On utilise alors la base 16 , ou base hexad\u00e9cimale . D\u00e9finition La base hexad\u00e9cimale est une base de 16 symboles, utilisant l'ensemble des chiffres de 0 \u00e0 9 pour coder ses 10 premiers \u00e9l\u00e9ments, et ensuite les lettres de A \u00e0 F, repr\u00e9sentant les nombres \\(10_{10}\\) \u00e0 \\(15_{10}\\) . Base 10 Base 16 10 A 11 B 12 C 13 D 14 E 15 F C.1. De l'hexad\u00e9cimal au d\u00e9cimal \u00b6 Pour passer d'un nombre \u00e9crit en hexad\u00e9cimal \u00e0 sa repr\u00e9sentation d\u00e9cimale, on multiplie chaque chiffre par la puissance de 16 associ\u00e9e \u00e0 son rang . Pour les lettres de A \u00e0 F, on utilise le nombre correspondant dans la base 10 (voir le tableau ci-dessus). Exemples \\(5_{16}\\) \\(5_{16} = 5\\times16^0 = 5_{16}\\) \\(2A_{16}\\) \\(2A_{16} = 2\\times16^1 + 10\\times16^0 = 32 + 10 = 42_{16}\\) \\(1BF_{16}\\) \\(1BF_{16} = 1\\times16^2 + 11\\times16^1 + 15\\times16^0 = 256 + 176 + 15 = 447_{16}\\) C.2. Du d\u00e9cimal \u00e0 l'hexad\u00e9cimal \u00b6 Pour passer d'un nombre en base 10 \u00e0 sa repr\u00e9sentation en base 16, on utilise le m\u00eame algorithme que pour passer de la base 10 \u00e0 la base 2, sauf que l'on divise successivement par 16. Exemple C.3. Hexad\u00e9cimal et binaire \u00b6 Cette base est facile d'utilisation de par sa relation avec la base binaire : il est facile de passer de l'une \u00e0 l'autre. Pour repr\u00e9senter une valeur de 0 \u00e0 15, il faut 4 bits, donc pour repr\u00e9senter 1 octet on utilise 2 nombres en hexad\u00e9cimal. Pour passer de l' hexad\u00e9cimal au binaire , on associe la repr\u00e9sentation binaire de chacun de ses symboles. Exemple \\(2A_{16} = 00101010_2\\) Pour passer du binaire \u00e0 l'hexad\u00e9cimal , on regroupe les bits par 4 (on ajoute des \\(0\\) si n\u00e9cessaire) et on convertit chaque groupe dans sa repr\u00e9sentation hexad\u00e9cimale. Exemple \\(10001110_{2} = 8E_{16}\\) Exercice Pour repr\u00e9senter la couleur des pixels d'une image, on utilise des valeurs allant de 0 \u00e0 255 pour chacune des composantes rouge, vert et bleu (R, V, B). Combien de bits faut-il pour repr\u00e9senter la valeur d'une composante ? \\(255 = 2^8-1\\) Il faut donc 8 bits pour repr\u00e9senter la valeur d'une composante. Pourquoi est-il int\u00e9ressant d'utiliser la base hexad\u00e9cimale ? Il est int\u00e9ressant d'utiliser la base hexad\u00e9cimale car il suffit de 2 valeurs pour repr\u00e9senter chaque composante R, V ou B. D. Une base quelconque \u00b6 Les principes de conversion entre les bases d\u00e9cimale, binaire et hexad\u00e9cimale sont les m\u00eames pour les autres bases (base 5, 7, 18, ou pourquoi pas 666...). Chaque nombre est d\u00e9composable dans n'importe quelle base comme la somme des puissances de la base coefficient\u00e9es . TD : Repr\u00e9sentation des entiers positifs \u00b6 Exercice 1 : repr\u00e9sentation binaire des chiffres \u00b6 Calculer la repr\u00e9sentation binaire de l'ensemble des chiffres de \\(0_{10}\\) \u00e0 \\(9_{10}\\) . Exercice 2 : conversions binaire/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(11_2\\) \\(101_2\\) \\(1010_2\\) \\(100111_2\\) Convertir en binaire, et v\u00e9rifier que le r\u00e9sultat est correct : \\(13_{10}\\) \\(18_{10}\\) \\(26_{10}\\) Exercice 3 : nombre de bits n\u00e9cessaires \u00e0 l'\u00e9criture d'un entier \u00b6 Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(1111\\) . Calculer la repr\u00e9sentation d\u00e9cimale de l'entier repr\u00e9sent\u00e9 en binaire par \\(111111\\) . Quelle est la valeur maximale repr\u00e9sentable sur 4 bits ? Sur 6 bits ? (les exprimer avec des puissances de 2) Comment peut-on g\u00e9n\u00e9raliser pour \\(n\\) bits ? En d\u00e9duire combien de nombres sont repr\u00e9sentables sur \\(n\\) bits. Je consid\u00e8re le nombre \\(35_{10}\\) . Comment savoir combien de bits est-ce qu'il faut utiliser pour le repr\u00e9senter en binaire ? Exercice 4 : addition d'entiers positifs (attention \u00e0 l' overflow !) \u00b6 Pour faire la somme de nombres binaires, on utilise les r\u00e8gles suivantes : Somme binaire \\(0_2+0_2 = 0_2\\) \\(0_2+1_2 = 1_2\\) \\(1_2 + 1_2 = 0_2\\) et on retient \\(1\\) Faire la somme des entiers binaires \\(0100 1101_2\\) et \\(11000110_2\\) , et v\u00e9rifier votre r\u00e9sultat en utilisant la base d\u00e9cimale. En machine, si on utilise uniquement 1 octet pour repr\u00e9senter chaque entier, que se passerait-il lorsqu'on ferait l'addition de la question pr\u00e9c\u00e9dente ? En pratique, il faut v\u00e9rifier que l'on dispose de suffisamment de bits avant de faire l'addition de 2 entiers. Exprimer en fonction de \\(n\\) le nombre maximal de bits n\u00e9cessaires pour faire l'addition de deux entiers de taille \\(n\\) . Exercice 5 : multiplication d'entiers positifs \u00b6 Pour faire la multiplication de nombres binaires, on utilise les r\u00e8gles suivantes : Multiplication binaire \\(0_2*0_2 = 0_2\\) \\(0_2*1_2 = 0_2\\) \\(1_2 *1_2 = 1_2\\) On proc\u00e8de de la m\u00eame mani\u00e8re qu'avec le syst\u00e8me d\u00e9cimal. Par exemple, \\(1100_2*1010_2=11000+1100000=1111000_2\\) Poser la multiplication de \\(1010_2\\) par \\(1110_2\\) . Sur combien de bits s'\u00e9crivent les r\u00e9sultats de ces deux exemples ? G\u00e9n\u00e9raliser en fonction de \\(n\\) , combien de bits sont n\u00e9cessaire au maximum pour effectuer la multiplication de deux entiers positifs cod\u00e9s sur \\(n\\) bits. Exercice 6 : repr\u00e9sentation hexad\u00e9cimale \u00b6 Calculer la repr\u00e9sentation hexad\u00e9cimale de l'ensemble des nombres de \\(0_{10}\\) \u00e0 \\(20_{10}\\) . Exercice 7 : conversions hexad\u00e9cimal/d\u00e9cimal \u00b6 Convertir en d\u00e9cimal : \\(3_{16}\\) \\(1C_{16}\\) \\(2D_{16}\\) \\(B1_{16}\\) Convertir en hexad\u00e9cimal : \\(18_{10}\\) \\(75_{10}\\) \\(926_{10}\\) Exercice 8 : conversions hexad\u00e9cimal/binaire \u00b6 Convertir en hexad\u00e9cimal : \\(01000101_2\\) \\(11010000_2\\) Convertir en binaire : \\(16_{16}\\) \\(A5_{16}\\) Exercice 9 : adresses IP \u00b6 Le format d'une adresse IPv4 est le suivant : a.b.c.d avec a, b, c et d des entiers allant de 0 \u00e0 255. Combien de bits faut-il pour repr\u00e9senter chacun de ces entiers ? A combien d'octets cela correspond-il en tout ? Repr\u00e9senter l'adresse suivante en \u00e9criture binaire : 192.168.10.1 Une adresse IPv6 est constitu\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, s\u00e9par\u00e9s par des \":\". Par exemple, celle du serveur de facebook.com est : 2a03:2880:f145:82:face:b00c:0:25de . Combien de bits faut-il pour repr\u00e9senter chaque champ ? Combien de bits faut-il en tout pour \u00e9crire une adresse au format IPv6 ? TP : Les entiers positifs en machine \u00b6 A. Les conversions en Python \u00b6 A.1. Vers le d\u00e9cimal \u00b6 Convertir \\(1001_2\\) en d\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console Python : >>> 0b1001 Convertir \\(5D_{16}\\) en d\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console python : >>> 0x5d A.2. Vers le binaire et l'hexad\u00e9cimal \u00b6 Les fonctions que vous allez utiliser sont des fonctions natives de Python, c'est-\u00e0-dire qu'il n'y a pas besoin d'importer de biblioth\u00e8ques pour les utiliser. 1. Convertir \\(11_{10}\\) en binaire. 2. V\u00e9rifier votre solution en tapant dans la console python : >>> bin(11) 3. Quel est le format de la sortie de cette fonction ? 4. Il est possible de la convertir en int avec la fonction int() dont un extrait de la documentation est donn\u00e9 ci-dessous. Utiliser cette documentation pour convertir la sortie de la fonction bin() en int . int(x, base=10) -> integer Convert a number or string to an integer (...) If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance (...) Convertir \\(195_{10}\\) en hexad\u00e9cimal. V\u00e9rifier votre solution en tapant dans la console python : >>> hex(195) B. Le type int \u00b6 Dans certains langages informatiques, comme le C, il existe plusieurs types diff\u00e9rents d'entiers en fonction du nombre de bits n\u00e9cessaire pour repr\u00e9senter le nombre. En Python, il n'y a qu'un seul type. On peut donc penser que la taille des entiers qui peuvent \u00eatre manipul\u00e9s est infinie... mais l'infini n'existe pas en informatique. Si la taille maximale (souvent 32 ou 64 bits) utilisable par le processeur est d\u00e9pass\u00e9e, le nombre est d\u00e9coup\u00e9 en plusieurs parties. Cela a pour cons\u00e9quence un espace plus grand occup\u00e9 en m\u00e9moire et un ralentissement de l'ex\u00e9cution du programme. La biblioth\u00e8que time de Python permet de mesurer ce temps d'ex\u00e9cution. Dans le code suivant, on importe pour cela la fonction time : from time import time st = time () for i in range ( 50000 ): a = 2 ** i print ( time () - st ) range 0 \u00e0 49 999 50 000 \u00e0 99 999 200 000 \u00e0 249 999 temps d'ex\u00e9cution Ex\u00e9cuter ce programme et reporter dans le tableau la valeur qui s'affiche \u00e0 l'\u00e9cran. Changer les bornes du range pour avoir i variant de 50 000 \u00e0 99 999 . Reporter la valeur obtenue. Faire de m\u00eame pour faire varier i entre 200 000 et 249 999 et reporter le r\u00e9sultat. Qu'en concluez-vous ?","title":"I. Les entiers positifs"},{"location":"1ere/seq2/entiers_positifs/#i-les-entiers-positifs","text":"","title":"I. Les entiers positifs"},{"location":"1ere/seq2/entiers_positifs/#cours","text":"Le type de variables int pour \"integer\" de Python permet de manipuler des entiers. Ils sont ne sont en fait pas repr\u00e9sent\u00e9s comme nous en avons l'habitude : on utilise une autre base .","title":"Cours"},{"location":"1ere/seq2/entiers_positifs/#td-representation-des-entiers-positifs","text":"","title":"TD : Repr\u00e9sentation des entiers positifs"},{"location":"1ere/seq2/entiers_positifs/#tp-les-entiers-positifs-en-machine","text":"","title":"TP : Les entiers positifs en machine"},{"location":"1ere/seq2/entiers_relatifs/","text":"body { text-align: justify} II. Les entiers relatifs \u00b6 TD \u00b6 A. Une premi\u00e8re approche... \u00b6 Pour repr\u00e9senter des entiers relatifs en machine, on peut tout d'abord penser qu'un bit peut \u00eatre r\u00e9serv\u00e9 au signe : par exemple le premier bit d'un entier cod\u00e9 sur 4 bits sera \u00e0 1 si c'est un entier n\u00e9gatif, \u00e0 0 si c'est un entier positif. \\(0010_2\\) repr\u00e9senterait alors \\(2_{10}\\) , et \\(1010_2\\) repr\u00e9senterait \\(-2_{10}\\) . Quels seraient les nombres minimal et maximal qui pourraient \u00eatre repr\u00e9sent\u00e9s ? Quel nombre aurait 2 repr\u00e9sentations ? Que ferait l'addition de \\(0101_2\\) ( \\(5_{10}\\) ) et \\(1011_2\\) ( \\(-3_{10}\\) ) ? B. Le compl\u00e9ment \u00e0 2 puissance n \u00b6 On propose de coder les entiers sur 4 bits avec la m\u00e9thode d\u00e9crite sur le sch\u00e9ma ci-contre. Les calculs suivants sont-ils corrects ? Compl\u00e9ter le calcul avec les r\u00e9sultats et les conversions (ne pas compter l'overflow pour l'addition binaire !) . Binaire D\u00e9cimal Binaire D\u00e9cimal \\(0101_2\\) \\(5_{10}\\) \\(0011_2\\) \\(+1101_2\\) \\(-3_{10}\\) \\(+1001_2\\) Ce codage ne sort pas de nulle part : il s'agit de ce que l'on appelle de la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) . M\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) (compl\u00e9ment \u00e0 2) Pour repr\u00e9senter un entier positif sur \\(n\\) bits, on prend sa repr\u00e9sentation binaire en ajoutant autant de 0 que n\u00e9cessaire devant pour avoir au total \\(n\\) bits. Pour repr\u00e9senter un entier n\u00e9gatif \\(-m\\) sur \\(n\\) bits : On code en binaire l'entier positif \\(m\\) , On inverse tous les bits (on prend le compl\u00e9ment \u00e0 1 ), On additionne l'entier 1 au nombre obtenu. Si l'addition d\u00e9passe \\(n\\) bits, on ne conserve pas le bit suppl\u00e9mentaire ( \"overflow\" ). Exemple : Repr\u00e9senter -6 sur 4 bits. Entier 6 en binaire 0110 Compl\u00e9ment \u00e0 1 1001 Addition de 1 + 0001 Compl\u00e9ment \u00e0 \\(2^4\\) 1010 V\u00e9rifier avec le sch\u00e9ma \u00e0 quoi correspond la solution trouv\u00e9e. Utiliser la m\u00e9thode du compl\u00e9ment \u00e0 2 pour repr\u00e9senter : \\(-6_{10}\\) sur 8 bits, Entier 6 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) \\(-68_{10}\\) sur 8 bits. Entier 68 en binaire Compl\u00e9ment \u00e0 1 Addition de 1 Compl\u00e9ment \u00e0 \\(2^8\\) Faire l'addition de \\(-5_{10}\\) et \\(5_{10}\\) en binaire sur 4 bits (ne pas oublier de ne pas conserver l'\"overflow\") . Calculer le compl\u00e9ment \u00e0 \\(2^4\\) de \\(-5_{10}\\) . En d\u00e9duire comment obtenir la valeur d\u00e9cimale d'un entier n\u00e9gatif cod\u00e9 avec le compl\u00e9ment \u00e0 2. En d\u00e9duire la valeur d\u00e9cimale de l'entier repr\u00e9sent\u00e9 sur 4 bits par \\(1110_2\\) . Cours \u00b6 Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement. A. La m\u00e9thode \u00b6 La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) du TD est \u00e0 conna\u00eetre. Le nombre de bits utilis\u00e9s pour cette repr\u00e9sentation doit toujours \u00eatre pr\u00e9cis\u00e9 : 8, 16, 32, 64 bits sont des tailles couramment utilis\u00e9es. Le bit le plus \u00e0 gauche repr\u00e9sente le signe : il vaut 1 si l'entier est n\u00e9gatif, 0 s'il est positif . Par rapport aux entiers non-sign\u00e9s, il faut donc compter un bit suppl\u00e9mentaire pour le signe lorsque l'on \u00e9value le nombre de bits n\u00e9cessaire \u00e0 la repr\u00e9sentation du nombre. B. Les entiers repr\u00e9sentables \u00b6 Le nombre maximal repr\u00e9sentable sur 4 bits avec cette m\u00e9thode est \\(0111\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction du nombre de bits utilis\u00e9 \\(n\\) . Solution Sa valeur est de 7, soit \\(2^{n-1}-1\\) . De la m\u00eame mani\u00e8re, donner le nombre maximal repr\u00e9sentable sur 8 bits, en \u00e9criture binaire et d\u00e9cimale. Solution Ce nombre est 01111111, soit 127. Le nombre minimal repr\u00e9sentable sur 4 bits est \\(1000\\) . Quelle est sa valeur en d\u00e9cimal ? L'exprimer en fonction de \\(n\\) . Solution Ce nombre est -8, soit \\(2^{n-1}\\) . Conclusion : Les valeurs pouvant \u00eatre repr\u00e9sent\u00e9es avec cette m\u00e9thode vont donc de \\(-2^{n-1}\\) \u00e0 \\(2^{n-1}-1\\) .","title":"II. Les entiers relatifs"},{"location":"1ere/seq2/entiers_relatifs/#ii-les-entiers-relatifs","text":"","title":"II. Les entiers relatifs"},{"location":"1ere/seq2/entiers_relatifs/#td","text":"","title":"TD"},{"location":"1ere/seq2/entiers_relatifs/#cours","text":"Plusieurs m\u00e9thodes existent pour repr\u00e9senter les entiers relatifs , dit aussi sign\u00e9s ( non-sign\u00e9s pour les entiers positifs). La m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) permet de faire des op\u00e9rations directement.","title":"Cours"},{"location":"1ere/seq2/flottants/","text":"body { text-align: justify} III. Les flottants \u00b6 Cours \u00b6 En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom, comme pour les entiers ? Nous allons voir que ces deux ensembles ne sont pas tout \u00e0 fait \u00e9quivalents... Introduction \u00b6 Que doit, a priori, renvoyer le test 0.1 + 0.2 == 0.3 ? Il devrait renvoyer True . Que renvoie-t-il en fait ? Il renvoie False . Quelle est en fait la valeur de 0.1 + 0.2 ? Sa valeur est 3.0000...00004 Comprenons ce qu'il s'est pass\u00e9... A. D\u00e9composition et conversion de la base 2 \u00e0 la base 10 \u00b6 Prenons le nombre \\(3.375\\) . On sait \u00e9crire sa partie avant la virgule en binaire (qui vaut \\(11_2\\) ). Sa partie apr\u00e8s la virgule, on peut la d\u00e9composer dans la base 10, comme on l'a fait pour la partie enti\u00e8re : \\(0.375 = 3*10^{-1} + 7*10^{-2} + 5*10^{-3}\\) Les rangs des puissances de 10 sont ici n\u00e9gatifs (-1, -2 et -3). De la m\u00eame fa\u00e7on, un nombre \u00e0 virgule \u00e9crit en binaire se d\u00e9compose en fonction de 2 \u00e0 la puissance son rang : \\(10.011_2 = 1*2^1+1*2^{-2}+2^{-3} = 2+0.25+0.125 = 2.380\\) B. Conversion de la base 10 \u00e0 la base 2 \u00b6 Conversion de la partie d\u00e9cimale d'un nombre r\u00e9el de la base 10 \u00e0 la base 2 On multiplie cette partie par 2. La partie enti\u00e8re de ce produit donne le premier coefficient apr\u00e8s la virgule. On garde la partie d\u00e9cimale du produit. On r\u00e9it\u00e8re l'algorithme avec cette valeur, jusqu'\u00e0 ce qu'elle devienne nulle . Exemples : Remplir le tableau suivant, pour obtenir la conversion de \\(0.375\\) . Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.375*2=0.750\\) \\(0\\) \\(0.750\\) \\(0.750*2=1.500\\) \\(1\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(3.375_{10} = 11.011_2\\) Trouver la repr\u00e9sentation binaire de \\(0.25_{10}\\) . Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.25*2=0.5\\) \\(0\\) \\(0.5\\) \\(0.5*2=1\\) \\(1\\) \\(0\\) Donc \\(0.25_{10}=0.01_2\\) Que se passe-t-il lorsque l'on veut convertir la fraction \\(1/3\\) , qui a une \u00e9criture infinie en d\u00e9cimal ? Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(1/3*2=2/3\\) \\(0\\) \\(2/3\\) \\(2/3*2=4/3\\) \\(1\\) \\(1/3\\) L'algorithme ne se termine pas. Ecrire les 5 premi\u00e8res \u00e9tapes de la conversion de \\(0.1_{10}\\) . Solution Multiplication par 2 de la partie d\u00e9cimale Partie enti\u00e8re du produit Partie d\u00e9cimale du produit \\(0.1*2=0.2\\) \\(0\\) \\(0.2\\) \\(0.2*2=0.4\\) \\(0\\) \\(0.4\\) \\(0.4*2=0.8\\) \\(0\\) \\(0.8\\) \\(0.8*2=1.6\\) \\(1\\) \\(0.6\\) \\(0.6*2=1.2\\) \\(1\\) \\(0.2\\) Que se passe-t-il ? Que peut-on en d\u00e9duire sur la repr\u00e9sentation de \\(0.1_{10}\\) dans la machine ? Pourquoi le test 0.1 + 0.2 == 0.3 renvoie-t-il False ? L'algorithme ne s'arr\u00eate pas. 0.1 ne peut pas \u00eatre repr\u00e9sent\u00e9 de mani\u00e8re exacte, donc 0.1+0.2 ne fait pas exactement 0.3 avec la repr\u00e9sentation de la machine. D. La norme IEEE 754 (son d\u00e9tail n'est pas \u00e0 retenir) \u00b6 Le terme flottant vient du fait que l'on repr\u00e9sente ces nombres avec une virgule flottante . La norme IEEE 754 est la plus employ\u00e9e pour repr\u00e9senter ces nombres. On utilise soit 32 (version utilis\u00e9e ici pour l'exemple) , soit 64 bits pour stocker ces nombres. Le nombre est mis sous la forme : \\(signe*mantisse*base^{exposant}\\) , et on stocke : - son signe (1 bit) , - un exposant (8 bits) , - une mantisse (23 bits) . Exemple : \\(4,3125_{10}=100,0101_2\\) , qui doit \u00eatre transform\u00e9 pour correspondre \u00e0 cette norme, en \\(1,000101.2^2\\) . Il est stock\u00e9 sous la forme : \\(signe = 0\\) (nombre positif), \\(exposant = 10000001\\) (l'exposant est d\u00e9cal\u00e9), \\(mantisse = 0001010000000000000000\\) Conclusion \u00b6 En programmation, est-il pertinent de tester l'\u00e9galit\u00e9 entre deux flottants ? Comment peut-on faire alors ? Ce n'est pas pertinent, car on peut avoir des erreurs dues \u00e0 l'approximation de la repr\u00e9sentation, contrainte par un nombre de bits donn\u00e9. On peut, \u00e0 la place, tester si ces nombres sont suffisamment proches.","title":"III. Les flottants"},{"location":"1ere/seq2/flottants/#iii-les-flottants","text":"","title":"III. Les flottants"},{"location":"1ere/seq2/flottants/#cours","text":"En informatique, les nombres r\u00e9els sont repr\u00e9sent\u00e9s par des flottants . Pourquoi ne pas utiliser le m\u00eame nom, comme pour les entiers ? Nous allons voir que ces deux ensembles ne sont pas tout \u00e0 fait \u00e9quivalents...","title":"Cours"},{"location":"1ere/seq3/puplet/","text":"body { text-align: justify} III. Le type p-uplet \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 Un p-uplet est une collection ordonn\u00e9e de p \u00e9l\u00e9ments (un nombre donn\u00e9 d'\u00e9l\u00e9ments). Ils peuvent \u00eatre de diff\u00e9rents types . En Python, on utilise le type tuple (terme que l'on retrouve dans quintuple -5 \u00e9l\u00e9ments-, sextuple -6 \u00e9l\u00e9ments-,...). B. Cr\u00e9ation \u00b6 Diff\u00e9rents \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules permettent de cr\u00e9er un tuple . Pour la lisibilit\u00e9 du code, on encadre ces \u00e9l\u00e9ments par des parenth\u00e8ses . Exemple tuple1 = (0, 5, 2) C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un p-uplet tuple1 sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du p-uplet - 1 . L'acc\u00e8s \u00e0 un \u00e9l\u00e9ment d'un p-uplet fonctionne comme l'acc\u00e8s d'un \u00e9l\u00e9ment d'un tableau. Exemple tuple1[1] renvoie 5 . D. Modification \u00b6 C'est une sp\u00e9cificit\u00e9 du tuple , il n'est pas modifiable ! Il est dit non-muable . S'il est choisi au lieu d'un tableau, c'est souvent pour cette particularit\u00e9 : pour \u00e9viter que des valeurs soient modifi\u00e9e en cours de programme. E. Utilisation dans des fonctions \u00b6 Il est possible de faire renvoyer plusieurs valeurs \u00e0 une fonction. Ces valeurs sont alors renvoy\u00e9es sous la forme d'un tuple . Exemple def maximum ( t ): max_val = t [ 0 ] max_ind = 0 for i in range ( len ( t )): if t [ i ] > max_val : max_val = t [ i ] max_ind = i return max_val , max_ind 1. Ecrire l'appel de la fonction maximum pour t valant [-15, 7, 36, -1] , permettant de stocker la valeur et l'indice du maximum dans des variables. v , i = maximum ([ - 15 , 7 , 36 - 1 ]) 2. Ecrire le m\u00eame appel, mais stockant les valeurs de sortie dans une variable. Afficher ensuite ces valeurs s\u00e9par\u00e9ment. maxi = maximum ([ - 15 , 7 , 36 - 1 ]) print ( \"La valeur maximum est :\" , maxi [ 0 ]) print ( \"L'indice du maximum est :\" , maxi [ 1 ])","title":"III. Le type p-uplet"},{"location":"1ere/seq3/puplet/#iii-le-type-p-uplet","text":"","title":"III. Le type p-uplet"},{"location":"1ere/seq3/puplet/#cours","text":"","title":"Cours"},{"location":"1ere/seq3/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 TD : Exercices sur les types construits \u00b6 A. Les types \u00b6 1. On dispose d'une liste d\u00e9finie par L = [15,17,12,23] . Quelle est la valeur de L apr\u00e8s l'instruction L[2] = 25 ? A [15,25,12,23] B [15,17,25,12,23] C [15,17,25,23] D [15,17,12,25,23] 2. On d\u00e9finit ainsi une liste M : M = [['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L']] Quelle expression vaut la cha\u00eene de caract\u00e8res 'H' ? A M[1][3] B M[3][1] C M(7) D M(8) 3. Quel est le type de l'expression f(4) si la fonction f est d\u00e9finie par : def f ( x ): return ( x , x ** 2 ) A un entier B un flottant C une liste D un tuple 4. Que vaut l'expression [ 2*k for k in range(5) ] ? A [0,2,4,6,8] B [2,4,6,8,10] C [1,2,4,8,16] D [2,4,8,16,32] 5. On ex\u00e9cute le code suivant : A = [ [ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ] ] B = [ [ 0 , 0 , 0 ], [ 0 , 0 , 0 ], [ 0 , 0 , 0 ] ] for i in range ( 3 ): for j in range ( 3 ): B [ i ][ j ] = A [ j ][ i ] Que vaut B \u00e0 la fin de l'ex\u00e9cution ? A rien du tout, le programme d\u00e9clenche une erreur d'ex\u00e9cution B [ [3,2,1], [6,5,4], [9,8,7] ] C [ [1,4,7], [2,5,8], [3,6,9] ] D [ [7,8,9], [4,5,6], [1,2,3] ] B. Algorithmique \u00b6 1. On consid\u00e8re la fonction suivante : def f ( T , i ): indice = i m = T [ i ] for k in range ( i + 1 , len ( T )): if T [ k ] < m : indice = k m = T [ k ] return indice Quelle est la valeur de f([ 7, 3, 1, 8, 19, 9, 3, 5 ], 0) ? A 1 B 2 C 3 D 4 2. Quelle est la valeur de c \u00e0 la fin de l'ex\u00e9cution du code suivant : L = [ 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 0 , 2 ] c = 0 for k in L : if k == L [ 1 ]: c = c + 1 A 0 B 2 C 3 D 10 3. Un algorithme de calcul de moyenne est impl\u00e9ment\u00e9 de la fa\u00e7on suivante : def moyenne ( liste ) : t = 0 for e in liste : t = t + e # assertion vraie \u00e0 cet endroit return t / len ( liste ) Parmi les propositions suivantes, laquelle reste vraie \u00e0 la fin de chaque it\u00e9ration de la boucle ? A e vaut le nombre de passages dans la boucle B t vaut la somme des \u00e9l\u00e9ments visit\u00e9s de la liste C t vaut la moyenne des \u00e9l\u00e9ments visit\u00e9s de la liste D apr\u00e8s k passages dans la boucle la liste contient k termes 4. On ex\u00e9cute le script suivant : liste = [ 17 , 12 , 5 , 18 , 2 , 7 , 9 , 15 , 14 , 20 ] somme = 0 i = 0 while i < len ( liste ): somme = somme + liste [ i ] i = i + 1 resultat = somme / len ( liste ) Quelle affirmation est fausse parmi les suivantes ? A le corps de la boucle a \u00e9t\u00e9 ex\u00e9cut\u00e9 10 fois B \u00e0 la fin de l'ex\u00e9cution la valeur de i est 9 C resultat contient la moyenne des \u00e9l\u00e9ments de liste D len est une fonction 5. On d\u00e9finit la fonction suivante : def traitement ( liste ) : m = liste [ 0 ] for i in range ( len ( liste )) : if liste [ i ] > m : m = liste [ i ] return m Que vaut traitement([-2,5,6,-10,35]) ? A None B -10 C -6 D 35","title":"IV. Synth\u00e8se"},{"location":"1ere/seq3/synthese/#synthese","text":"","title":"Synth\u00e8se"},{"location":"1ere/seq3/synthese/#td-exercices-sur-les-types-construits","text":"","title":"TD : Exercices sur les types construits"},{"location":"1ere/seq3/tableaux/","text":"body { text-align: justify} I. Le type tableau \u00b6 Cours \u00b6 Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau . A. D\u00e9finition \u00b6 Un tableau est une collection d'\u00e9l\u00e9ments de m\u00eame type, de taille fix\u00e9e , stock\u00e9s les uns \u00e0 la suite des autres, dont la valeur est accessible gr\u00e2ce \u00e0 leur indice . En Python, on utilise le terme plus g\u00e9n\u00e9ral de liste pour repr\u00e9senter des tableaux . B. Cr\u00e9ation \u00b6 On d\u00e9clare un nouveau tableau en s\u00e9parant ses \u00e9l\u00e9ments par des virgules , l'ensemble \u00e9tant entour\u00e9 de crochets . [] est un tableau vide . Exemple Pour stocker l'ensemble des nombres premiers inf\u00e9rieurs \u00e0 10, on peut utiliser un tableau appel\u00e9 ici tab_premiers : tab_premiers = [ 2 , 3 , 5 , 7 ] Les diff\u00e9rents \u00e9l\u00e9ments sont stock\u00e9s c\u00f4te \u00e0 c\u00f4te dans la m\u00e9moire. Compl\u00e9ter le sch\u00e9ma suivant avec les valeurs de tab_premiers : Solution C. Indexation \u00b6 Les \u00e9l\u00e9ments d'un tableau tab sont index\u00e9s \u00e0 partir de 0 , jusqu'\u00e0 la taille du tableau - 1 (en Python : len(tab)-1 ). On acc\u00e8de \u00e0 l'\u00e9l\u00e9ment d'indice i avec la syntaxe tab[i] . Exemple : Pour l'exemple de tab_premiers , associer chaque \u00e9l\u00e9ment du tableau \u00e0 son indice. V\u00e9rifier que l'indice du dernier \u00e9l\u00e9ment correspond \u00e0 len(tab_premiers)-1 . \u00e9l\u00e9ment indice 2 3 5 7 Solution \u00e9l\u00e9ment indice 2 0 3 1 5 2 7 3 On a bien len(tab_premiers) -1 = 4-1 = 3, indice du dernier \u00e9l\u00e9ment de tab_premiers . Quelle instruction permet d'afficher la valeur 3 ? La valeur de l'\u00e9lement d'indice 2 ? Solution tab[1] affiche la valeur 3 . tab[2] affiche la valeur de l'\u00e9l\u00e9ment d'indice 2`. Comment afficher successivement la valeur des \u00e9l\u00e9ments de tab_premiers , avec une boucle ? Solution for i in range ( len ( tab_premiers )): print ( tab_premiers [ i ]) D. Modification \u00b6 Il est possible de modifier la valeur d'un \u00e9l\u00e9ment d'un tableau t apr\u00e8s sa cr\u00e9ation, en lui affectant une nouvelle valeur avec la syntaxe t[i] = v . Exemples Une erreur a \u00e9t\u00e9 faite lors de la d\u00e9claration de tab_premiers : tab_premiers = [ 1 , 3 , 5 , 7 ] Ecrire l'instruction permettant de rectifier cette erreur. tab_premiers [ 0 ] = 2 Un tableau t de taille 10 a \u00e9t\u00e9 initialis\u00e9 avec uniquement des 0 . On veut en fait qu'il contienne l'ensemble des chiffres de 0 \u00e0 9. Ecrire une boucle permettant de modifier les valeurs de t . for i in range ( len ( t )): t [ i ] = i E. Cr\u00e9ation par compr\u00e9hension \u00b6 Pour cr\u00e9er des tableaux dont la taille peut \u00eatre grande de mani\u00e8re automatique, on peut utiliser la cr\u00e9ation par compr\u00e9hension . Cette m\u00e9thode utilise une boucle et peut aussi int\u00e9grer une condition . Exemples t1 = [2**i for i in range(6)] cr\u00e9e un tableau avec les puissances de 2 de 0 \u00e0 5 . C'est-\u00e0-dire t1 vaut ... Solution t1 vaut [1, 2, 4, 8, 16] . Indiquer ce que contient t2 : t2 = [i+5 for i in range(5)] Solution t2 vaut [5, 6, 7, 8, 9] . Cr\u00e9er un tableau t3 par compr\u00e9hension stockant les valeurs au carr\u00e9 des nombres de 1 \u00e0 5 . Solution t3 = [i**2 for i in range(1,6)] Indiquer ce que contient t4 : t4 = [i for i in range(10) if i%2 == 0] Solution t4 vaut [0, 2, 4, 6, 8] . F. Les tableaux \u00e0 2-dimensions \u00b6 Un tableau \u00e0 deux dimensions , appel\u00e9 matrice , est un tableau dont chaque \u00e9l\u00e9ment est aussi un tableau. On acc\u00e8de \u00e0 un \u00e9l\u00e9ment par son num\u00e9ro de ligne i et son num\u00e9ro de colonne j : si elle s'appelle mat , cela correspond \u00e0 mat[i][j] . Exemple : mat = [[2,8,1], [3,9,0]] a deux \u00e9l\u00e9ments , d'indice 0 et 1. Ces \u00e9l\u00e9ments comportent eux trois \u00e9l\u00e9ments . Compl\u00e9ter le tableau suivant : indice \u00e9l\u00e9ment 0 1 Solution indice \u00e9l\u00e9ment 0 [2,8,1] 1 [3,9,0] Le repr\u00e9senter sur le sch\u00e9ma suivant, et ajouter les num\u00e9ros de ligne et de colonne : Solution Quelle instruction permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment 3 ? L'\u00e9l\u00e9ment 2 ? Solution mat[1,0] permet d'acc\u00e9der \u00e0 3 et mat[0,0] \u00e0 2 . Exercices sur les tableaux \u00b6 Exercice 1 : (sur feuille) \u00b6 Qu'affiche le programme suivant ? t = [ \"un\" , \"trois\" , \"deux\" ] print ( t [ 1 ], t [ 2 ]) Exercice 2 : (sur feuille) \u00b6 Comment acc\u00e9der sans erreur au 5\u00e8me \u00e9l\u00e9ment d'un tableau t dont on ne conna\u00eet pas encore la taille ? # proposition a a = t [ 5 ] # proposition b if len ( t ) > 4 : a = t [ 4 ] # proposition c if len ( t ) >= 5 : a = t [ 4 ] # proposition d if len ( t ) > 4 : a = t [ 5 ] # proposition e if len ( t ) == 5 : a = t [ 4 ] # proposition f a = t [ 4 ] Exercice 3 : les jours (sur ordinateur) \u00b6 Ecrire une instruction Python stockant le nom des sept jours de la semaine dans un tableau nomm\u00e9 jours . Ecrire un programme permettant d'afficher le noms des sept jours, en utilisant une boucle et la fonction renvoyant la longueur(taille) d'un tableau. Exercice 4 : multiples (sur ordinateur) \u00b6 Ecrire une fonction multiples10 prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les 10 premiers multiples non nuls de n . Ecrire une fonction multiples1000 prenant en param\u00e8tre un entier positif n et renvoyant un tableau contenant les multiples de n strictement inf\u00e9rieurs \u00e0 1000. Exercice 5 : morpion (sur ordinateur) \u00b6 Ecrire une instruction permettant de g\u00e9n\u00e9rer le tableau \u00e0 2 dimensions repr\u00e9sentant le jeu du morpion ci-dessous. C'est au joueur ayant les 'X' de jouer. Ecrire l'instruction qui lui permet de gagner (il faut qu'il aligne 3 'X' !) . Exercice 6 : la compr\u00e9hension (sur ordinateur) \u00b6 Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension la table de multiplication de 6 (donc les valeurs allant de 1*6 \u00e0 9*6 ). Ecrire une instruction permettant de cr\u00e9er par compr\u00e9hension les tables de multiplication de tous les chiffres de 2 \u00e0 9. Toutes les tables sont stock\u00e9es dans une seule matrice : [[ 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 ], # table de 2 [ 3 , 6 , 9 , 12 , 15 , 18 , 21 , 24 , 27 ], # table de 3 ... # etc [ 9 , 18 , 27 , 36 , 45 , 54 , 63 , 72 , 81 ]] # table de 9 ``` ### Exercice 7 : ajouter des \u00e9l\u00e9ments \u00e0 un tableau *(sur ordinateur)* Un tableau est une structure de ** taille fixe **. Dans certains cas , ce n 'est pas pratique car on veut pouvoir rajouter des \u00e9l\u00e9ments au fur et \u00e0 mesure. Il faut pour cela utiliser des **tableaux dynamiques** : des tableaux dont la taille varie. Le type ` list ` de Python impl\u00e9mente cette structure . On peut appliquer des fonctions un peu sp\u00e9ciales , appel\u00e9es * m\u00e9thodes * , comme la fonction ` append ` qui ajoute un \u00e9l\u00e9ment \u00e0 la fin de la liste Python . 1. Ex\u00e9cuter le code suivant : ``` python t = [ - 1 , 0 , 1 , 2 ] t . append ( 3 ) # noter qu'on ne l'appelle pas comme une fonction usuelle! Que contient t apr\u00e8s son ex\u00e9cution ? Ecrire un programme cr\u00e9ant un tableau vide, et ajoutant successivement les valeurs 5 , 10 , 15 et 20 . Il est possible de faire la m\u00eame chose, mais avec l'op\u00e9rateur + . Ex\u00e9cuter le code suivant, et v\u00e9rifier que l'on obtient la m\u00eame chose que pour la question 1 : t = [ - 1 , 0 , 1 , 2 ] t = t + [ 3 ] Ecrire un programme faisant la m\u00eame chose que celui de la question 2, mais en utilisant l'op\u00e9rateur + \u00e0 la place de append .","title":"I. Le type tableau"},{"location":"1ere/seq3/tableaux/#i-le-type-tableau","text":"","title":"I. Le type tableau"},{"location":"1ere/seq3/tableaux/#cours","text":"Les types de bases manipul\u00e9s jusqu'\u00e0 pr\u00e9sent ne permettent pas de manipuler des ensembles de valeurs, appel\u00e9s en informatique des collections . Pour stocker des \u00e9l\u00e9ments d'un m\u00eame type , on peut utiliser un tableau .","title":"Cours"},{"location":"1ere/seq3/tableaux/#exercices-sur-les-tableaux","text":"","title":"Exercices sur les tableaux"},{"location":"1ere/seq3/tableaux_algo/","text":"body { text-align: justify} II. Algorithmique sur les tableaux \u00b6 Cours \u00b6 A. Recherche d'extremum \u00b6 Les tableaux permettent de regrouper plusieurs valeurs au m\u00eame endroit. De ces valeurs, on peut extraire des statistiques, comme trouver son minimum et son maximum . Consid\u00e9rons le tableau t = [2.4, 83.0, 17.1, -28.2, -5.9] . Il faut le parcourir pour obtenir son plus petit \u00e9l\u00e9ment. D\u00e9crire en quelques phrases comment trouver le minimum de l'ensemble du tableau. On parcourt ses \u00e9l\u00e9ments un par un. On stocke la valeur du minimum des \u00e9l\u00e9ments d\u00e9j\u00e0 parcourus dans une variable. Quand on trouve un \u00e9l\u00e9ment de t inf\u00e9rieur \u00e0 ce minimum, on actualise sa valeur. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Une boucle for parcourant l'ensemble du tableau, une variable stockant le minimum. Proposer un algorithme de recherche du minimum d'un tableau, renvoyant cette valeur minimale. param\u00e8tre : tableau t on initialise une variable mini avec t [ 0 ] on parcourt un \u00e0 un le reste des \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i de t est inf\u00e9rieur \u00e0 mini on actualise mini avec t [ i ] on renvoie mini r\u00e9sultat : mini Comment faut-il le modifier pour obtenir la valeur maximale ? On remplace le \"inf\u00e9rieur \u00e0\" par \"sup\u00e9rieur \u00e0\". Appliquer cet algorithme au tableau t , et compl\u00e9ter la table de trace suivante : it\u00e9ration variable mini init 2.4 1 2.4 2 2.4 3 -28.2 4 -28.2 B. Recherche d'occurrence \u00b6 Compter le nombre de fois qu'appara\u00eet une valeur dans un tableau s'appelle compter les occurrences de cette valeur. B.1. Compter les occurrences \u00b6 On consid\u00e8re t = ['chat', 'chien', 'rat', 'loup', 'chat'] , et on veut pouvoir compter le nombre d'occurrences d'une valeur dans t . D\u00e9crire en quelques phrases comment faire pour trouver le nombre d'occurrence d'une valeur v dans un tableau t . On parcourt les \u00e9l\u00e9ments de t un \u00e0 un, jusqu'au bout du tableau. Lorsque l'on trouve un \u00e9l\u00e9ment \u00e9gal \u00e0 v, on incr\u00e9mente une variable comptant les occurrences. Quels sont les \u00e9l\u00e9ments de programmation qu'il faut utiliser ? Il faut utiliser une boucle born\u00e9e (for), et une variable comptant les occurrences. Proposer un algorithme effectuant ce comptage : param\u00e8tre : tableau t on initialise nb_occ \u00e0 0 on parcourt un \u00e0 un tous les \u00e9l\u00e9ments de t avec leur indice i si l \u00e9l\u00e9ment i vaut v on incr\u00e9mente nb_occ r\u00e9sultat : nb_occ Appliquer cet algorithme \u00e0 t pour la valeur chat , et remplir la table de trace suivante : it\u00e9ration variable init 0 1 1 2 1 3 1 4 1 5 2 B.2. Trouver une occurrence \u00b6 On veut cette fois-ci indiquer si une valeur est pr\u00e9sente dans le tableau ou non. Quel est le type du r\u00e9sultat ? C'est un bool\u00e9en. Que faut-il changer, par rapport \u00e0 l'algorithme pr\u00e9c\u00e9dent ? Il n'est pas n\u00e9cessaire de parcourir tout le tableau dans tous les cas : lorsqu'on trouve une fois l'\u00e9l\u00e9ment, l'algorithme peut s'arr\u00eater. Comment, alors, \u00e9crire l'algorithme ? param\u00e8tres : tableau t , valeur v on initialise trouve \u00e0 False tant que trouve vaut False et qu il reste des \u00e9l\u00e9ments dans t on parcourt l \u00e9l\u00e9ment suivant de t d indice i si l \u00e9l\u00e9ment i de t vaut v on actualise trouve \u00e0 True r\u00e9sultat : trouve B.3. Type de parcours \u00b6 On dit que l'on fait un parcours total lorsque l'algorithme utilis\u00e9 parcourt l'ensemble d'un tableau dans tous les cas. On a un parcours partiel quand le r\u00e9sultat peut \u00eatre trouv\u00e9, dans certains cas, on ne parcourant qu'une partie du tableau. C. Calcul de moyenne \u00b6 Comment obtenir la moyenne d'un tableau de nombres ? 1. Quelle est la formule pour calculer la moyenne qu'il va falloir utiliser ? moy = somme des \u00e9l\u00e9ments / nombre d'\u00e9l\u00e9ments 2. Identifier le type de parcours \u00e0 appliquer, et les variables \u00e0 utiliser. Il faut faire un parcours total, et utiliser une variable stockant la somme des \u00e9l\u00e9ments. Proposer un algorithme : param\u00e8tre : tableau t on initialise somme \u00e0 0 on parcourt les \u00e9l\u00e9ments de t on ajoute la valeur de l \u00e9l\u00e9ment i de t \u00e0 somme moy vaut somme / ( longueur de t ) r\u00e9sultat : moy L'appliquer \u00e0 t = [2, 83, 17, -20, -5] it\u00e9ration variable somme variable moy init 0 x 1 2 x 2 85 x 3 102 x 4 82 x 5 77 x fin 77 15.4 TP : Algorithmique sur les tableaux 1 \u00b6 Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres. A. Un premier algorithme \u00b6 Sans l'ex\u00e9cuter , analyser le programme ci-dessous, et pr\u00e9dire la valeur de sortie pour le test donn\u00e9. Ex\u00e9cuter ensuite le programme. Le r\u00e9sultat correspond-il \u00e0 ce que vous aviez pr\u00e9dit ? def fonction1 ( tab ): var = tab [ 0 ] for i in range ( 1 , len ( tab )): if tab [ i ] > var : var = tab [ i ] return var print ( \"Premier test :\" , fonction1 ([ 1 , - 5 , 14 , - 2 , 13 ])) Ajouter, dans la cellule pr\u00e9c\u00e9dente, un deuxi\u00e8me test pour tab valant [-10, 30, 4, 7, 16] . En d\u00e9duire ce que fait cette fonction. La copier ci-dessous, et la renommer, ainsi que la variable var pour que son nom soit plus explicite. #recopier et renommer la fonction ici Que faut-il modifier pour que l'on renvoie l'indice de l'\u00e9l\u00e9ment plut\u00f4t que sa valeur ? C'est \u00e0 dire que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 2 au lieu de 14 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 1 au lieu de 30 . Faire la modification ci-dessous, en renommant la fonction : #modifier et renommer la fonction ici B. Un deuxi\u00e8me algorithme \u00b6 Que faut-il modifier pour que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie -5 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie -10 ? Faire la modification ci-dessous, en choisissant un nom appropri\u00e9 pour la fonction : #modifier et renommer la fonction ici De mani\u00e8re similaire \u00e0 la question A.4., on veut pouvoir renvoyer l'indice. Modifier la fonction pour que : si l'entr\u00e9e vaut [1, -5, 14, -2, 13] , on renvoie 1 au lieu de -5 , si l'entr\u00e9e vaut [-10, 30, 4, 7, 16] , on renvoie 0 au lieu de -10 ? #modifier et renommer la fonction ici Ces algorithmes, avec leurs variations, sont \u00e0 savoir retrouver. TP : Algorithmique sur les tableaux 2 \u00b6 On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver. TP : Impl\u00e9mentation du calcul de la moyenne \u00b6 Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : python from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : python debut = time() m1 = moyenne(t1) tps = (time()-debut)*1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ?","title":"II. Algorithmes sur les tableaux"},{"location":"1ere/seq3/tableaux_algo/#ii-algorithmique-sur-les-tableaux","text":"","title":"II. Algorithmique sur les tableaux"},{"location":"1ere/seq3/tableaux_algo/#cours","text":"","title":"Cours"},{"location":"1ere/seq3/tableaux_algo/#tp-algorithmique-sur-les-tableaux-1","text":"Nous allons voir diff\u00e9rents algorithmes classiques appliqu\u00e9s \u00e0 des tableaux. Ce TP traite de diff\u00e9rents algorithmes qui se ressemblent, que vous allez d\u00e9duire les uns des autres.","title":"TP : Algorithmique sur les tableaux 1"},{"location":"1ere/seq3/tableaux_algo/#tp-algorithmique-sur-les-tableaux-2","text":"On s'int\u00e9resse dans ce TP \u00e0 la recherche d'un \u00e9l\u00e9ment dans un tableau, de type quelconque. On parle de recherche d'occurrence d'un \u00e9l\u00e9ment dans un tableau. On donne un premier algorithme : on parcourt un \u00e0 un les \u00e9l\u00e9ments du tableau tab si l'\u00e9l\u00e9ment i est \u00e9gal \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 e on renvoie Vrai on renvoie Faux Impl\u00e9menter cet algorithme, en compl\u00e9tant la fonction suivante : def recherche ( tab , e ): # \u00e0 compl\u00e9ter assert recherche ([ 1 , 18 , - 7 , 3 ], 3 ) == True assert recherche ([ 1 , 18 , - 7 , 3 ], 25 ) == False Modifier cette fonction pour qu'elle ne renvoie pas un bool\u00e9en, mais l'indice de l'\u00e9l\u00e9ment recherch\u00e9, et -1 s'il ne se trouve pas dans le tableau : def recherche_indice ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 3 ) == 3 assert recherche_indice ([ 1 , 18 , - 7 , 3 ], 25 ) == - 1 Un \u00e9l\u00e9ment peut se trouver plusieurs fois dans le tableau. Modifier l'algorithme pour que votre fonction renvoie l'indice de la derni\u00e8re occurrence de e , ou -1 si e n'est pas pr\u00e9sent : def recherche_dernier ( tab , e ): # \u00e0 compl\u00e9ter assert recherche_dernier ([ 'chat' , 'chien' , 'rat' , 'chat' ], 'chat' ) == 3 assert recherche_dernier ([ 'loup' , 'renard' , 'belette' ], 'chat' ) == - 1 Cet algorithme, avec ses variations, est \u00e9galement \u00e0 savoir retrouver.","title":"TP : Algorithmique sur les tableaux 2"},{"location":"1ere/seq3/tableaux_algo/#tp-implementation-du-calcul-de-la-moyenne","text":"Cr\u00e9er un nouveau fichier Python \"TP_Moyenne.py\", sauvegard\u00e9 dans votre r\u00e9pertoire NSI. Se baser sur l'algorithme de calcul de moyenne \u00e9crit en cours pour impl\u00e9menter la fonction moyenne , prenant en param\u00e8tre un tableau de nombres et renvoyant la valeur de la moyenne de ses \u00e9l\u00e9ments. Noter ici l'impl\u00e9mentation trouv\u00e9e : V\u00e9rifier que l'appel de moyenne([9,18,31,7,5]) renvoie bien le r\u00e9sultat 14.0 . Nous avons pour l'instant utilis\u00e9 des petits tableaux, mais en pratique on stocke souvent plus de donn\u00e9es. On veut \u00e9valuer comment le temps d'ex\u00e9cution de notre fonction varie, en fonction de la longueur du tableau. Cr\u00e9er un tableau t1 par compr\u00e9hension, stockant la valeur de l'indice de chaque \u00e9l\u00e9ment du tableau (la valeur du i du range ), de longueur 100 000. Importer la fonction time de la biblioth\u00e8que time pour pouvoir lancer un compteur, lorsqu'une ligne de votre programme s'ex\u00e9cute : python from time import time Utiliser le code suivant pour obtenir le temps d'ex\u00e9cution de la fonction moyenne lorsqu'elle prend t1 en param\u00e8tre, exprim\u00e9 en millisecondes : python debut = time() m1 = moyenne(t1) tps = (time()-debut)*1000 Reporter la valeur de tps sur le graphique suivant : Refaire la m\u00eame op\u00e9ration, c'est-\u00e0-dire le calcul du temps d'ex\u00e9cution, mais avec un tableau t2 de longueur 500 000 (lui donner les m\u00eames valeurs que pr\u00e9c\u00e9demment : chaque \u00e9l\u00e9ment stocke la valeur de son indice). Reporter la valeur obtenue sur le graphique de la question 6. R\u00e9it\u00e9rer ces op\u00e9rations pour un tableau de longueur 1 000 000, 1 500 000 et 2 000 000. Tracer la courbe qui relie les diff\u00e9rents points sur le graphique. Qu'observe-t-on ?","title":"TP : Impl\u00e9mentation du calcul de la moyenne"},{"location":"1ere/seq4/bases_web/","text":"body { text-align: justify} II. L'hypertexte et les bases du web \u00b6 Cours \u00b6 A. D\u00e9finitions \u00b6 Le WWW ou World Wide Web est une application qui permet d'acc\u00e9der \u00e0 un r\u00e9seau de documents, reli\u00e9s entre eux par le principe de l' hypertexte . Quelle est la diff\u00e9rence entre Internet et le Web ? Internet est un r\u00e9seau de machines, sur lequel on peut utiliser diff\u00e9rentes applications comme le Web. C'est un r\u00e9seau d'informations, de documents stock\u00e9s dans des serveurs. On acc\u00e8de \u00e0 une page : - gr\u00e2ce \u00e0 son URL , qui localise sur le r\u00e9seau la machine h\u00e9bergeant la page et la page elle-m\u00eame sur la machine, - gr\u00e2ce \u00e0 un protocole HTTP ou HTTPS . - Cette page est \u00e9crite au minimum avec le langage de description HTML . Ces \u00e9l\u00e9ments forment la base du Web. Nous allons nous int\u00e9resser \u00e0 chacun d'entre eux, mais allons nous concentrer, dans cette s\u00e9quence, sur les langages HTML et CSS. B. Les langages HTML et CSS \u00b6 Le langage HTML (Hypertext Markup Language) structure la page Web, alors que le CSS (Cascading Style Sheet) le met en forme. Une page est imp\u00e9rativement constitu\u00e9e de HTML, et peut contenir sur CSS (aujourd'hui, c'est toujours le cas, pour des consid\u00e9rations graphiques). Elle peut \u00e9galement contenir un langage de programmation (Javascript, PHP,...) Diff\u00e9rence HTML/CSS : Quels \u00e9l\u00e9ments changent lorsqu\u2019on applique le code CSS 2 par rapport au code CSS 1 ? On change la couleur du fond (vert), la taille et la couleur du titre (noir, plus petit). C. Les logiciels du Web \u00b6 C.I. Lire des pages \u00b6 Une page en HTML est ouverte par un navigateur qui est le logiciel capable de lire les pages Web. Donner des exemples de navigateurs. Mozilla Firefox, Google Chrome, Microsoft Edge ou Safari sont des navigateurs. Quelle est la diff\u00e9rence entre navigateur et moteur de recherche ? Un moteur de recherche est un site Web, une application permettant de faire des recherches sur le Web, auquel on acc\u00e8de gr\u00e2ce au navigateur qui peut lire ses pages. C.II. Cr\u00e9er des pages \u00b6 Pour \u00e9crire des pages Web en manipulant HTML et CSS, il faut utiliser un \u00e9diteur de texte . Donner des exemples d'\u00e9diteurs de texte. Le Bloc-notes, Notepad++ sont des exemples d'\u00e9diteur de texte courants. TP : Afficher le texte sur le Web \u00b6 T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"II. L'hypertexte et les bases du web"},{"location":"1ere/seq4/bases_web/#ii-lhypertexte-et-les-bases-du-web","text":"","title":"II. L'hypertexte et les bases du web"},{"location":"1ere/seq4/bases_web/#cours","text":"","title":"Cours"},{"location":"1ere/seq4/bases_web/#tp-afficher-le-texte-sur-le-web","text":"T\u00e9l\u00e9charger le fichier HTML page.html et le d\u00e9placer dans votre dossier NSI. Voici le code du fichier HTML que nous allons utiliser : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"iso-8859-1\" > < title > Ca fait r\u00eaver ! </ title > </ head > < body > < p > Cet \u00e9t\u00e9 on f\u00eatera les vacances. </ p > </ body > </ html > Double-cliquer sur le fichier : il s'ouvrira avec le navigateur par d\u00e9faut de votre ordinateur. Que remarquez-vous ? Pour voir comment chaque caract\u00e8re est cod\u00e9 en machine, on peut utiliser un \u00e9diteur hexad\u00e9cimal qui va afficher la correspondance entre chaque caract\u00e8re et sa repr\u00e9sentation sous la forme de nombres avec une des normes du cours. Aller sur https://hexed.it/ et charger votre page. Le code la page s'affiche en bleu sur la droite. Passer votre souris sur les deux caract\u00e8res sp\u00e9ciaux qui s'affichent \u00e0 la place du \"\u00e9\" et relever leur codage en h\u00e9xad\u00e9cimal (qui s'affiche en surlign\u00e9). Utiliser la table de la norme ISO 8859-1 pour voir \u00e0 quels caract\u00e8res correspond ce codage en hexad\u00e9cimal. Quel codage devrait normalement repr\u00e9senter le caract\u00e8re \"\u00e9\" ? Le fichier a-t-il vraiment \u00e9t\u00e9 encod\u00e9 avec la norme ISO 8859-1 ? Quelle norme utilise un nombre variable d'octets pour repr\u00e9senter les caract\u00e8res ? Le fichier a bien \u00e9t\u00e9 encod\u00e9 dans cette norme. Modifier le code HTML pour r\u00e9soudre le probl\u00e8me d'affichage. Remarque Le navigateur peut automatiquement d\u00e9tecter les probl\u00e8mes d'encodage. Avec Firefox : - afficher le menu en appuyant sur Alt, - aller dans Affichage > R\u00e9parer l'encodage du texte.","title":"TP : Afficher le texte sur le Web"},{"location":"1ere/seq4/langages_web/","text":"body { text-align: justify} III. Les langages du Web \u00b6 Cours : le HTML \u00b6 Le langage HTML sert \u00e0 structurer le contenu d'une page Web. Son nom, \"hypertexte\" fait r\u00e9f\u00e9rence \u00e0 son r\u00f4le dans la pr\u00e9sentation de l'information, du texte jusqu'\u00e0 d'autres contenus multim\u00e9dias. A. Les bases du HTML \u00b6 A.1. Utilisation de balises \u00b6 C'est un langage de balisage , bas\u00e9 sur l'utilisation de balises ayant des fonctions diff\u00e9rentes. Il sert \u00e0 d\u00e9crire de l'information, pas \u00e0 faire des calculs comme Python ! Exemple : < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ strong > . </ p > Ce code utilise 3 balises : h1 indique un titre principal (il en existe pour diff\u00e9rents niveaux : h2 , h3 ,...), p correspond \u00e0 un paragraphe , strong fait appara\u00eetre le texte en gras ( italique : em ). Chacune est ouverte : <balise1> puis ferm\u00e9e </balise1> au fur et \u00e0 mesure. L'ordre dans lequel on ouvre et on ferme les balise a de l'importance. Il n'aurait pas \u00e9t\u00e9 possible, par exemple, d'\u00e9crire : < h1 > Voici mon titre ! </ h1 > < p > J'\u00e9cris ensuite un < strong > paragraphe </ p > . </ strong > p ayant \u00e9t\u00e9 ouverte avant strong , elle doit \u00eatre referm\u00e9e avant \u00e9galement. A.2. Les attributs \u00b6 Il peut y avoir plusieurs paragraphes dans une page. Pour identifier un paragraphe en particulier, on peut lui ajouter un attribut id : Exemple : < h1 > Voici mon titre ! </ h1 > < p id = \"paragraphe1\" > J'\u00e9cris ensuite un < strong > paragraphe </ p > . </ strong > Cela va permettre, avec les autres langages du Web, de faire un traitement sur ce paragraphe uniquement. On peut aussi utiliser l'attribut class , qui peut \u00eatre utilis\u00e9 plusieurs fois, alors qu'un id est unique ! Les attributs servent en g\u00e9n\u00e9ral \u00e0 ajouter des propri\u00e9t\u00e9s aux balises. Exemples : la balise a pour les liens hypertextes, l'attribut href indiquant la localisation de la page \u00e0 lier : A compl\u00e9ter < a href = \"https://openclassrooms.com/fr/\" > OpenClassrooms </ a > la balise img pour ins\u00e9rer une image, l'attribut src indiquant o\u00f9 se trouve l'image \u00e0 afficher : A compl\u00e9ter < img src = \"ascii.png\" alt = \"code_ascii\" /> Remarque : img est une balise \u00e0 la fois ouvrante et fermante ( auto-fermante ). Il en existe d'autres, comme la balise br qui sert \u00e0 sauter des lignes, et s'utilise de la m\u00eame fa\u00e7on. B. Une page minimale \u00b6 <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > </ head > < body > < h1 > Le HTML </ h1 > < p > Voici le contenu de ma page sur le HTML. </ p > </ body > </ html > Relever les diff\u00e9rentes balises et indiquer leur fonction. Balise Fonction html d\u00e9limite le code en html head d\u00e9finit l'ent\u00eate du fichier meta permet de d\u00e9finir l'encodage utilis\u00e9 pour le texte avec l'attribut charset title d\u00e9finit le titre en haut de la barre de navigation body correspond au corps de la page Cours : Le CSS \u00b6 Le HTML permet de jouer un peu sur la forme du contenu affich\u00e9, mais c'est le CSS qui permet de faire beaucoup plus. A. Les bases du CSS \u00b6 Le code en CSS peut s'\u00e9crire \u00e0 l'int\u00e9rieur d'une page en HTML, ou bien dans un fichier s\u00e9par\u00e9. Pour plus de clart\u00e9, on pr\u00e9f\u00e8re cette deuxi\u00e8me solution. Dans un fichier en .css, on \u00e9crit le code suivant : h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } Il est associ\u00e9 au HTML suivant : < h1 > Pr\u00e9sentation </ h1 > < p > Voici ma page de pr\u00e9sentation. </ p > < br /> < p class = \"special\" > Elle est tr\u00e8s sp\u00e9ciale ! </ p > Quelle est la structure utilis\u00e9e ? A la suite soit du nom d'une balise , soit de celui d'une classe (pr\u00e9c\u00e9d\u00e9e d'un . ), on donne entre accolades des valeurs pour diff\u00e9rentes propri\u00e9t\u00e9s, qui modifient l'apparence du contenu de la balise. Comment s'attend-on \u00e0 voir appara\u00eetre les titres de niveau 1 ? Ils doivent appara\u00eetre centr\u00e9s et sur un fond de couleur rouge. Comment s'attend-on \u00e0 voir appara\u00eetre chacun des paragraphes ? Le premier doit appara\u00eetre dans la police Verdana, en noir. Le deuxi\u00e8me est associ\u00e9 \u00e0 la classe special et appara\u00eetra en bleu, en italique et en 25px. B. Lier CSS et HTML \u00b6 Pour que le code pr\u00e9c\u00e9dent s'applique \u00e0 notre texte, il faut lier le fichier HTML et le fichier CSS. On propose le fichier HTML suivant : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > Le CSS </ h1 > < p > Voici le contenu de ma page sur le CSS. </ p > </ body > </ html > Entourer la ligne qui a chang\u00e9, par rapport au fichier de base vu dans la partie sur le HTML. Il s'agit de la 3\u00e8me ligne de l'ent\u00eate. Quel est le nom de la balise utilis\u00e9e pour relier le fichier CSS au fichier HTML ? Quels sont ses attributs ? Il s'agit de la balise link dont les attributs sont rel (donne des informations sur le type de la ressource) et href qui indique le chemin vers le fichier .css. TP : HTML et CSS \u00b6 Pr\u00e9paration T\u00e9l\u00e9charger le fichier HTML qui servira de base \u00e0 vos pages : base.html L'enregistrer dans un dossier site_web , \u00e0 l'int\u00e9rieur de votre dossier NSI . Faire une copie du fichier et la renommer en presentation.html . Renommer le fichier initial et l'appeler critique.html , Ouvrir vos deux fichiers avec votre \u00e9diteur de texte (Notepad++ ou Bloc-notes). A. Les fichiers HTML \u00b6 Sur ces deux pages HTML, vous allez pr\u00e9senter un film de votre choix sur la page presentation.html , et donner un (court) avis sur le film sur la page critique.html . Vous allez remplir le corps de vos deux pages Web avec les \u00e9l\u00e9ments suivants : 1. Des titres de diff\u00e9rents niveaux (balises <h1> , <h2> ,...), du texte sous la forme de paragraphes ( <p> ) et de liste ( <ul> ) d'\u00e9l\u00e9ments. 2. Des images (balise auto-fermante <img .../> ). 3. Sur chaque page, un lien hypertexte vers l'autre page (balise <a href=...> ). 4. Un lien hypertexte vers un autre site web (idem). 5. Les mots-cl\u00e9s doivent \u00eatre en gras ou bien en italique ( <strong> et <em> ). 6. Une vid\u00e9o embarqu\u00e9e Youtube contenant la bande-annonce du film. Indications Pour la vid\u00e9o Youtube : - Aller sur le site de https://youtube.com et trouver la vid\u00e9o de votre choix, - cliquer sur \"Partager\" puis sur \"Int\u00e9grer\", - copier/coller le code HTML qui s'affiche (d\u00e9limit\u00e9 par une balise <iframe> ) dans le corps de votre page. Pour tout le reste, se r\u00e9f\u00e9rer \u00e0 la fiche memento distribu\u00e9e et, bien s\u00fbr, au cours . Exemple de rendu : B. La feuille de style \u00b6 Pr\u00e9paration A partir de votre \u00e9diteur de texte, cr\u00e9er un nouveau fichier. L'enregistrer sous style.css dans votre dossier site_web . Pour rajouter du style \u00e0 vos pages, il faut d\u00e9finir la feuille de style style.css . Rajouter la ligne qui permet de lier un fichier .html \u00e0 un fichier .css dans l'ent\u00eate de vos deux fichiers presentation.html et critique.html . D\u00e9finir un style pour vos pages. Vous allez utiliser au moins 5 des propri\u00e9t\u00e9s r\u00e9pertori\u00e9es dans le tableau suivant (libre \u00e0 vous d'en utiliser plus, ou d'autres !) : Propri\u00e9t\u00e9 Description Valeurs possibles font-family police du texte d'un \u00e9l\u00e9ment Arial, Verdana, Sans serif,... font-style permet de mettre en italique italic , oblique , normal color couleur du texte d'un \u00e9l\u00e9ment en anglais ( red ), en hexad\u00e9cimal ( #000000 ), en RGB ( rgb(255,255,255) ) background-color couleur de fond 'un \u00e9l\u00e9ment comme pour color width , height respectivement largeur et hauteur d'un \u00e9l\u00e9ment comme pour font-size background-image image d'arri\u00e8re-plan url(\"../chemin_vers_ressource\") Indications Rappelez-vous que vous pouvez s\u00e9lectionner les types de balises ( h1 , h2 , p ...) ou bien les \u00e9l\u00e9ments d'une classe en rajoutant cet attribut. Vous pouvez ensuite appliquer un style \u00e0 certains \u00e9l\u00e9ments d'un type, ou bien \u00e0 un seul \u00e9l\u00e9ment. Exemple de rendu :","title":"III. Les langages du Web HTML et CSS"},{"location":"1ere/seq4/langages_web/#iii-les-langages-du-web","text":"","title":"III. Les langages du Web"},{"location":"1ere/seq4/langages_web/#cours-le-html","text":"Le langage HTML sert \u00e0 structurer le contenu d'une page Web. Son nom, \"hypertexte\" fait r\u00e9f\u00e9rence \u00e0 son r\u00f4le dans la pr\u00e9sentation de l'information, du texte jusqu'\u00e0 d'autres contenus multim\u00e9dias.","title":"Cours : le HTML"},{"location":"1ere/seq4/langages_web/#cours-le-css","text":"Le HTML permet de jouer un peu sur la forme du contenu affich\u00e9, mais c'est le CSS qui permet de faire beaucoup plus.","title":"Cours : Le CSS"},{"location":"1ere/seq4/langages_web/#tp-html-et-css","text":"Pr\u00e9paration T\u00e9l\u00e9charger le fichier HTML qui servira de base \u00e0 vos pages : base.html L'enregistrer dans un dossier site_web , \u00e0 l'int\u00e9rieur de votre dossier NSI . Faire une copie du fichier et la renommer en presentation.html . Renommer le fichier initial et l'appeler critique.html , Ouvrir vos deux fichiers avec votre \u00e9diteur de texte (Notepad++ ou Bloc-notes).","title":"TP : HTML et CSS"},{"location":"1ere/seq4/texte_machine/","text":"body { text-align: justify} I. Repr\u00e9senter le texte en machine \u00b6 Cours \u00b6 A. Le code ASCII \u00b6 Le code ASCII (American Standard Code for Information Interchange) a \u00e9t\u00e9 propos\u00e9 dans les ann\u00e9es 60 pour standardiser la repr\u00e9sentation des caract\u00e8res. Les mots sont stock\u00e9s sur 1 octet, et seul les 128 premi\u00e8res valeurs sont utilis\u00e9es. Combien de bits sont utilis\u00e9s ? Pour coder 128 valeurs (de 0 \u00e0 127), il faut 7 bits car \\(2^7=128\\) . Il reste donc 1 bit non-utilis\u00e9 sur cet octet. Il ne permet que de repr\u00e9senter les caract\u00e8res principaux de la langue anglaise, ainsi que des caract\u00e8res non-imprimables (comme le retour \u00e0 la ligne). Il pose un probl\u00e8me pour repr\u00e9senter certains caract\u00e8res du fran\u00e7ais, qui n'existent pas dans la langue anglaise. Quels caract\u00e8res ne sont pas repr\u00e9sentables ? Les caract\u00e8res accentu\u00e9s, ou bien le \"\u00e7\" par exemple posent probl\u00e8me. En programmation, on peut avoir l'\u00e9quivalence avec les fonctions ord et chr : >>> ord ( \"k\" ) 107 >>> chr ( 52 ) '4' B. La norme ISO 8859-1 \u00b6 Pour pallier ce probl\u00e8me, la norme ISO 8859-1 , aussi appel\u00e9e Latin-1 a vu le jour pour repr\u00e9senter tous les caract\u00e8res de l'alphabet latin (au nombre de 191) en utilisant 8 bits. Pourquoi est-ce suffisant ? Sur 8 bits, on peut repr\u00e9senter $2^8=256 caract\u00e8res (de 0 \u00e0 255). C'est donc suffisant pour repr\u00e9senter 191 caract\u00e8res. Cette norme permet donc de repr\u00e9senter les caract\u00e8res utilis\u00e9s dans la plupart des langues europ\u00e9ennes. Mais elle laisse de c\u00f4t\u00e9 d'autres alphabets, comme le cyrillique, ou bien les id\u00e9ogrammes utilis\u00e9s en chinois ou en japonais. C. Unicode \u00b6 En 1991 voit le jour la norme qui est utilis\u00e9e aujourd'hui par plus de 95% des sites web : Unicode . Comme son nom l'indique, elle a pour vocation d'int\u00e9grer tous les caract\u00e8res existants, pour pouvoir lire n'importe quel texte sans avoir \u00e0 changer la configuration de son traitement de texte. C'est une table qui r\u00e9pertorie tous les codages existants : elle ne cr\u00e9e pas un nouveau codage. Elle int\u00e8gre donc notamment le code ASCII . Les syst\u00e8mes de codage sont UTF-8 (utilis\u00e9e sur le Web), UTF-16, UTF-32 (des variations, utilisant plus de bits). Pour UTF-8 , les caract\u00e8res sont encod\u00e9s avec un nombre variable d'octets : - les caract\u00e8res les plus \"classiques\" sont cod\u00e9s sur 1 octet (ils correspondent au code ASCII) , - les caract\u00e8res moins classiques peuvent \u00eatre cod\u00e9s sur jusqu'\u00e0 4 octets . Dans un logiciel de traitement de texte, voici par exemple ce qui s'affiche lorsque l'on veut repr\u00e9senter des caract\u00e8res sp\u00e9ciaux : Entourer le code Unicode qui appara\u00eet. TD : Utiliser les normes de repr\u00e9sentation du texte \u00b6 A. Le code ASCII \u00b6 Voil\u00e0 la table donnant l'\u00e9quivalence entre les diff\u00e9rents caract\u00e8res et leur code ASCII : Quel mot est repr\u00e9sent\u00e9 par la suite de nombres, \u00e9crits en d\u00e9cimal, suivante : 72 101 108 108 111 ? Donner son codage en hexad\u00e9cimal. Le caract\u00e8re \"9\" est-il repr\u00e9sent\u00e9 par le chiffre 9 ? Identifier les diff\u00e9rentes cat\u00e9gories de caract\u00e8res, et les associer aux bonnes plages de nombres. B. Norme ISO 8859-1 \u00b6 On donne la table suivante, indiquant comment sont cod\u00e9s les caract\u00e8res avec la norme ISO 8859-1 : Le nombre repr\u00e9sentant chaque symbole est donn\u00e9 en h\u00e9xad\u00e9cimal, \u00e9crit avec 2 symboles. Sur la colonne est indiqu\u00e9e le symbole de rang 1, sur la ligne le symbole de rang 0. Gr\u00e2ce \u00e0 cette table, indiquer comment est repr\u00e9sent\u00e9e les cha\u00eenes de caract\u00e8res \"\u00e9t\u00e9\" et \"F\u00caTE\" en machine, en utilisant la notation hexad\u00e9cimale. Convertir le r\u00e9sultat en d\u00e9cimal pour \"\u00e9t\u00e9\". Ces mots pourraient-ils \u00eatre repr\u00e9sent\u00e9s avec le code ASCII ? Justifier.","title":"I. Repr\u00e9sentation du texte en machine"},{"location":"1ere/seq4/texte_machine/#i-representer-le-texte-en-machine","text":"","title":"I. Repr\u00e9senter le texte en machine"},{"location":"1ere/seq4/texte_machine/#cours","text":"","title":"Cours"},{"location":"1ere/seq4/texte_machine/#td-utiliser-les-normes-de-representation-du-texte","text":"","title":"TD : Utiliser les normes de repr\u00e9sentation du texte"},{"location":"1ere/seq5/client_serveur/","text":"body { text-align: justify} II. Le mod\u00e8le client-serveur \u00b6 Cours \u00b6 Pour obtenir une page Web, votre navigateur va faire une demande, une requ\u00eate au serveur Web sur lequel elle est stock\u00e9e. Qu'est-ce qu'un serveur Web ? C'est une machine capable de r\u00e9pondre \u00e0 des requ\u00eates de l'application Web. Elle stocke les pages Web d'un ou de plusieurs sites au(x)quel(s) des navigateurs peuvent se connecter. A. Localiser la page gr\u00e2ce \u00e0 l'URL \u00b6 Pour localiser une page Web, et le serveur sur lequel elle est stock\u00e9e, l' URL, pour Uniform Ressource Locator de la page est indispensable. Elle est construite selon une structure pr\u00e9d\u00e9finie. Exemple Prenons l'exemple suivant : https://pixees.fr/informatiquelycee/prem/index3.html https ou http, correspond au protocole de communication utilis\u00e9. pixees.fr est le nom de domaine, permettant d'identifier le serveur web qui stocke le site. Quel est le lien entre nom de domaine et adresse IP ? Un nom de domaine est associ\u00e9 \u00e0 une adresse IP via l'annuaire DNS. Comment est structur\u00e9e une adresse IP ? L'adresse IP, qui identifie de mani\u00e8re unique une machine sur le r\u00e9seau, est constitu\u00e9e au format IPv4 de 4 nombres cod\u00e9s sur 1 octet (de 0 \u00e0 255). /informatiquelycee/prem/index3.html est le chemin d'acc\u00e8s au fichier html, sur le serveur. Il suit une arborescence. Une arborescence de fichiers correspond \u00e0 la repr\u00e9sentation de leur hi\u00e9rarchie les uns par rapport aux autres. Sur notre exemple pr\u00e9c\u00e9dent, on peut la repr\u00e9senter la mani\u00e8re suivante. graph TB G[.] --> D G --> I[actualites] D[informatiquelycee] --> A A[sec] --> B(index1.html) D --> C[prem] C --> H(index2.html) D --> E[term] E --> F(index3.html) C'est une structure d' arbre , constitu\u00e9 de noeuds . Le noeud tout en haut est appel\u00e9 racine : de lui, on sait aller partout dans le reste de la structure. Un chemin depuis la racine est nomm\u00e9 chemin absolu . Donner le chemin de la racine au fichier index1.html . ./informatiquelycee/sec/index1.html En d\u00e9duire l'URL permettant d'acc\u00e9der \u00e0 cette page. https://pixees.fr/informatiquelycee/sec/index1.html On se trouve dans informatiquelycee . Quel est le chemin, \u00e0 partir de ce dossier, pour acc\u00e9der \u00e0 index3.html ? /term/index3.html On parle alors de chemin relatif . B. Le mod\u00e8le client-serveur \u00b6 La page est localis\u00e9e, on sait o\u00f9 elle se trouve et sur quel serveur. Notre navigateur va entrer en connexion avec le serveur, selon le mod\u00e8le client-serveur : D\u00e9finitions Le client demande l'acc\u00e8s aux pages par une requ\u00eate. Le serveur r\u00e9pond \u00e0 cette requ\u00eate : si tout se passe bien il envoie le contenu des pages, sinon un message d'erreur. C'est une relation asym\u00e9trique, qui est la plus courante sur le Web. B.I. Exemples d'interactions entre client et serveur \u00b6 Il faut plusieurs \u00e9changes de requ\u00eates pour obtenir l'ensemble d'une page Web : sequenceDiagram participant c as Client participant s as Serveur c->>s: Puis-je avoir la ressource index.html ? s->>c: Oui, la voil\u00e0 c->>s: Il me faudrait aussi les images qui sont sur la page, svp s->>c: Ca arrive ! Ces \u00e9changes peuvent \u00eatre visualis\u00e9s gr\u00e2ce \u00e0 l' inspecteur de propri\u00e9t\u00e9s du navigateur (F12 sous Windows). B.II. Scripts c\u00f4t\u00e9 client et c\u00f4t\u00e9 serveur \u00b6 Un script c\u00f4t\u00e9 client sert \u00e0 rendre la page dynamique. Elle est ex\u00e9cut\u00e9e par le navigateur, pour ne pas surcharger de calculs le serveur. Le Javascript est le langage couramment utilis\u00e9. Un script c\u00f4t\u00e9 serveur est g\u00e9n\u00e9ralement utilis\u00e9 pour collecter ou modifier des donn\u00e9es qu'ils stocke dans une base. Le langage de programmation PHP est couramment utilis\u00e9. Les donn\u00e9es peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es par un formulaire, qui se d\u00e9clare en HTML avec la balise form , et contient des composants graphiques, comme par exemple : Voici un exemple de code PHP qui affiche les donn\u00e9es r\u00e9colt\u00e9es avec ce formulaire : <?php $login_connexion = $_GET [ 'login' ]; $mot_de_passe = $_GET [ 'password' ]; echo 'Les informations transmises au serveur sont :<br/>' ; echo $login_connexion ; echo '<br/>' ; echo $mot_de_passe ; ?> TP : Simulation d'un serveur Web \u00b6 En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher : A. Le r\u00e9seau \u00b6 a. Indiquer, parmi les diff\u00e9rents types de machines cit\u00e9es ci-dessous, si elles sont pr\u00e9sentes ou non sur notre r\u00e9seau : Ordinateur : Portable : Switch : Routeur : Modem : b. A quel type de machine correspond le serveur Web ? ...................................... Les configurations n\u00e9cessaires ont \u00e9t\u00e9 faites pour que l\u2019ordinateur \"Serveur Web\" soit connect\u00e9 aux autres r\u00e9seaux locaux. Obtenir l'adresse IP qui lui a \u00e9t\u00e9 attribu\u00e9e, en double-cliquant sur la machine : ...................................... Rappel SNT : L'adresse IP d'une machine sert \u00e0 l'identifier de mani\u00e8re unique sur un r\u00e9seau. Au format IPv4, elle est constitu\u00e9e de 4 nombres de 0 \u00e0 255. B. Mise en place du serveur \u00b6 Passer en mode simulation en cliquant sur la fl\u00e8che verte puis cliquer sur un des ordinateurs portables. Aller sur \"Installation des logiciels\", puis faire passer \"Ligne de commande\" dans la liste des logiciels install\u00e9s. Appliquer les modifications, puis cliquer sur ce logiciel \"Ligne de commande\". Tester la connexion entre cette machine et le serveur en tapant ping suivi de l'adresse IP du serveur Web relev\u00e9e dans la partie A. Cliquer sur \"Serveur Web\", puis sur Installation des logiciels. Dans la liste de droite, double-cliquer sur \"Explorateur de fichiers\" , \"Editeur de textes\" et \"Serveur web\" , puis sur \"Appliquer les modifications\". Double-cliquer sur l\u2019 explorateur de fichiers , aller dans le dossier webserver . C\u2019est ici que sont stock\u00e9s les fichiers codant la(les) page(s) web h\u00e9berg\u00e9e(s) sur le serveur. Noter le chemin d'acc\u00e8s \u00e0 index.html : .............................................................................. Quel autre fichier trouvez-vous ? ........................................................ Fermer l\u2019explorateur de fichiers et ouvrir l\u2019 \u00e9diteur de texte . Cliquer sur Fichier > Ouvrir et s\u00e9lectionner le fichier index.html dans le dossier webserver . La structure du contenu du fichier doit vous \u00eatre famili\u00e8re. Modifier le contenu de la page Web pour que s\u2019affiche : Dans le titre principal (balise <h2> ): \"La requ\u00eate HTTP\" Dans le premier paragraphe : \"Voici la page Web contenue sur le serveur. Nous allons y acc\u00e9der \u00e0 partir d'un client : un navigateur Web.\" Dans le deuxi\u00e8me paragraphe : \"Il faudra pour cela taper une URL commen\u00e7ant par le protocole utilis\u00e9 : http, puis indiquer l\u2019adresse IP du serveur\". Le reste peut rester inchang\u00e9. Cliquer sur Fichier > Enregistrer puis fermer l\u2019\u00e9diteur de texte. Double-cliquer sur le serveur web, puis sur D\u00e9marrer. La page Web sera alors accessible pour aux clients (les navigateurs). Fermer le logiciel. Double-cliquer sur un ordinateur portable puis sur \"Installation des logiciels\". Double-cliquer sur \"Navigateur Web\" dans la colonne \u00e0 droite, puis sur Appliquer les modifications. Double-cliquer sur le navigateur web, et entrer l\u2019 adresse IP du serveur web \u00e0 la suite du HTTP . Vous verrez interpr\u00e9t\u00e9e la page web dont le code se trouve dans le fichier index.html sur le serveur web. C. Visualisation des \u00e9changes \u00b6 En faisant un clic droit sur l\u2019ordinateur portable d\u2019o\u00f9 vous avez fait la requ\u00eate HTTP, cliquer sur \"Afficher les \u00e9changes de donn\u00e9es\" . Vous acc\u00e9dez \u00e0 une grande liste. Identifier une requ\u00eate HTTP : elle correspond \u00e0 la couche \u00ab Application \u00bb. Celles commen\u00e7ant par \u00ab GET /HTTP/\u00bb correspondent aux requ\u00eates du client , celles commen\u00e7ant par \u00ab HTTP \u00bb \u00e0 la r\u00e9ponse du serveur . Double-cliquer dessus pour voir le contenu des \u00e9changes.","title":"II. Le mod\u00e8le client-serveur"},{"location":"1ere/seq5/client_serveur/#ii-le-modele-client-serveur","text":"","title":"II. Le mod\u00e8le client-serveur"},{"location":"1ere/seq5/client_serveur/#cours","text":"Pour obtenir une page Web, votre navigateur va faire une demande, une requ\u00eate au serveur Web sur lequel elle est stock\u00e9e. Qu'est-ce qu'un serveur Web ? C'est une machine capable de r\u00e9pondre \u00e0 des requ\u00eates de l'application Web. Elle stocke les pages Web d'un ou de plusieurs sites au(x)quel(s) des navigateurs peuvent se connecter.","title":"Cours"},{"location":"1ere/seq5/client_serveur/#tp-simulation-dun-serveur-web","text":"En utilisant le simulateur de r\u00e9seau Filius , nous allons voir le fonctionnement d'un serveur Web dans un r\u00e9seau simple. T\u00e9l\u00e9charger le fichier nsi_sim_http.fls . Ouvrir Filius, puis cliquer sur l'ic\u00f4ne \"Ouvrir\" et rechercher le fichier. Voici le r\u00e9seau que vous devez voir s'afficher :","title":"TP\u00a0: Simulation d'un serveur Web"},{"location":"1ere/seq5/http_https/","text":"body { text-align: justify} Les requ\u00eates HTTP et HTTPS \u00b6 Cours \u00b6 Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS . A. Exemples de requ\u00eates utilis\u00e9es \u00b6 Exemple de requ\u00eate du client : GET index.html HTTP/1.1 Host : www.example.com Que demande le navigateur ? Il demande \u00e0 acc\u00e9der \u00e0 la page dont l'URL est http://www.example.com/index.html. Exemple de r\u00e9ponse du serveur : HTTP/1.1 200 OK Date : Tue, 2 Mar 2021 08:00:00 GMT Content-Type : text/html ; charset=UTF-8 Content-length : 983 Last-Modified : Wed, 1 Jan 2005 00:00:00 GMT < html > < head >< title > Une page de test </ title ></ head > < body > Un document tr\u00e8s simple. </ body > </ html > Que renvoie le serveur ? Il renvoie le code HTML de la page, ainsi que des informations compl\u00e9mentaires contenues dans l'ent\u00eate de la r\u00e9ponse : par exemple la date d'envoi, le type et la longueur du contenu, la date de sa derni\u00e8re modification. B. Les diff\u00e9rentes m\u00e9thodes \u00b6 Le GET est une m\u00e9thode : une demande au serveur d'effectuer une certaine action. Dans notre cas, d'acc\u00e9der \u00e0 une ressource. On peut demander diff\u00e9rentes actions au serveur : - POST permet d'envoyer des donn\u00e9es au serveur, pour qu'il les traite. - PUT permet de modifier des donn\u00e9es sur le serveur, - DELETE permet de supprimer des donn\u00e9es sur le serveur. Exemple de l'envoi d'un formulaire A partir des pages https://www.cahier-nsi.fr/formulaire1/ et /formulaire2/, r\u00e9cup\u00e9rant les informations suivantes : On peut envoyer des donn\u00e9es avec la m\u00e9thode GET. Cependant, celle-ci est \u00e0 la base faite pour en r\u00e9cup\u00e9rer (elle n'a pas de contenu !) . O\u00f9 les donn\u00e9es transmises apparaissent-elles alors ? Elles apparaissent dans l'URL. On envoie classiquement des donn\u00e9es avec la m\u00e9thode POST. Cette requ\u00eate a un contenu, qui peut stocker ces donn\u00e9es. Sont-elles accessibles ? Elles n'apparaissent pas dans l'URL, mais sont lisibles dans l'inspecteur de propri\u00e9t\u00e9s du navigateur. B. Le protocole HTTPS \u00b6 HTTPS est la version s\u00e9curis\u00e9e de HTTP. Comment remarque-t-on si la connexion avec un serveur web est s\u00e9curis\u00e9e ? On le remarque gr\u00e2ce au nom du protocole HTTPS indiqu\u00e9 dans l'URL, et \u00e0 l'apparition d'un cadenas dans le navigateur. Voici ce qu'il se passe lorsque l'on utilise HTTPS : sequenceDiagram participant c as Client participant s as Serveur c->>s: Je voudrais me connecter de mani\u00e8re s\u00e9curis\u00e9e. s->>c: D'accord, je vous envoie mon certificat SSL. c->>s: Ca me va, communiquons de mani\u00e8re chiffr\u00e9e. s->>c: C'est parti, maintenant que vous pouvez \u00eatre s\u00fbr que c'est bien moi. Qu'est-ce qu'une communication chiffr\u00e9e ? C'est une communication dont le contenu n'est pas imm\u00e9diatement d\u00e9chiffrable : il faut une information suppl\u00e9mentaire pour le comprendre, appel\u00e9e la cl\u00e9 de chiffrement.","title":"III. Les requ\u00eates HTTP et HTTPS"},{"location":"1ere/seq5/http_https/#les-requetes-http-et-https","text":"","title":"Les requ\u00eates HTTP et HTTPS"},{"location":"1ere/seq5/http_https/#cours","text":"Pour communiquer, le client (le navigateur) et le serveur utilisent le protocole HTTP (HyperText Transfer Protocol) ou sa version s\u00e9curis\u00e9e HTTPS .","title":"Cours"},{"location":"1ere/seq5/interactions_js/","text":"body { text-align: justify} I. Interagir avec l'utilisateur \u00b6 Cours \u00b6 Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript . A. Int\u00e9grer du Javascript \u00e0 une page Web \u00b6 On a vu pr\u00e9c\u00e9demment que pour associer un fichier CSS \u00e0 un fichier HTML, il fallait ajouter la balise link dans l'ent\u00eate. Pour associer un fichier en Javascript , c'est-\u00e0-dire en .js , \u00e0 un fichier HTML, il faut aussi ajouter une balise dans ce fichier, comme sur l'exemple ci-dessous : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > NSI - Le Web </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > </ body > < script src = \"script.js\" ></ script > </ html > Quel est le nom de la balise utilis\u00e9e ? La balise utilis\u00e9e est script . Quel est le nom du fichier \u00e9crit en Javascript ? Le nom du fichier est script.js . O\u00f9 se trouve la balise ? Elle se trouve ici apr\u00e8s la balise body (apr\u00e8s la balise fermante). B. R\u00e9pondre \u00e0 des \u00e9v\u00e8nements avec du Javascript \u00b6 B.I. Les \u00e9v\u00e8nements \u00b6 Le Javascript va nous permettre de r\u00e9pondre \u00e0 des \u00e9v\u00e8nements , c'est \u00e0 dire \u00e0 des actions de l'utilisateur . Comment l'utilisateur peut-il interagir avec une page ? Il peut interagir avec la souris ou le clavier (des p\u00e9riph\u00e9riques d'entr\u00e9e de la machine). Avec la souris, il peut cliquer, on passer sur un \u00e9l\u00e9ment d'une page. Il existe un certain nombre d' \u00e9v\u00e8nements en HTML, dont voici une liste non-exhaustive : Ev\u00e8nement Action onclick clic de souris sur un \u00e9l\u00e9ment onmouseover survol d'un \u00e9l\u00e9ment onmouseout fin du survol d'un \u00e9l\u00e9ment onkeydown appui d'une touche du clavier onload chargement de la page B.II. R\u00e9pondre aux \u00e9v\u00e8nements \u00b6 Pour r\u00e9pondre \u00e0 un \u00e9v\u00e8nement, comme un clic de souris sur un bouton, il faut associer l'\u00e9v\u00e8nement \u00e0 une action par l'interm\u00e9diaire d'une fonction \u00e9crite en Javascript . On ins\u00e8re un bouton sur la page HTML, et on l'associe \u00e0 une fonction : < button onclick = \"maFonction()\" > Cliquer ici </ button > Note : on peut aussi utiliser la balise input , associ\u00e9e au type button . La fonction maFonction doit \u00eatre \u00e9crite dans le fichier script.js . L'objectif de ce cours n'est pas que vous ma\u00eetrisiez le Javascript, mais que vous compreniez et sachiez modifier des codes simples. Note sur le Javascript : - Une variable var se d\u00e9clare avec le mot-cl\u00e9 let , et se modifie en utilisant var = expression . - On utilise la syntaxe suivante pour une condition : if (expression) {instructions} - Une fonction f se d\u00e9clare avec function f(param\u00e8tres) {instructions} Quelles diff\u00e9rences identifiez-vous avec la syntaxe utilis\u00e9e en Python ? Les blocs d'instructions ne sont pas rep\u00e9r\u00e9s par leur identation mais d\u00e9limit\u00e9s par des accolades. Les mots-cl\u00e9s utilis\u00e9s peuvent \u00eatre diff\u00e9rents, comme function \u00e0 la place de def en Python.*** B.III. Exemple d'action sur le HTML \u00b6 La fonction suivante est \u00e9crite en Javascript et permet de r\u00e9aliser une action sur notre page : function maFonction () { let maBalise = document . getElementById ( \"para1\" ); maBalise . classList . add ( \"special\" ); } Elle est associ\u00e9e au code HTML suivant (seul le body est repr\u00e9sent\u00e9) : < h1 > HTML, CSS, et maintenant Javascript </ h1 > < p > Voici le contenu de ma page sur le Javascript. </ p > < p id = \"para1\" > Je veux changer l'apparence de ce paragraphe. </ p > < button onclick = \"maFonction()\" > Cliquer ici </ button > Le code HTML est associ\u00e9 au CSS suivant : h1 { text-align : center ; background-color : red ; } p { font-family : Verdana ; color : black ; } . special { color : blue ; font-size : 25 px ; font-style : italic ; } On a utilis\u00e9 la fonction getElementById pour s\u00e9lectionner un composant de la page HTML. Comment celui-ci est-il identifi\u00e9 ? Il est identifi\u00e9e par la valeur para1 , qui correspond \u00e0 l'identifiant d'un composant de notre page HTML. Analyser la deuxi\u00e8me ligne du corps de maFonction pour comprendre ce qu'elle fait (utiliser les noms des fonctions) . Elle ajoute le composant stock\u00e9 dans la variable maBalise \u00e0 la classe special . Que va-t-il se passer lorsque l'on cliquera sur le bouton ? La classe special \u00e9tant associ\u00e9e \u00e0 un style diff\u00e9rent, le contenu de para1 va alors s'afficher en bleu, italique, et en plus gros. C. Le Document Object Model (DOM) \u00b6 Si l'on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments d'une page HTML avec du Javascript, c'est gr\u00e2ce \u00e0 sa repr\u00e9sentation sous la forme d'une structure appel\u00e9e Document Object Model (DOM) . Il repr\u00e9sente hi\u00e9rarchiquement les diff\u00e9rentes balises d'une page HTML, qui deviennent, non plus juste du texte, mais un ensemble d'objets qui peuvent \u00eatre manipul\u00e9s. Ceux au-dessus des autres sont les \"parents\" des \u00e9l\u00e9ments \"enfants\". graph TB A(html) --> B(head) A --> C(body) B --> F(meta) C --> H(h1) C --> I(h2) C --> K(p) Gr\u00e2ce \u00e0 cette repr\u00e9sentation, on peut acc\u00e9der aux diff\u00e9rents \u00e9l\u00e9ments et les modifier gr\u00e2ce \u00e0 la biblioth\u00e8que JQuery (Javascript pour le Web). Remarque : Nous avons vu la fonction getElementById , permettant d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment par son id , mais il existe aussi : - getElementByClassName permettant d'acc\u00e9der aux \u00e9l\u00e9m\u00e9nts d'une classe , - getElementByTagName permettant d'acc\u00e9der \u00e0 tous les \u00e9l\u00e9ments d'un m\u00eame type ( p , h1 ,...) , - et encore d'autres. TP : Composants graphiques et interactions sur le Web \u00b6 Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques . A. Les composants graphiques \u00b6 Pour ins\u00e9rer des composants graphiques de diff\u00e9rents types, on utilise la balise <input type=...> dans le code HTML. Identifier les composants graphiques pr\u00e9sents dans la page, \u00e0 partir de la liste ci-dessous : Identifier comment chacun des composants sont cod\u00e9s dans le code HTML, et compl\u00e9ter, pour chacun, la valeur de leur attribut type et id : Composant graphique Valeur de l'attribut type Identifiant unique (attribut id ) Dans le composant graphique de zone de texte, entrer un entier en d\u00e9cimal, \u00e0 convertir. S\u00e9lectionner que vous voulez le convertir en binaire. a. Que faut-il faire pour que le calcul de conversion soit lanc\u00e9 ? b. En regardant le code HTML, identifier \u00e0 quel attribut du composant graphique identifi\u00e9 cette action peut \u00eatre associ\u00e9e. Rafra\u00eechir la page. a. Qu'est-ce qui a chang\u00e9 ? b. Quel est l'attribut de la balise body qui peut correspondre \u00e0 cette action ? Les attributs identifi\u00e9s dans les questions 3 et 4 correspondent \u00e0 des gestionnaires d'\u00e9v\u00e8nements , qui permettent l'ex\u00e9cution d'un code Javascript lorsqu'un \u00e9v\u00e8nement se produit. Cet \u00e9v\u00e8nement est d\u00e9clench\u00e9 par l'utilisateur. B. Le code Javascript \u00b6 Analysons le code Javascript de la fonction Calcul . getElementById(\"valeur_id\") permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment dont l'identifiant est \"valeur_id\" (c'est une fonction un peu particuli\u00e8re, appel\u00e9e \"m\u00e9thode\"). Celui-ci \u00e9tant unique, c'est une mani\u00e8re pratique d'acc\u00e9der directement \u00e0 un composant graphique par exemple. 1. D\u00e9composer la premi\u00e8re instruction de la fonction Calcul : entier = Number(document.getElementById(\"entier\").value); Partie de l'instruction qui renvoie la valeur du composant graphique ayant pour id la valeur \"entier\" : Conversion d'une cha\u00eene de caract\u00e8res en nombre : Stockage du nombre dans une variable : La fonction teste la condition suivante : document.getElementById(\"binaire\").checked . Quel est le type renvoy\u00e9 par cette expression ? Que teste-t-elle ? Entrer un entier en d\u00e9cimal \u00e0 convertir dans la zone de texte qui convient et cocher le bon bouton radio pour demander une conversion en hexad\u00e9cimal. a. Que se passe-t-il ? b. Lire le code Javascript de la fonction Calcul et expliquer ce qu'il s'est pass\u00e9. Modifier la fonction Calcul pour que l'on puisse aussi faire la conversion en hexad\u00e9cimal. Indications sur le Javascript En Javascript, la d\u00e9claration d'une variable se fait avec le mot-cl\u00e9 let suivi du nom de la variable. La m\u00e9thode nombre.toString(base) renvoie nombre sous la forme d'une cha\u00eene de caract\u00e8res, dans la base base . TP : De l'interaction \u00e0 votre site Web \u00b6 Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP. Exercices \u00b6 Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"I. Interagir avec l'utilisateur"},{"location":"1ere/seq5/interactions_js/#i-interagir-avec-lutilisateur","text":"","title":"I. Interagir avec l'utilisateur"},{"location":"1ere/seq5/interactions_js/#cours","text":"Les pages Web que vous avez cr\u00e9\u00e9es jusqu'\u00e0 pr\u00e9sent avec du HTML et du CSS sont des pages statiques : elles ne sont pas modifiables. Nous allons cr\u00e9er des pages dynamiques en integrant des langages de programmation. Un langage qui est devenu incontournable sur le Web pour cr\u00e9er des interactions avec l'utilisateur est le Javascript .","title":"Cours"},{"location":"1ere/seq5/interactions_js/#tp-composants-graphiques-et-interactions-sur-le-web","text":"Ouvrir le TP correspondant au code Capytale 3db2-1205102 . La page Web que nous allons \u00e9tudier est cod\u00e9e avec du HTML et du Javascript. Contrairement \u00e0 une page cod\u00e9e avec uniquement du HTML (et CSS), qui est dite statique , une page dans laquelle on utilise un langage de programmation comme le Javascript est dite dynamique . C'est-\u00e0-dire que l'utilisateur peut modifier la page, gr\u00e2ce \u00e0 des composants graphiques .","title":"TP : Composants graphiques et interactions sur le Web"},{"location":"1ere/seq5/interactions_js/#tp-de-linteraction-a-votre-site-web","text":"Nous allons reprendre vos pages HTML/CSS d\u00e9crivant un film de votre choix, pour y ajouter de l'interactivit\u00e9 en permettant \u00e0 un visiteur d'indiquer s'il a aim\u00e9 le film que vous avez pr\u00e9sent\u00e9, ou non. Ouvrir votre fichier critique.html dans votre \u00e9diteur de texte. Cr\u00e9er un nouveau fichier script.js et l'associer \u00e0 critique.html en rajoutant la ligne correspondante apr\u00e8s le body . Ajouter \u00e0 critique.html une partie contenant des statistiques sur le film : - deux boutons poussoirs \"J'aime\" et \"Je n'aime pas\", - deux zones de texte indiquant combien de fois on a cliqu\u00e9, respectivement, sur \"J'aime\" et sur \"Je n'aime pas\", - Un paragraphe indiquant la date et l' heure \u00e0 laquelle la page a \u00e9t\u00e9 charg\u00e9e. Exemple Il faut donc que : - un clic sur le bouton \"J'aime\" fasse appel \u00e0 une fonction Ajouter_Aime(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - un clic sur le bouton \"Je n'aime\" pas fasse appel \u00e0 une fonction Ajouter_AimePas(val) \u00e9crite en Javascript, ajoutant la valeur 1 \u00e0 la valeur d\u00e9j\u00e0 indiqu\u00e9e dans la zone de texte correspondante, - une fonction AfficheDate() soit appel\u00e9e au chargement du corps de la page. Indications : Les fonctions Ajouter_Aime(val) et Ajouter_AimePas(val) doivent \u00eatre inspir\u00e9es de la fonction Calcul() du TP pr\u00e9c\u00e9dent, fait sur Capytale. Elles vont r\u00e9cup\u00e9rer la valeur de la zone de texte correspondante, calculent sa nouvelle valeur en l'additionnant \u00e0 val , puis modifie la valeur de la zone de texte. La fonction AfficheDate() fait r\u00e9f\u00e9rence \u00e0 la fonction init() du m\u00eame TP.","title":"TP : De l'interaction \u00e0 votre site Web"},{"location":"1ere/seq5/interactions_js/#exercices","text":"Modifier la fonction Javascript maFonction() pour qu'un clic de souris : - change la couleur du paragraphe para1 en rouge sans passer par l'association \u00e0 une classe, - modifie son texte. l'attribut style permet de modifier les valeurs des s\u00e9lecteurs du CSS, l'attribut innerHTML permet de modifier le contenu texte d'un \u00e9l\u00e9ment du DOM.","title":"Exercices"},{"location":"1ere/seq5/programme/","text":"Programme \u00b6","title":"Programme"},{"location":"1ere/seq5/programme/#programme","text":"","title":"Programme"},{"location":"1ere/seq5/synthese/","text":"body { text-align: justify} TD : Exercices sur les interactions sur le Web \u00b6 Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"Synth\u00e8se"},{"location":"1ere/seq5/synthese/#td-exercices-sur-les-interactions-sur-le-web","text":"Un internaute clique sur un lien qui envoie la requ\u00eate HTTP suivante \u00e0 un serveur : http://jaimelaneige.com/ma_planche/traitement.php?nom=Snow&prenom=Jon Quelle est l'adresse du serveur ? A jaimelaneige B jaimelaneige.com C jaimelaneige.com/ma_planche D jaimelaneige.com/ma_planche/traitement.php Parmi GET et POST, quelle m\u00e9thode d'envoi de formulaire crypte les informations envoy\u00e9es au serveur ? A les deux : GET et POST B GET seulement C POST seulement D aucune des deux Parmi les r\u00e9ponses suivantes, que permet d\u2019effectuer la m\u00e9thode POST du protocole HTTP ? A D\u00e9finir le style d\u2019une page web B Pirater des donn\u00e9es bancaire C Envoyer une page web vers le client D Envoyer les donn\u00e9es saisies dans un formulaire HTML vers un serveur Une page HTML contient la ligne suivante dans laquelle un mot a \u00e9t\u00e9 remplac\u00e9 par des points de supsension : <p ...... =\"alert('hello')\"> Survolez-moi </p> Au survol de la souris, le message \"hello\" apparait dans une boite de dialogue. Par quel mot faut-il remplacer les points de suspension ? A onmouseout B onmouseover C onmouseleave D onclick Dans une page web, on souhaite cr\u00e9er un bouton permettant l\u2019appel de la fonction javascript traitement() . Quelle ligne d\u2019instructions permettra de le faire ? A <button onclick = \"traitement()\">Cliquez ici</button> B <a href = traitement()>Cliquez ici</a> C <button>Cliquez ici</button = traitement()> D <button>Cliquez ici = traitement()</button> Une page Web contient un formulaire dont le code HTML est le suivant : < form action = \"/action_page.php\" method = \"post\" > First name : < input type = \"text\" name = \"fname\" >< br > Last name : < input type = \"text\" name = \"lname\" >< br > < input type = \"submit\" value = \"Submit\" > </ form > Que peut-on dire des informations transmises dans ce formulaire ? A elles seront enregistr\u00e9es dans l\u2019historique du navigateur B elles seront enregistr\u00e9es dans le cache du navigateur C elles ne devront pas d\u00e9passer une limite en nombre de caract\u00e8res transmis D elles ne seront pas visibles dans la barre du navigateur Quelle m\u00e9thode d\u2019envoi des param\u00e8tres est-il pr\u00e9f\u00e9rable d\u2019utiliser, pour un formulaire d\u2019une page web, destin\u00e9 \u00e0 demander \u00e0 l\u2019utilisateur un mot de passe pour se connecter (le protocole utilis\u00e9 est HTTPS) ? A la m\u00e9thode PASSWORD B la m\u00e9thode CRYPT C la m\u00e9thode GET D la m\u00e9thode POST Pour cr\u00e9er un lien vers la page d'accueil de Wikip\u00e9dia, que devra-t-on \u00e9crire dans une page Web ? A <a target=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> B <a href=\"http://fr.wikipedia.org\" /> C <a href=\"http://fr.wikipedia.org\">Wikip\u00e9dia</a> D <link src=\"http://fr.wikipedia.org\">Wikip\u00e9dia</link> Un fichier HTML contient la ligne suivante. <p>Coucou ! Ca va?</p> Quelle commande CSS \u00e9crire pour que le texte apparaisse en rose sur fond jaune ? A p { couleur: rose ; fond: jaune;} B <p> { color = pink background-color = yellow} C <p> { color = pink ; background-color: yellow} </p> D p { color: pink ; background-color: yellow ;} Que peut-on comprendre en lisant l'URL : https://www.myfalselink.com/results?search_query=NSI ? A Le protocole utilis\u00e9 pour naviguer est s\u00e9curis\u00e9 B Une recherche sur le mot NSI a \u00e9t\u00e9 faite mais il n'y a pas de r\u00e9ponse C Ce site est situ\u00e9 dans un pays anglophone D Le lien ne fonctionnera pas car le caract\u00e8re \u2018?\u2019 n\u2019est pas autoris\u00e9 dans une URL","title":"TD : Exercices sur les interactions sur le Web"},{"location":"1ere/seq6/complexite/","text":"body { text-align: justify} I. Complexit\u00e9 \u00b6 Cours \u00b6 A. La notion d'algorithme \u00b6 Rappel : Les algorithmes ont exist\u00e9 bien avant les programmes informatiques (cf Muhammad Al Khwarizmi, 9\u00e8me si\u00e8cle) . Ces deux notions, bien que li\u00e9es, sont donc diff\u00e9rentes. D\u00e9finition d'un algorithme suite d'instructions appliqu\u00e9e \u00e0 des donn\u00e9es, permettant de r\u00e9soudre un probl\u00e8me. Plus pr\u00e9cis\u00e9ment : on applique dans un ordre pr\u00e9cis des op\u00e9rations \u00e9l\u00e9mentaires \u00e0 des donn\u00e9es d'entr\u00e9e , pour obtenir un r\u00e9sultat en sortie . Compl\u00e9ter le sch\u00e9ma suivant : graph LR A[Valeurs d'entr\u00e9e] --> F[Suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires]; F --> G[Valeurs de sortie] Les valeurs d'entr\u00e9e sont aussi appel\u00e9es param\u00e8tres pour une fonction, et les valeurs de sortie correspondent au r\u00e9sultat de l'algorithme. La \"suite ordonn\u00e9e d'op\u00e9rations \u00e9l\u00e9mentaires\" est traditionnellement \u00e9crite en \"langage naturel\" ou pseudo-code : dans un format qui ressemble \u00e0 celui du code, mais n'utilisant pas la syntaxe d'un langage de programmation en particulier. Il peut alors \u00eatre traduit dans n'importe quel langage. B. Complexit\u00e9 d'un algorithme \u00b6 B.I. Co\u00fbt en temps et en m\u00e9moire \u00b6 L'informatique a longtemps \u00e9t\u00e9 limit\u00e9e par les ressources n\u00e9cessaires \u00e0 l'ex\u00e9cution des programmes : les ressources en m\u00e9moire et en temps . Un algorithme doit occuper de l'espace et met un certain temps \u00e0 s'ex\u00e9cuter : il est associ\u00e9 \u00e0 un co\u00fbt en m\u00e9moire et \u00e0 un co\u00fbt en temps . Les capacit\u00e9s en m\u00e9moire des ordinateurs d'aujourd'hui ont largement augment\u00e9 par rapport \u00e0 celles des machines du milieu du XX\u00e8me si\u00e8cle, elles ne limitent donc plus l'ex\u00e9cution d'algorithmes simples (elles restent cependant toujours d'actualit\u00e9 notamment pour les algorithmes d'apprentissage automatique, n\u00e9cessitant de grandes quantit\u00e9s de donn\u00e9es) . Dans ce cours, nous allons nous int\u00e9resser au co\u00fbt en temps des algorithmes. Le temps d'ex\u00e9cution d'un programme d\u00e9pend de la machine sur laquelle il est ex\u00e9cut\u00e9, et aussi du langage utilis\u00e9. Le co\u00fbt en temps d'un algorithme est calcul\u00e9 th\u00e9oriquement pour comparer les algorithmes, il ne d\u00e9pendra pas de ces choix techniques. Nous allons compter des op\u00e9rations \u00e9l\u00e9mentaires : toute op\u00e9ration faite par l'algorithme. B.II. Complexit\u00e9 en temps de la recherche d'occurrences \u00b6 Prenons pour exemples les algorithmes de comptage et de recherche d'occurrence. Exemple 1 fonction compte_occurrences ( tab , v ) 1 compteur <- 0 2 pour i allant de 0 \u00e0 longueur ( tab ) - 1 3 si tab [ i ] est \u00e9gal \u00e0 v : 4 compteur <- compteur + 1 renvoyer compteur Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme. La donner, quand cela est possible, en fonction de \\(n\\) : la longueur du tableau. Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 n 3 n 4 selon le nombre d'occurrences Quelles sont les instructions qui sont ex\u00e9cut\u00e9es le plus de fois ? Les lignes 2 et 3 sont ex\u00e9cut\u00e9es le plus de fois (incr\u00e9mentation de i et comparaison de tab[i] \u00e0 v ). La complexit\u00e9 en temps exacte de cet algorithme serait de \\(2n+compteur+1\\) , mais nous allons nous contenter d'un ordre de grandeur. Le co\u00fbt en temps de cet algorithme est proportionnel \u00e0 \\(n\\) : la longueur du tableau. Pour ex\u00e9cuter l'algorithme sur un tableau de taille 50, il faudra de l'ordre de 10 fois plus de temps que pour l'ex\u00e9cuter sur un tableau de taille 5. Exemple 2 fonction recherche_occurrence ( tab , v ): 1 trouve <- False 2 ind <- 0 3 tant que trouve est faux et ind < longueur ( tab ): 4 si tab [ ind ] est \u00e9gal \u00e0 v : 5 trouve <- True 6 sinon 7 ind <- ind + 1 renvoyer trouve Compter combien de fois sera ex\u00e9cut\u00e9e chaque instruction de l'algorithme : Si v se trouve dans tab , en position j : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 j+1 4 j 5 1 6 j 7 j Si v ne se trouve pas dans tab : Solution ligne nombre de fois qu'elle est ex\u00e9cut\u00e9e 1 1 2 1 3 n+1 4 n 5 0 6 n 7 n Que peut-on en d\u00e9duire ? On peut en d\u00e9duire que le nombre d'op\u00e9rations \u00e9l\u00e9mentaires d\u00e9pend des donn\u00e9es. \\(j<=n\\) , donc on aura g\u00e9n\u00e9ralement beaucoup moins d'instructions ex\u00e9cut\u00e9e quand v est pr\u00e9sente dans tab . Pour conna\u00eetre les limites d'un algorithme, on s'int\u00e9resse \u00e0 la complexit\u00e9 dans le pire des cas (ici, le 2\u00e8me). ??? Quel est l'ordre de grandeur de cette complexit\u00e9 dans le pire des cas ? Elle vaut 4n+3, elle est donc lin\u00e9aire par rapport \u00e0 \\(n\\) . Que peut-on conclure sur ces deux exemples (recherche et comptage d'occurrences) ? On peut en conclure que les deux algorithmes ont une complexit\u00e9 en temps similaire dans le pire des cas. B.III. Les types de complexit\u00e9 \u00b6 La complexit\u00e9 de l'algorithme impl\u00e9ment\u00e9 dans le programme suivant d\u00e9pend-elle de la taille des donn\u00e9es d'entr\u00e9e ? def mediane ( t ): ''' Entr\u00e9e t : liste d'entiers tri\u00e9e Sortie med : valeur m\u00e9diane, de type entier ''' med = t [ len ( t ) // 2 ] return med Solution La complexit\u00e9 ne d\u00e9pend pas de la taille des donn\u00e9es d'entr\u00e9e : dans tous les cas l'instruction ne sera ex\u00e9cut\u00e9e qu'une fois. La complexit\u00e9 est dite constante . Exprimer la complexit\u00e9 du programme suivant en fonction de \\(n\\) , la matrice m d'entr\u00e9e \u00e9tant de taille \\(n*n\\) . def somme_matrice ( m ): ''' Entr\u00e9e m : liste \u00e0 deux dimensions d'entiers Sortie : somme des \u00e9l\u00e9ments de m, de type entier ''' s = 0 n = len ( m ) for i in range ( n ): for j in range ( n ): s = s + m [ i ][ j ] return s Solution Pour chaque valeur de i, le corps de la boucle en j s'ex\u00e9cutera \\(n\\) fois. La boucle en i s'ex\u00e9cutant \\(n\\) fois aussi, l'instruction s=s+m[i][j] s'ex\u00e9cute \\(n^2\\) fois.*** La complexit\u00e9 est dite quadratique . B.IV. R\u00e9capitulatif \u00b6 On utilise la notation \"grand O\" pour indiquer que la complexit\u00e9 peut \u00eatre major\u00e9e par une fonction de r\u00e9f\u00e9rence, pour \\(n\\) suffisamment grand. Type Notation Exemple Constante \\(O(1)\\) renvoyer une valeur (sans parcours) Logarithmique \\(O(log(n))\\) exponentiation rapide Lin\u00e9aire \\(O(n)\\) parcours de tableau 1D Quadratique \\(O(n^2)\\) parcours de tableau 2D Les repr\u00e9senter sur le graphe suivant : TD : Complexit\u00e9 \u00b6 On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"I. Complexit\u00e9"},{"location":"1ere/seq6/complexite/#i-complexite","text":"","title":"I. Complexit\u00e9"},{"location":"1ere/seq6/complexite/#cours","text":"","title":"Cours"},{"location":"1ere/seq6/complexite/#td-complexite","text":"On con\u00e7oit un algorithme permettant de d\u00e9terminer la valeur maximale parmi une liste quelconque de valeurs comparables. a. Ecrire un programme impl\u00e9mentant cet algorithme. b. Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est : A 7 B 99 C 200 D 10000 c. Quel est alors son co\u00fbt ? A constant B logarithmique C lin\u00e9aire D quadratique On consid\u00e8re le code suivant de recherche d'une valeur dans une liste : def search ( x , y ): # x est la valeur \u00e0 chercher # y est une liste de valeurs for i in range ( len ( y )): if x == y [ i ]: return i return None Quel est le co\u00fbt de cet algorithme ? A constant B logarithmique C lin\u00e9aire D quadratique On ex\u00e9cute le script suivant : for i in range ( n ): for j in range ( i ): print ( 'NSI' ) a. Combien de fois le mot NSI est-il affich\u00e9 ? A \\(n^2\\) B \\((\ud835\udc5b + 1)^2\\) C 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) D 1 + 2 + \u22ef + (\ud835\udc5b \u2212 1) + \ud835\udc5b b. En d\u00e9duire sa complexit\u00e9 temporelle. Quel code parmi les quatre propos\u00e9s ci-dessous s'ex\u00e9cute-t-il en un temps lin\u00e9aire en \ud835\udc5b (c'est-\u00e0-dire avec un temps d'ex\u00e9cution major\u00e9 par \ud835\udc34 \u00d7 \ud835\udc5b + \ud835\udc35 o\u00f9 \ud835\udc34 et \ud835\udc35 sont deux constantes) ? A for i in range ( n // 2 ): for j in range ( i + 1 , n ): print ( 'hello' ) B for i in range ( n ): print ( 'hello' ) C L = [ i + j for i in range ( n ) for j in range ( n ) ] for x in L : print ( 'hello' ) D for i in range ( n // 2 ): for j in range ( n // 2 ): print ( 'hello' )","title":"TD : Complexit\u00e9"},{"location":"1ere/seq6/tris/","text":"body { text-align: justify} II. Les algorithmes de tri \u00b6 TD : Trier un jeu de cartes \u00b6 La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Cours \u00b6 Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant . A. Le tri par s\u00e9lection \u00b6 A.I. Principe \u00b6 Le tri par s\u00e9lection consiste \u00e0 s\u00e9lectionner le minimum d'une partie du tableau de plus en plus petite \u00e0 chaque \u00e9tape, et \u00e0 l' \u00e9changer avec un \u00e9l\u00e9ment de r\u00e9f\u00e9rence. Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 0 . On recherche le minimum de l'ensemble du tableau , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On recherche le minimum de l'ensemble du tableau moins celui d'indice 0 , et on l'\u00e9change avec l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. Ainsi de suite jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment du tableau. A.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On fait une recherche de minimum \u00e0 chaque \u00e9tape sur une sous-partie du tableau. Il faut utiliser une autre boucle born\u00e9e, commen\u00e7ant juste apr\u00e8s l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence, et stocker l'indice du minimum trouv\u00e9 dans une variable. On formule le pseudo-code suivant : fonction tri_selection(tab) 1 pour i allant de 0 \u00e0 longueur(tab)-2 2 indice_minimum <- i 3 pour j allant de i+1 \u00e0 longueur(tab)-1 4 si tab[j] < tab[indice_minimum] 5 indice_minimum <- j 6 si indice_minimum est diff\u00e9rent de i 7 on \u00e9change tab[i] et tab[indice_minimum] renvoyer tab Entourer d'une couleur la partie qui permet de trouver, \u00e0 chaque it\u00e9ration, le minimum du sous-tableau, et d'une autre couleur celle qui fait l'\u00e9change entre l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence et le minimum trouv\u00e9. Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [1, 8, 10, 5, 2] Etape 2 : [1, 2, 10, 5, 8] Etape 3 : [1, 2, 5, 10, 8] Etape 4 : [1, 2, 5, 8, 10] A.III. Complexit\u00e9 \u00b6 Pour donner un ordre de grandeur de la complexit\u00e9, nous avons jusqu'\u00e0 pr\u00e9sent utilis\u00e9 l'instruction qui \u00e9t\u00e9 ex\u00e9cut\u00e9e le plus de fois. On compte traditionnellement l' op\u00e9ration qui est la plus effectu\u00e9e . Ici, il s'agit de l' op\u00e9ration de comparaison de la ligne 4. Sur notre exemple Etape 0 \u00e0 1 (i vaut 0) Il y a 4 comparaisons (5-8, 5-10, 5-1, 1-2). Etape 1 \u00e0 2 (i vaut 1) Il y a 3 comparaisons (8-10, 8-5, 5-2). Etape 2 \u00e0 3 (i vaut 2) Il y a 2 comparaisons (10-5, 5-8). Etape 3 \u00e0 4 (i vaut 3) Il y a 1 comparaison (10-8). En tout, il y a 1+2+3+4 comparaisons . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) comparaisons (vous pouvez faire le test pour un tableau de taille 6) . Une formule math\u00e9matique permet d'exprimer ce r\u00e9sultat plus simplement, retrouvons-la. Notons \\(S = 1+2+...+n-2+n-1\\) et notons \\(S' = n-1+n-2+...+2+1\\) Que vaut \\(S+S'\\) ? \\(n+n+...+n+n = n*(n-1)\\) Or \\(S+S'=2S\\) , donc \\(2S = n*(n-1)\\) et \\(S=n(n-1)/2\\) On peut donc dire que la complexit\u00e9 de ce tri est en \\((1/2)n^2+(1/2)n\\) . On obtient l' ordre de grandeur en ne retenant que la plus grande puissance de \\(n\\) . Le tri par s\u00e9lection a donc une complexit\u00e9 en \\(O(n^2)\\) , autrement dit quadratique . Nous avions dit que nous allions estimer la complexit\u00e9 dans le pire des cas , mais avons pris un cas quelconque pour tab dans notre exemple. Pourquoi ? Ici, on n'utilise que des boucles born\u00e9es. Il y a donc toujours autant de comparaisons, peu importe comment les valeurs sont plac\u00e9es dans le tableau. B. Tri par insertion \u00b6 B.I. Principe \u00b6 Le tri par insertion consiste \u00e0 ins\u00e9rer chaque \u00e9l\u00e9ment \u00e0 la bonne place dans une sous-partie du tableau d\u00e9j\u00e0 tri\u00e9e. Au d\u00e9but, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 1 . On le compare \u00e0 celui d'indice 0 et on les \u00e9change s'ils ne sont pas dans le bon ordre. Ensuite, l' \u00e9l\u00e9ment de r\u00e9f\u00e9rence est celui d' indice 2 . On le compare aux pr\u00e9c\u00e9dents, situ\u00e9s \u00e0 sa gauche, tant que l'on ne trouve pas d' \u00e9l\u00e9ment plus petit ou que l'on attend pas l'indice 0. Les \u00e9l\u00e9ments plus grands sont d\u00e9cal\u00e9s sur la droite, et on ins\u00e8re notre r\u00e9f\u00e9rence \u00e0 la bonne place dans le sous-tableau tri\u00e9. Ainsi de suite jusqu'au dernier \u00e9l\u00e9ment du tableau. B.II. Pseudo-code \u00b6 Des remarques suivantes, identifier les \u00e9l\u00e9ments de programmation qu'il faudra utiliser. L'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence varie de 1 en 1 \u00e0 chaque \u00e9tape. On sait d'avance combien d'\u00e9tapes il va y avoir. Il faut utiliser une boucle born\u00e9e, avec une variable i contenant l'indice de l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On compare la r\u00e9f\u00e9rence aux \u00e9l\u00e9ments \u00e0 sa gauche, tant que l'on n'a pas trouv\u00e9 sa bonne place. On utilise une boucle non-born\u00e9e qui s'arr\u00eate quand une des deux conditions n'est plus remplie. A ce moment, on a l'indice de la bonne place pour l'\u00e9l\u00e9ment de r\u00e9f\u00e9rence. On formule le pseudo-code suivant : fonction tri_insertion(tab) 1 pour i allant de 1 \u00e0 longueur(tab)-1 2 val_i <- tab[i] 3 j <- i 4 tant que j>0 et tab[j-1] > val_i 5 tab[j] <- tab[j-1] 6 j <- j-1 7 tab[j] <- val_i renvoyer tab Exemple Appliquer l'algorithme pour trier le tableau [5, 8, 10, 1, 2] . Solution Etape 0 : [5, 8, 10, 1, 2] Etape 1 : [5, 8, 10, 1, 2] Etape 2 : [5, 8, 10, 1, 2] Etape 3 : [1, 5, 8, 10, 2] Etape 4 : [1, 2, 5, 8, 10] B.III. Complexit\u00e9 \u00b6 Pour estimer la complexit\u00e9 de ce tri, nous allons compter le nombre de d\u00e9calages faits \"sur la droite\" (on ne compte pas le placement de la r\u00e9f\u00e9rence) . Le nombre est-il le m\u00eame, pour n'importe quel tableau que l'on trie ? Non, mieux le tableau d'entr\u00e9e est d\u00e9j\u00e0 tri\u00e9, moins il y aura de d\u00e9calage \u00e0 faire. Quel tableau correspond alors au pire des cas , celui qui n\u00e9cessite le plus d'op\u00e9rations ? Le tableau tri\u00e9 \"\u00e0 l'envers\" correspond au pire des cas. Prenons l'exemple du tri du tableau [5, 4, 3, 2, 1] Etape 0 \u00e0 1 (i vaut 1) -> [4, 5, 3, 2, 1] Il y a 1 d\u00e9calage (5->4). Etape 1 \u00e0 2 (i vaut 2) -> [3, 4, 5, 2, 1] Il y a 2 d\u00e9calages (5->3, 4->5). Etape 2 \u00e0 3 (i vaut 3) -> [2, 3, 4, 5, 1] Il y a 3 d\u00e9calages (5->2, 4->5, 3->4). Etape 3 \u00e0 4 (i vaut 4) -> [1, 2, 3, 4, 5] Il y a 4 d\u00e9calages (5->1, 4->5, 3->4, 2->3). En tout, il y a \\(1+2+3+4\\) d\u00e9calages . En g\u00e9n\u00e9ralisant en fonction de \\(n\\) la taille du tableau, on a \\(1+2+...+n-2+n-1\\) d\u00e9calages, donc le m\u00eame r\u00e9sultat que pour le premier tri. La complexit\u00e9 dans le pire des cas du tri par insertion est en \\(O(n)\\) , soit quadratique . Conclusion \u00b6 Ces deux algorithmes de tri sont donc comparables dans le pire des cas. Le tri par insertion sera tout de m\u00eame plus efficace pour des donn\u00e9es d\u00e9j\u00e0 partiellement tri\u00e9es, alors que ce param\u00e8tre ne change rien au co\u00fbt du tri par s\u00e9lection. La taille des tableaux en entr\u00e9e a donc un plus grand impact sur l'ex\u00e9cution de ces algorithmes que lorsque l'on veut simplement y rechercher une valeur (algorithme de complexit\u00e9 lin\u00e9aire). Si on multiple la taille d'un tableau par 2 , le trier prendra 4 fois plus de temps.","title":"II. Les tris"},{"location":"1ere/seq6/tris/#ii-les-algorithmes-de-tri","text":"","title":"II. Les algorithmes de tri"},{"location":"1ere/seq6/tris/#td-trier-un-jeu-de-cartes","text":"La plupart des jeux de cartes n\u00e9cessitent de trier les cartes que chaque joueur a en main pour mieux pr\u00e9parer son prochain coup. On consid\u00e8re que l'ordre des cartes est le suivant : 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - V - D - R - As On distribue les cartes et vous avez dans votre main les cartes suivantes : 7 - D - 4 - As - R - 5 Quelle m\u00e9thode appliquez-vous pour les trier ? La formuler sous la forme d'une suite d'instructions pouvant se r\u00e9p\u00e9ter jusqu'\u00e0 obtenir un jeu tri\u00e9. Le principe du tri par s\u00e9lection est le suivant : - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main et on l'\u00e9change avec la premi\u00e8re qui est la carte de r\u00e9f\u00e9rence. - On s\u00e9lectionne la carte de valeur la plus faible de l'ensemble de la main sauf la premi\u00e8re (qui est d\u00e9j\u00e0 tri\u00e9e), et on l'\u00e9change avec la deuxi\u00e8me qui est la nouvelle carte de r\u00e9f\u00e9rence. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble de la main soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_selection.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte \u00e0 \u00e9changer 7 - D - 4 - As - R - 5 7, indice 0 4, indice 2 4 - D - 7 - As - R - 5 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e. Le principe du tri par insertion est le suivant : - On prend la deuxi\u00e8me carte (\"de r\u00e9f\u00e9rence\") : si elle est de valeur inf\u00e9rieure \u00e0 la premi\u00e8re, alors on d\u00e9cale la deuxi\u00e8me \u00e0 la place de la premi\u00e8re (sur la gauche) et on d\u00e9cale la premi\u00e8re sur la droite, sinon on ne fait rien. - On prend la troisi\u00e8me carte : on la compare avec les pr\u00e9c\u00e9dentes : tant qu'elle sont plus grandes, on les d\u00e9cale sur la droite. Lorsque l'on trouve une carte plus petite ou bien que l'on arrive au bout du paquet, on s'arr\u00eate et on place la troisi\u00e8me carte \u00e0 cet endroit. - Ainsi de suite jusqu'\u00e0 ce que l'ensemble soit tri\u00e9. Une d\u00e9monstration de cet algorithme est disponible ici : http://lwh.free.fr/pages/algo/tri/tri_insertion.html Appliquer cet algorithme \u00e0 la main tir\u00e9e en 1. : Tableau Carte de r\u00e9f\u00e9rence Carte(s) \u00e0 d\u00e9caler sur la droite Carte \u00e0 ins\u00e9rer 7 - D - 4 - As - R - 5 D Aucune x 7 - D - 4 - As - R - 5 4 D 4, indice 1 Pour chaque \u00e9tape, souligner la partie du tableau d\u00e9j\u00e0 tri\u00e9e.","title":"TD : Trier un jeu de cartes"},{"location":"1ere/seq6/tris/#cours","text":"Comment trier un ensemble de donn\u00e9es est un probl\u00e8me classique en informatique, cette op\u00e9ration \u00e9tant n\u00e9cessaire dans de nombreux cas pour pr\u00e9-traiter des donn\u00e9es (et leur appliquer d'autres traitement plus facilement ensuite). Il existe une multitude d' algorithmes de tris r\u00e9solvant ce probl\u00e8me. Nous allons voir les exemples du tri par s\u00e9lection et du tri par insertion et comparer leurs complexit\u00e9s. Nous allons trier des tableaux de nombres dans l' ordre croissant .","title":"Cours"},{"location":"2nde/prog/conditions/","text":"body { text-align: justify} II. Les instructions conditionnelles \u00b6 Cours \u00b6 II.A. Les expressions bool\u00e9ennes \u00b6 Une variable de type bool\u00e9en peut prendre la valeur True ou False en Python. Une expression est un ensemble de variables et/ou de valeurs, et d'op\u00e9rateurs. Une expression bool\u00e9enne est une expression renvoyant un bool\u00e9en. On utilise une expression bool\u00e9enne pour comparer diff\u00e9rentes donn\u00e9es : diff\u00e9rentes valeurs, stock\u00e9es dans une variable ou non. Op\u00e9rateur (en Python) Signification == \u00e9gal != diff\u00e9rent > strictement sup\u00e9rieur < strictement inf\u00e9rieur >= sup\u00e9rieur ou \u00e9gal <= inf\u00e9rieur ou \u00e9gal Exemples : (\u00e0 compl\u00e9ter) a == 5 teste si la valeur dans a est \u00e9gale \u00e0 5 , pommes != 0 teste si la valeur dans pommes est diff\u00e9rente de 0 , nombre <= 4 teste si la valeur dans nombre est inf\u00e9rieure ou \u00e9gale \u00e0 4 . La r\u00e9ponse \u00e0 ces tests ne peut prendre que 2 valeurs. Quelles sont-elles ? Vrai ( True ) ou faux ( False ). Exemples de programmes : note = 12 print ( note >= 10 ) Que s'affiche-t-il \u00e0 l'\u00e9cran suite \u00e0 son ex\u00e9cution ? il s'affiche True . Une expression bool\u00e9enne renvoie une valeur, qui peut donc \u00eatre stock\u00e9e dans une variable. note1 = 12 note2 = 9 meilleure12 = note1 >= note2 Que contient la variable meilleure12 ? Elle contient la valeur True . II.B. Les conditions \u00b6 On peut vouloir qu'un algorithme n'ex\u00e9cute pas les m\u00eames op\u00e9rations en fonction des donn\u00e9es du probl\u00e8me. On utilise alors l'instruction conditionnelle \"Si... alors...\" et \"Sinon...\" . II.B.1. Exemple : affichage de publications sur la r\u00e9seau social \u00b6 Sur un r\u00e9seau social, le contenu des publications d'un utilisateur n'est visible que par ses amis. On repr\u00e9sente le probl\u00e8me avec les variables suivantes : - ami est une variable de type bool\u00e9en indiquant si l'utilisateur qui veut voir les publications est un ami ou non. - publication est une variable de type cha\u00eene de caract\u00e8re avec le contenu d'une publication. L'algorithme utilis\u00e9 est le suivant : Si ami alors afficher publication Sinon afficher \"vous ne pouvez pas voir la publication\" Voici sa traduction en Python : if ami : print ( publication ) else : print ( \"vous ne pouvez pas voir la publication\" ) Que peut-on dire sur ami ? Aurait-on pu \u00e9crire autre chose \u00e0 la suite du if ? ami est un bool\u00e9en. On aurait pu tester ami == True mais c'est inutile, on obtiendrait la m\u00eame valeur que celle stock\u00e9e dans ami . II.B.2. Principe g\u00e9n\u00e9ral et syntaxe \u00b6 Dans le cas g\u00e9n\u00e9ral, on \u00e9crit l'algorithme sous la forme suivante : Si condition C alors instructions I Sinon instructions J Cela correspond en Python \u00e0 : if condition C : instructions I else : instructions J La condition C est une expression bool\u00e9enne , et les instructions I et J correspondent \u00e0 des op\u00e9rations diff\u00e9rentes. Attention ! La syntaxe Python est importante. A la suite de la condition, les : sont indispensables pour marquer la fin de l' expression bool\u00e9enne utilis\u00e9e. l' indentation (l'espacement par rapport au bord) a un r\u00f4le : les instructions \u00e0 ex\u00e9cuter si la condition C est vraie doivent \u00eatre \u00e9crites avec une indentation (touche TAB) par rapport \u00e0 la position du if . Idem pour les instructions ex\u00e9cut\u00e9es si la condition C est fausse, qui doivent \u00eatre espac\u00e9es par rapport au else . On peut repr\u00e9senter le m\u00eame code sous la forme d'un diagramme : graph LR A[condition C] -->|True| B[instructions I]; A -->|False| C[instructions J];","title":"II. Les instructions conditionnelles"},{"location":"2nde/prog/conditions/#ii-les-instructions-conditionnelles","text":"","title":"II. Les instructions conditionnelles"},{"location":"2nde/prog/conditions/#cours","text":"","title":"Cours"},{"location":"2nde/prog/fonctions/","text":"body { text-align: justify} III. Les fonctions \u00b6 Cours \u00b6 A. Exemple \u00b6 On veut cr\u00e9er un programme qui v\u00e9rifie si un utilisateur a entr\u00e9 le bon identifiant et mot de passe associ\u00e9 : on parle de bonne authentification sur un r\u00e9seau. On utilise les variables identifiant et motDePasse pour stocker les informations entr\u00e9es par l'utilisateur. L'ordinateur attend un identifiant et un mot de passe pr\u00e9cis pour confirmer la connexion : on utilise une expression qui combine deux conditions avec le mot-cl\u00e9 and . A.I. Un premier programme \u00b6 On donne le code suivant (incomplet) : identifiant = \"eleveSNT\" motDePasse = \"mot\" if .............................. and motDePasse == \"Mprx24$\" : autorisee = True else : .................................... 1. Relever les variables utilis\u00e9es, et indiquer leur type. identifiant et motDePasse sont de type cha\u00eene de caract\u00e8res, autorisee est de type bool\u00e9en. 2. Compl\u00e9ter ensuite ce programme avec la condition v\u00e9rifiant que l'identifiant est le bon et la bonne valeur stock\u00e9e dans la variable contenant le r\u00e9sultat de l'algorithme : autorisee . identifiant = \"eleveSNT\" motDePasse = \"mot\" if identifiant == \"eleveSNT\" and motDePasse == \"Mprx24$\" : autorisee = True else : autorisee = False 3. Que va contenir la variable autorisee , apr\u00e8s ex\u00e9cution du code ? Elle va contenir False , car le mot de passe entr\u00e9 n'est pas le bon. 4. Que faut-il faire pour tester une autre combinaison d'identifiant et de mot de passe ? Il faut : - soit r\u00e9\u00e9x\u00e9cuter le programme en changeant les valeurs stock\u00e9es dans les variables, - soit r\u00e9\u00e9crire exactement le m\u00eame code une deuxi\u00e8me fois. 5. Quelle est la principale diff\u00e9rence entre les variables identifiant et motDePasse et celui de autorisee ? identifiant et motDePasse sont des variables que l'utilisateur(le programmeur) modifie, alors que la valeur de autorisee est calcul\u00e9e automatiquement par l'ordinateur. A.II. Avec une fonction \u00b6 Nous allons voir un outil tr\u00e8s puissant permettant de faire plusieurs tests d'affil\u00e9e, de tester plusieurs fois le m\u00eame code en ne changeant que des valeurs contenues dans des variables : les fonctions . def testeConnexion ( identifiant , motDePasse ): if .............................. and motDePasse == \"Mprx24$\" : autorisee = True else : .................................... return autorisee 1. Compl\u00e9ter le code de la fonction testeConnexion , comme fait dans la partie pr\u00e9c\u00e9dente. def testeConnexion ( identifiant , motDePasse ): if identifiant == \"eleveSNT\" and motDePasse == \"Mprx24$\" : autorisee = True else : autorisee = False return autorisee 2. Que remarque-t-on pour les variables identifiant et motDePasse ? Ces variables ne sont plus initialis\u00e9es avant le programme, mais \u00e9crites entre les parenth\u00e8ses apr\u00e8s le nom de la fonction. 3. Que remarque-t-on pour la variable autorisee ? Sa valeur est affect\u00e9e de la m\u00eame fa\u00e7on, mais elle est en plus plac\u00e9e apr\u00e8s le mot-cl\u00e9 return. 4. Compl\u00e9ter la signification des mots-cl\u00e9s suivant : def indique que l'on d\u00e9finit une fonction, dont on donne le nom et les param\u00e8tres . return indique les valeurs que l'on veut renvoyer \u00e0 l'utilisateur, le r\u00e9sultat du traitement fait par la fonction. 5. Pour tester plusieurs combinaisons d'identifiants et mots de passe, on fait des appels de la fonction testeConnexion . resultat1 = testeConnexion ( \"eleveSNT\" , \"mot\" ) resultat2 = testeConnexion ( \"SNT\" , \"Mprx24$\" ) resultat3 = testeConnexion ( \"eleveSNT\" , \"Mprx24$\" ) B. Cas g\u00e9n\u00e9ral \u00b6 Une fonction est un sous-programme qui peut \u00eatre utilis\u00e9 plusieurs fois dans le programme principal. Ce sous-programme effectue un traitement (une suite d'instructions) sur des donn\u00e9es en param\u00e8tres . On la d\u00e9finit de la mani\u00e8re suivante : def nom_de_la_fonction ( param1 , param2 , ... ) { instructions } return resultat On peut le repr\u00e9senter sch\u00e9matiquement de la fa\u00e7on suivante. graph LR param1 --> F[nom_de_la_fonction]; param2 --> F[nom_de_la_fonction]; F --> resultat On appelle la fonction soit en donnant directement des valeurs aux param\u00e8tres, soit en stockant ces valeurs dans des variables. Donner un exemple pour les deux m\u00e9thodes. #m\u00e9thode 1 r = nom_de_la_fonction ( \"bonjour\" , 2 ) #m\u00e9thode 2 a = \"bonjour\" b = 2 r = nom_de_la_fonction ( a , b )","title":"III. Les fonctions"},{"location":"2nde/prog/fonctions/#iii-les-fonctions","text":"","title":"III. Les fonctions"},{"location":"2nde/prog/fonctions/#cours","text":"","title":"Cours"},{"location":"2nde/prog/variables/","text":"I. Algorithme, variable et affectation \u00b6 Cours \u00b6 I.A. L'informatique et les algorithmes \u00b6 L'informatique est la science du traitement automatique de l'information . Apprendre l'informatique, c'est donc apprendre comment manipuler des donn\u00e9es et les traiter en suivant des instructions. C'est-\u00e0-dire concevoir et r\u00e9aliser des algorithmes. D\u00e9finition Un algorithme est une suite d'instructions appliqu\u00e9e \u00e0 des donn\u00e9es, permettant de r\u00e9soudre un probl\u00e8me. Exemple : Donn\u00e9es : pommes, farine, sucre, oeufs Probl\u00e8me : comment obtenir une tarte aux pommes ? Solution : Faire la p\u00e2te avec la farine, le sucre et les oeufs Faire de la compote Couper les pommes restantes Mettre la compote et les pommes dans la p\u00e2te Mettre au four On r\u00e9cup\u00e8re bien une tarte aux pommes. Une recette est un exemple classique d'algorithme. Cet exemple montre que l'humain peut appliquer lui-m\u00eame des algorithmes \"\u00e0 la main\", mais utiliser une machine va en g\u00e9n\u00e9ral beaucoup plus vite. Pour qu'un l'ordinateur comprenne l'algorithme que l'on veut utiliser, il faut le traduire . D\u00e9finition Un programme est un algorithme traduit dans un langage de programmation . Le langage de programmation est compris par l'ordinateur. Il en existe de toute sorte, qui sont plus ou moins proches du langage de la machine. Le langage Python, que nous allons utiliser, est dit \"de haut niveau\", c'est-\u00e0-dire relativement proche de notre langage. I.B. Variable, op\u00e9rateur et affectation \u00b6 I.B.1. Les variables et les types \u00b6 Les donn\u00e9es manipul\u00e9es par les algorithmes sont stock\u00e9es dans des variables. D\u00e9finition Une variable correspond \u00e0 une zone de m\u00e9moire. Elle est d\u00e9sign\u00e9e par un nom et contient une valeur . Exemple : Pour stocker le nombre de pommes que l'on a pour faire la tarte, on peut utiliser une variable dont le nom est pommes . Avant de commencer la recette, elle contient la valeur 4 . D\u00e9finitions Cette valeur peut \u00eatre de diff\u00e9rents types . On distingue : - les entiers ou int (pour integer ): nombre entier relatif ( 10 , -15723 ,...), - les flottants ou float : nombre \u00e0 virgule (\u00e9crit avec des points en Python : 5.38 , 16.0 ,...), - les cha\u00eenes de caract\u00e8res ou str (pour string ) : suite de caract\u00e8res ( snt , 2nde5 ,...), - les bool\u00e9ens ou bool : vrai ou faux ( True ou False ). Exemple Notre variable pommes contenant la valeur 4 est donc de type entier. I.B.2. L'affectation et les op\u00e9rateurs \u00b6 Affecter une valeur \u00e0 une variable consiste \u00e0 associer une valeur (qui a un type) \u00e0 une variable (qui a un nom), \u00e0 un endroit donn\u00e9 dans notre programme. On utilise l'op\u00e9rateur = en Python. Cette valeur peut \u00eatre chang\u00e9e dans la suite du programme. Une variable , par d\u00e9finition, n'est pas fixe ! Exemple : Lire le programme et repr\u00e9senter sch\u00e9matiquement ce qu'il s'est pass\u00e9. pommes = 4 # puis on d\u00e9coupe une pomme pour faire la tarte pommes = 3 Schema Il est possible d'effectuer toute sorte d'op\u00e9rations sur ces variables : + (addition), - (soustraction), * (multiplication), / (division), // (division euclidienne) ou encore % (modulo : reste d'une division euclidienne). Cela permet de modifier les valeurs des variables au fur et \u00e0 mesure d'un programme. Exemple pommes = 4 pommes = pommes - 1 Que contient la variable pomme apr\u00e8s ex\u00e9cution de ces deux instructions ? Quelle est la diff\u00e9rence avec la mani\u00e8re utilis\u00e9e dans l'exemple pr\u00e9c\u00e9dent ? Elle contient la valeur 3. La diff\u00e9rence est que l'on n'a pas \u00e0 savoir la valeur de pommes avant de lui retirer 1 .","title":"I. Algorithme, variable et affectation"},{"location":"2nde/prog/variables/#i-algorithme-variable-et-affectation","text":"","title":"I. Algorithme, variable et affectation"},{"location":"2nde/prog/variables/#cours","text":"","title":"Cours"},{"location":"culture_g%C3%A9/cybersecurite/","text":"La cybers\u00e9curit\u00e9 \u00b6 U","title":"La cybers\u00e9curit\u00e9"},{"location":"culture_g%C3%A9/cybersecurite/#la-cybersecurite","text":"U","title":"La cybers\u00e9curit\u00e9"},{"location":"culture_g%C3%A9/gafam/","text":"GAFAM \u00b6 28 minutes : Hors S\u00e9rie GAFAM avec Aur\u00e9lie Jean (GAFAM, cybers\u00e9curit\u00e9, RGPD, r\u00e9seaux sociaux...) : https://youtu.be/XOFDnGVBcnE","title":"GAFAM"},{"location":"culture_g%C3%A9/gafam/#gafam","text":"28 minutes : Hors S\u00e9rie GAFAM avec Aur\u00e9lie Jean (GAFAM, cybers\u00e9curit\u00e9, RGPD, r\u00e9seaux sociaux...) : https://youtu.be/XOFDnGVBcnE","title":"GAFAM"},{"location":"culture_g%C3%A9/ia/","text":"L'intelligence artificielle \u00b6 Un nom un peu fourre-tout, qui regroupe tous les programmes tentant d'imiter les comp\u00e9tences humaines. On parle surtout d'IA lorsque l'on essaye de faire des pr\u00e9dictions, en cr\u00e9ant un mod\u00e8le \u00e0 partir de donn\u00e9es. Les enjeux de l'IA \u00b6 Site de l'INRIA (Institut national de recherche en sciences et technologies du num\u00e9rique) : \"Les nouveaux enjeux de l'IA\" : https://www.inria.fr/fr/nouveaux-enjeux-intelligence-artificielle-numerique ChatGPT \u00b6 Le chatbot de derni\u00e8re g\u00e9n\u00e9ration est accessible sur le site https://chat.openai.com/ D\u00e9bat sur cette derni\u00e8re \u00e9volution : 28 minutes, \u00e9mission de la cha\u00eene Arte","title":"L'intelligence artificielle"},{"location":"culture_g%C3%A9/ia/#lintelligence-artificielle","text":"Un nom un peu fourre-tout, qui regroupe tous les programmes tentant d'imiter les comp\u00e9tences humaines. On parle surtout d'IA lorsque l'on essaye de faire des pr\u00e9dictions, en cr\u00e9ant un mod\u00e8le \u00e0 partir de donn\u00e9es.","title":"L'intelligence artificielle"},{"location":"culture_g%C3%A9/ia/#les-enjeux-de-lia","text":"Site de l'INRIA (Institut national de recherche en sciences et technologies du num\u00e9rique) : \"Les nouveaux enjeux de l'IA\" : https://www.inria.fr/fr/nouveaux-enjeux-intelligence-artificielle-numerique","title":"Les enjeux de l'IA"},{"location":"culture_g%C3%A9/ia/#chatgpt","text":"Le chatbot de derni\u00e8re g\u00e9n\u00e9ration est accessible sur le site https://chat.openai.com/ D\u00e9bat sur cette derni\u00e8re \u00e9volution : 28 minutes, \u00e9mission de la cha\u00eene Arte","title":"ChatGPT"},{"location":"projets/pr%C3%A9s_projet/","text":"body { text-align: justify} I. Pr\u00e9sentation \u00b6 Qu'est-ce qu'un projet en NSI ? \u00b6 Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"I. Pr\u00e9sentation"},{"location":"projets/pr%C3%A9s_projet/#i-presentation","text":"","title":"I. Pr\u00e9sentation"},{"location":"projets/pr%C3%A9s_projet/#quest-ce-quun-projet-en-nsi","text":"Un projet est un travail de d\u00e9veloppement, se d\u00e9roulant en partie en classe et en partie chez vous . L'objectif d'un projet est de r\u00e9investir les notions vues en cours, et d'aller plus loin. Vous avez d\u00e9j\u00e0 l'essentiel des bases utiles au d\u00e9veloppement du projet, mais vous aurez besoin de faire des recherches suppl\u00e9mentaires. Vous allez r\u00e9aliser un programme plus important que ce que vous avez pu d\u00e9velopper en TP ou en DM : l'objectif est de fournir un travail de plus grande ampleur. Vous allez d\u00e9velopper des comp\u00e9tences qui sont en coeur de domaine de l'informatique : l' autonomie et le travail en groupe .","title":"Qu'est-ce qu'un projet en NSI ?"},{"location":"projets/1ere_cyber/BonnesPratiques_Structure/","text":"body { text-align: justify} II. Structurer un programme \u00b6 On structure classiquement un programme en mettant : - les imports des biblioth\u00e8ques en premier, - les d\u00e9finitions des fonctions ensuite, - un programme principal \u00e0 la fin, utilisant les fonctions des biblioth\u00e8ques et celles d\u00e9finies plus haut. Exemple d'un programme de calcul sur des nombres : from random import randint def addition ( a , b ): ''' additionne deux nombres (int ou float) a et b ''' return a + b def soustraction ( a , b ): ''' soustrait a (int ou float) par b (int ou float) ''' return a - b def multiplication ( a , b ): ''' multiple deux nombres (int ou float) a et b ''' produit = 1 for _ in range ( b ): produit = addition ( produit , a ) return produit def division ( a , b ): ''' renvoie le quotient et reste dans la division euclidienne de a (int) par b (int) ''' assert b != 0 , \"La division par 0 est interdite !\" count = 0 while a >= b : a = a - b count += 1 return count , a def entier_aleatoire (): ''' renvoie un entier al\u00e9atoire compris entre 0 et 100 ''' return randint ( 0 , 100 ) # -------------- Programme principal -------------- # G\u00e9n\u00e9rations d'entiers de mani\u00e8re al\u00e9atoire n1 = entier_aleatoire () n2 = entier_aleatoire () # Calculs sur ces entiers somme = addition ( n1 , n2 ) difference = soustraction ( n1 , n2 ) produit = multiplication ( n1 , n2 ) q , r = division ( n1 , n2 ) Entourer les trois parties du programme. Quels sont les diff\u00e9rents types de commentaires qui sont utilis\u00e9s ? A quoi sert l'assertion dans la fonction division ?","title":"II. Structurer un programme"},{"location":"projets/1ere_cyber/BonnesPratiques_Structure/#ii-structurer-un-programme","text":"On structure classiquement un programme en mettant : - les imports des biblioth\u00e8ques en premier, - les d\u00e9finitions des fonctions ensuite, - un programme principal \u00e0 la fin, utilisant les fonctions des biblioth\u00e8ques et celles d\u00e9finies plus haut. Exemple d'un programme de calcul sur des nombres : from random import randint def addition ( a , b ): ''' additionne deux nombres (int ou float) a et b ''' return a + b def soustraction ( a , b ): ''' soustrait a (int ou float) par b (int ou float) ''' return a - b def multiplication ( a , b ): ''' multiple deux nombres (int ou float) a et b ''' produit = 1 for _ in range ( b ): produit = addition ( produit , a ) return produit def division ( a , b ): ''' renvoie le quotient et reste dans la division euclidienne de a (int) par b (int) ''' assert b != 0 , \"La division par 0 est interdite !\" count = 0 while a >= b : a = a - b count += 1 return count , a def entier_aleatoire (): ''' renvoie un entier al\u00e9atoire compris entre 0 et 100 ''' return randint ( 0 , 100 ) # -------------- Programme principal -------------- # G\u00e9n\u00e9rations d'entiers de mani\u00e8re al\u00e9atoire n1 = entier_aleatoire () n2 = entier_aleatoire () # Calculs sur ces entiers somme = addition ( n1 , n2 ) difference = soustraction ( n1 , n2 ) produit = multiplication ( n1 , n2 ) q , r = division ( n1 , n2 ) Entourer les trois parties du programme. Quels sont les diff\u00e9rents types de commentaires qui sont utilis\u00e9s ? A quoi sert l'assertion dans la fonction division ?","title":"II. Structurer un programme"},{"location":"projets/1ere_cyber/Fiche_Suivi_Faur%C3%A9/","text":"body { text-align: justify} Projet Cybers\u00e9curit\u00e9 : Fiche de suivi \u00b6 Vous allez remplir cette fiche tout au long du projet, pour indiquer ce qui a \u00e9t\u00e9 fait \u00e0 chaque s\u00e9ance, et par qui . Choix du sujet : .............................................................................................................. Ecrire ci-dessous la liste des fonctionnalit\u00e9s du programme (se baser sur la description du sujet) : Ecrire, s\u00e9ance apr\u00e8s s\u00e9ance, les t\u00e2ches r\u00e9alis\u00e9es par chaque membre du groupe : S\u00e9ance Date Membre 1 : .................................. Membre 2 : .................................. Membre 3 : .................................. 1 A faire pour la s\u00e9ance 2 2 A faire pour la s\u00e9ance 3 3 A faire avant le rendu final","title":"Suivi de projet"},{"location":"projets/1ere_cyber/Fiche_Suivi_Faur%C3%A9/#projet-cybersecurite-fiche-de-suivi","text":"Vous allez remplir cette fiche tout au long du projet, pour indiquer ce qui a \u00e9t\u00e9 fait \u00e0 chaque s\u00e9ance, et par qui . Choix du sujet : .............................................................................................................. Ecrire ci-dessous la liste des fonctionnalit\u00e9s du programme (se baser sur la description du sujet) : Ecrire, s\u00e9ance apr\u00e8s s\u00e9ance, les t\u00e2ches r\u00e9alis\u00e9es par chaque membre du groupe : S\u00e9ance Date Membre 1 : .................................. Membre 2 : .................................. Membre 3 : .................................. 1 A faire pour la s\u00e9ance 2 2 A faire pour la s\u00e9ance 3 3 A faire avant le rendu final","title":"Projet Cybers\u00e9curit\u00e9 : Fiche de suivi"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/","text":"body { text-align: justify} Projet cybers\u00e9curit\u00e9 (programmation Python) : Sujets \u00b6 Dans chaque sujet, un menu est cr\u00e9\u00e9 par votre programme avec les diff\u00e9rentes fonctionnalit\u00e9s propos\u00e9es. Ce menu s'affiche tant que l'utilisateur n'a pas indiqu\u00e9 qu'il voulait quitter le programme. Sujet 1 : Le r\u00e9pertoire d'identifiants \u00b6 Aujourd'hui, beaucoup de sites Web n\u00e9cessitent une inscription. Ils peuvent avoir des r\u00e8gles diff\u00e9rentes par rapport aux symboles accept\u00e9s pour les identifiants et les mots de passe , et il faut les faire varier ! C'est donc une bonne id\u00e9e de r\u00e9pertorier ces informations, pour pouvoir les retrouver efficacement. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : Entrer de nouveaux identifiants Rechercher des identifiants Entrer une alerte Le programme stockera les identifiants dans un fichier, et ira rechercher dans ce fichier pour r\u00e9cup\u00e9rer les informations. L' alerte permet d'indiquer que les identifiants d'un site Web se sont fait hacker : elle indique \u00e0 l'utilisateur quels autres identifiants doivent \u00eatre chang\u00e9s, c'est-\u00e0-dire ceux qui sont identiques \u00e0 ceux qui sont entre de mauvaises mains. Sujet 2 : Le g\u00e9n\u00e9rateur de mots de passe \u00b6 L'utilisation d'un mot de passe trop simple vous d\u00e9signe comme une cible id\u00e9ale pour un piratage de compte. Pour en cr\u00e9er des qui soient s\u00e9curis\u00e9s \u00e0 coup s\u00fbr, il est d'autant plus efficace de d\u00e9l\u00e9guer cette t\u00e2che \u00e0 l'ordinateur. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : - G\u00e9n\u00e9rer un nouveau mot de passe - G\u00e9n\u00e9rer un nouveau mot de passe tr\u00e8s s\u00e9curis\u00e9 - Evaluer le niveau de s\u00e9curit\u00e9 d'un mot de passe Le mot de passe g\u00e9n\u00e9r\u00e9 sera en partie al\u00e9atoire : il faudra notamment utiliser les biblioth\u00e8ques random et string de Python dont vous trouverez la documentation en ligne. Il vous faudra rechercher ce qu'est un mot de passe s\u00e9curis\u00e9 : basez-vous notamment sur les informations de l'ANSSI (l'Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information). Les mots de passe g\u00e9n\u00e9r\u00e9s seront stock\u00e9s dans un fichier avec les autres mots de passe ayant le m\u00eame niveau de s\u00e9curit\u00e9. Sujet 3 : Testeur de s\u00e9curit\u00e9 num\u00e9rique \u00b6 Les bonnes pratiques permettant de limiter les traces laiss\u00e9es sur le Web, ainsi que celles nous permettant de nous prot\u00e9ger au maximum des attaques, ne sont pas connues de tous dans la population. Evaluer nos pratiques dans ce domaine peut nous permettre de nous am\u00e9liorer. Cr\u00e9er un programme qui proposera une s\u00e9rie de questions \u00e0 r\u00e9ponses multiples (au moins 10), \u00e9valuant les bonnes pratiques de l'utilisateur en terme de cybers\u00e9curit\u00e9. Chaque r\u00e9ponse est associ\u00e9e \u00e0 un score, et le total est calcul\u00e9 automatiquement. Les questions et les points associ\u00e9es aux r\u00e9ponses doivent provenir d'une recherche sur le sujet. Au d\u00e9but du test, il est demand\u00e9 \u00e0 l'utilisateur un identifiant, et son score final est stock\u00e9 dans un fichier, avec cet identifiant. On doit aussi pouvoir retrouver le score d'un utilisateur donn\u00e9. Sujet 4 : Evaluateur de site Web \u00b6 La gestion des donn\u00e9es personnelles par les grandes entreprises du Web (les r\u00e9seaux sociaux en particulier) commence \u00e0 \u00eatre r\u00e9gul\u00e9e, notamment gr\u00e2ce aux r\u00e9glementations europ\u00e9ennes. Pour un utilisateur du Web, il est important de savoir quel site est un bon \u00e9l\u00e8ve, et qui l'est moins. Cr\u00e9er un programme qui \u00e9value la bonne gestion des donn\u00e9es par un site web. Il pose pour cela une s\u00e9rie de questions (au moins 10) \u00e0 r\u00e9ponses multiples, qui doivent \u00eatre identifi\u00e9es gr\u00e2ce \u00e0 une recherche. L'objectif est d'identifier si le site respecte bien les r\u00e8gles comme celles du RGPD. A la fin du questionnaire, une note est attribu\u00e9e au site en fonction des r\u00e9ponses fournies et est stock\u00e9e avec le nom du site dans un fichier. Votre programme permet aussi de retrouver la note attribu\u00e9e \u00e0 un site donn\u00e9. Sujet 5 : Chiffrement des communications \u00b6 Ce sujet n\u00e9cessite plus de comp\u00e9tences en programmation et est destin\u00e9 aux \u00e9l\u00e8ves plus avanc\u00e9s. Envoyer des messages sur un r\u00e9seau sans les transformer fait que leur interception peut causer des d\u00e9g\u00e2ts, en fonction des informations transmises. Il est aujourd'hui n\u00e9cessaire de chiffrer les communications pour ne pas qu'elles puissent \u00eatre comprises par n'importe qui. Chiffrer un message consiste \u00e0 le transformer pour le rendre illisible par quelqu'un qui ne conna\u00eetrait pas le moyen de le d\u00e9chiffrer. Il existe plusieurs fa\u00e7ons de le faire : le chiffrement de C\u00e9sar, de Vigen\u00e8re, RSA, avec le XOR... Choisir une m\u00e9thode de chiffrement (ou plusieurs) et cr\u00e9er un programme qui chiffre et d\u00e9chiffre un message qui lui est donn\u00e9 par l'utilisateur, et stocke le r\u00e9sultat dans un fichier, r\u00e9cup\u00e9rable par celui-ci.","title":"Sujets"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#projet-cybersecurite-programmation-python-sujets","text":"Dans chaque sujet, un menu est cr\u00e9\u00e9 par votre programme avec les diff\u00e9rentes fonctionnalit\u00e9s propos\u00e9es. Ce menu s'affiche tant que l'utilisateur n'a pas indiqu\u00e9 qu'il voulait quitter le programme.","title":"Projet cybers\u00e9curit\u00e9 (programmation Python) : Sujets"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-1-le-repertoire-didentifiants","text":"Aujourd'hui, beaucoup de sites Web n\u00e9cessitent une inscription. Ils peuvent avoir des r\u00e8gles diff\u00e9rentes par rapport aux symboles accept\u00e9s pour les identifiants et les mots de passe , et il faut les faire varier ! C'est donc une bonne id\u00e9e de r\u00e9pertorier ces informations, pour pouvoir les retrouver efficacement. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : Entrer de nouveaux identifiants Rechercher des identifiants Entrer une alerte Le programme stockera les identifiants dans un fichier, et ira rechercher dans ce fichier pour r\u00e9cup\u00e9rer les informations. L' alerte permet d'indiquer que les identifiants d'un site Web se sont fait hacker : elle indique \u00e0 l'utilisateur quels autres identifiants doivent \u00eatre chang\u00e9s, c'est-\u00e0-dire ceux qui sont identiques \u00e0 ceux qui sont entre de mauvaises mains.","title":"Sujet 1 : Le r\u00e9pertoire d'identifiants"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-2-le-generateur-de-mots-de-passe","text":"L'utilisation d'un mot de passe trop simple vous d\u00e9signe comme une cible id\u00e9ale pour un piratage de compte. Pour en cr\u00e9er des qui soient s\u00e9curis\u00e9s \u00e0 coup s\u00fbr, il est d'autant plus efficace de d\u00e9l\u00e9guer cette t\u00e2che \u00e0 l'ordinateur. Cr\u00e9er un programme qui r\u00e9alisera les fonctions suivantes : - G\u00e9n\u00e9rer un nouveau mot de passe - G\u00e9n\u00e9rer un nouveau mot de passe tr\u00e8s s\u00e9curis\u00e9 - Evaluer le niveau de s\u00e9curit\u00e9 d'un mot de passe Le mot de passe g\u00e9n\u00e9r\u00e9 sera en partie al\u00e9atoire : il faudra notamment utiliser les biblioth\u00e8ques random et string de Python dont vous trouverez la documentation en ligne. Il vous faudra rechercher ce qu'est un mot de passe s\u00e9curis\u00e9 : basez-vous notamment sur les informations de l'ANSSI (l'Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information). Les mots de passe g\u00e9n\u00e9r\u00e9s seront stock\u00e9s dans un fichier avec les autres mots de passe ayant le m\u00eame niveau de s\u00e9curit\u00e9.","title":"Sujet 2 : Le g\u00e9n\u00e9rateur de mots de passe"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-3-testeur-de-securite-numerique","text":"Les bonnes pratiques permettant de limiter les traces laiss\u00e9es sur le Web, ainsi que celles nous permettant de nous prot\u00e9ger au maximum des attaques, ne sont pas connues de tous dans la population. Evaluer nos pratiques dans ce domaine peut nous permettre de nous am\u00e9liorer. Cr\u00e9er un programme qui proposera une s\u00e9rie de questions \u00e0 r\u00e9ponses multiples (au moins 10), \u00e9valuant les bonnes pratiques de l'utilisateur en terme de cybers\u00e9curit\u00e9. Chaque r\u00e9ponse est associ\u00e9e \u00e0 un score, et le total est calcul\u00e9 automatiquement. Les questions et les points associ\u00e9es aux r\u00e9ponses doivent provenir d'une recherche sur le sujet. Au d\u00e9but du test, il est demand\u00e9 \u00e0 l'utilisateur un identifiant, et son score final est stock\u00e9 dans un fichier, avec cet identifiant. On doit aussi pouvoir retrouver le score d'un utilisateur donn\u00e9.","title":"Sujet 3 : Testeur de s\u00e9curit\u00e9 num\u00e9rique"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-4-evaluateur-de-site-web","text":"La gestion des donn\u00e9es personnelles par les grandes entreprises du Web (les r\u00e9seaux sociaux en particulier) commence \u00e0 \u00eatre r\u00e9gul\u00e9e, notamment gr\u00e2ce aux r\u00e9glementations europ\u00e9ennes. Pour un utilisateur du Web, il est important de savoir quel site est un bon \u00e9l\u00e8ve, et qui l'est moins. Cr\u00e9er un programme qui \u00e9value la bonne gestion des donn\u00e9es par un site web. Il pose pour cela une s\u00e9rie de questions (au moins 10) \u00e0 r\u00e9ponses multiples, qui doivent \u00eatre identifi\u00e9es gr\u00e2ce \u00e0 une recherche. L'objectif est d'identifier si le site respecte bien les r\u00e8gles comme celles du RGPD. A la fin du questionnaire, une note est attribu\u00e9e au site en fonction des r\u00e9ponses fournies et est stock\u00e9e avec le nom du site dans un fichier. Votre programme permet aussi de retrouver la note attribu\u00e9e \u00e0 un site donn\u00e9.","title":"Sujet 4 : Evaluateur de site Web"},{"location":"projets/1ere_cyber/Pr%C3%A9sentation_Sujets/#sujet-5-chiffrement-des-communications","text":"Ce sujet n\u00e9cessite plus de comp\u00e9tences en programmation et est destin\u00e9 aux \u00e9l\u00e8ves plus avanc\u00e9s. Envoyer des messages sur un r\u00e9seau sans les transformer fait que leur interception peut causer des d\u00e9g\u00e2ts, en fonction des informations transmises. Il est aujourd'hui n\u00e9cessaire de chiffrer les communications pour ne pas qu'elles puissent \u00eatre comprises par n'importe qui. Chiffrer un message consiste \u00e0 le transformer pour le rendre illisible par quelqu'un qui ne conna\u00eetrait pas le moyen de le d\u00e9chiffrer. Il existe plusieurs fa\u00e7ons de le faire : le chiffrement de C\u00e9sar, de Vigen\u00e8re, RSA, avec le XOR... Choisir une m\u00e9thode de chiffrement (ou plusieurs) et cr\u00e9er un programme qui chiffre et d\u00e9chiffre un message qui lui est donn\u00e9 par l'utilisateur, et stocke le r\u00e9sultat dans un fichier, r\u00e9cup\u00e9rable par celui-ci.","title":"Sujet 5 : Chiffrement des communications"},{"location":"projets/1ere_cyber/Recherche_Informations/","text":"body { text-align: justify} III. Rechercher des informations \u00b6 A. Utiliser une fonction connue \u00b6 Si vous connaissez le nom de la fonction que vous voulez utiliser, vous pouvez acc\u00e9der \u00e0 sa documentation en tapant dans la console de votre IDE Python : help ( nom_fonction ) Si cela ne suffit pas, faites une recherche Web avec le nom de votre fonction et le mot-cl\u00e9 \"python\". Vous pouvez notamment trouver des posts, par exemple sur des forums, de d\u00e9veloppeurs qui donnent des exemples de programmes , ou posent des questions sur son utilisation. B. Rechercher des fonctions \u00b6 Consulter la documentation officielle Python : https://docs.python.org/fr/3/ Utiliser la barre de recherche en haut \u00e0 droite : Par exemple, pour random, on obtient : un module correspond \u00e0 une biblioth\u00e8que : un ensemble de fonctions, une fonction qui appartient \u00e0 un module sera indiqu\u00e9e sous la forme nom_module.nom_fonction C. R\u00e9utiliser des programmes \u00b6 Il ne faut pas h\u00e9siter \u00e0 s'inspirer de programmes trouv\u00e9s sur le Web, mais il faut absolument se les approprier . Vous devez tester le fonctionnement du programme, le modifier en fonction de ce que vous souhaitez faire. Vous devez \u00eatre capable d'expliquer chaque ligne de code de votre projet. Pour comprendre le fonctionnement d'un programme : - faire diff\u00e9rents appels des fonctions utilis\u00e9es, en changeant les param\u00e8tres. - utiliser l'outil https://pythontutor.com/visualize.html pour l'ex\u00e9cuter pas \u00e0 pas.","title":"III. Rechercher des informations"},{"location":"projets/1ere_cyber/Recherche_Informations/#iii-rechercher-des-informations","text":"","title":"III. Rechercher des informations"},{"location":"projets/1ere_cyber/Recherche_Informations/#a-utiliser-une-fonction-connue","text":"Si vous connaissez le nom de la fonction que vous voulez utiliser, vous pouvez acc\u00e9der \u00e0 sa documentation en tapant dans la console de votre IDE Python : help ( nom_fonction ) Si cela ne suffit pas, faites une recherche Web avec le nom de votre fonction et le mot-cl\u00e9 \"python\". Vous pouvez notamment trouver des posts, par exemple sur des forums, de d\u00e9veloppeurs qui donnent des exemples de programmes , ou posent des questions sur son utilisation.","title":"A. Utiliser une fonction connue"},{"location":"projets/1ere_cyber/Recherche_Informations/#b-rechercher-des-fonctions","text":"Consulter la documentation officielle Python : https://docs.python.org/fr/3/ Utiliser la barre de recherche en haut \u00e0 droite : Par exemple, pour random, on obtient : un module correspond \u00e0 une biblioth\u00e8que : un ensemble de fonctions, une fonction qui appartient \u00e0 un module sera indiqu\u00e9e sous la forme nom_module.nom_fonction","title":"B. Rechercher des fonctions"},{"location":"projets/1ere_cyber/Recherche_Informations/#c-reutiliser-des-programmes","text":"Il ne faut pas h\u00e9siter \u00e0 s'inspirer de programmes trouv\u00e9s sur le Web, mais il faut absolument se les approprier . Vous devez tester le fonctionnement du programme, le modifier en fonction de ce que vous souhaitez faire. Vous devez \u00eatre capable d'expliquer chaque ligne de code de votre projet. Pour comprendre le fonctionnement d'un programme : - faire diff\u00e9rents appels des fonctions utilis\u00e9es, en changeant les param\u00e8tres. - utiliser l'outil https://pythontutor.com/visualize.html pour l'ex\u00e9cuter pas \u00e0 pas.","title":"C. R\u00e9utiliser des programmes"},{"location":"projets/1ere_cyber/Rendus/","text":"body { text-align: justify} Projet : Les rendus \u00b6 A. Le programme \u00b6 1) Structure \u00b6 La structure du programme attendue est la suivante : - ensemble de fonctions (peuvent \u00eatre \u00e9crites dans diff\u00e9rents fichiers .py) , - programme principal utilisant ces fonctions dans un menu propos\u00e9 \u00e0 l'utilisateur, - stockage des informations importantes (d\u00e9crit dans le sujet) dans des fichiers . 2) Impl\u00e9mentation des bonnes pratiques \u00b6 Votre programme doit \u00eatre lisible par un autre programmeur : si celui-ci voulait effectuer des modifications, il devrait pouvoir le faire. Cela implique d\u2019impl\u00e9menter les bonnes pratiques de programmation courantes : - d\u00e9coupage en fonctions , - noms des variables et des fonctions explicites , - r\u00f4le des fonctions et parties difficiles du code comment\u00e9es . 3) Utilisation simple \u00b6 L\u2019 utilisation de votre programme ne doit pas demander \u00e0 l\u2019utilisateur de se demander comment faire pour le lancer et utiliser ses diff\u00e9rentes fonctionnalit\u00e9s : ceci doit \u00eatre expliqu\u00e9 dans le menu propos\u00e9 \u00e0 l'utilisateur (si plus d'explications sont n\u00e9cessaires, vous pouvez utiliser un fichier s\u00e9par\u00e9 readme) . Il ne doit pas \u00eatre difficile de trouver l\u2019information, elle doit appara\u00eetre clairement. B. La soutenance \u00b6 La soutenance est une pr\u00e9sentation de 3min/personne avec diaporama : donc de 6min pour les groupes de 2, et 9min pour les groupes de 3. Vous aurez ensuite quelques minutes de questions. 1) Structure \u00b6 Votre soutenance doit permettre \u00e0 un auditoire qui ne conna\u00eet pas votre projet de le comprendre. Elle doit contenir : - une pr\u00e9sentation g\u00e9n\u00e9rale du sujet, - une description des fonctionnalit\u00e9s impl\u00e9ment\u00e9es dans votre programme avec des exemples de code, - un bilan critique sur ce qui a \u00e9t\u00e9 r\u00e9alis\u00e9 (cf partie suivante) . Attention , il n'est pas facile de pr\u00e9senter du code \u00e0 l'oral. Ne rentrez donc pas trop dans le d\u00e9tail (des questions plus pr\u00e9cises peuvent vous \u00eatre pos\u00e9es ensuite). 2) Bilan \u00b6 Vous devez revenir sur le d\u00e9roulement du projet et expliquer les choix effectu\u00e9s : en termes techniques et en termes de gestion de projet . Quelles ont \u00e9t\u00e9 les difficult\u00e9s ? Que reste-t-il \u00e0 am\u00e9liorer ? Qu'am\u00e9lioreriez-vous dans la gestion si vous aviez \u00e0 le refaire ? Le diaporama est \u00e0 m'envoyer au moins 2 jours avant la soutenance .","title":"Rendus"},{"location":"projets/1ere_cyber/Rendus/#projet-les-rendus","text":"","title":"Projet : Les rendus"},{"location":"projets/1ere_cyber/Rendus/#a-le-programme","text":"","title":"A. Le programme"},{"location":"projets/1ere_cyber/Rendus/#b-la-soutenance","text":"La soutenance est une pr\u00e9sentation de 3min/personne avec diaporama : donc de 6min pour les groupes de 2, et 9min pour les groupes de 3. Vous aurez ensuite quelques minutes de questions.","title":"B. La soutenance"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/","text":"body { text-align: justify} Projet : TP de pr\u00e9paration \u00b6 Cr\u00e9er un nouveau fichier \"TP_Pr\u00e9paration_Projet.py\" dans votre dossier NSI. Tous les projets doivent permettre d' interagir avec l'utilisateur , et stockent des informations dans des fichiers . Vous devez donc ma\u00eetriser ces \u00e9l\u00e9ments avant de vous lancer dans votre projet. A. Interagir avec l'utilisateur \u00b6 L'utilisateur peut envoyer des informations au programme avec la fonction input , comme dans l'exemple suivant : age = input ( \"Quel est votre \u00e2ge ? \" ) 1. Ex\u00e9cuter cette commande. Quel est le type de la variable age ? Par d\u00e9faut, les donn\u00e9es saisies par l'ordinateur sont repr\u00e9sent\u00e9es par le type cha\u00eene de caract\u00e8res. Il peut donc \u00eatre n\u00e9cessaire de les convertir, quand on veut manipuler des nombres, et faire des op\u00e9rations avec. Compl\u00e9ter le code suivant avec la fonction int pour ne pas avoir d'erreur : age = input ( \"Quel est votre \u00e2ge ? \" ) age = ... #\u00e0 compl\u00e9ter age = age + 1 Vous pouvez, \u00e0 partir d'ici, commenter cette partie du programme pour qu'elle ne s'ex\u00e9cute pas ensuite. B. Utiliser les fichiers \u00b6 Pour \u00e9crire du texte dans un fichier, nous allons utiliser un programme comme celui ci-dessous : mot = input ( 'Entrez un mot' ) with open ( 'fichier.txt' , 'a' ) as f : f . write ( mot ) Ce programme cr\u00e9er un nouveau fichier fichier.txt s'il n'existe pas d\u00e9j\u00e0, gr\u00e2ce \u00e0 la fonction open . Celle-ci prend en param\u00e8tre le nom du fichier, et un mode d'acc\u00e8s : - 'r' : ouverture en lecture - 'w' : ouverture en \u00e9criture - 'a' : ouverture en \u00e9crire en mode \"ajout\", c'est-\u00e0-dire que l'on \u00e9crit \u00e0 la fin du fichier. Ex\u00e9cuter ce programme, et entrer un mot \u00e0 \u00e9crire. Le fichier fichier.txt aura \u00e9t\u00e9 cr\u00e9\u00e9 dans le m\u00eame dossier que celui qui contient votre fichier Python. Localiser le fichier, et l'ouvrir avec un \u00e9diteur de texte pour v\u00e9rifier qu'il contient bien ce mot. Ex\u00e9cuter ce programme une deuxi\u00e8me fois, et entrer un nouveau mot. V\u00e9rifier qu'il se trouve bien \u00e9crit dans le fichier, \u00e0 la suite du premier. Analyser le code suivant. Que doit contenir la variable ligne ? Le v\u00e9rifier en l'ex\u00e9cutant. with open ( 'fichier.txt' , 'r' ) as f : ligne = f . read () Entrer des mots les uns \u00e0 la suite des autres cr\u00e9e un fichier qui n'est pas tr\u00e8s lisible... Pour s\u00e9parer les informations, on peut forcer le retour \u00e0 la ligne avec le caract\u00e8re \\n . Ex\u00e9cuter l'instruction suivante pour v\u00e9rifier que l'on a bien un saut de ligne : print('num\u00e9rique et \\nsciences informatiques') Modifier votre programme d'\u00e9criture dans le fichier (question 1), pour que chaque nouveau mot entr\u00e9 s'\u00e9crive sur une nouvelle ligne. Le programme suivant permet de lire un fichier, et de stocker le texte \u00e9crit sur les diff\u00e9rentes lignes dans une liste Python. Tester ce programme. mots = [] with open ( 'fichier.txt' , 'r' ) as f : for ligne in f : ligne = ligne . replace ( \" \\n \" , \"\" ) mots . append ( ligne ) C. Cr\u00e9er un menu \u00b6 Votre programme int\u00e9grera un menu, donnant le choix \u00e0 l'utilisateur sur l'action \u00e0 effectuer. Pour afficher un menu, on peut utiliser un programme comme celui-ci : print ( '1. Choix 1 \\n 2. Choix 2 \\n 3. Quitter) Afficher ce menu, et demander \u00e0 l'utilisateur d'entrer l'entier correspondant \u00e0 son choix. Compl\u00e9ter le programme en impl\u00e9mentant l'algorithme suivant : si le choix est 1 afficher \"choix 1\" sinon si le choix est 2 afficher \"choix 2\" Comment afficher le menu tant que l'utilisateur n'a pas choisi de quitter ? Impl\u00e9menter votre solution.","title":"Pr\u00e9paration"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#projet-tp-de-preparation","text":"Cr\u00e9er un nouveau fichier \"TP_Pr\u00e9paration_Projet.py\" dans votre dossier NSI. Tous les projets doivent permettre d' interagir avec l'utilisateur , et stockent des informations dans des fichiers . Vous devez donc ma\u00eetriser ces \u00e9l\u00e9ments avant de vous lancer dans votre projet.","title":"Projet : TP de pr\u00e9paration"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#a-interagir-avec-lutilisateur","text":"L'utilisateur peut envoyer des informations au programme avec la fonction input , comme dans l'exemple suivant : age = input ( \"Quel est votre \u00e2ge ? \" ) 1. Ex\u00e9cuter cette commande. Quel est le type de la variable age ? Par d\u00e9faut, les donn\u00e9es saisies par l'ordinateur sont repr\u00e9sent\u00e9es par le type cha\u00eene de caract\u00e8res. Il peut donc \u00eatre n\u00e9cessaire de les convertir, quand on veut manipuler des nombres, et faire des op\u00e9rations avec. Compl\u00e9ter le code suivant avec la fonction int pour ne pas avoir d'erreur : age = input ( \"Quel est votre \u00e2ge ? \" ) age = ... #\u00e0 compl\u00e9ter age = age + 1 Vous pouvez, \u00e0 partir d'ici, commenter cette partie du programme pour qu'elle ne s'ex\u00e9cute pas ensuite.","title":"A. Interagir avec l'utilisateur"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#b-utiliser-les-fichiers","text":"Pour \u00e9crire du texte dans un fichier, nous allons utiliser un programme comme celui ci-dessous : mot = input ( 'Entrez un mot' ) with open ( 'fichier.txt' , 'a' ) as f : f . write ( mot ) Ce programme cr\u00e9er un nouveau fichier fichier.txt s'il n'existe pas d\u00e9j\u00e0, gr\u00e2ce \u00e0 la fonction open . Celle-ci prend en param\u00e8tre le nom du fichier, et un mode d'acc\u00e8s : - 'r' : ouverture en lecture - 'w' : ouverture en \u00e9criture - 'a' : ouverture en \u00e9crire en mode \"ajout\", c'est-\u00e0-dire que l'on \u00e9crit \u00e0 la fin du fichier. Ex\u00e9cuter ce programme, et entrer un mot \u00e0 \u00e9crire. Le fichier fichier.txt aura \u00e9t\u00e9 cr\u00e9\u00e9 dans le m\u00eame dossier que celui qui contient votre fichier Python. Localiser le fichier, et l'ouvrir avec un \u00e9diteur de texte pour v\u00e9rifier qu'il contient bien ce mot. Ex\u00e9cuter ce programme une deuxi\u00e8me fois, et entrer un nouveau mot. V\u00e9rifier qu'il se trouve bien \u00e9crit dans le fichier, \u00e0 la suite du premier. Analyser le code suivant. Que doit contenir la variable ligne ? Le v\u00e9rifier en l'ex\u00e9cutant. with open ( 'fichier.txt' , 'r' ) as f : ligne = f . read () Entrer des mots les uns \u00e0 la suite des autres cr\u00e9e un fichier qui n'est pas tr\u00e8s lisible... Pour s\u00e9parer les informations, on peut forcer le retour \u00e0 la ligne avec le caract\u00e8re \\n . Ex\u00e9cuter l'instruction suivante pour v\u00e9rifier que l'on a bien un saut de ligne : print('num\u00e9rique et \\nsciences informatiques') Modifier votre programme d'\u00e9criture dans le fichier (question 1), pour que chaque nouveau mot entr\u00e9 s'\u00e9crive sur une nouvelle ligne. Le programme suivant permet de lire un fichier, et de stocker le texte \u00e9crit sur les diff\u00e9rentes lignes dans une liste Python. Tester ce programme. mots = [] with open ( 'fichier.txt' , 'r' ) as f : for ligne in f : ligne = ligne . replace ( \" \\n \" , \"\" ) mots . append ( ligne )","title":"B. Utiliser les fichiers"},{"location":"projets/1ere_cyber/TP_Pr%C3%A9paration_V2/#c-creer-un-menu","text":"Votre programme int\u00e9grera un menu, donnant le choix \u00e0 l'utilisateur sur l'action \u00e0 effectuer. Pour afficher un menu, on peut utiliser un programme comme celui-ci : print ( '1. Choix 1 \\n 2. Choix 2 \\n 3. Quitter) Afficher ce menu, et demander \u00e0 l'utilisateur d'entrer l'entier correspondant \u00e0 son choix. Compl\u00e9ter le programme en impl\u00e9mentant l'algorithme suivant : si le choix est 1 afficher \"choix 1\" sinon si le choix est 2 afficher \"choix 2\" Comment afficher le menu tant que l'utilisateur n'a pas choisi de quitter ? Impl\u00e9menter votre solution.","title":"C. Cr\u00e9er un menu"},{"location":"projets/1ere_cyber/presentation/","text":"body { text-align: justify} Projet Cybers\u00e9curit\u00e9 \u00b6","title":"Presentation"},{"location":"projets/1ere_cyber/presentation/#projet-cybersecurite","text":"","title":"Projet Cybers\u00e9curit\u00e9"},{"location":"projets/tle_poo_rec/Gestion_Projet/","text":"body { text-align: justify} Conduite de projet \u00b6 A. L'outil \u00b6 Pour garder une trace de ce que vous allez faire, s\u00e9ance apr\u00e8s s\u00e9ance, vous allez utiliser un tableau Trello : https://trello.com Aller sur le site et se cr\u00e9er un compte. Dans Cr\u00e9er , cliquer sur le mod\u00e8le Conduite de projet . Analyser les \u00e9tiquettes qui sont dans les diff\u00e9rentes cat\u00e9gories. Elle doivent servir de base \u00e0 votre tableau. Cliquer sur Cr\u00e9er un tableau \u00e0 partir d'un mod\u00e8le , et lui donner le nom de votre projet. Une seule cr\u00e9ation par groupe de projet ! Partager le tableau avec les autres membres de votre groupe, et avec trebaul.nsi@gmail.com Cr\u00e9er une \u00e9tiquette : regarder comment, pour une t\u00e2che \u00e0 faire, on peut associer un membre, et une date limite (entre autres). B. Cr\u00e9er un planning \u00b6 Lister des diff\u00e9rentes t\u00e2ches qu'il faudra faire pour mener \u00e0 bien votre projet du d\u00e9but jusqu'\u00e0 la fin . D'autres t\u00e2ches appara\u00eetront au fur et \u00e0 mesure, mais vous devez pr\u00e9voir le plus possible \u00e0 l'avance. Essayer d'estimer le temps de r\u00e9alisation de chaque t\u00e2che. Attribuer les t\u00e2ches aux diff\u00e9rents membres du groupe. C. Utiliser l'outil \u00b6 Le planning que vous venez de cr\u00e9er doit \u00eatre rentr\u00e9 sur votre tableau Trello. Modifier la liste \"Sujet de la prochaine r\u00e9union\" par \"Questions pour la prochaine s\u00e9ance\" . Vous y entrerez ce dont vous devrez discuter avec les autres membres de votre groupe lors de la prochaine s\u00e9ance de projet. Ajouter toutes les t\u00e2ches identifi\u00e9es dans la partie B dans la partie \"A faire\" . Au fur et \u00e0 mesure qu'elles seront r\u00e9alis\u00e9es, faire passer les t\u00e2ches dans \"En cours\" , \"Bloqu\u00e9\" , ou bien \"Termin\u00e9\" .","title":"Suivi de projet"},{"location":"projets/tle_poo_rec/Gestion_Projet/#conduite-de-projet","text":"","title":"Conduite de projet"},{"location":"projets/tle_poo_rec/Gestion_Projet/#a-loutil","text":"Pour garder une trace de ce que vous allez faire, s\u00e9ance apr\u00e8s s\u00e9ance, vous allez utiliser un tableau Trello : https://trello.com Aller sur le site et se cr\u00e9er un compte. Dans Cr\u00e9er , cliquer sur le mod\u00e8le Conduite de projet . Analyser les \u00e9tiquettes qui sont dans les diff\u00e9rentes cat\u00e9gories. Elle doivent servir de base \u00e0 votre tableau. Cliquer sur Cr\u00e9er un tableau \u00e0 partir d'un mod\u00e8le , et lui donner le nom de votre projet. Une seule cr\u00e9ation par groupe de projet ! Partager le tableau avec les autres membres de votre groupe, et avec trebaul.nsi@gmail.com Cr\u00e9er une \u00e9tiquette : regarder comment, pour une t\u00e2che \u00e0 faire, on peut associer un membre, et une date limite (entre autres).","title":"A. L'outil"},{"location":"projets/tle_poo_rec/Gestion_Projet/#b-creer-un-planning","text":"Lister des diff\u00e9rentes t\u00e2ches qu'il faudra faire pour mener \u00e0 bien votre projet du d\u00e9but jusqu'\u00e0 la fin . D'autres t\u00e2ches appara\u00eetront au fur et \u00e0 mesure, mais vous devez pr\u00e9voir le plus possible \u00e0 l'avance. Essayer d'estimer le temps de r\u00e9alisation de chaque t\u00e2che. Attribuer les t\u00e2ches aux diff\u00e9rents membres du groupe.","title":"B. Cr\u00e9er un planning"},{"location":"projets/tle_poo_rec/Gestion_Projet/#c-utiliser-loutil","text":"Le planning que vous venez de cr\u00e9er doit \u00eatre rentr\u00e9 sur votre tableau Trello. Modifier la liste \"Sujet de la prochaine r\u00e9union\" par \"Questions pour la prochaine s\u00e9ance\" . Vous y entrerez ce dont vous devrez discuter avec les autres membres de votre groupe lors de la prochaine s\u00e9ance de projet. Ajouter toutes les t\u00e2ches identifi\u00e9es dans la partie B dans la partie \"A faire\" . Au fur et \u00e0 mesure qu'elles seront r\u00e9alis\u00e9es, faire passer les t\u00e2ches dans \"En cours\" , \"Bloqu\u00e9\" , ou bien \"Termin\u00e9\" .","title":"C. Utiliser l'outil"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/","text":"body { text-align: justify} Pr\u00e9sentation \u00b6 1. Sujet \u00b6 L'objectif de ce premier projet est d'utiliser les deux grandes notions vues ce d\u00e9but d'ann\u00e9e en terminale : la programmation objet et la r\u00e9cursivit\u00e9 . Le sujet du projet est libre, \u00e0 condition d'utiliser ces notions. La r\u00e9cursivit\u00e9 peut s'utiliser dans n'importe quel programme, \u00e9tant \u00e9quivalente \u00e0 un programme it\u00e9ratif. La POO est particuli\u00e8rement adapt\u00e9e au d\u00e9veloppement de jeux, mais pas uniquement : simulateurs, mod\u00e8le pour stocker des donn\u00e9es, modules,... peuvent \u00eatre d\u00e9velopp\u00e9s en POO. Des ressources pour trouver des id\u00e9es : - https://nsi.xyz/Projets - https://www.nsi-lpb.com/projets.php - https://isn-icn-ljm.pagesperso-orange.fr/PROJETS/ - toute autre recherche 2. D\u00e9roulement \u00b6 choix du sujet et constitution des groupes (2 ou 3 personnes) : avant le d\u00e9but des vacances de Toussaint, r\u00e9alisation du cahier des charges : pour la semaine de la rentr\u00e9e, d\u00e9veloppement : 2h par semaine en cours + en dehors des cours, rendu du programme, de sa documentation et du rapport vers le 9 d\u00e9cembre, soutenance la semaine du 12 d\u00e9cembre. 3. Rendus \u00b6 3.A. Le cahier des charges \u00b6 Il d\u00e9crit le sujet du projet, et ses fonctionnalit\u00e9s . Il doit r\u00e9pondre aux questions : - Que va faire le programme ? - Comment va-t-il le faire ? C'est-\u00e0-dire comment est-il d\u00e9coup\u00e9, en sous-programmes, en fonctions (certaines viennent-elles d'une biblioth\u00e8que ?). 3.B. Le code et sa documentation \u00b6 Le code devra respecter les bonnes pratiques de programmation vues en NSI : - nommer les fonctions, les variables de mani\u00e8re explicite, - d\u00e9couper l'ensemble en fonctions, - documenter les parties difficiles. Il sera rendu avec sa documentation , indiquant comment utiliser le programme. Elle est con\u00e7ue pour un utilisateur, pas pour un programmeur, et explique comment lancer le programme, et l'utiliser correctement. 3.C. Le rapport \u00b6 Il reprend le cahier des charges, et indique ce qui a \u00e9t\u00e9 fait par rapport \u00e0 ce qui \u00e9tait pr\u00e9vu, et ce qui ne l'a pas \u00e9t\u00e9. Il fait un bilan critique du rendu et du d\u00e9roulement du projet (qu'est-ce qui a fonctionn\u00e9 ? qu'est-ce qui a moins bien fonctionn\u00e9 ?).","title":"Pr\u00e9sentation"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#presentation","text":"","title":"Pr\u00e9sentation"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#1-sujet","text":"L'objectif de ce premier projet est d'utiliser les deux grandes notions vues ce d\u00e9but d'ann\u00e9e en terminale : la programmation objet et la r\u00e9cursivit\u00e9 . Le sujet du projet est libre, \u00e0 condition d'utiliser ces notions. La r\u00e9cursivit\u00e9 peut s'utiliser dans n'importe quel programme, \u00e9tant \u00e9quivalente \u00e0 un programme it\u00e9ratif. La POO est particuli\u00e8rement adapt\u00e9e au d\u00e9veloppement de jeux, mais pas uniquement : simulateurs, mod\u00e8le pour stocker des donn\u00e9es, modules,... peuvent \u00eatre d\u00e9velopp\u00e9s en POO. Des ressources pour trouver des id\u00e9es : - https://nsi.xyz/Projets - https://www.nsi-lpb.com/projets.php - https://isn-icn-ljm.pagesperso-orange.fr/PROJETS/ - toute autre recherche","title":"1. Sujet"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#2-deroulement","text":"choix du sujet et constitution des groupes (2 ou 3 personnes) : avant le d\u00e9but des vacances de Toussaint, r\u00e9alisation du cahier des charges : pour la semaine de la rentr\u00e9e, d\u00e9veloppement : 2h par semaine en cours + en dehors des cours, rendu du programme, de sa documentation et du rapport vers le 9 d\u00e9cembre, soutenance la semaine du 12 d\u00e9cembre.","title":"2. D\u00e9roulement"},{"location":"projets/tle_poo_rec/Pr%C3%A9sentation/#3-rendus","text":"","title":"3. Rendus"},{"location":"projets/tle_poo_rec/Rendus/","text":"body { text-align: justify} Les rendus \u00b6 A. Le programme \u00b6 1) Impl\u00e9mente les bonnes pratiques \u00b6 Votre programme doit \u00eatre lisible par un autre programmeur : si celui-ci voulait effectuer des modifications, il devrait \u00eatre en mesure de le faire. Cela implique d\u2019impl\u00e9menter les bonnes pratiques de programmation courantes : noms des variables et des fonctions explicites, r\u00f4le des fonctions comment\u00e9, parties difficiles du code \u00e9galement comment\u00e9es, d\u00e9coupage en fonctions. La coh\u00e9rence aide aussi \u00e0 la lisibilit\u00e9 : \u00e9crire tous les noms avec la m\u00eame convention (soit des _, soit des majuscules pour s\u00e9parer les mots), dans la m\u00eame langue, etc. 2) Est facile \u00e0 utiliser \u00b6 L\u2019 utilisation de votre programme ne doit pas demander \u00e0 l\u2019utilisateur de se demander comment faire pour le lancer et utiliser ses diff\u00e9rentes fonctionnalit\u00e9s : ceci doit \u00eatre explicit\u00e9, soit dans un fichier readme, soit dans les commentaires. Il ne doit pas \u00eatre difficile de trouver l\u2019information, elle doit appara\u00eetre clairement. B. Le rapport \u00b6 Le rapport contient 2 parties. La 1\u00e8re peut \u00eatre collective, la 2\u00e8me doit \u00eatre individuelle. 1) Contient une description fonctionnelle du projet \u00b6 La description fonctionnelle reprend les fonctionnalit\u00e9s d\u00e9crites dans le cahier des charge, et les pr\u00e9cise : elle indique le nom de la ou des fonctions qui r\u00e9alise chaque fonctionnalit\u00e9, le fichier dans lequel elle(s) se trouvent, et si cette fonction provient d\u2019une biblioth\u00e8que. Si d\u2019autres fonctionnalit\u00e9s ont \u00e9t\u00e9 ajout\u00e9es, il faut \u00e9galement l\u2019indiquer. Elle d\u00e9crit comment les diff\u00e9rentes fonctionnalit\u00e9s interagissent entre elles : quelle fonction/programme est appel\u00e9(e) par quel(le) autre ? L\u2019objectif est d\u2019indiquer comment les objectifs du cahier des charges ont \u00e9t\u00e9 remplis. 2) Fait un bilan critique de ce qui a \u00e9t\u00e9 fait \u00b6 Une deuxi\u00e8me partie indique ce qui a pu \u00eatre r\u00e9alis\u00e9 et, par rapport au cahier des charges, ce qui a \u00e9t\u00e9 abandonn\u00e9 et pourquoi. Il d\u00e9crit les difficult\u00e9s rencontr\u00e9es et les solutions choisies, et conclut sur ce qui pourrait \u00eatre am\u00e9lior\u00e9. Cette partie fait entre 5 et 10 lignes. C. La soutenance \u00b6 La soutenance est une pr\u00e9sentation de 7-8 min pour un projet fait \u00e0 2, de 10-12min pour un projet fait \u00e0 3. 1) Pr\u00e9sente le projet \u00b6 Votre soutenance doit permettre \u00e0 un auditoire qui ne conna\u00eet pas votre projet de le comprendre : le contexte doit \u00eatre bien amen\u00e9 (pr\u00e9sentation g\u00e9n\u00e9rale, s\u2019appuyant sur le cahier des charges), les fonctionnalit\u00e9s de votre programme doivent \u00eatre d\u00e9crites sans entrer trop dans le d\u00e9tail du code (difficile \u00e0 expliquer \u00e0 l\u2019oral). Il vous est n\u00e9anmoins possible d\u2019en pr\u00e9senter des parties importantes, en pr\u00e9cisant comment cette(ces) partie(s) s\u2019int\u00e8gre(nt) \u00e0 l\u2019ensemble. 2) Soutient les choix effectu\u00e9s \u00b6 Vous devez aussi revenir sur le d\u00e9roulement du projet et argumenter sur les choix effectu\u00e9s, en vous appuyant sur le bilan critique de votre rapport. Il s\u2019agit des choix techniques, et des choix effectu\u00e9s pour la gestion du projet.","title":"Rendus"},{"location":"projets/tle_poo_rec/Rendus/#les-rendus","text":"","title":"Les rendus"},{"location":"projets/tle_poo_rec/Rendus/#a-le-programme","text":"","title":"A. Le programme"},{"location":"projets/tle_poo_rec/Rendus/#b-le-rapport","text":"Le rapport contient 2 parties. La 1\u00e8re peut \u00eatre collective, la 2\u00e8me doit \u00eatre individuelle.","title":"B. Le rapport"},{"location":"projets/tle_poo_rec/Rendus/#c-la-soutenance","text":"La soutenance est une pr\u00e9sentation de 7-8 min pour un projet fait \u00e0 2, de 10-12min pour un projet fait \u00e0 3.","title":"C. La soutenance"},{"location":"projets/tle_poo_rec/presentation/","text":"body { text-align: justify} Projet POO & R\u00e9cursivit\u00e9 \u00b6 \u00b6","title":"Presentation"},{"location":"projets/tle_poo_rec/presentation/#projet-poo-recursivite","text":"","title":"Projet POO &amp; R\u00e9cursivit\u00e9"},{"location":"projets/tle_poo_rec/presentation/#_1","text":"","title":""},{"location":"tle/tle/","text":"Les cours de terminale \u00b6 Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous : Les \u00e9preuves du baccalaur\u00e9at \u00b6 Trois \u00e9preuves de NSI sont pr\u00e9par\u00e9es pour le baccalaur\u00e9at : - l' \u00e9preuve \u00e9crite (3h30, au mois de mars) , - l' \u00e9preuve pratique (1h, au mois de mars) , - le grand oral (20min, au moins de juin) .","title":"Pr\u00e9sentation"},{"location":"tle/tle/#les-cours-de-terminale","text":"Une pr\u00e9sentation du programme est accessible en cliquant ci-dessous :","title":"Les cours de terminale"},{"location":"tle/tle/#les-epreuves-du-baccalaureat","text":"Trois \u00e9preuves de NSI sont pr\u00e9par\u00e9es pour le baccalaur\u00e9at : - l' \u00e9preuve \u00e9crite (3h30, au mois de mars) , - l' \u00e9preuve pratique (1h, au mois de mars) , - le grand oral (20min, au moins de juin) .","title":"Les \u00e9preuves du baccalaur\u00e9at"},{"location":"tle/seq1/","text":"S\u00e9quence 1 : Paradigmes & Programmation Orient\u00e9e Objet \u00b6 Paradigmes imp\u00e9ratif et fonctionnel Paradigme objet Synth\u00e8se","title":"S\u00e9quence 1 : Paradigmes & Programmation Orient\u00e9e Objet"},{"location":"tle/seq1/#sequence-1-paradigmes-programmation-orientee-objet","text":"Paradigmes imp\u00e9ratif et fonctionnel Paradigme objet Synth\u00e8se","title":"S\u00e9quence 1 : Paradigmes &amp; Programmation Orient\u00e9e Objet"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/","text":"body { text-align: justify} I. Les paradigmes imp\u00e9ratif et fonctionnel \u00b6 Cours \u00b6 A. Les \u00e9l\u00e9ments de base de la programmation \u00b6 Analysons le code Python suivant : l = [ 2 , 6 , 9 ] s = 0 if l [ 0 ] % 2 == 0 : s = s + l [ 0 ] if l [ 1 ] % 2 == 0 : s = s + l [ 1 ] if l [ 2 ] % 2 == 0 : s = s + l [ 2 ] Dans l'exemple ci-dessus, quels sont les \u00e9l\u00e9ments de base de la programmation utilis\u00e9s ? On identifie des affectations, des instructions conditionnelles. L'ensemble est une s\u00e9quence d'instructions. Que fait ce programme ? Il calcule la somme des \u00e9l\u00e9ments pairs d'une liste Python. Quel autre \u00e9l\u00e9ment de programmation serait-il pertinent d'utiliser ici ? Il est pertinent d'utiliser une boucle born\u00e9e. Ecrire ce programme en utilisant deux fonctions interm\u00e9diaires. Il y a donc plusieurs mani\u00e8res de programmer un m\u00eame algorithme, en utilisant diff\u00e9remment les \u00e9l\u00e9ments de programmation \u00e0 notre disposition. Un paradigme de programmation est une mani\u00e8re de programmer sp\u00e9cifique. B. Le paradigme imp\u00e9ratif \u00b6 Le paradigme imp\u00e9ratif est le paradigme le plus courant, utilis\u00e9 par de nombreux langages de programmation comme Python (qui int\u00e8gre aussi d'autres paradigmes !) . Il consiste \u00e0 d\u00e9crire un programme sous la forme de s\u00e9quences d'instructions \u00e0 effectuer dans un ordre pr\u00e9cis. Les caract\u00e9ristiques de ce paradigme sont : - importance de l'ordre des instructions, - utilisation d'affectations de variables, d'expressions conditionnelles et de boucles. Cette mani\u00e8re de programmer est proche du fonctionnement de la machine et peut sembler la plus intuitive. Pourquoi utiliser d'autres paradigmes ? On peut pr\u00e9f\u00e9rer d'autres mani\u00e8res de programmer en fonction du champ d'application du programme, du probl\u00e8me sp\u00e9cifique qui est trait\u00e9, ou tout simplement des go\u00fbts du programmeur. C. Le paradigme fonctionnel \u00b6 Le paradigme fonctionnel est un paradigme rigoureux, permettant de plus facilement tester, d\u00e9boguer et optimiser les programmes. C.1. Les fonctions \u00b6 Rappeler la syntaxe de d\u00e9finition et d'appel d'une fonction en Python : def nom_de_la_fonction ( entree1 , entree2 ): #s\u00e9quence d'instructions ( return sortie ) resultat = nom_de_la_fonction ( val1 , val2 ) Le paradigme fonctionnel est centr\u00e9, comme son nom l'indique, sur l'utilisation de fonctions. Plus pr\u00e9cis\u00e9ment, on utilise des fonctions dites \"pures\" : des fonctions qui, \u00e9tant donn\u00e9 des param\u00e8tres d'entr\u00e9e, renvoient toujours la m\u00eame sortie. Pour cela, il ne faut pas qu'elles cr\u00e9ent d' effets de bord . C.2. Les effets de bord \u00b6 Un effet de bord correspond \u00e0 la modification par une fonction d'une ou plusieurs variable(s) d\u00e9finie(s) en dehors de cette fonction. Une variable d\u00e9finie en dehors d'une fonction est une variable globale , utilisable dans tout le programme. Une variable d\u00e9finie dans une fonction est par d\u00e9faut locale : elle n'existe que dans cette fonction. Exemple : l = [ 0 , 1 , 2 , 3 ] def remplace ( x ): y = l [ 0 ] l [ 0 ] = x return y Que fait cette fonction ? En \u00e9crire la sp\u00e9cification (description des entr\u00e9es et sorties). Cette fonction remplace la valeur du premier \u00e9lement de l par une valeur donn\u00e9e en entr\u00e9e. Entr\u00e9e : entier x rempla\u00e7ant la valeur du premier \u00e9l\u00e9ment de l Sortie : l'entier y en premi\u00e8re position de la liste l avant d'\u00eatre remplac\u00e9 Que renvoie l'appel de remplace(1) ? Un deuxi\u00e8me appel de remplace(1) ? Le premier appel renvoie 0 , alors que le deuxi\u00e8me renvoie 1 . Que peut-on en conclure ? Il y a modification d'une variable d\u00e9finie en dehors de remplace : elle cr\u00e9e un effet de bord. La fonction, appel\u00e9e plusieurs fois avec le m\u00eame param\u00e8tre ne renvoie pas la m\u00eame valeur : ce n'est pas une fonction pure. Proposer une fonction \"pure\" effectuant le m\u00eame traitement que remplace . def remplace ( x , l ): y = l [ 0 ] l [ 0 ] = x return y N.B. : une fonction pure renvoie toujours une valeur (sinon, vu qu'elle n'a pas d'effet de bord, elle ne servirait pas \u00e0 grand chose...). C.3. Les caract\u00e9ristiques du paradigme fonctionnel \u00b6 utilisation de fonctions imbriqu\u00e9es (cf partie A), utilisation de fonctions pures (donc pas d'effet de bord !), on \u00e9vite l'affectation de valeurs \u00e0 des variables (utilisation de fonctions \u00e0 la place). Ces caract\u00e9ristiques rendent les programmes plus fiables : diff\u00e9rentes bonnes pratiques de programmation s'inspirent de cette mani\u00e8re de programmer. Exercices \u00b6 Exercice 1 : (sur feuille) \u00b6 Dans les exemples suivant, indiquer : - s'il y a un effet de bord ou non, - si la fonction est pure, - s'il y a un effet de bord, proposer une autre version de la fonction qui l'\u00e9limine. 1. i = 5 def f (): return i > 5 2. def ajout ( i , l ): tab = l + [ i ] return tab 3. x = 11 l = [ 1 , 3 , 5 , 7 , 9 ] def ajoute (): if x > l [ - 1 ]: l . append ( x ) return l Exercice 2 : (sur feuille) \u00b6 Identifier les caract\u00e9ristiques se rapportant au paradigme imp\u00e9ratif, et celles se rapportant au paradigme fonctionnel. - autorise les effets de bord, - l'ordre des instructions n'a pas toujours d'importance, - utilise des affectations de variables, - utilise des boucles, - d\u00e9coupe un programme en fonctions. Exercice 3 : (sur ordinateur) \u00b6 Les codes suivant correspondent \u00e0 des algorithmes vus en premi\u00e8re. - Ecrire chacun sous la forme d'une fonction, dont on aura identifi\u00e9 les param\u00e8tres d'entr\u00e9e et de sortie et dont on choisira le nom de mani\u00e8re ad\u00e9quate. On veut des fonctions pures, n'utilisant pas de variables globales. - Renommer les variables pour que l'on comprenne plus facilement leur r\u00f4le. - Ajouter les sp\u00e9cifications des entr\u00e9es et des sorties. 1. x = 0 y = 0 l = [ 6 , 8 , 7 , 1 , 0 ] for i in range ( len ( l )): if l [ i ] > x : x = l [ i ] y = i print ( x , y ) 2. o = 0 t = [ 6 , 2 , 4 , 8 , 2 , 1 , 3 ] for e in t : if e == 2 : o = o + 1 print ( o )","title":"I. Paradigme imp\u00e9ratif et fonctionnel"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#i-les-paradigmes-imperatif-et-fonctionnel","text":"","title":"I. Les paradigmes imp\u00e9ratif et fonctionnel"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#cours","text":"","title":"Cours"},{"location":"tle/seq1/Imp%C3%A9ratif_Fonctionnel/#exercices","text":"","title":"Exercices"},{"location":"tle/seq1/POO/","text":"body { text-align: justify} II. Le paradigme orient\u00e9 objet \u00b6 TP : Un combat de monstres \u00b6 Dans ce TP, vous utiliserez un seul fichier Python que vous modifierez au fur et \u00e0 mesure. Enregistrez-le au d\u00e9but du TP. Dans l'univers de la s\u00e9rie du Sorceleur de l'\u00e9crivain Andrzej Sapkowski, diff\u00e9rents types de personnages s'affrontent. Certains ont des caract\u00e9ristiques particuli\u00e8res comme les sorceleurs qui sont tr\u00e8s habiles au combat et ma\u00eetrisent une certaine forme de magie. Il sont charg\u00e9s d'\u00e9liminer les monstres pr\u00e9sents sur le continent. Pour repr\u00e9senter une situation de mani\u00e8re r\u00e9aliste, le paradigme dit \"objet\" est le plus appropri\u00e9. Il permet de mod\u00e9liser des \u00e9l\u00e9ments du monde r\u00e9el ou bien des concepts. Ce paradigme utilise des classes, une classe pouvant d\u00e9finir aussi bien un animal, qu'un v\u00e9hicule, un humain, un steak, un schtroumpf... Les \u00e9l\u00e9ments de ces classes sont des objets , que nous allons utiliser pour repr\u00e9senter des sorceleurs et des monstres. Impl\u00e9menter le code suivant : class Personnage : # d\u00e9finition de la classe pass # pour l'instant, elle ne fait rien geralt = Personnage () # cr\u00e9ation d'un \u00e9l\u00e9ment de la classe : un objet monstre = Personnage () # cr\u00e9ation d'un deuxi\u00e8me objet Tous les objets de la classe Sorceleur auront les m\u00eames caract\u00e9ristiques : des variables nomm\u00e9es attributs , et les m\u00eames comportements d\u00e9finis par des fonctions appel\u00e9es m\u00e9thodes . Parmi les caract\u00e9ristiques des sorceleurs, on peut avoir leur nombre de points de vie. Impl\u00e9menter le code suivant : class Personnage : def __init__ ( self ): # cette fonction est une m\u00e9thode de la classe Sorceleur nomm\u00e9e \"constructeur\" : utilis\u00e9e pour \"construire\" chaque nouvel objet self . vie = 50 # on attribue 50 points de vie par d\u00e9faut \u00e0 tout nouveau sorceleur geralt = Personnage () monstre = Personnage () Taper dans la console : geralt.vie et monstre.vie et v\u00e9rifier que la valeur attribu\u00e9e \u00e0 l'attribue vie est correcte. On peut vouloir d\u00e9finir au moment de la cr\u00e9ation de chaque objet une valeur initiale de points de vie diff\u00e9rente pour chacun. Modifions le programme : class Personnage : def __init__ ( self , v ): # la valeur est donn\u00e9e en param\u00e8tre du constructeur self . vie = v geralt = Personnage () monstre = Personnage () V\u00e9rifier que le nombre de points de vie de chacun est correct. Note Un constructeur peut avoir plusieurs arguments, mais il a toujours au moins l'argument self qui fait r\u00e9f\u00e9rence \u00e0 l'objet lui-m\u00eame. self est n\u00e9cessaire pour acc\u00e9der aux attributs et aux m\u00e9thodes \u00e0 l'int\u00e9rieur de la classe. Il n'existe plus \u00e0 l'ext\u00e9rieur. Ajoutons quelques m\u00e9thodes \u00e0 notre classe pour mieux simuler le comportement des personnages : class Personnage : def __init__ ( self , v ): self . vie = v def perd_vie ( self ): self . vie = self . vie - 1 def donne_etat ( self ): return self . vie geralt = Personnage ( 50 ) geralt . perd_vie () pts = geralt . donne_etat () Que vaut la variable pts ? Modifier la m\u00e9thode perd_vie pour que le nombre de points perdus soit d\u00e9fini al\u00e9atoirement \u00e0 l'aide de la fonction randint de la biblioth\u00e8que du random : elle retournera un entier entre 1 et 10 qui correspondra au nombre de points perdus. from random import randint # instruction pour importer la fonction help(randint) \"commande pour extraire la documentation de la fonction\" Ajouter un attribut exp repr\u00e9sentant l'exp\u00e9rience du personnage. Cr\u00e9er les m\u00e9thodes gagne_exp et donne_exp permettant, respectivement, de faire gagner une valeur e d'exp\u00e9rience, et de consulter la valeur de l'attribut exp . Cr\u00e9er un programme principal dans lequel geralt affronte monstre selon les r\u00e8gles suivantes : Chacun attaque l'autre \u00e0 tour de r\u00f4le jusqu'\u00e0 ce que le nombre de points de vie d'un des personnages descende \u00e0 0 (ou moins), Si l' exp\u00e9rience d'un personnage est sup\u00e9rieure \u00e0 40, alors son adversaire perd entre 5 et 10 points \u00e0 chaque attaque. Sinon, il perd entre 0 et 5 points. Le vainqueur il gagne 2 points d'exp\u00e9rience. Il peut ensuite combattre un autre adversaire. Attention ! Pour acc\u00e9der aux valeurs des attributs, il faut utiliser les m\u00e9thodes donne_etat et donne_exp . Pour aller plus loin... Vous pouvez \u00e9tendre les possibilit\u00e9s du jeu, par exemple en organisant une sorte de tournoi avec plusieurs sorceleurs et plusieurs monstres. Il est aussi possible d'exploiter les diff\u00e9rences entre monstres et sorceleurs en cr\u00e9ant deux classes diff\u00e9rentes, ayant des m\u00e9thodes sp\u00e9cifiques traduisant les pouvoirs de chacun. Cours \u00b6 A. Syntaxe de la programmation orient\u00e9e objet (POO) \u00b6 Dans le code ci-dessous, entourer la partie correspondant \u00e0 la d\u00e9finition de la classe Exemple d'une couleur, et la partie correspondant \u00e0 son utilisation d'une autre couleur. class Exemple : def __init__ ( self , param1 , param2 ): self . attribut1 = param1 self . attribut2 = param2 def methode ( self , param ): #traitement sur le param\u00e8tre def accesseur_att1 ( self ): return self . attribut1 def mutateur_att1 ( self , val ): self . attribut1 = val e = Exemple () #cr\u00e9ation d'un objet a1 = e . accesseur_att1 () e . mutateur_att1 ( 5 ) #en supposant que attribut1 est de type int - Compl\u00e9ter les d\u00e9finitions suivantes : Une classe regroupe un ensemble de propri\u00e9t\u00e9s (ses attributs ) et de comportements (ses m\u00e9thodes ) communes \u00e0 diff\u00e9rents objets. Qu'est-ce qu'un objet ? Un objet est un \u00e9l\u00e9ment, une instance d'une classe. Qu'est-ce qu'un attribut ? Un attribut d'un objet est une caract\u00e9ristique, une propri\u00e9t\u00e9 commune \u00e0 tous les objets de la classe. Qu'est-ce qu'une m\u00e9thode ? Une m\u00e9thode est une fonction d'une classe, traduisant le comportement de ses objets. Elle ne peut s'appliquer que sur les objets de la classe. Le constructeur de la classe ( __init__ ) est une m\u00e9thode particuli\u00e8re, appel\u00e9e \u00e0 la cr\u00e9ation de chaque nouvel objet. Il initialise ses attributs. Les autres m\u00e9thodes manipulent les attributs : elles peuvent chercher \u00e0 y acc\u00e9der ( accesseurs ou \"getters \") ou \u00e0 les modifier ( mutateurs ou \"setters\" ). \\pagebreak B. Exemple \u00b6 class Guitare : def __init__ ( self , t , m ): self . type = t self . marque = m self . notes = [ 0 , 0 , 0 , 0 , 0 , 0 ] #repr\u00e9sente les 6 cordes, et le fret s\u00e9lectionn\u00e9 pour jouer un accord par un int def joue ( self , n ): self . notes = n def ecoute_son ( self ): return self . notes gfolk = Guitare ( \"folk\" , \"Fender\" ) gelec = Guitare ( \"\u00e9lectrique\" , \"Gibson\" ) gelec . joue ([ 0 , 3 , 2 , 0 , 1 , 0 ]) #accord de do s = gelec . ecoute_son () Exercices \u00b6 Exercice 1 : (sur feuille, \u00e0 tester sur ordinateur) \u00b6 class Chat : def __init__ ( self ): self . faim = 0 self . fatigue = 0 def bonjour ( self ): print ( \"Miaou !\" ) def joue ( self ): self . faim = self . faim + 1 self . fatigue = self . fatigue + 1 class Chien : def __init__ ( self ): self . faim = 0 self . fatigue = 0 def bonjour ( self ): print ( \"Ouaf !\" ) def joue ( self ): self . faim = self . faim + 1 self . fatigue = self . fatigue + 1 Quel est l'int\u00e9r\u00eat ici d'avoir d\u00e9fini deux classes diff\u00e9rentes pour les chiens et pour les chats ? Cr\u00e9er un objet de la classe Chat , un objet de la classe Chien , et les faire se dire bonjour. La fonction isinstance(objet, classe) de Python teste si objet appartient \u00e0 classe . On veut modifier les deux m\u00e9thodes bonjour pour leur donner en param\u00e8tre l'animal auquel est dit bonjour et faire que : un chat dise bonjour \u00e0 un autre chat, mais ignore un chien, un chien dise bonjour \u00e0 un autre chien, et essaye de faire peur \u00e0 un chat en aboyant plus fort : \"OUAF !\". Tester les m\u00e9thodes obtenues. Proposer une autre impl\u00e9mentation utilisant une seule classe Animal , sans perdre l'information que l'on peut avoir des chats ou bien des chiens. Reprendre la version initiale de se saluer des animaux. La tester en cr\u00e9ant des instances de la classe. Ecrire une m\u00e9thode mange et une m\u00e9thode repos dans la classe Animal d\u00e9cr\u00e9mentant respectivement l'attribut faim de 1, et l'attribut fatigue de 2. Exercice 2 : (sur feuille, \u00e0 tester sur ordinateur) \u00b6 from math import sqrt class Astre : '''Corps c\u00e9lestes, d\u00e9finis par leurs propri\u00e9t\u00e9s physiques.''' def __init__ ( self , m , p ): self . masse = m self . position = p def distance ( self , astre ): return ... L'attribut position est une liste Python contenant deux \u00e9l\u00e9ments : sa coordonn\u00e9e en x et sa coordonn\u00e9e en y (on se situe dans le plan, pas en 3D) . Pour calculer la distance entre deux astres de position, respectivement, (x1, y1) et (x2, y2), on utilise la formule math\u00e9matique suivante : \\(d = \\sqrt{ (x_{1}-x_{2})^2 + (y_{1}-y_{2})^2 }\\) Compl\u00e9ter la d\u00e9finition de la m\u00e9thode distance . Un astre peut peser entre 0.07 et 300 fois la masse solaire, elle-m\u00eame de \\(2*10^{30}\\) . Cr\u00e9er deux objets de la classe Astre , de masse minimale et maximale et respectivement de position [15,34] et [6,27]. Calculer la distance entre ces deux objets. Exercice 3 : les attributs priv\u00e9s (sur ordinateur) \u00b6 Les valeurs des attributs des objets Python sont par d\u00e9faut modifiables apr\u00e8s la cr\u00e9ation de l'objet. Il est possible d'interdire la modification des attributs en le d\u00e9clarant avec deux tirets bas avant son nom : __x par exemple. Ils sont alors priv\u00e9s : on ne peut pas les manipuler en dehors de la d\u00e9finition de la classe. C'est une bonne pratique d'utiliser des attributs priv\u00e9s, et c'est ce qui rend les accesseurs et mutateurs n\u00e9cessaires. On rend priv\u00e9s les attributs de la classe Chat de l'exercice 1: class Chat : def __init__ ( self ): self . __faim = 0 self . __fatigue = 0 Cr\u00e9er un objet de la classe. Que se passe-t-il si on tente d'acc\u00e9der \u00e0 ses attributs ? Cr\u00e9er les accesseurs et mutateurs n\u00e9cessaire pour r\u00e9cup\u00e9rer la valeur des deux attributs et pouvoir la modifier. Les tester sur un exemple d'objet. Exercice 4 : les classes de Python (sur ordinateur) \u00b6 Exercice plus difficile Les types Python sont impl\u00e9ment\u00e9s par des classes. Afficher la valeur de l'attribut __class__ des expressions suivantes : () , [] , {} , int(0) . En d\u00e9duire comment utiliser la fonction isinstance de l'exercice 3 pour tester si une valeur est un entier, une liste, un tuple, ou bien un dictionnaire. Utiliser cette fonction pour \u00e9crire une fonction separe qui prend en argument une liste Python et s\u00e9pare les cha\u00eenes de caract\u00e8res des entiers qu'elle contient (c'est une mauvaise pratique de m\u00e9langer les deux !) . Exemple : entiers , caracteres = separe ([ 1 , \"a\" , 666 , \"blablabla\" , \"nsi\" ]) >>> entiers [1,666] >>> caracteres [\"a\", \"blablabla\", \"nsi\"] Exercice 5 : paradigmes objet et imp\u00e9ratif (sur feuille, \u00e0 tester sur ordinateur) \u00b6 Exercice plus difficile Reprendre l'exemple de l'exercice 2. L'objectif est de traduire ce code utilisant le paradigme objet en un code purement imp\u00e9ratif. Pour cela : - On utilise un dictionnaire pour stocker les valeurs des attributs d'un objet (c'est comme \u00e7a que fait Python en r\u00e9alit\u00e9 !) . - On r\u00e9d\u00e9finit les m\u00e9thodes comme de simples fonctions. Utiliser les m\u00eames exemples que dans l'exercice 2. Ce probl\u00e8me est un m\u00e9lange entre ce que pourrait \u00eatre une \u00e9preuve type bac \u00e9crite et pratique. Il a pour but de commencer \u00e0 vous pr\u00e9parer aux deux \u00e9preuves. Probl\u00e8me : Gestion d'adresses IP \u00b6 On rappelle qu'une adresse IPv4 est une adresse de 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re le r\u00e9seau priv\u00e9 192.168.1.0. A quoi sert l'adresse IP attribu\u00e9e \u00e0 une machine ? Ecrire cette adresse en binaire, en faisant appara\u00eetre tous les bits utilis\u00e9s. 192.168.1.0 est une adresse r\u00e9serv\u00e9e, la \"premi\u00e8re\" du r\u00e9seau. On consid\u00e8re qu'on ne peut pas modifier les trois premiers octets pour trouver une adresse \u00e0 attribuer \u00e0 une machine. On ne peut pas non plus utiliser la \"derni\u00e8re\" adresse : celle correspondant au nombre le plus \u00e9lev\u00e9 \u00e9crit sur le dernier octet. Quelle est cette \"derni\u00e8re\" adresse ? En d\u00e9duire le nombre d'adresses de ce r\u00e9seau qui peuvent \u00eatre attribu\u00e9es \u00e0 des machines. Donner une adresse de ce r\u00e9seau utilisable en \u00e9criture d\u00e9cimale, et en binaire. Pour parcourir les adresses utilisables, on d\u00e9finit une classe AdresseIP : class AdresseIP : def __init__ ( self , adresse ): self . adresse = ... def liste_octets ( self ): \"\"\" Renvoie une liste Python de nombres entiers, la liste des octets de l'adresse IP \"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\" Renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon \"\"\" return ... or ... def adresse_suivante ( self ): \"\"\" Renvoie un objet de AdresseIP avec l'adresse IP qui soit celle du self si elle existe, None sinon \"\"\" if ... < 254 : nouvel_octet = ... return AdresseIP ( '192.168.1.' + ... ) else : return None 5. Compl\u00e9ter le constructeur de cette classe. Compl\u00e9ter la m\u00e9thode est_reservee , permettant d'exclure les adresses identifi\u00e9es dans la question 2. Compl\u00e9ter la m\u00e9thode adresse_suivante , en utilisant liste_octets . Cr\u00e9er les objets de la classe ayant pour attribut : 192.168.1.1 , 192.168.1.0 et 192.168.1.254 . Tester les m\u00e9thodes est_reservee et adresse_suivante sur ces objets pour v\u00e9rifier leur bon fonctionnement.","title":"II. Paradigme objet"},{"location":"tle/seq1/POO/#ii-le-paradigme-oriente-objet","text":"","title":"II. Le paradigme orient\u00e9 objet"},{"location":"tle/seq1/POO/#tp-un-combat-de-monstres","text":"Dans ce TP, vous utiliserez un seul fichier Python que vous modifierez au fur et \u00e0 mesure. Enregistrez-le au d\u00e9but du TP. Dans l'univers de la s\u00e9rie du Sorceleur de l'\u00e9crivain Andrzej Sapkowski, diff\u00e9rents types de personnages s'affrontent. Certains ont des caract\u00e9ristiques particuli\u00e8res comme les sorceleurs qui sont tr\u00e8s habiles au combat et ma\u00eetrisent une certaine forme de magie. Il sont charg\u00e9s d'\u00e9liminer les monstres pr\u00e9sents sur le continent. Pour repr\u00e9senter une situation de mani\u00e8re r\u00e9aliste, le paradigme dit \"objet\" est le plus appropri\u00e9. Il permet de mod\u00e9liser des \u00e9l\u00e9ments du monde r\u00e9el ou bien des concepts. Ce paradigme utilise des classes, une classe pouvant d\u00e9finir aussi bien un animal, qu'un v\u00e9hicule, un humain, un steak, un schtroumpf... Les \u00e9l\u00e9ments de ces classes sont des objets , que nous allons utiliser pour repr\u00e9senter des sorceleurs et des monstres. Impl\u00e9menter le code suivant : class Personnage : # d\u00e9finition de la classe pass # pour l'instant, elle ne fait rien geralt = Personnage () # cr\u00e9ation d'un \u00e9l\u00e9ment de la classe : un objet monstre = Personnage () # cr\u00e9ation d'un deuxi\u00e8me objet Tous les objets de la classe Sorceleur auront les m\u00eames caract\u00e9ristiques : des variables nomm\u00e9es attributs , et les m\u00eames comportements d\u00e9finis par des fonctions appel\u00e9es m\u00e9thodes . Parmi les caract\u00e9ristiques des sorceleurs, on peut avoir leur nombre de points de vie. Impl\u00e9menter le code suivant : class Personnage : def __init__ ( self ): # cette fonction est une m\u00e9thode de la classe Sorceleur nomm\u00e9e \"constructeur\" : utilis\u00e9e pour \"construire\" chaque nouvel objet self . vie = 50 # on attribue 50 points de vie par d\u00e9faut \u00e0 tout nouveau sorceleur geralt = Personnage () monstre = Personnage () Taper dans la console : geralt.vie et monstre.vie et v\u00e9rifier que la valeur attribu\u00e9e \u00e0 l'attribue vie est correcte. On peut vouloir d\u00e9finir au moment de la cr\u00e9ation de chaque objet une valeur initiale de points de vie diff\u00e9rente pour chacun. Modifions le programme : class Personnage : def __init__ ( self , v ): # la valeur est donn\u00e9e en param\u00e8tre du constructeur self . vie = v geralt = Personnage () monstre = Personnage () V\u00e9rifier que le nombre de points de vie de chacun est correct. Note Un constructeur peut avoir plusieurs arguments, mais il a toujours au moins l'argument self qui fait r\u00e9f\u00e9rence \u00e0 l'objet lui-m\u00eame. self est n\u00e9cessaire pour acc\u00e9der aux attributs et aux m\u00e9thodes \u00e0 l'int\u00e9rieur de la classe. Il n'existe plus \u00e0 l'ext\u00e9rieur. Ajoutons quelques m\u00e9thodes \u00e0 notre classe pour mieux simuler le comportement des personnages : class Personnage : def __init__ ( self , v ): self . vie = v def perd_vie ( self ): self . vie = self . vie - 1 def donne_etat ( self ): return self . vie geralt = Personnage ( 50 ) geralt . perd_vie () pts = geralt . donne_etat () Que vaut la variable pts ? Modifier la m\u00e9thode perd_vie pour que le nombre de points perdus soit d\u00e9fini al\u00e9atoirement \u00e0 l'aide de la fonction randint de la biblioth\u00e8que du random : elle retournera un entier entre 1 et 10 qui correspondra au nombre de points perdus. from random import randint # instruction pour importer la fonction help(randint) \"commande pour extraire la documentation de la fonction\" Ajouter un attribut exp repr\u00e9sentant l'exp\u00e9rience du personnage. Cr\u00e9er les m\u00e9thodes gagne_exp et donne_exp permettant, respectivement, de faire gagner une valeur e d'exp\u00e9rience, et de consulter la valeur de l'attribut exp . Cr\u00e9er un programme principal dans lequel geralt affronte monstre selon les r\u00e8gles suivantes : Chacun attaque l'autre \u00e0 tour de r\u00f4le jusqu'\u00e0 ce que le nombre de points de vie d'un des personnages descende \u00e0 0 (ou moins), Si l' exp\u00e9rience d'un personnage est sup\u00e9rieure \u00e0 40, alors son adversaire perd entre 5 et 10 points \u00e0 chaque attaque. Sinon, il perd entre 0 et 5 points. Le vainqueur il gagne 2 points d'exp\u00e9rience. Il peut ensuite combattre un autre adversaire. Attention ! Pour acc\u00e9der aux valeurs des attributs, il faut utiliser les m\u00e9thodes donne_etat et donne_exp . Pour aller plus loin... Vous pouvez \u00e9tendre les possibilit\u00e9s du jeu, par exemple en organisant une sorte de tournoi avec plusieurs sorceleurs et plusieurs monstres. Il est aussi possible d'exploiter les diff\u00e9rences entre monstres et sorceleurs en cr\u00e9ant deux classes diff\u00e9rentes, ayant des m\u00e9thodes sp\u00e9cifiques traduisant les pouvoirs de chacun.","title":"TP : Un combat de monstres"},{"location":"tle/seq1/POO/#cours","text":"","title":"Cours"},{"location":"tle/seq1/POO/#exercices","text":"","title":"Exercices"},{"location":"tle/seq1/POO/#probleme-gestion-dadresses-ip","text":"On rappelle qu'une adresse IPv4 est une adresse de 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re le r\u00e9seau priv\u00e9 192.168.1.0. A quoi sert l'adresse IP attribu\u00e9e \u00e0 une machine ? Ecrire cette adresse en binaire, en faisant appara\u00eetre tous les bits utilis\u00e9s. 192.168.1.0 est une adresse r\u00e9serv\u00e9e, la \"premi\u00e8re\" du r\u00e9seau. On consid\u00e8re qu'on ne peut pas modifier les trois premiers octets pour trouver une adresse \u00e0 attribuer \u00e0 une machine. On ne peut pas non plus utiliser la \"derni\u00e8re\" adresse : celle correspondant au nombre le plus \u00e9lev\u00e9 \u00e9crit sur le dernier octet. Quelle est cette \"derni\u00e8re\" adresse ? En d\u00e9duire le nombre d'adresses de ce r\u00e9seau qui peuvent \u00eatre attribu\u00e9es \u00e0 des machines. Donner une adresse de ce r\u00e9seau utilisable en \u00e9criture d\u00e9cimale, et en binaire. Pour parcourir les adresses utilisables, on d\u00e9finit une classe AdresseIP : class AdresseIP : def __init__ ( self , adresse ): self . adresse = ... def liste_octets ( self ): \"\"\" Renvoie une liste Python de nombres entiers, la liste des octets de l'adresse IP \"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\" Renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon \"\"\" return ... or ... def adresse_suivante ( self ): \"\"\" Renvoie un objet de AdresseIP avec l'adresse IP qui soit celle du self si elle existe, None sinon \"\"\" if ... < 254 : nouvel_octet = ... return AdresseIP ( '192.168.1.' + ... ) else : return None 5. Compl\u00e9ter le constructeur de cette classe. Compl\u00e9ter la m\u00e9thode est_reservee , permettant d'exclure les adresses identifi\u00e9es dans la question 2. Compl\u00e9ter la m\u00e9thode adresse_suivante , en utilisant liste_octets . Cr\u00e9er les objets de la classe ayant pour attribut : 192.168.1.1 , 192.168.1.0 et 192.168.1.254 . Tester les m\u00e9thodes est_reservee et adresse_suivante sur ces objets pour v\u00e9rifier leur bon fonctionnement.","title":"Probl\u00e8me : Gestion d'adresses IP"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/","text":"body { text-align: justify} S\u00e9quence 1 \u00b6 Synth\u00e8se sur les paradigmes \u00b6 A. Les diff\u00e9rents paradigmes \u00b6 Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe g\u00e9n\u00e9ral Avantage Cas d'usage courant Compl\u00e9ter le tableau r\u00e9capitulatif sur les 3 paradigmes vus dans le cours, en indiquant leur principe et leurs avantages . Associer les diff\u00e9rents paradigmes \u00e0 un cas d'usage/champ d'application parmi la liste ci-dessous : calculs math\u00e9matiques - traitement de donn\u00e9es - d\u00e9veloppement de jeu vid\u00e9o Solution Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe S\u00e9quences d'instructions Utilisation de fonctions dites pures Utilisation de classes Avantages Proche du fonctionnement de la machine, intuitif Plus facile \u00e0 d\u00e9boger, rigoureux Plus proche du monde r\u00e9el, modulable Cas d'usage courant traitement de donn\u00e9es calculs math\u00e9matiques d\u00e9veloppement de jeu vid\u00e9o B. Langages et paradigmes \u00b6 Les langages informatiques sont souvent pens\u00e9s pour un paradigme, mais aujourd'hui beaucoup d'entre eux sont multi-paradigmes pour permettre plus de flexibilit\u00e9 et toucher plus de programmeurs. C'est le cas de Python, langage imp\u00e9ratif mais pouvant utiliser des caract\u00e9ristiques fonctionnelles et permettant la POO. Les langages \u00e9voluent avec les pratiques des d\u00e9veloppeurs. Le succ\u00e8s de la POO a fait qu'elle a \u00e9t\u00e9 incorpor\u00e9e \u00e0 des langages con\u00e7us \u00e0 l'origine pour d'autres paradigmes. Par exemple, C++ est une version \"am\u00e9lior\u00e9e\" du C (langage imp\u00e9ratif) qui permet d'utiliser la POO. De m\u00eame, Caml est un langage tr\u00e8s fonctionnel, utilis\u00e9 notamment pour faire des preuves de programmes, qui incorpore la programmation objet dans son \u00e9volution OCaml (\"Objective Caml\"). Plus g\u00e9n\u00e9ralement, il est possible d'int\u00e9grer plusieurs langages dans le d\u00e9veloppement d'un logiciel, pour exploiter le meilleur de chacun.","title":"Synth\u00e8se"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#sequence-1","text":"","title":"S\u00e9quence 1"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#synthese-sur-les-paradigmes","text":"","title":"Synth\u00e8se sur les paradigmes"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#a-les-differents-paradigmes","text":"Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe g\u00e9n\u00e9ral Avantage Cas d'usage courant Compl\u00e9ter le tableau r\u00e9capitulatif sur les 3 paradigmes vus dans le cours, en indiquant leur principe et leurs avantages . Associer les diff\u00e9rents paradigmes \u00e0 un cas d'usage/champ d'application parmi la liste ci-dessous : calculs math\u00e9matiques - traitement de donn\u00e9es - d\u00e9veloppement de jeu vid\u00e9o Solution Programmation imp\u00e9rative Programmation fonctionnelle Programmation orient\u00e9e objet Principe S\u00e9quences d'instructions Utilisation de fonctions dites pures Utilisation de classes Avantages Proche du fonctionnement de la machine, intuitif Plus facile \u00e0 d\u00e9boger, rigoureux Plus proche du monde r\u00e9el, modulable Cas d'usage courant traitement de donn\u00e9es calculs math\u00e9matiques d\u00e9veloppement de jeu vid\u00e9o","title":"A. Les diff\u00e9rents paradigmes"},{"location":"tle/seq1/Synth%C3%A8se_El%C3%A8ve/#b-langages-et-paradigmes","text":"Les langages informatiques sont souvent pens\u00e9s pour un paradigme, mais aujourd'hui beaucoup d'entre eux sont multi-paradigmes pour permettre plus de flexibilit\u00e9 et toucher plus de programmeurs. C'est le cas de Python, langage imp\u00e9ratif mais pouvant utiliser des caract\u00e9ristiques fonctionnelles et permettant la POO. Les langages \u00e9voluent avec les pratiques des d\u00e9veloppeurs. Le succ\u00e8s de la POO a fait qu'elle a \u00e9t\u00e9 incorpor\u00e9e \u00e0 des langages con\u00e7us \u00e0 l'origine pour d'autres paradigmes. Par exemple, C++ est une version \"am\u00e9lior\u00e9e\" du C (langage imp\u00e9ratif) qui permet d'utiliser la POO. De m\u00eame, Caml est un langage tr\u00e8s fonctionnel, utilis\u00e9 notamment pour faire des preuves de programmes, qui incorpore la programmation objet dans son \u00e9volution OCaml (\"Objective Caml\"). Plus g\u00e9n\u00e9ralement, il est possible d'int\u00e9grer plusieurs langages dans le d\u00e9veloppement d'un logiciel, pour exploiter le meilleur de chacun.","title":"B. Langages et paradigmes"},{"location":"tle/seq2/diviser_regner/","text":"body { text-align: justify} III. Diviser pour r\u00e9gner \u00b6 Cours \u00b6 A. Notions d'algorithmique \u00b6 Qu'est-ce qu'un algorithme ? Un algorithme est une suite d'instructions permettant de r\u00e9soudre un probl\u00e8me. Qu'est-ce que la complexit\u00e9 d'un algorithme ? La complexit\u00e9 d'un algorithme \u00e9value la quantit\u00e9 de ressources (en temps, en m\u00e9moire), n\u00e9cessaire \u00e0 son ex\u00e9cution. A quoi sert l'\u00e9valuation de cette complexit\u00e9 ? Evaluer la complexit\u00e9 d'un algorithme sert \u00e0 le comparer \u00e0 d'autres algorithmes r\u00e9solvant le m\u00eame probl\u00e8me. Dans le programme de NSI, on s'int\u00e9resse \u00e0 la complexit\u00e9 en temps dans le pire des cas . Qu'\u00e9value-t-on alors ? On estime le nombre d'op\u00e9rations \u00e9l\u00e9mentaires ex\u00e9cut\u00e9es, en fonction de la taille des donn\u00e9es d'entr\u00e9e not\u00e9e n. Tracer les diff\u00e9rent types de complexit\u00e9s que vous connaissez sur un graphique. En donner des exemples types d'algorithmes associ\u00e9s. - constant : retour d'une valeur (la moiti\u00e9 d'un nombre, test,...) - lin\u00e9aire : parcours d'un tableau, 1 boucle - quadratique : parcours d'un tableau \u00e0 deux dimensions, 2 boucles imbriqu\u00e9es B. Les algorithmes du type \"diviser pour r\u00e9gner\" \u00b6 \"Diviser pour r\u00e9gner\" est une m\u00e9thode algorithmique : une mani\u00e8re de r\u00e9soudre des probl\u00e8mes algorithmiquement. Son principe est, lorsque l'on consid\u00e8re un probl\u00e8me, de le d\u00e9couper en plusieurs sous-probl\u00e8mes \u00e9quivalents, mais de taille plus r\u00e9duite. Ces \"petits probl\u00e8mes\" seront plus simples \u00e0 r\u00e9soudre que le probl\u00e8me initial. Une fois les \"petits probl\u00e8mes\" r\u00e9solus, il faut les recombiner pour obtenir une solution au probl\u00e8me initial. Les trois principes \u00e0 la base de cette m\u00e9thode de \"diviser pour r\u00e9gner\" sont : - Diviser : on divise le probl\u00e8me initial en sous-probl\u00e8mes - R\u00e9gner : on r\u00e9soud les sous-probl\u00e8mes - Combiner : on combine les solutions des sous-probl\u00e8mes, pour avoir la solution du probl\u00e8me initial Le principe de la r\u00e9cursivit\u00e9 \u00e9tant similaire \u00e0 celui de cette approche, on utilise souvent des algorithmes r\u00e9cursifs . Cela n'est pas obligatoire ! Une approche \"diviser pour r\u00e9gner\" peut aussi \u00eatre it\u00e9rative (avec des boucles). c. Le tri fusion \u00b6 C.1. Principe et exemple \u00b6 Le tri fusion est une mani\u00e8re de trier une liste en la divisant successivement, puis en fusionnant petit \u00e0 petit les sous-listes tri\u00e9es pour finalement en obtenir une seule : la liste initiale tri\u00e9e. Les trois \u00e9tapes de cet algorithme sont : - Diviser : on divise le tableau successivement en deux, jusqu'\u00e0 obtenir des tableaux de taille 1. - R\u00e9gner : on obtient un tableau de taille 1 qui est tri\u00e9. A chaque nouvelle fusion, on s'assure que le r\u00e9sultat est tri\u00e9. - Combiner : on fusionne les tableaux tri\u00e9s deux \u00e0 deux, jusqu'\u00e0 en obtenir une seule. C.2. Comparaison avec les autres algorithmes de tri \u00b6 Rappeler les principe des deux algorithmes de tri du programme de 1\u00e8re : Tri par s\u00e9lection Tri par insertion On s\u00e9lectionne le minimum du tableau, et on l'\u00e9change avec l'\u00e9l\u00e9ment en premi\u00e8re position. On prend le 2\u00e8me \u00e9l\u00e9ment, on le compare avec le premier, et on \u00e9change les deux s'ils ne sont pas rang\u00e9s dans l'ordre croissant. On s\u00e9lectionne le minimum de l'ensemble des \u00e9l\u00e9ments du tableau sauf le premier, et on l'\u00e9change avec celui en 2\u00e8me position. On prend le 3\u00e8me \u00e9l\u00e9ment, on le compare avec les pr\u00e9c\u00e9dents jusqu'\u00e0 trouver un \u00e9l\u00e9ment plus petit que lui. On l'\u00e9change avec le dernier \u00e9l\u00e9ment plus grand. On r\u00e9p\u00e8te ces op\u00e9rations, en r\u00e9duisant de un en un la partie du tableau consid\u00e9r\u00e9e, jusqu'\u00e0 l'avant-dernier \u00e9l\u00e9ment. On r\u00e9p\u00e8te ces op\u00e9rations en parcourant de un en un les \u00e9l\u00e9ments du tableau, jusqu'au dernier. Quel est le type de complexit\u00e9 de ces deux algorithmes ? Ces algorithmes ont une complexit\u00e9 quadratique (en \\(n^2\\) ). La complexit\u00e9 du tri fusion est en \\(nlog(n)\\) . Est-il donc judicieux de l'utiliser \u00e0 la place d'un tri par s\u00e9lection ou par insertion ? Il est pertinent d'utiliser le tri fusion, car sa complexit\u00e9 est meilleure : la courbe la repr\u00e9sentant se trouve en-dessous de la courbe de la fonction quadratique, pour une valeur de n donn\u00e9e. TP : Le tri fusion \u00b6 A. Application \u00b6 Appliquer l'algorithme du tri fusion sur l'exemple ci-contre, en compl\u00e9tant le sch\u00e9ma avec les divisions et recombinaisons successives. Dans le cas d'un tableau ayant un nombre impair d'\u00e9l\u00e9ments, on peut consid\u00e9rer que le tableau le plus petit va se retrouver \u00e0 gauche, le plus grand \u00e0 droite. B. Impl\u00e9mentation \u00b6 L'impl\u00e9mentation du tri fusion se fait classiquement avec deux fonctions : - une fonction principale qui divise le tableau pass\u00e9 en param\u00e8tre par deux, - une fonction qui fait la fusion entre deux tableaux tri\u00e9s. B.1. La fusion \u00b6 Elle peut \u00eatre \u00e9crite de mani\u00e8re r\u00e9cursive ou bien it\u00e9rative . Tester les deux versions sur les listes [1,4,7,9] et [-2,0,3,8] . Version it\u00e9rative : Compl\u00e9ter le code suivant : def fusion_it ( T1 , T2 ): taille_1 = len ( T1 ) taille_2 = len ( T2 ) T_trie = [] i1 = 0 i2 = 0 while ( i1 < taille_1 ) and ( ... ): if T1 [ i1 ] < T2 [ i2 ]: T_trie . append ( ... [ i1 ]) i1 = ... else : T_trie . append ( T2 [ ... ]) i2 = ... while i1 < taille_1 : T_trie . append ( ... ) i1 = ... while i2 < taille_2 : T_trie . append ( ... ) ... return T_trie Version r\u00e9cursive : On donne le squelette de la fonction, \u00e0 compl\u00e9ter : def fusion_rec ( T1 , T2 ): if ............ # premier cas de base, pour une valeur triviale de T1 return T2 elif ........... # deuxi\u00e8me cas de base, pour une valeur triviale de T2 return T1 elif T1 [ 0 ] < T2 [ 0 ]: return [ ..... ] + fusion ( ........ , ......... ) # on place le bon \u00e9l\u00e9ment en premier else : return [ ..... ] + fusion ( ........ , ......... ) B.2. Le tri complet \u00b6 La fonction permettant de trier compl\u00e8tement le tableau divise d'abord en deux le tableau initial, avant de fusionner les r\u00e9sultats des tris sur la premi\u00e8re, et la deuxi\u00e8me partie du tableau. Compl\u00e9ter le code suivant : def tri_fusion ( tab ): if .................... # cas de base return tab else : # on coupe le tableau en deux sous-tableaux t1 = [ tab [ i ] for i in range ( ....... )] t2 = [ tab [ i ] for i in range ( ....... )] return fusion ( tri_fusion ( ..... ), tri_fusion ( ..... )) Pour prendre les deux moiti\u00e9s du tableau, on aurait pu faire du slicing . Cette m\u00e9thode a aussi des d\u00e9savantages, il est utile de conna\u00eetre plusieurs m\u00e9thodes pour s\u00e9lectionner une partie d'un tableau. TP : La recherche dichotomique \u00b6 La recherche dichotomique d'un \u00e9l\u00e9ment e dans un tableau tri\u00e9 consiste : 1. A comparer e avec celui au milieu du tableau : - si e est plus grand, on continue la recherche dans la partie droite du tableau. - sinon, on continue la recherche dans la partie gauche du tableau. 2. On recommence en comparant e avec le milieu de la partie du tableau consid\u00e9r\u00e9e, et ainsi de suite. 3. L'algorithme termine lorsque e est trouv\u00e9, ou bien si l'on arrive sur le tableau vide. Appliquer l'algorithme pour rechercher 10 dans [1,6,10,15,17,20] . Rechercher 5 dans ce m\u00eame tableau. Compl\u00e9ter la version r\u00e9cursive suivante : def recherche_dichotomique_rec ( t , elt , inf , sup ): \"\"\"Version r\u00e9cursive de la recherche dichotomique d'un \u00e9l\u00e9ment dans un tableau tri\u00e9' Entr\u00e9es : t : liste Python (tableau) d'entiers ou de flottants tri\u00e9e elt : entier ou flottant recherch\u00e9 inf, sup : entiers correspondant respectivement \u00e0 l'indice inf\u00e9rieur et sup\u00e9rieur de la partie de t consid\u00e9r\u00e9e Sortie : entier, valant -1 si l'\u00e9lement n'est pas trouv\u00e9, l'indice de l'\u00e9l\u00e9ment trouv\u00e9 dans le tableau sinon \"\"\" mil = ( sup + inf ) // 2 if sup < inf : return ... elif ... return mil elif elt > t [ mil ]: return recherche_dichotomique_rec ( t , elt , ... , ... ) else : return recherche_dichotomique_rec ( t , elt , ... , ... ) \u00c9crire une fonction recherche it\u00e9rative qui prend en param\u00e8tres un tableau tab de nombres entiers tri\u00e9s par ordre croissant et un nombre entier n , et qui effectue une recherche dichotomique du nombre entier n dans le tableau non vide tab . Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, -1 sinon. N.B. : Cette version, du programme de 1\u00e8re, utilise une boucle while \u00e0 la place de l'appel r\u00e9cursif de la version pr\u00e9c\u00e9dente.","title":"III. Diviser pour r\u00e9gner"},{"location":"tle/seq2/diviser_regner/#iii-diviser-pour-regner","text":"","title":"III. Diviser pour r\u00e9gner"},{"location":"tle/seq2/diviser_regner/#cours","text":"","title":"Cours"},{"location":"tle/seq2/diviser_regner/#tp-le-tri-fusion","text":"","title":"TP : Le tri fusion"},{"location":"tle/seq2/diviser_regner/#tp-la-recherche-dichotomique","text":"La recherche dichotomique d'un \u00e9l\u00e9ment e dans un tableau tri\u00e9 consiste : 1. A comparer e avec celui au milieu du tableau : - si e est plus grand, on continue la recherche dans la partie droite du tableau. - sinon, on continue la recherche dans la partie gauche du tableau. 2. On recommence en comparant e avec le milieu de la partie du tableau consid\u00e9r\u00e9e, et ainsi de suite. 3. L'algorithme termine lorsque e est trouv\u00e9, ou bien si l'on arrive sur le tableau vide. Appliquer l'algorithme pour rechercher 10 dans [1,6,10,15,17,20] . Rechercher 5 dans ce m\u00eame tableau. Compl\u00e9ter la version r\u00e9cursive suivante : def recherche_dichotomique_rec ( t , elt , inf , sup ): \"\"\"Version r\u00e9cursive de la recherche dichotomique d'un \u00e9l\u00e9ment dans un tableau tri\u00e9' Entr\u00e9es : t : liste Python (tableau) d'entiers ou de flottants tri\u00e9e elt : entier ou flottant recherch\u00e9 inf, sup : entiers correspondant respectivement \u00e0 l'indice inf\u00e9rieur et sup\u00e9rieur de la partie de t consid\u00e9r\u00e9e Sortie : entier, valant -1 si l'\u00e9lement n'est pas trouv\u00e9, l'indice de l'\u00e9l\u00e9ment trouv\u00e9 dans le tableau sinon \"\"\" mil = ( sup + inf ) // 2 if sup < inf : return ... elif ... return mil elif elt > t [ mil ]: return recherche_dichotomique_rec ( t , elt , ... , ... ) else : return recherche_dichotomique_rec ( t , elt , ... , ... ) \u00c9crire une fonction recherche it\u00e9rative qui prend en param\u00e8tres un tableau tab de nombres entiers tri\u00e9s par ordre croissant et un nombre entier n , et qui effectue une recherche dichotomique du nombre entier n dans le tableau non vide tab . Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, -1 sinon. N.B. : Cette version, du programme de 1\u00e8re, utilise une boucle while \u00e0 la place de l'appel r\u00e9cursif de la version pr\u00e9c\u00e9dente.","title":"TP : La recherche dichotomique"},{"location":"tle/seq2/piles/","text":"body { text-align: justify} I. Les piles \u00b6 Cours \u00b6 A. D\u00e9finitions \u00b6 Qu'est-ce qu'une pile en informatique ? Une pile est une structure de donn\u00e9es, c'est-\u00e0-dire une mani\u00e8re de stocker, d'acc\u00e9der et de manipuler des donn\u00e9es. Elle fonctionne sur le principe du \"dernier entr\u00e9, premier sorti\", en anglais \"last in, first out\" (LIFO). Exemples de la vie quotidienne les piles d'assiettes, de cr\u00eapes, de livres, etc. Exemples en informatique la fonction \"D\u00e9faire\" ou \"Undo\" d'un logiciel de bureautique, la m\u00e9morisation des pages visit\u00e9es dans un navigateur web. Pour utiliser une telle structure dans un programme, il faut impl\u00e9menter des fonctions de base qui correspondent \u00e0 ce fonctionnement. On veut pouvoir : - construire une nouvelle pile (vide), - ajouter un \u00e9l\u00e9ment \u00e0 la pile : on empile un \u00e9l\u00e9ment, qui se retrouve au-dessus des autres, - enlever un \u00e9l\u00e9ment \u00e0 la pile : on d\u00e9pile un \u00e9l\u00e9ment, le dernier ajout\u00e9, - tester si la pile est vide ou non. B. Impl\u00e9mentation \u00b6 On propose une impl\u00e9mentation de pile, utilisant la POO (ce qui n'\u00e9tait pas obligatoire !) . class Pile : \"\"\" D\u00e9finition d'une pile avec une liste Python \"\"\" def __init__ ( self ): \"\"\"...\"\"\" self . L = [] def vide ( self ): \"\"\"...\"\"\" return self . L == [] def depiler ( self ): \"\"\"...\"\"\" # pr\u00e9condition \u00e0 ajouter return self . L . pop () def empiler ( self , x ): \"\"\"...\"\"\" self . L . append ( x ) Ajouter la description des diff\u00e9rentes m\u00e9thodes (\u00e0 associer aux fonctions de base d\u00e9crite ci-dessus) . Solution class Pile : \"\"\" D\u00e9finition d'une pile avec une liste Python \"\"\" def __init__ ( self ): \"\"\"Initialise une pile vide\"\"\" self . L = [] def vide ( self ): \"\"\"Teste si la pile est vide\"\"\" return self . L == [] def depiler ( self ): \"\"\"d\u00e9pile, c'est-\u00e0-dire enl\u00e8ve le dernier \u00e9l\u00e9ment de la pile\"\"\" # pr\u00e9condition \u00e0 ajouter return self . L . pop () def empiler ( self , x ): \"\"\"Empile, c'est-\u00e0-dire ajoute un \u00e9l\u00e9ment \u00e0 la fin de la pile\"\"\" self . L . append ( x ) Ajouter une assertion qui v\u00e9rifiera une pr\u00e9condition sur les donn\u00e9es d'entr\u00e9e n\u00e9cessaire au bon fonctionnement de depiler . Solution def depiler ( self ): \"\"\"d\u00e9pile, c'est-\u00e0-dire enl\u00e8ve le dernier \u00e9l\u00e9ment de la pile\"\"\" assert ( not ( self . vide ())) # pr\u00e9condition return self . L . pop () Cr\u00e9er un objet de la classe Pile et lui ajouter successivement les entiers 0, 1 et 2. Solution p = Pile () p . empiler ( 0 ) p . empiler ( 1 ) p . empiler ( 2 ) Enlever le dernier \u00e9l\u00e9ment de la pile. Avant de le faire, il faudra v\u00e9rifier qu'elle n'est pas vide. Solution if not ( p . vide ()): p . depiler () Exercices \u00b6 Exercice 1 : sur un logiciel de traitement de texte (sur feuille) \u00b6 Un utilisateur de traitement de texte tape successivement les lettres suivantes : \u2018v\u2019, \u2018i\u2019, \u2018v\u2019, \u2018e\u2019, \u2018n\u2019 (\u00e9tape 1). Il s\u2019arr\u00eate et clique une fois sur \u00ab undo \u00bb (\u00e9tape 2). Il continue : \u2018 \u2019 (espace), \u2018l\u2019, \u2018e\u2019, \u2018s\u2019, \u2018 \u2018, \u2018m\u2019, \u2018a\u2019, \u2018t\u2019, \u2018h\u2019, \u2018s\u2019 (\u00e9tape 3). Pris d\u2019un doute, il change d\u2019avis et clique 9 fois sur \u00ab undo \u00bb (\u00e9tape 4). Il rectifie en tapant : \u2018n\u2019, \u2018s\u2019, \u2018i\u2019 (\u00e9tape 5). Dessiner les \u00e9tapes 1 \u00e0 5 d\u00e9crites ci-dessus en repr\u00e9sentant le contenu de la pile stockant les caract\u00e8res au fur et \u00e0 mesure. Exercice 2 : des cr\u00eapes trop go\u00fbtues (sur feuille d'abord) \u00b6 Erwan invite des amis \u00e0 manger des cr\u00eapes. Il les place les unes sur les autres sur une assiette. Il commence \u00e0 en manger une pour go\u00fbter le r\u00e9sultat, et la trouve tellement bonne qu\u2019il ne peut s\u2019emp\u00eacher de manger les autres\u2026 jusqu\u2019\u00e0 la derni\u00e8re. En utilisant la classe Pile du cours, \u00e9crire une fonction vide_crepes qui prend en param\u00e8tre une pile de cr\u00eapes ( pile_crepes ) et la vide compl\u00e8tement. Cette fonction ne renvoie rien, mais l\u2019instruction pile_crepe.vide() doit retourner True apr\u00e8s son ex\u00e9cution. Pour aller plus loin... Comment cela se fait-il que l'on puisse modifier une variable dans une fonction, et r\u00e9cup\u00e9rer cette valeur modifi\u00e9e \u00e0 l'ext\u00e9rieur ? C'est une particularit\u00e9 de Python, c'est en fait l'adresse de la structure qui est pass\u00e9e en param\u00e8tre. Cela fonctionne pour les listes Python (et autres types compos\u00e9s), mais pas pour des variables de type int , str , bool . Exercice 3 : les assiettes de la grand-m\u00e8re (sur feuille d'abord) \u00b6 Marion est \u00e0 la recherche des assiettes qui lui viennent de sa grand-m\u00e8re, qui sont rang\u00e9es en bas d\u2019une pile d\u2019autres assiettes. Il faut qu\u2019elle d\u00e9pile cette derni\u00e8re, jusqu\u2019\u00e0 trouver la premi\u00e8re assiette de sa grand-m\u00e8re. Elle se retrouve finalement avec deux piles d\u2019assiettes. En utilisant la classe Pile du cours, \u00e9crire une fonction separe_assiettes(pile_assiettes, elt) qui d\u00e9pile pile_assiettes jusqu\u2019\u00e0 rencontrer l\u2019assiette elt et empile les assiettes retir\u00e9es dans une autre pile. La fonction retourne pile_assiettes modifi\u00e9e, et la 2\u00e8me pile. Si les assiettes recherch\u00e9es ne sont pas trouv\u00e9es, la fonction ne retourne rien. Exercice 4 : expressions bien parenth\u00e9s\u00e9es (sur ordinateur) \u00b6 Nous voulons \u00e9crire une fonction qui contr\u00f4le si une expression math\u00e9matique, donn\u00e9e sous forme d\u2019une cha\u00eene de caract\u00e8res, est bien parenth\u00e9s\u00e9e : c\u2019est- \u00e0-dire s\u2019il y a autant de parenth\u00e8ses ouvrantes que de fermantes, et qu\u2019elles sont bien plac\u00e9es. Exemple : (..(..)..) est bien parenth\u00e9s\u00e9e. (...(..(..)...) ne l\u2019est pas. Voici l\u2019algorithme utilis\u00e9 : Notre expression est stock\u00e9e dans une variable 'exp' La sortie est stock\u00e9e dans une variable 'parenthesee' On cr\u00e9e une pile 'p' Pour i variant de 0 \u00e0 la longueur de exp - 1 Si \u00e9l\u00e9ment 'i' de 'exp' vaut \"(\" On empile \"(\" dans 'p' Sinon si \u00e9l\u00e9ment 'i' de exp vaut \")\" si 'p' non vide on d\u00e9pile 'p' sinon 'parenthesee' vaut \"Faux\" 'parenthesee' vaut : 'p' est - elle vide ? 1. Traduire ce pseudo-code en code Python. Utiliser la structure de pile du cours. Tester le code sur les expressions suivantes : \\(((2+64)*2^8+5)\\) \\(10+((75-64)*4\\) Pour aller plus loin... Faire en sorte que le programme tienne \u00e9galement compte des \"[\" en plus des \"(\".","title":"I. Les piles"},{"location":"tle/seq2/piles/#i-les-piles","text":"","title":"I. Les piles"},{"location":"tle/seq2/piles/#cours","text":"","title":"Cours"},{"location":"tle/seq2/piles/#exercices","text":"","title":"Exercices"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/","text":"body { text-align: justify} II. La r\u00e9cursivit\u00e9 \u00b6 Cours \u00b6 Introduction \u00b6 Les poup\u00e9es russes ou matriochkas sont des s\u00e9ries de poup\u00e9es de tailles d\u00e9croissantes plac\u00e9es les unes \u00e0 l'int\u00e9rieur des autres. Elles sont toutes identiques, ne diff\u00e9rant que par leur taille. La derni\u00e8re est diff\u00e9rente, dans le sens o\u00f9 elle ne contient pas d'autre poup\u00e9e \u00e0 l'int\u00e9rieur. Une matriochka est une structure r\u00e9cursive : c'est une matriochka pleine, OU bien une matriochka contenant une autre matriochka plus petite. A. D\u00e9finition \u00b6 Une fonction r\u00e9cursive est une fonction qui s\u2019appelle elle-m\u00eame. Pour \u00e9viter que cette fonction ne s\u2019appelle \u00e0 l\u2019infini, il faut : - qu\u2019elle ait un cas de base (c'est le cas le plus simple \u00e0 r\u00e9soudre), aussi appel\u00e9 condition d'arr\u00eat (dans laquelle il n'y a plus d'appel r\u00e9cursif donc la fonction s'arr\u00eate), - qu\u2019elle se ram\u00e8ne vers ce cas de base, donc qu'il y ait un appel \u00e0 elle-m\u00eame sur un plus petit probl\u00e8me que le probl\u00e8me initial (un entier plus petit, une cha\u00eene de caract\u00e8re plus courte, etc). B. Fonctionnement d'une pile d'ex\u00e9cution \u00b6 B.1. Cas g\u00e9n\u00e9ral \u00b6 Lors de l\u2019appel d\u2019une fonction, le syst\u00e8me sauvegarde diff\u00e9rents param\u00e8tres comme ses arguments et les variables utilis\u00e9es \u00e0 l\u2019int\u00e9rieur de celle-ci. C\u2019est son contexte d\u2019ex\u00e9cution . Cela permet d\u2019interrompre l\u2019ex\u00e9cution d\u2019une fonction lorsque celle-ci en appelle d\u2019autre, et de reprendre son ex\u00e9cution ensuite. Exemple : def h ( x ): return x + 1 def g ( x ): return h ( x ) * 2 def f ( x ): return g ( x ) + 1 B.2. Cas r\u00e9cursif \u00b6 Une fonction r\u00e9cursive est une fonction dans laquelle il y a des appels de fonctions, avec la particularit\u00e9 qu'il s'agit de la m\u00eame fonction. La m\u00eame chose se produit donc : une pile d\u2019ex\u00e9cution est utilis\u00e9e pour stocker le contexte d\u2019ex\u00e9cution de ses diff\u00e9rents appels. Prenons l'exemple classique du calcul de \\(2^n\\) : def puissance ( n ) : if n == 0 : return 1 else : return 2 * puissance ( n - 1 ) Ecrire le calcul de puissance(3) : Solution puissance(3) = 2 * puissance(2) puissance(2) = 2 * puissance(1) puissance(1) = 2 * puissance(0) puissance(0) = 1 puissance(3) = 2 * 2 * 2 * 1 = 8 Le sch\u00e9ma suivant explique le processus en terme de pile d\u2019ex\u00e9cution : B.3. Cas limite \u00b6 La pile d\u2019ex\u00e9cution a une taille maximale. Lorsque la pile d\u00e9borde - \"stack overflow\" - (par d\u00e9faut au bout de 1000 appels), Python renvoie le message suivant : RecursionError : maximum recursion depth exceeded while calling a Python object C. R\u00e9cursivit\u00e9 et paradigmes \u00b6 Le paradigme r\u00e9cursif s\u2019oppose g\u00e9n\u00e9ralement au paradigme it\u00e9ratif . Ce dernier est une sous-cat\u00e9gorie du paradigme imp\u00e9ratif et fait r\u00e9f\u00e9rence \u00e0 l\u2019utilisation de boucles. Avec la r\u00e9cursivit\u00e9, on peut se passer de boucles. C\u2019est cette m\u00e9thode de programmation qui les remplace lorsque l\u2019on programme en utilisant le paradigme fonctionnel . Exercices \u00b6 Les exercices traitent d'abord d'algorithmes qui manipulent des entiers , puis des cha\u00eenes de caract\u00e8res (et des listes en bonus). Exercice 1 : factorielle \u00b6 La fonction factorielle, appliqu\u00e9e \u00e0 un entier \\(n\\) est not\u00e9e \\(!n\\) et est d\u00e9finie de la mani\u00e8re suivante : - \\(!0 = 1\\) - \\(!n = 1*2*...*(n-1)*n\\) Exprimer \\(!n\\) en fonction de \\(!(n-1)\\) . En d\u00e9duire une fonction factorielle(n) calculant la valeur de !n pour tout entier n . V\u00e9rifier que factorielle(5) renvoie bien la valeur 120 et factorielle(7) la valeur 5040 . Dessiner la pile d'ex\u00e9cution pour l'appel de factorielle(4) . V\u00e9rifier votre travail en visualisant l'ex\u00e9cution de votre code avec https://pythontutor.com/visualize.html Exercice 2 : la suite de Fibonacci \u00b6 La suite de Fibonacci est d\u00e9finie comme suit : - \\(u_0 = 0\\) et \\(u_1 = 1\\) - \\(u_n=u_{n-1}+u_{n-2}\\) 1. \u00c9crire une fonction r\u00e9cursive fib_rec(n) qui donne le n i\u00e8me terme de la suite de Fibonacci. 2. Repr\u00e9senter les appels r\u00e9cursifs de fib_rec(5) sous la forme d\u2019une structure hi\u00e9rarchique, puis sous la forme d\u2019une pile. Exercice 3 : palindromes \u00b6 Un palindrome est un mot pouvant se lire \u00e0 l'endroit comme \u00e0 l'envers, comme \"\u00e9t\u00e9\" ou \"radar\". On veut \u00e9crire une fonction palindrome prenant en entr\u00e9e une cha\u00eene de caract\u00e8re mot et renvoyant un bool\u00e9en indiquant si ce mot est un palindrome ou non. Les cas de base sont les cas o\u00f9 mot est de longueur 0 ou 1. Que doit renvoyer la fonction dans ces cas ? Dans tous les autres cas, mot est un palindrome si : la premi\u00e8re et la derni\u00e8re lettre du mot sont identiques, le reste du mot (sans la premi\u00e8re et la derni\u00e8re lettre) est un palindrome. Sur quelle valeur l'appel r\u00e9cursif se fait-il ? Ecrire la fonction palindrome incluant ces diff\u00e9rents cas. Pour aller plus loin... \u00b6 Exercice 4 : somme d'une liste \u00b6 Une fonction r\u00e9cursive appliquant un traitement sur une liste fonctionne de la m\u00eame mani\u00e8re qu'avec un entier : il faut, \u00e0 chaque nouvel appel, r\u00e9duire le probl\u00e8me. C'est-\u00e0-dire ici, r\u00e9duire la liste initiale (par exemple consid\u00e9rer la m\u00eame liste \u00e0 laquelle on a enlev\u00e9 le premier \u00e9l\u00e9ment). Ecrire une fonction it\u00e9rative (utilisant une boucle) permettant de calculer la somme des \u00e9l\u00e9ments d'une liste de nombres somme_it(liste) . Pour quelle valeur de la liste est-il le plus facile de faire ce calcul, et que vaut-il dans ce cas ? (\u00e9tat trivial) Pour prendre une partie d'une liste Python, on peut faire ce qu'on appelle du slicing , c'est-\u00e0-dire un d\u00e9coupage de la liste entre deux indices : pour une liste l , on peut choisir de consid\u00e9rer l[i:j] qui prendra les \u00e9l\u00e9ments de i \u00e0 j-1 de l . En d\u00e9duire comment prendre tous les \u00e9l\u00e9ments d'une liste sauf le premier. En d\u00e9duire l'appel r\u00e9cursif de la fonction somme_rec qui sera fait pour faire le calcul de la somme d'une liste de mani\u00e8re r\u00e9cursive. Ecrire la fonction r\u00e9cursive somme_rec(liste) . TD : Les tours de Hano\u00ef \u00b6 Introduction \u00b6 Le jeu des tours de Hano\u00ef consiste \u00e0 d\u00e9placer une pile de disques, de taille diff\u00e9rente, d'une tige de d\u00e9part (\u00e0 gauche) \u00e0 une tige d'arriv\u00e9e (tout \u00e0 droite) en respectant la r\u00e8gle suivante : un disque ne peut \u00eatre plac\u00e9 sur un autre disque de plus petite taille . A. Du cas particulier au cas g\u00e9n\u00e9ral \u00b6 Comment r\u00e9soudre le probl\u00e8me pour 2 disques ? (le repr\u00e9senter sur le sch\u00e9ma ci-dessous) R\u00e9soudre le probl\u00e8me pour 3, 4 et 5 disques gr\u00e2ce \u00e0 cette simulation : http://championmath.free.fr/tourhanoi.htm On consid\u00e8re une pile de n disques, et on suppose que l'on sait r\u00e9soudre le probl\u00e8me pour n-1 diques . Repr\u00e9senter les \u00e9tapes permettant de d\u00e9placer le n \u00e8me disque et la pile de n-1 disques (qui se d\u00e9place en entier, on suppose qu'on sait le faire) , de mani\u00e8re \u00e0 r\u00e9soudre le probl\u00e8me : R\u00e9capituler les trois \u00e9tapes de r\u00e9solution du probl\u00e8me : Etape 1 : Etape 2 : Etape 3 : B. Algorithme \u00b6 Pour r\u00e9soudre le probl\u00e8me pour n disques, on fait appel, 2 fois, \u00e0 la r\u00e9solution du probl\u00e8me pour n-1 disques. Nous allons donc utiliser un algorithme r\u00e9cursif. On propose le pseudo-code suivant : fonction Hanoi ( n , dep , inter , arr ) ''' Affiche les d\u00e9placements pour r\u00e9soudre le probl\u00e8me de Hano\u00ef pour n disques Entr\u00e9es : n : entier repr\u00e9sentant le nombre de disques \u00e0 d\u00e9placer dep, inter, arr : caract\u00e8res indiquant les sommets de d\u00e9part, interm\u00e9diaire et d'arriv\u00e9e ''' Si n est \u00e9gal \u00e0 0 retourner Rien Sinon Hanoi ( ......................... ) afficher le d\u00e9placement depuis dep jusqu \u2019 \u00e0 arr Hanoi ( ......................... ) Compl\u00e9ter le pseudo-code avec les bons param\u00e8tres pour les appels r\u00e9cursifs \u00e0 la fonction Hanoi . C. Impl\u00e9mentation \u00b6 Ecrire l'impl\u00e9mentation en Python de cet algorithme ci-dessous : N.B.: Pour l'affichage, on peut utiliser une instruction du type : print ( \"D\u00e9placer le disque \" , str ( n ), \"de la tige \" , dep , \" vers la tige \" , arr ) Pour visualiser ce qu'il se passe, compl\u00e9ter le fichier Python fourni (sur l'ENT) . \u00b6 TP : Dessiner des fractales \u00b6 Une fractale est un objet qui appara\u00eet identique \u00e0 diff\u00e9rentes \u00e9chelles : en \"zoomant\" sur une partie de la figure, on retrouve la figure initiale. On peut repr\u00e9senter une version approch\u00e9e des fractales avec des programmes r\u00e9cursifs, dont on d\u00e9fini le niveau de r\u00e9cursion (donc le niveau de d\u00e9tails de la figure). 1. Des bulles \u00b6 Le code suivant (accessible sur l'ENT) permet de dessiner une figure avec des bulles. Il utilise la biblioth\u00e8que turtle dont des \u00e9l\u00e9ments de documentation sont donn\u00e9s dans le fichier. from turtle import * def dessine_cercle ( x , y , r ): up () goto ( x , y - r ) down () circle ( r ) return None def bubble ( n , x , y , r ): if n == 0 : return None else : dessine_cercle ( x , y , r ) bubble ( n - 1 , x + 3 / 2 * r , y , r / 2 ) bubble ( n - 1 , x , y - 3 / 2 * r , r / 2 ) return None bubble ( 4 , - 100 , 100 , 50 ) done () Ex\u00e9cuter le code. Faire varier la valeur de n pour augmenter le niveau de d\u00e9tails de la figure. Identifier les appels r\u00e9cursifs de la fonction bubble . Quel param\u00e8tre permet de r\u00e9duire la taille des bulles au fur et \u00e0 mesure ? Quels param\u00e8tres changent la position de la tortue ? La variation de quel param\u00e8tre nous assure que l'algorithme va se terminer ? 2. Le flocon de von Koch \u00b6 Le flocon de Von Koch est une des premi\u00e8res courbes fractales \u00e0 avoir \u00e9t\u00e9 d\u00e9crite. Elle a \u00e9t\u00e9 invent\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Helge von Koch. Voici une partie de ce flocon : 2.A. Principe \u00b6 On commence par un segment de longueur a . On coupe ce segment en 3 parties \u00e9gales. On remplace le segment central par un triangle \u00e9quilat\u00e9ral de c\u00f4t\u00e9 a/3 . Chaque segment de longueur a/3 est lui-m\u00eame d\u00e9coup\u00e9 en 3 parties \u00e9gales (chacune de longueur a/9 ). On remplace chaque partie centrale par un triangle \u00e9quilat\u00e9ral de c\u00f4t\u00e9 a/9 . etc. 2.B. Algorithme \u00b6 Nous allons utiliser un algorithme similaire \u00e0 celui qui permet de tracer le motif avec les bulles pour dessiner ce flocon. Compl\u00e9ter l'algorithme propos\u00e9 : fonction fragment_flocon ( n , cote ): ENTREES : n : entier indiquant le nombre d \u2019 it\u00e9ration \u00e0 faire cote : la longueur du segment initial Si n est \u00e9gal \u00e0 0 alors On trace le segment de longueur cote Sinon On appelle la fonction fragment_flocon avec les param\u00e8tres __________ On tourne de _____ degr\u00e9s sur la _______________ ___________________________________________________ __________________________________________ ___________________________________________________ __________________________________________ ___________________________________________________ 2.C. Impl\u00e9mentation \u00b6 Impl\u00e9menter l'algorithme en Python permettant de dessiner une partie du flocon. Ecrire la fonction flocon dessinant le flocon en entier.","title":"II. La r\u00e9cursivit\u00e9"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#ii-la-recursivite","text":"","title":"II. La r\u00e9cursivit\u00e9"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#cours","text":"","title":"Cours"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#exercices","text":"Les exercices traitent d'abord d'algorithmes qui manipulent des entiers , puis des cha\u00eenes de caract\u00e8res (et des listes en bonus).","title":"Exercices"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#td-les-tours-de-hanoi","text":"","title":"TD : Les tours de Hano\u00ef"},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#_1","text":"","title":""},{"location":"tle/seq2/r%C3%A9cursivit%C3%A9/#tp-dessiner-des-fractales","text":"Une fractale est un objet qui appara\u00eet identique \u00e0 diff\u00e9rentes \u00e9chelles : en \"zoomant\" sur une partie de la figure, on retrouve la figure initiale. On peut repr\u00e9senter une version approch\u00e9e des fractales avec des programmes r\u00e9cursifs, dont on d\u00e9fini le niveau de r\u00e9cursion (donc le niveau de d\u00e9tails de la figure).","title":"TP : Dessiner des fractales"},{"location":"tle/seq3/Cours_SoC/","text":"body { text-align: justify} Cours : Les syst\u00e8mes sur puce \u00b6 Pour simplifier les co\u00fbts, les concepteurs de circuits \u00e9lectroniques recherchent en permanence l\u2019int\u00e9gration maximale. L\u2019objectif est d\u2019implanter toutes les fonctions d\u2019un syst`eme sur une seule puce. La difficult\u00e9 vient de la diversit\u00e9 des technologies qui doivent cohabiter sur la m\u00eame puce, sans interf\u00e9rer les unes avec les autres. Ces syst\u00e8mes se rencontrent dans l\u2019informatique embarqu\u00e9e : dans les syst\u00e8mes de traitement de l\u2019information agissant de mani\u00e8re autonome. On parle de syst\u00e8mes sur puce ou SoC de l\u2019anglais \"System on a Chip\" . A. Pr\u00e9sentation \u00b6 A partir de la vid\u00e9o \"C'est pas sorcier : Nanomonde se secoue les puces\" , r\u00e9pondre aux questions suivantes : Quel est l'ordre de grandeur du nombre de composants que l'on trouve dans une puce ? Combien de transistors faut-il pour inverser un courant (de 1 \u00e0 0 et de 0 \u00e0 1) ? Pour additionner des chiffres ? Que dit la loi de Moore ? Quelle est l'ordre de grandeur de la taille d'un transistor en 2003 (date de la vid\u00e9o) ? B. Etude d\u2019un exemple \u00b6 Le sch\u00e9ma suivant d\u00e9crit le SoC BCM2711 qui \u00e9quipe les petits ordinateurs Raspberry Pi : Identifier les diff\u00e9rents composants de l'architecture de von Neumann. Faire des recherches pour trouver les caract\u00e9ristiques suivantes : nombre de coeurs : fr\u00e9quence : capacit\u00e9 de m\u00e9moire : connectique : r\u00e9seau : C. Avantages et inconv\u00e9nients \u00b6 A partir de ce que vous avez vu dans le cours, et d'une recherche Web : - Lister les avantages d\u2019un SoC. - Lister les inconv\u00e9nients d\u2019un SoC.","title":"II. Les syst\u00e8mes sur puce"},{"location":"tle/seq3/Cours_SoC/#cours-les-systemes-sur-puce","text":"Pour simplifier les co\u00fbts, les concepteurs de circuits \u00e9lectroniques recherchent en permanence l\u2019int\u00e9gration maximale. L\u2019objectif est d\u2019implanter toutes les fonctions d\u2019un syst`eme sur une seule puce. La difficult\u00e9 vient de la diversit\u00e9 des technologies qui doivent cohabiter sur la m\u00eame puce, sans interf\u00e9rer les unes avec les autres. Ces syst\u00e8mes se rencontrent dans l\u2019informatique embarqu\u00e9e : dans les syst\u00e8mes de traitement de l\u2019information agissant de mani\u00e8re autonome. On parle de syst\u00e8mes sur puce ou SoC de l\u2019anglais \"System on a Chip\" .","title":"Cours : Les syst\u00e8mes sur puce"},{"location":"tle/seq3/Cours_SoC/#a-presentation","text":"A partir de la vid\u00e9o \"C'est pas sorcier : Nanomonde se secoue les puces\" , r\u00e9pondre aux questions suivantes : Quel est l'ordre de grandeur du nombre de composants que l'on trouve dans une puce ? Combien de transistors faut-il pour inverser un courant (de 1 \u00e0 0 et de 0 \u00e0 1) ? Pour additionner des chiffres ? Que dit la loi de Moore ? Quelle est l'ordre de grandeur de la taille d'un transistor en 2003 (date de la vid\u00e9o) ?","title":"A. Pr\u00e9sentation"},{"location":"tle/seq3/Cours_SoC/#b-etude-dun-exemple","text":"Le sch\u00e9ma suivant d\u00e9crit le SoC BCM2711 qui \u00e9quipe les petits ordinateurs Raspberry Pi : Identifier les diff\u00e9rents composants de l'architecture de von Neumann. Faire des recherches pour trouver les caract\u00e9ristiques suivantes : nombre de coeurs : fr\u00e9quence : capacit\u00e9 de m\u00e9moire : connectique : r\u00e9seau :","title":"B. Etude d\u2019un exemple"},{"location":"tle/seq3/Cours_SoC/#c-avantages-et-inconvenients","text":"A partir de ce que vous avez vu dans le cours, et d'une recherche Web : - Lister les avantages d\u2019un SoC. - Lister les inconv\u00e9nients d\u2019un SoC.","title":"C. Avantages et inconv\u00e9nients"},{"location":"tle/seq4/dico/","text":"body { text-align: justify} III. Les dictionnaires \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Les dictionnaires ou tableaux associatifs sont des structures de donn\u00e9es non-lin\u00e9aires, o\u00f9 des valeurs sont associ\u00e9es \u00e0 des cl\u00e9s . B. Type abstrait \u00b6 Les op\u00e9rations primitives pouvant \u00eatre faites sur les dictionnaires sont les suivantes : - ajout d'une nouvelle valeur \u00e0 une nouvelle cl\u00e9, - modification de la valeur associ\u00e9e \u00e0 une cl\u00e9 existante, - suppression d'une cl\u00e9 et de la valeur associ\u00e9e, - recherche de la valeur associ\u00e9e \u00e0 une cl\u00e9. Ils sont impl\u00e9ment\u00e9s directement en Python avec le type dict . Rappels Comment vous pouvez effectuer les op\u00e9rations primitives sur un dictionnaire Python, not\u00e9 d ? Commencer par cr\u00e9er un dictionnaire vide. Solution d = {} d [ cle ] = v1 #ajout d'une nouvelle valeur \u00e0 une nouvelle cl\u00e9 d [ cle ] = v2 #modification de la valeur associ\u00e9e \u00e0 cle d . pop ( cle ) #supprime cle et sa valeur associ\u00e9e print ( d [ 'cle' ]) #recherche de la valeur associ\u00e9e \u00e0 cle Avec quelle m\u00e9thode acc\u00e8de-t-on \u00e0 la liste des cl\u00e9s de d ? A la liste de ses valeurs ? Solution d.keys() et d.values() donnent respectivement la liste des cl\u00e9s et des valeurs. Comment peut-on afficher l'ensemble des cl\u00e9s et des valeurs associ\u00e9es, en parcourant d ? Solution for cle in d : print ( cle , d [ cle ]) d . items () #donne la liste des couples C. Acc\u00e8s \u00e0 un \u00e9l\u00e9ment \u00b6 L' acc\u00e8s \u00e0 un \u00e9l\u00e9ment dans un tableau associatif s'effectue, comme dans un tableau, en temps constant . Il est ind\u00e9pendant de la taille de la structure. L'impl\u00e9mentation d'un dictionnaire est en effet faite gr\u00e2ce \u00e0 une table de hachage (hors programme) qui associe \u00e0 chaque couple cl\u00e9-valeur un indice du tableau. Exercice 1) \u00c9crire en Python une fonction tabToDict qui prend en param\u00e8tre d\u2019entr\u00e9e une liste Python de la forme [cl\u00e91, valeur1, cl\u00e92, valeur2,\u2026] et retourne un dictionnaire correspondant de la forme { cl\u00e91 : valeur1, cl\u00e92 : valeur2,\u2026}. Solution def tabToDict ( t ): d = {} for i in range ( 0 , len ( t ), 2 ): d [ t [ i ]] = t [ i + 1 ] return d 2) R\u00e9ciproquement, \u00e9crire une fonction en Python dictToTab qui permet de passer d'un dictionnaire \u00e0 une liste. Solution def dictToTab ( d ): l = [] for c in d . keys (): l . append ( c ) l . append ( d [ c ]) return l","title":"III. Les dictionnaires"},{"location":"tle/seq4/dico/#iii-les-dictionnaires","text":"","title":"III. Les dictionnaires"},{"location":"tle/seq4/dico/#cours","text":"","title":"Cours"},{"location":"tle/seq4/files/","text":"body { text-align: justify} II. Les files \u00b6 Cours \u00b6 A. D\u00e9finition \u00b6 D\u00e9finition Une file est une structure de donn\u00e9es bas\u00e9e sur le principe \u00ab premier entr\u00e9, premier sorti \u00bb (en anglais \"First In, First Out\" (FIFO)), c\u2019est-\u00e0-dire que les premiers \u00e9l\u00e9ments ajout\u00e9s \u00e0 la file seront les premiers \u00e0 \u00eatre enlev\u00e9s. Exemples de la vie quotidienne pour repr\u00e9senter le syst\u00e8me de queue dans un magasin, pour repr\u00e9senter le flux de v\u00e9hicules sur une route, pour stocker des dossiers en attente dans une entreprise,... Exemples en informatique pour la gestion du temps affect\u00e9 \u00e0 chaque t\u00e2che par un syst\u00e8me d'exploitation, pour la gestion de la file d'attente de documents \u00e0 imprimer, pour mat\u00e9rialiser une file d'attente d'un logiciel de visioconf\u00e9rence, d'un jeu en ligne,... B. Type abstrait \u00b6 Les op\u00e9rations primitives que l'on peut faire sur une file sont les suivantes : - construire une file vide ( fileCree() ), - ajouter un \u00e9l\u00e9ment \u00e0 la file (il se retrouve apr\u00e8s les autres) ( fileAjouterFin(file, element) ), - enlever un \u00e9l\u00e9ment de la file (le premier ajout\u00e9 : celui en t\u00eate) et le renvoie ( fileRetirerTete(file) ), - estimer si la file est vide ( True ) ou non ( False ) ( fileEstVide(file) ), - obtenir le nombre d'\u00e9l\u00e9ments contenus dans la file ( fileTaille(file) ), - obtenir la t\u00eate de la file, aussi appel\u00e9 sommet (sans la retirer) ( fileTete(file) ). Exercice : En utilisant les noms des fonctions donn\u00e9s ci-dessus, cr\u00e9er une file, lui ajouter les \u00e9l\u00e9ments 2 et 9, puis lui enlever le dernier \u00e9l\u00e9ment r\u00e9cup\u00e9r\u00e9 dans une variable, avant d'estimer si elle est vide. Solution f = fileCree () f = enfiler ( f , 2 ) f = enfiler ( f , 9 ) x = enfiler ( f ) print ( fileVide ( f )) C. Les structures lin\u00e9aires de donn\u00e9es \u00b6 Les listes , piles et files sont des structures lin\u00e9aires de donn\u00e9es : c'est-\u00e0-dire que les diff\u00e9rents \u00e9l\u00e9ments sont ordonn\u00e9s et adjacents les uns aux autres. Les piles et les files contrastent par leur ordre d'acc\u00e8s aux donn\u00e9es est oppos\u00e9 : LIFO vs FIFO. TP : Impl\u00e9mentations \u00b6 Dans ce TD, nous allons impl\u00e9menter la structure de file , de plusieurs mani\u00e8res diff\u00e9rentes. A. Une premi\u00e8re impl\u00e9mentation \u00b6 Une premi\u00e8re impl\u00e9mentation est donn\u00e9e ci-dessous. A partir de ce code, cr\u00e9er une file et enfiler successivement les entiers de 0 \u00e0 4. def file (): ''' Renvoie une file vide ''' return [] def vide ( f ): ''' Renvoie True si la file est vide, False sinon ''' return f == [] def enfiler ( f , x ): ''' Ajoute x \u00e0 la file f ''' return f . append ( x ) def defiler ( f ): ''' Enl\u00e8ve et renvoie le premier \u00e9l\u00e9ment de la file ''' assert not vide ( f ), \"file vide !\" return f . pop ( 0 ) Cr\u00e9er les fonctions suivantes : - taille : renvoie la taille d'une file f , - sommet : renvoie le sommet d'une file f , sans l'enlever de la file. Les tester sur la file f cr\u00e9\u00e9e pr\u00e9c\u00e9demment. B. Impl\u00e9mentation avec deux piles \u00b6 Pour la deuxi\u00e8me implantation, nous allons utiliser deux structures de piles et la programmation orient\u00e9e objet. Le proc\u00e9d\u00e9 est le suivant : - La file est, au d\u00e9part, compos\u00e9e de deux piles vides : une pile d'entr\u00e9e et une pile de sortie . - Quand on ajoute un \u00e9l\u00e9ment dans la file, on le place dans la pile d'entr\u00e9e . - Quand on supprime un \u00e9l\u00e9ment de la file, deux cas se pr\u00e9sentent : 1. Si la pile de sortie est vide : on d\u00e9pile alors chaque \u00e9l\u00e9ment de la pile d'entr\u00e9e pour les empiler dans la pile de sortie. 2. S'il y a au moins un \u00e9l\u00e9ment dans la pile de sortie : on ne fait rien. 3. On supprime ensuite le sommet de la pile de sortie. On utilise donc une classe Pile , et on propose la code de la classe File ci-dessous. - Compl\u00e9ter les m\u00e9thodes propos\u00e9es pour impl\u00e9menter la structure de file. - Ajouter \u00e0 la classe File les m\u00e9thodes suivantes : 1. sommet : retourne le sommet de la file, sans l'en enlever. 2. taille : retourne le nombre d'\u00e9l\u00e9ments de la file. class Pile : ''' D\u00e9finition d'une classe Pile une instance Pile est cr\u00e9\u00e9e avec une liste Python ''' def __init__ ( self ): \"Cr\u00e9ation d'une pile vide\" self . L = [] def vide ( self ): \"Teste si la pile est vide\" return self . L == [] def depiler ( self ): \"D\u00e9pile : enl\u00e8ve le dernier \u00e9l\u00e9ment\" assert ( not ( self . vide ()) ), \"Pile vide !\" return self . L . pop () def empiler ( self , x ): \"Empile : ajoute un \u00e9l\u00e9ment x en haut de la pile\" self . L . append ( x ) def taille ( self ): \"Retourne la taille (le nombre d'\u00e9l\u00e9ments) de la pile\" return len ( self . L ) def sommet ( self ): \"Retourne le premier \u00e9l\u00e9ment \u00e0 sortir de la pile sans le d\u00e9piler\" return self . L [ self . taille () - 1 ] class File : def __init__ ( self ): ''' Cr\u00e9e une file vide. Attribut pile_entree : objet Pile stockant les nouvelles valeurs ajout\u00e9es \u00e0 la file. Attribut pile_sortie : objet Pile stockant les valeurs qui vont sortir de la file. Son sommet est le premier \u00e9l\u00e9ment de la file. ''' self . pile_entree = Pile () self . pile_sortie = Pile () def vide ( self ): ''' Teste si la file est vide ou non. ''' return ??? def enfiler ( self , x ): ''' Ajoute l'\u00e9l\u00e9ment x \u00e0 la file.''' self . pile_entree . empiler ( x ) def organiser ( self ): ''' Fonction auxiliaire actualisant l'\u00e9tat de la pile de sortie lorsque l'on veut supprimer un \u00e9l\u00e9ment de la file. Si la pile de sortie est vide, on lui ajoute successivement les \u00e9l\u00e9ments que l'on d\u00e9pile \u00e0 la pile d'entr\u00e9e. ''' if self . pile_sortie . vide (): ??? def defiler ( self ): ''' Supprime le premier \u00e9l\u00e9ment entr\u00e9 dans la file. ''' self . organiser () ??? Tester le bon fonctionnement du code suivant : f = File () for i in range ( 5 ): f . enfiler ( 2 * i ) print ( f . taille ()) a = f . defiler () print ( a ) print ( f . taille ()) print ( f . sommet ()) C. Impl\u00e9mentation avec une liste Python \u00b6 En vous inspirant de l'impl\u00e9mentation d'une pile en POO que nous avions faite, proposer une impl\u00e9mentation similaire pour une structure de file : en utilisant une liste Python. On devra retrouver les m\u00eames primitives que pour les autres impl\u00e9mentations. Faire un test en cr\u00e9ant un nouvel objet File, et en lui appliquant les diff\u00e9rentes m\u00e9thodes. class File : # \u00e0 compl\u00e9ter D. L'impl\u00e9mentation Python \u00b6 Python poss\u00e8de sa propre impl\u00e9mentation de file, utilisable aussi pour mod\u00e9liser une pile. Il s'agit de la structure deque (\"double-ended queue\"). Utiliser sa documentation : https://docs.python.org/fr/3/library/collections.html#collections.deque pour choisir les m\u00e9thodes qui permettent de simuler le fonctionnement d'une file. On y retrouve des m\u00e9thodes similaires \u00e0 celles d\u00e9finies pour les listes Python, mais avec la possibilit\u00e9 d'ajouter et de supprimer des \u00e9l\u00e9ments soit \u00e0 droite, soit \u00e0 gauche. Rajouter, \u00e0 la suite du code ci-dessous, des instructions qui permettent de cr\u00e9er un objet deque , de lui enfiler plusieurs \u00e9l\u00e9ments, d'estimer si la file est vide, et de d\u00e9filer un \u00e9l\u00e9ment. Il y a plusieurs solutions. from collections import deque TD : Mod\u00e9lisation \u00b6 A. Pr\u00e9sentation \u00b6 On souhaite \u00e9crire un algorithme qui simule l'arriv\u00e9e de voitures sur la route R3, mod\u00e9lis\u00e9e par la file f3 . - Dans la file f1 , on repr\u00e9sente la pr\u00e9sence d\u2019une voiture par le nombre 1 et l\u2019absence de voiture par 0 . - Dans la file f2 , on repr\u00e9sentera la pr\u00e9sence d\u2019une voiture par le nombre 2 et l\u2019absence de voiture par 0 . Donner la file f1 correspondant \u00e0 la situation suivante : une voiture, pas de voiture, pas de voiture, une voiture, une voiture, pas de voiture. Donner la file f2 correspondant \u00e0 la situation suivante : pas de voiture, pas de voiture, une voiture, une voiture, pas de voiture, une voiture. B. Les diff\u00e9rents cas \u00b6 Que doit faire l\u2019algorithme si : - les deux sommets des files sont \u00e0 0 ? - le sommet de f1 est \u00e0 1 et celui de f2 \u00e0 2 ? - le sommet de f1 est \u00e0 1 et celui de f2 \u00e0 0 ? - le sommet de f1 est \u00e0 0 et celui de f2 \u00e0 2 ? - l\u2019une des deux files est vide ? Donner la file f3 correspondant aux files entrantes suivantes : f1 : t\u00eate <\u2013 [0, 1, 1, 0, 1] <\u2013 queue f2 : t\u00eate <\u2013 [0, 2, 2, 2, 0, 2, 0] <\u2013 queue C. Construction de l\u2019algorithme \u00b6 Ecrire sous la forme d\u2019un pseudo-code la fonction croisement prenant en entr\u00e9es les deux files f1 et f2 , et retournant la file f3 . Tous les cas identifi\u00e9s dans la partie pr\u00e9c\u00e9dente devront \u00eatre trait\u00e9s. On n\u2019utilisera que les primitives utilisables sur les files. D. Impl\u00e9mentation de l\u2019algorithme \u00b6 Impl\u00e9menter le pseudo-code pr\u00e9c\u00e9dent et le tester sur l\u2019exemple donn\u00e9 dans la partie 2. On utilisera une impl\u00e9mentation de file avec la POO, utilisant les m\u00e9thodes enfiler , defiler , sommet et estVide .","title":"II. Les files"},{"location":"tle/seq4/files/#ii-les-files","text":"","title":"II. Les files"},{"location":"tle/seq4/files/#cours","text":"","title":"Cours"},{"location":"tle/seq4/files/#tp-implementations","text":"Dans ce TD, nous allons impl\u00e9menter la structure de file , de plusieurs mani\u00e8res diff\u00e9rentes.","title":"TP : Impl\u00e9mentations"},{"location":"tle/seq4/files/#td-modelisation","text":"","title":"TD : Mod\u00e9lisation"},{"location":"tle/seq4/listes/","text":"body { text-align: justify} I. Les listes \u00b6 Cours \u00b6 A. La notion de liste \u00b6 D\u00e9finition Une liste est un ensemble s\u00e9quentiel (les \u00e9l\u00e9ments sont les uns \u00e0 la suite des autres) de donn\u00e9es de m\u00eame type. Elle est classiquement impl\u00e9ment\u00e9e par : - un tableau , - une liste cha\u00een\u00e9e . Rappel Un tableau est une suite indic\u00e9e d'\u00e9l\u00e9ments de m\u00eame type. L'avantage d'un tableau est que l'on peut acc\u00e9der directement \u00e0 chacun de ses \u00e9l\u00e9ments, gr\u00e2ce \u00e0 leur indice. Son inconv\u00e9nient est que sa taille est d\u00e9finie \u00e0 l'avance , et ne peut \u00eatre modifi\u00e9e. La liste cha\u00een\u00e9e se diff\u00e9rencie des tableaux par sa mani\u00e8re d'acc\u00e8der aux diff\u00e9rents \u00e9l\u00e9ments. B. La structure de liste cha\u00een\u00e9e \u00b6 D\u00e9finition Une liste cha\u00een\u00e9e est une suite d'\u00e9l\u00e9ments compos\u00e9e : - d'une t\u00eate : le premier \u00e9l\u00e9ment auquel on peut acc\u00e9der, - d'une queue : le reste des \u00e9l\u00e9ments. Historiquement, le langage LISP (\"list processing\") est un des premiers \u00e0 introduire cette structure de donn\u00e9es en 1958. Dans ce langage, la t\u00eate est nomm\u00e9e car pour \"content of address register\" , et la queue cdr pour \"content of decrement register\" . Sur une liste, on peut effectuer les op\u00e9rations dites \"primitives\" suivantes : - cr\u00e9er une liste vide ( listeCree() ), - obtenir la t\u00eate de la liste ( listeTete(liste) ), - obtenir la queue de la liste ( listeQueue(liste) ), - renvoyer si la liste est vide ( True ) ou non ( False ) ( listeEstVide() ), - ajouter un \u00e9l\u00e9ment en t\u00eate d'une liste ( listeAjoute(element, liste) ). Exercice En utilisant les fonctions d\u00e9finie ci-dessus, cr\u00e9er une liste cha\u00een\u00e9e initialement vide, \u00e0 laquelle on ajoute successivement les entiers 15, 2 et 3. Solution L = listeCree () L = listeAjoute ( 15 , L ) L = listeAjoute ( 2 , L ) L = listeAjoute ( 3 , L ) # ou L = listeAjoute(3,listeAjoute(2,listeAjoute(15, listeCree()))) En quoi une liste cha\u00een\u00e9e est-elle une structure r\u00e9cursive ? Une liste est une structure r\u00e9cursive car sa queue est elle-m\u00eame une liste. C. Stockage en m\u00e9moire \u00b6 Tableaux et listes cha\u00een\u00e9es se distinguent par leur utilisation de la m\u00e9moire. Un tableau est stock\u00e9 dans une suite contig\u00fce de cases m\u00e9moires. Sa taille est fixe : l'ajout d'un nouvel \u00e9l\u00e9ment, qui agrandirait la taille du tableau, n'est pas possible. En Python, la structure de liste correspond \u00e0 un tableau dynamique : un tableau auquel on peut ajouter des \u00e9l\u00e9ments. Ceux-ci devant toujours \u00eatre plac\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres, s'il n'y a pas de place pour ajouter ces donn\u00e9es dans les cases m\u00e9moires adjacentes... alors il faut r\u00e9\u00e9crire le tableau ailleurs. Les diff\u00e9rents \u00e9l\u00e9ments d'une liste cha\u00een\u00e9e ne sont pas stock\u00e9s de mani\u00e8re contig\u00fce : chaque \u00e9l\u00e9ment est associ\u00e9 \u00e0 2 cases m\u00e9moires : - une dans laquelle on stocke la valeur de l'\u00e9l\u00e9ment, - une dans laquelle on stocke l'adresse m\u00e9moire de l'\u00e9l\u00e9ment suivant . Il est donc tr\u00e8s facile d'ajouter des \u00e9l\u00e9ments \u00e0 une liste cha\u00een\u00e9e : Quelle op\u00e9ration faut-il faire ? Il faut lier la queue de l'\u00e9l\u00e9ment d'avant au nouvel \u00e9l\u00e9ment, et la queue du nouvel \u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment qui \u00e9tait \u00e0 sa place. Exercice Ecrire une fonction elementListe prenant comme entr\u00e9es une liste L et un indice i et retournant l'\u00e9lement i de la liste. Quelle est la complexit\u00e9 de cette fonction ? Solution def elementListe ( L , i ): if i == 1 : return listeTete ( L ) else : return elementListe ( listeQueue ( L ), i - 1 ) Il faut parcourir tous les \u00e9l\u00e9ments pr\u00e9c\u00e9dents avant d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment i : la complexit\u00e9 est lin\u00e9aire (en \\(O(n)\\) ). D. Interface et impl\u00e9mentation d'une structure de donn\u00e9es \u00b6 Nous avons vu en TD que l'on pouvait impl\u00e9menter de diff\u00e9rentes mani\u00e8res la m\u00eame structure de liste cha\u00een\u00e9e . Le type abstrait , ou d\u00e9finition de la structure ne change pas. On manipule la structure gr\u00e2ce \u00e0 son interface : la description des op\u00e9rations qui peuvent \u00eatre faites sur ces donn\u00e9es. La mani\u00e8re de les impl\u00e9menter peut varier, on aura utilis\u00e9 la m\u00eame structure. TP : Impl\u00e9mentations \u00b6 A. Premi\u00e8re impl\u00e9mentation \u00b6 On propose une premi\u00e8re impl\u00e9mentation d'une liste cha\u00een\u00e9e, qui est repr\u00e9sent\u00e9e par un tuple (tete, queue) : def listeCree (): return None def listeEstVide ( l ): return l == None def listeAjoute ( x , l ): return ( x , l ) def listeTete ( l ): return l [ 0 ] def listeQueue ( l ): return l [ 1 ] 1. Ex\u00e9cuter les instructions suivantes : - Cr\u00e9er une liste vide. - V\u00e9rifier qu'elle est vide. - Ajouter successivement les entiers de 0 \u00e0 4. - V\u00e9rifier qu'elle n'est pas vide. Cr\u00e9er une fonction listeAffiche(l) qui affiche successivement les diff\u00e9rents \u00e9l\u00e9ments de la liste de mani\u00e8re r\u00e9cursive . Cr\u00e9er une fonction listeCompte(l) qui compte le nombre d'\u00e9l\u00e9ments dans une liste de mani\u00e8re r\u00e9cursive . Reprendre la liste de la question 1., et : Ajouter l'entier 5. Compter le nombre d'\u00e9l\u00e9ments et les afficher. Supprimer la t\u00eate de la liste. Compter \u00e0 nouveau le nombre d'\u00e9l\u00e9ments et les afficher. B. Deuxi\u00e8me impl\u00e9mentation (POO) \u00b6 On propose une deuxi\u00e8me impl\u00e9mentation qui utilise la POO. Elle se base sur deux classes : une classe Cellule qui repr\u00e9sente un \u00e9l\u00e9ment de la liste, et une classe Liste compos\u00e9e d'instances de la classe Cellule et impl\u00e9mentant les primitives d'une liste : class Cellule : def __init__ ( self , tete , queue ): self . car = tete self . cdr = queue class Liste : def __init__ ( self , c ): self . cellule = c def isnil ( self ): return self . cellule is None def car ( self ): assert ( not ( self . cellule is None )), 'Liste vide !' return self . cellule . car def cdr ( self ): assert ( not ( self . cellule is None )) return self . cellule . cdr def cons ( self , e ): return Liste ( Cellule ( e , self )) Remarque : On utilise ici les noms utilis\u00e9s par le langage Lisp pour impl\u00e9menter les primitives. Pour construire une liste, on utilise la m\u00e9thode cons qui ajoute un \u00e9l\u00e9ment en t\u00eate : nil = Liste ( None ) L = nil . cons ( 5 ) . cons ( 4 ) . cons ( 3 ) . cons ( 2 ) . cons ( 1 ) 1. Repr\u00e9senter les \u00e9l\u00e9ments de la liste L en utilisant un sch\u00e9ma comme ceux du cours. 2. Identifier le r\u00f4le des diff\u00e9rentes m\u00e9thodes et l'ajouter en commentaires. 2. Tester le code suivant : print ( L . isnil ()) print ( L . car ()) print ( L . cdr () . car ()) 3. Ecrire l'instruction permettant d'afficher le dernier \u00e9l\u00e9ment de la liste. Cr\u00e9er les fonctions lengthList(l) et displayList(l) qui, respectivement, compte le nombre d'\u00e9l\u00e9ments dans la liste, et affiche chacun d'entre eux. On impl\u00e9mentera ces fonctions de mani\u00e8re r\u00e9cursive . Cr\u00e9er la fonction removeList(l) , qui supprime un \u00e9l\u00e9ment en t\u00eate de liste et le retourne. Pour aller plus loin... La liste cha\u00een\u00e9e vue en cours est une liste simplement cha\u00een\u00e9e : chaque \u00e9l\u00e9ment ne poss\u00e8de qu'un lien vers le suivant. Avec une liste doublement cha\u00een\u00e9e , chaque \u00e9l\u00e9ment poss\u00e8de un lien avec le suivant et avec le pr\u00e9c\u00e9dent. Cela permet les parcours de liste dans les deux sens. On propose les classes ci-dessous pour impl\u00e9menter cette structure. Ajouter les m\u00e9thodes insereDebut et insereFin \u00e0 la classe ListeDoublementChainee , permettant d'ins\u00e9rer des \u00e9l\u00e9ments au d\u00e9but ou \u00e0 la fin de la liste. class Maillon (): def __init__ ( self , e ): self . element = e self . suivant = None self . precedent = None class ListeDoublementChainee (): def __init__ ( self , m ): self . maillon_debut = m","title":"I. Les listes"},{"location":"tle/seq4/listes/#i-les-listes","text":"","title":"I. Les listes"},{"location":"tle/seq4/listes/#cours","text":"","title":"Cours"},{"location":"tle/seq4/listes/#tp-implementations","text":"","title":"TP : Impl\u00e9mentations"},{"location":"tle/seq4/synthese/","text":"body { text-align: justify} Synth\u00e8se \u00b6 Exercices \u00b6 Exercice 1 : structures et interfaces \u00b6 A. Quelle op\u00e9ration ne fait pas partie de l\u2019interface d\u2019une pile ? 1. ajouter un \u00e9l\u00e9ment \u00e0 la pile 2. supprimer l\u2019\u00e9l\u00e9ment le plus r\u00e9cent de la pile 3. retirer l\u2019\u00e9l\u00e9ment le plus ancien de la pile B. Quelle op\u00e9ration ne fait pas partie de l\u2019interface d\u2019une file ? 1. ajouter un \u00e9l\u00e9ment \u00e0 la file 2. supprimer l\u2019\u00e9l\u00e9ment le plus r\u00e9cent de la file 3. retirer l\u2019\u00e9l\u00e9ment le plus ancien de la file C. Pour que deux impl\u00e9mentations du m\u00eame type abstrait soient interchangeables, il faut que : 1. la complexit\u00e9 en temps soit la m\u00eame dans les deux cas 2. l\u2019interface de la structure de donn\u00e9es soit la m\u00eame dans les deux cas 3. les deux impl\u00e9mentations soient parfaitement identiques Exercice 2 : choisir une structure de donn\u00e9es \u00b6 Associer une structure de donn\u00e9es adapt\u00e9e \u00e0 chaque situation. - Dans une administration, on souhaite ins\u00e9rer dans une structure de donn\u00e9es les dol\u00e9ances re\u00e7ues afin de les traiter selon leur ordre d\u2019arriv\u00e9e. On aura plut\u00f4t int\u00e9r\u00eat \u00e0 les enregistrer dans : a) une liste b) une pile c) une file Pour un logiciel, on doit enregistrer la liste des actions dans une structure de donn\u00e9es de sorte \u00e0 voir la derni\u00e8re action en priorit\u00e9. On enregistrera donc les actions dans : a) une liste b) une pile c) une file On souhaite ins\u00e9rer dans une structure de donn\u00e9es les diff\u00e9rentes hauteurs d\u2019un arbre au fil des ann\u00e9es sans y ins\u00e9rer les ann\u00e9es. La structure de donn\u00e9es la plus adapt\u00e9e est : a) une liste b) une pile c) une file Exercice 3 : algorithmes sur les files et les piles \u00b6 Dans ces deux questions, on utilise une impl\u00e9mentation des structures en POO. On dispose d\u2019une file contenant des entiers, \u00e9crire une fonction qui renvoie une file dont on aura enlev\u00e9 les nombres impairs, mais dont les nombres pairs sont dans le m\u00eame ordre qu\u2019initialement. On dispose d\u2019une pile contenant des entiers, \u00e9crire une fonction qui renvoie une pile dont on aura enlev\u00e9 les nombres pairs, mais dont les nombres impairs sont dans le m\u00eame ordre qu\u2019initialement. Exercice 4 : synth\u00e8se \u00b6 Structure D\u00e9finition Cas d'utilisation Acc\u00e8s \u00e9l\u00e9ment (co\u00fbt) Ajout \u00e9l\u00e9ment (co\u00fbt) Liste cha\u00een\u00e9e Tableau statique Tableau dynamique File Pile Tableau associatif","title":"Synth\u00e8se"},{"location":"tle/seq4/synthese/#synthese","text":"","title":"Synth\u00e8se"},{"location":"tle/seq4/synthese/#exercices","text":"","title":"Exercices"},{"location":"tle/seq5/BDD_Relationnelles/","text":"body { text-align: justify} II : Les bases de donn\u00e9es relationnelles \u00b6 TD : Contraintes d\u2019int\u00e9grit\u00e9 et anomalies \u00b6 Exercice 1 : contraintes d\u2019int\u00e9grit\u00e9 \u00b6 On d\u00e9finit une table Citoyens (cl\u00e9 primaire : Id ), et une table Ville (cl\u00e9 primaire : Ville ). Id Nom Pr\u00e9nom Date de naissance Ville 1 Dupont Jeanette 15/12/1972 Paris 2 Terta Henry 12/06/1978 Nice 3 Grimard Aubin 25/11/1999 Marseille Ville Maire Population Paris Anne Hidalgo 2 175 601 Nice Christian Estrosi 342 522 Marseille Benoit Payan 861 635 Quelle est la cl\u00e9 \u00e9trang\u00e8re identifiable dans la table Citoyens ? Dans chacune des questions suivantes, indiquer quelle contrainte d\u2019int\u00e9grit\u00e9 n\u2019est pas respect\u00e9e. Que se passe-t-il si l\u2019on souhaite ins\u00e9rer l\u2019enregistrement suivant dans Citoyen ? ( 3 , Tartempion , Eva , 26 / 10 / 1992 , Paris ) Que se passe-t-il si l\u2019on souhaite ins\u00e9rer l\u2019enregistrement suivant dans Citoyen ? ( 4 , Tartempion , Roger , 01 / 08 / 1989 , Brest ) Que se passe-t-il si l\u2019on supprime l\u2019enregistrement suivant dans Ville ? ( Marseille , Benoit Payan , 861 635 ) Exercice 2 : conception d\u2019une table de livres \u00b6 Soit la table Livres suivante, dont la cl\u00e9 primaire est id : id titre publication auteur naissance note 1 Le temps des temp\u00eates 2020 Nicolas Sarkozy 1955 3 2 Pas plus de 4 heures de sommeil 2014 Marl\u00e8ne Schiappa 1982 5 3 Trop vite 2017 Nabilla Benatia 1992 1 4 Dune 1965 Frank Herbert 1920 10 Pour chacune des questions suivantes, indiquer quel type d\u2019anomalie est rep\u00e9r\u00e9 si c\u2019est le cas. Que se passe-t-il dans la table si je rajoute le livre \"J\u2019arr\u00eate de m\u2019\u00e9puiser ! 21 jours pour pr\u00e9venir le burn-out\" de Marl\u00e8ne Schiappa, n\u00e9e en 1982, livre paru en 2015, avec une note de 9 ? Que se passe-t-il si, apr\u00e8s avoir ins\u00e9r\u00e9 le n-uplet de la question pr\u00e9c\u00e9dente, je modifie la date de naissance de Marl\u00e8ne Schiappa dans l\u2019enregistrement dont l\u2019id est 1 ? Que se passe-t-il si on supprime le livre \"Trop vite\" de la table ? Proposer une autre structure de la base de donn\u00e9es permettant d\u2019\u00e9viter les anomalies rep\u00e9r\u00e9es. Exercice 3 : conception d\u2019une table de films \u00b6 Soit la table Films suivante, dont la cl\u00e9 primaire est filmID : filmID titre annee acteur principal nationalit\u00e9 1 Le Seigneur des Anneaux : la communaut\u00e9 de l\u2019anneau 2001 Elijah Wood anglaise 2 Le Seigneur des Anneaux : les deux tours 2002 Elijah Wood anglaise 3 Match Point 2005 Scarlett Johansson am\u00e9ricaine 4 OSS 117 : Le Caire, nid d\u2019espions 2006 Jean Dujardin fran\u00e7aise 5 Star Wars : Le retour du Jedi 1983 Mark Hamill am\u00e9ricaine Pour chacune des questions suivantes, indiquer quel type d\u2019anomalie est rep\u00e9r\u00e9 si c\u2019est le cas. Que se passe-t-il lorsque l\u2019on supprime l'enregistrement correspondant au filmID 5 ? Que se passe-t-il lorsque l\u2019on modifie la nationalit\u00e9 d\u2019Elijah Wood, qui est en fait am\u00e9ricaine, dans l'enregistrement correspondant au filmID 1 ? Que se passe-t-il lorsque l\u2019on ajoute l'enregistrement suivant : ( 6 , Star Wars : Un nouvel espoir , 1977 , Mark Hamill , am\u00e9ricaine ) ? Proposer une autre structure de la base de donn\u00e9es permettant d\u2019\u00e9viter les anomalies rep\u00e9r\u00e9es. Si l\u2019on voulait ajouter des informations sur les diff\u00e9rents acteurs des films, et pas seulement l\u2019acteur principal, quel mod\u00e8le pourrait-on proposer ?","title":"II. Les bases de donn\u00e9es relationnelles"},{"location":"tle/seq5/BDD_Relationnelles/#ii-les-bases-de-donnees-relationnelles","text":"","title":"II : Les bases de donn\u00e9es relationnelles"},{"location":"tle/seq5/BDD_Relationnelles/#td-contraintes-dintegrite-et-anomalies","text":"","title":"TD : Contraintes d\u2019int\u00e9grit\u00e9 et anomalies"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/","text":"body { text-align: justify} I. Le mod\u00e8le relationnel \u00b6 Cours \u00b6 Il existe plusieurs moyens de structurer une base de donn\u00e9es, s\u2019appuyant sur des mod\u00e8les diff\u00e9rents comme le mod\u00e8le hi\u00e9rarchique, les bases de donn\u00e9es objet ou nosql. Le plus utilis\u00e9 aujourd\u2019hui est aussi l\u2019un des plus anciens : le mod\u00e8le relationnel . A. Repr\u00e9sentation \u00b6 Le mod\u00e8le relationnel , qui fut propos\u00e9 en 1970 par Edgar Frank Codd, consiste \u00e0 repr\u00e9senter les donn\u00e9es dans des tableaux, appel\u00e9s relations ou tables. Chaque relation peut \u00eatre vue comme une sorte de classe (POO) d\u00e9finie par un certain nombre d\u2019attributs. Prenons pour exemple une base de donn\u00e9es rassemblant les figures du monde de l\u2019informatique. On d\u00e9finit une premi\u00e8re table regroupant des informations personnelles : nom prenom naissance nationalite Structure de la table Une fois la structure d\u00e9finie, nous pouvons y ins\u00e9rer des donn\u00e9es. Sur chaque ligne, on ajoute un ensemble d\u2019\u00e9l\u00e9ments correspondant aux diff\u00e9rentes colonnes : un n-uplet , c\u2019est-\u00e0-dire une collection d\u2019\u00e9l\u00e9ments n\u2019ayant pas forc\u00e9ment le m\u00eame type. Par exemple : nom prenom naissance nationalite Lovelace Ada 1815 britannique Turing Alan 1912 britannique Insertion de deux tuples sur les deux premi\u00e8res lignes de la table pr\u00e9c\u00e9dente B. Vocabulaire \u00b6 Une relation est un ensemble de n-uplets ayant les m\u00eames attributs. On la repr\u00e9sente par une table . Dans une relation : Chaque ligne correspond \u00e0 un n-uplet , qui peut \u00eatre d\u00e9sign\u00e9 par le terme enregistrement (\u00e9l\u00e9ment d\u2019une table). Exemple Lovelace, Ada, 1815, britannique Les attributs sont des caract\u00e9ristiques qui correspondent au nom des colonnes. Exemple nom, prenom, naissance, nationalite Le domaine d\u2019un attribut est son type : entier, flottant, caract\u00e8res, bool\u00e9en, etc. N.B. : il existe une grande vari\u00e9t\u00e9 de domaines dans le langage SQL que nous allons utiliser. Dans la partie th\u00e9orique, nous utiliseront ceux cit\u00e9s ci-dessus. Exemples nom est de type caract\u00e8res pr\u00e9nom est de type caract\u00e8res naissance est de type entier nationalite est de type caract\u00e8res L\u2019ensemble des attributs d\u2019une relation, associ\u00e9s \u00e0 leur domaine, constitue le sch\u00e9ma de la relation . Exemple Le sch\u00e9ma de la relation Figures est : {nom: caract\u00e8res, prenom: caract\u00e8res, naissance: annee, nationalite: caract\u00e8res} Une base de donn\u00e9es relationnelle est constitu\u00e9e d\u2019une ou de plusieurs relations. C. Cl\u00e9s primaires et \u00e9trang\u00e8res \u00b6 C.1. Cl\u00e9 primaire \u00b6 Pour pouvoir acc\u00e9der \u00e0 une instance d'une table, et \u00eatre s\u00fbr qu'il s'agit de la bonne, il faut pouvoir l\u2019identifier de mani\u00e8re unique. Dans notre table repr\u00e9sentant la relation Figures , avons-nous un attribut permettant de le faire ? Il n'y en a pas, car plusieurs personnes peuvent avoir le m\u00eame nom. Les valeurs des attributs ne sont pas uniques. Rajoutons donc un attribut id_f , dont le domaine est entier, dans lequel on stocke un nouveau num\u00e9ro \u00e0 chaque nouvel enregistrement ins\u00e9r\u00e9 : id_f nom prenom naissance nationalite 1 Lovelace Ada 1815 britannique 2 Turing Alan 1912 britannique Table de la relation Figures dans laquelle l\u2019attribut ID a \u00e9t\u00e9 ajout\u00e9. id_f est ce que l\u2019on appelle la cl\u00e9 primaire de la table. D\u00e9finition d\u2019une cl\u00e9 primaire : C'est l'attribut identifiant de mani\u00e8re unique un n-uplet d'une relation. Nous aimerions aussi disposer, dans notre base, de donn\u00e9es sur les avanc\u00e9es dont ces figures sont \u00e0 l\u2019origine. Nous cr\u00e9ons donc une deuxi\u00e8me table Avanc\u00e9es , disposant elle aussi d\u2019une cl\u00e9 primaire id_a pour identifier chaque enregistrement de mani\u00e8re unique. id_a nom date 1 Premier programme informatique 1843 2 Machine universelle 1936 3 D\u00e9chiffrement d\u2019Enigma 1941 Table de la relation Avanc\u00e9es C.2. Cl\u00e9 \u00e9trang\u00e8re \u00b6 On veut \u00e0 pr\u00e9sent associer les diff\u00e9rentes avanc\u00e9es avec la figure qui en est \u00e0 l\u2019origine. Pour cela, on y ins\u00e8re un attribut qui correspond \u00e0 la cl\u00e9 primaire de la table Figures dans la table Avanc\u00e9es . id_a nom date id_f 1 Premier programme informatique 1843 1 2 Machine universelle 1936 2 3 D\u00e9chiffrement d\u2019Enigma 1941 2 Table de la relation Avanc\u00e9es dans laquelle on associe chaque enregistrement \u00e0 un enregistrement de Figures Les deux tables sont ainsi associ\u00e9es avec id_f , la cl\u00e9 primaire de Figures , qui est appel\u00e9e cl\u00e9 \u00e9trang\u00e8re de la table Avanc\u00e9es . D\u00e9finition d\u2019une cl\u00e9 \u00e9trang\u00e8re : attribut d'une table faisant r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre table. D. Sch\u00e9mas relationnels \u00b6 Chaque table d\u2019une base de donn\u00e9es peut \u00eatre repr\u00e9sent\u00e9e sous la forme d\u2019un sch\u00e9ma relationnel . Compl\u00e9ter le sch\u00e9ma donn\u00e9 pr\u00e9c\u00e9demment pour la relation Figures avec sa cl\u00e9 primaire identifi\u00e9e : {id_f: entier, nom: caract\u00e8res, prenom: caract\u00e8res, naissance: annee, nationalite: caract\u00e8res} Quel est celui, sous la m\u00eame forme, de la table Avanc\u00e9es ? (identifier ses cl\u00e9s) {id_a: entier, nom: caract\u00e8res, date: entier, #id_f: entier} Ces deux sch\u00e9mas relationnels forment le sch\u00e9ma relationnel de la base de donn\u00e9es. On le repr\u00e9sente souvent sous laforme d\u2019un diagramme UML (Unified Modelling Language) : E. Contraintes d\u2019int\u00e9grit\u00e9 \u00b6 Afin de maintenir des donn\u00e9es valides et coh\u00e9rentes tout au long de la vie de la base de donn\u00e9es, il faut s'assurer en permanence du respect des contraintes d'int\u00e9grit\u00e9 suivantes qui sont fix\u00e9es \u00e0 la cr\u00e9ation de la base de donn\u00e9es : L' int\u00e9grit\u00e9 de domaine Les valeurs de chaque attribut doivent appartenir au domaine fix\u00e9. L' int\u00e9grit\u00e9 de relation Chaque n-uplet est unique et doit \u00eatre identifi\u00e9 par une cl\u00e9 primaire qui ne peut \u00eatre nulle L' int\u00e9grit\u00e9 de r\u00e9f\u00e9rence entre deux relations Toute cl\u00e9 \u00e9trang\u00e8re doit correspondre \u00e0 une cl\u00e9 primaire existante. Conclusion \u00b6 En apportant une vision plus abstraite de la table avec la notion de relation, le mod\u00e8le relationnel permet de s'affranchir de la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es et stock\u00e9es en m\u00e9moire et de maintenir leur coh\u00e9rence gr\u00e2ce aux contraintes d\u2019int\u00e9grit\u00e9. TD : Mod\u00e9liser des tables \u00b6 Exercice 1 : la base de donn\u00e9es sur l'historique de l'informatique \u00b6 Nous avons utilis\u00e9 dans le cours une base de donn\u00e9es comprenant des tables de figures de l\u2019informatique et d'avanc\u00e9es dans le domaine. Le programme de NSI a des liens avec ces informations. On se propose de cr\u00e9er une 3\u00e8me table Programme dans cette base de donn\u00e9es, permettant d\u2019associer les contenus appris en NSI \u00e0 la figure en informatique qui les a invent\u00e9s. 1) Proposer le sch\u00e9ma relationnel de cette table Programme , qui inclura des contenus, auxquels sont associ\u00e9es des capacit\u00e9s et font partie d\u2019une des th\u00e9matiques du programme (pour des exemples, se r\u00e9f\u00e9rer au bulletin officiel disponible sur l\u2019ENT) . 2) Repr\u00e9senter les 3 tables sous la forme de diagramme. Les cl\u00e9s primaires et \u00e9trang\u00e8res doivent appara\u00eetre clairement. Exercice 2 : rangement d\u2019une m\u00e9diath\u00e8que \u00b6 La m\u00e9diath\u00e8que de vos parents commence \u00e0 n\u00e9cessiter un peu de rangement : on trouve par endroits des livres, des films, des s\u00e9ries, des disques\u2026 Pour savoir quels objets culturels sont effectivement pr\u00e9sents chez eux, ils se proposent de cr\u00e9er une base de donn\u00e9es. Celle-ci se d\u00e9composera en 4 tables : Livres , Films , S\u00e9ries et Disques . 1) Proposer un sch\u00e9ma relationnel pour chacune de ces tables ind\u00e9pendamment, en incluant les informations qui vous semblent pertinentes. 2) Comment modifier vos sch\u00e9ma pour prendre en compte que certains films et s\u00e9ries sont des adaptations de livres, et que des disques peuvent correspondre \u00e0 la bande originale de films/s\u00e9ries ? Repr\u00e9senter le diagramme de la base de donn\u00e9es. Exercice 3 : stocker les informations sur le lyc\u00e9e \u00b6 Dans un lyc\u00e9e, les \u00e9l\u00e8ves de terminale sont regroup\u00e9s par classe, qui a chacune ses d\u00e9l\u00e9gu\u00e9s, son professeur principal, etc. Les \u00e9l\u00e8ves ont chacun des caract\u00e9ristiques qui leur sont propres : comme le choix des 2 sp\u00e9cialit\u00e9s, des langues et des \u00e9ventuelles options, et un professeur r\u00e9f\u00e9rent. Les professeurs sont eux associ\u00e9s \u00e0 une mati\u00e8re. Repr\u00e9senter les informations d\u00e9crites ci-dessus sous la forme de tables (vous \u00eates libres d\u2019en d\u00e9cider le nombre). Vous pouvez ajouter d\u2019autres informations, mais elles ne doivent pas \u00eatre redondantes.","title":"I. Le mod\u00e8le relationnel"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#i-le-modele-relationnel","text":"","title":"I. Le mod\u00e8le relationnel"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#cours","text":"Il existe plusieurs moyens de structurer une base de donn\u00e9es, s\u2019appuyant sur des mod\u00e8les diff\u00e9rents comme le mod\u00e8le hi\u00e9rarchique, les bases de donn\u00e9es objet ou nosql. Le plus utilis\u00e9 aujourd\u2019hui est aussi l\u2019un des plus anciens : le mod\u00e8le relationnel .","title":"Cours"},{"location":"tle/seq5/Mod%C3%A8le_Relationnel/#td-modeliser-des-tables","text":"","title":"TD\u00a0: Mod\u00e9liser des tables"},{"location":"tle/seq5/SQL/","text":"body { text-align: justify} III. Structured Query Language (SQL) \u00b6 TD : Le langage SQL \u00b6 Un magasin de meubles veut organiser son inventaire et ses ventes. Pour cela, il cr\u00e9e trois tables, une contenant l\u2019ensemble des produits disponibles \u00e0 la vente, une contenant la liste des clients enregistr\u00e9s, et une contenant l\u2019ensemble des achats. Les tables sont construites selon ce mod\u00e8le : Produits : Identifiant Nom Prix 01252369 Lit simple 150 98563242 Lit double 250 65872304 Table 90 66320520 Chaise 40 33220141 Bureau 110 Clients : Identifiant Nom Pr\u00e9nom 001235 Arnot Amanda 005463 Brahms Bruno 006522 Crestin C\u00e9line 008563 Dubois Damien Achats : ID Client Produit Date 1 001235 66320520 01/02/2020 2 001235 66320520 01/02/2020 3 001235 66320520 01/02/2020 4 001235 66320520 01/02/2020 5 001235 65872304 01/02/2020 6 005463 98563242 25/10/2019 7 006522 33220141 15/06/2021 Que repr\u00e9sentent les attributs Client et Produit dans la table Achats ? Compl\u00e9ter les commandes suivantes, permettant de cr\u00e9er les tables Clients et Achats, avec les domaines des attributs et les cl\u00e9s : CREATE TABLE Clients ( Identifiant ... Nom ... Pr\u00e9nom ... ); CREATE TABLE Achats ( ID ... Client ... Produit ... Date ... ); L\u2019entreprise aimerait conna\u00eetre tous ses produits valant plus de 100 euros. Ecrire la commande permettant de lire tous les \u00e9l\u00e9ments de la table Produits dont le prix est sup\u00e9rieur \u00e0 100 euros. L\u2019entreprise aimerait trier ses produits par ordre de r\u00e9f\u00e9rence croissant. Ecrire la commande correspondante. Ecrire la commande permettant de compter le nombre de transactions r\u00e9alis\u00e9es apr\u00e8s le 1er janvier 2020. Donner le r\u00e9sultat de cette commande : SELECT COUNT ( DISTINCT Client ) FROM Achats ; Damien vient d\u2019acheter un bureau. Ecrire la commande permettant de mettre \u00e0 jour la table des achats. Lors des soldes, le prix du lit simple est baiss\u00e9 \u00e0 120 euros. Mettre \u00e0 jour la table des produits. S\u00e9lectionner le nom des produits qui ont \u00e9t\u00e9 achet\u00e9s, sans avoir de doublons. TP : Manipulation d'une table en SQL \u00b6 Dans ce TP, nous allons impl\u00e9menter la table contenant les figures de l\u2019informatique, et la manipuler avec le SGBD SQLite . Instructions T\u00e9l\u00e9charger une console sqlite3 , depuis l'ENT. T\u00e9l\u00e9charger aussi la base de donn\u00e9es Figures.db . Lancer SQLite, et taper la commande .open Figures.db . Cette commande ouvre le fichier contenant la base de donn\u00e9es et importe son contenu. La base de donn\u00e9es a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9e : consulter les diff\u00e9rentes tables qu'elle contient avec la commande .table . Consulter les sch\u00e9ma relationnels des tables avec la commande .schema . On utilise la m\u00eame table que dans le TP d'introduction. Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s \u00e0 la base de donn\u00e9es. Regarder ce qu'elle contient, en utilisant une requ\u00eate de s\u00e9lection . Les enregistrements suivants doivent appara\u00eetre : 1 | Al-Khwarismi | Muhammad | 780 | ouzbek 2 | Hamilton | Margaret | 1936 | am\u00e9ricaine 3 | Lovelace | Ada | 1815 | britannique 4 | Knuth | Donald | 1938 | am\u00e9ricaine 5 | Chomsky | Noam | 1928 | am\u00e9ricaine 6 | Lamarr | Hedy | 1914 | autrichienne 7 | Turing | Alan | 1912 | britannique 8 | Berners-Lee | Tim | 1954 | britannique Ecrire une requ\u00eate d' insertion , pour ins\u00e9rer les n-uplets suivants : ( 9 , Hopper , Grace , 1906 , am\u00e9ricaine ) ( 10 , Von Neumann , John , 1903 , hongroise ) Ecrire les requ\u00eates de s\u00e9lection permettant de r\u00e9cup\u00e9rer : l'int\u00e9gralit\u00e9 de l'enregistrement d'identifiant 4. l\u2019ann\u00e9e de naissance d\u2019Alan Turing. Ecrire la commande permettant de r\u00e9cup\u00e9rer le nom et le pr\u00e9nom des personnes de nationalit\u00e9 britannique de cette table, dans l\u2019ordre croissant des dates de naissance. Ecrire la requ\u00eate permettant de compter toutes les personnes n\u00e9es apr\u00e8s l\u2019ann\u00e9e 1930. On se rend compte que la date de Tim Berners-Lee est fausse, car il est en r\u00e9alit\u00e9 n\u00e9 en 1955. Ecrire la requ\u00eate de mise \u00e0 jour permettant d'actualiser la date de naissance de Tim Berners-Lee avec la bonne valeur. On d\u00e9cide que Noam Chomsky n\u2019est plus digne d\u2019appartenir \u00e0 cette table. Supprimer Noam Chomsky de cette liste. TP : Manipulation de plusieurs tables en SQL \u00b6 Instructions Nous allons utiliser \u00e0 nouveau SQLite , pour manipuler des bases de donn\u00e9es contenant plusieurs tables. Pour garder une trace des requ\u00eates \u00e9crites, copiez-les dans un \u00e9diteur de texte au fur et \u00e0 mesure, et sauvegardez le fichier. I. Une base de donn\u00e9es de livres \u00b6 T\u00e9l\u00e9charger la base de donn\u00e9es Biblioth\u00e8que.db . On s'int\u00e9resse \u00e0 une base de donn\u00e9es de livres, avec une table Livres et une table Auteurs . II. 1. Cr\u00e9ation des tables \u00b6 1) Le sch\u00e9ma relationnel de la table Auteurs est le suivant : { id : entier, nom : caract\u00e8res, prenom : caract\u00e8res, ann_naissance : entier, langue_ecriture : caract\u00e8res} avec id est la cl\u00e9 primaire. V\u00e9rifier que ce sch\u00e9ma correspond \u00e0 la table impl\u00e9ment\u00e9e. 2) On d\u00e9finit la table Livres de la mani\u00e8re suivante : {id : entier, titre: caract\u00e8res, id_auteur: entier, ann_publi: entier, note: entier} Gr\u00e2ce \u00e0 l'instruction sqlite .schema , identifier : - la cl\u00e9 primaire : - la cl\u00e9 \u00e9trang\u00e8re, et la cl\u00e9 primaire \u00e0 laquelle elle fait r\u00e9f\u00e9rence : - les domaines SQL des attributs : 3) V\u00e9rifier que les tables contiennent bien les enregistrements suivants : La table Auteurs : id nom prenom ann_naissance langue_ecriture 1 \u2018Orwell\u2019 \u2018George\u2019 1903 \u2018anglais\u2019 2 \u2018Herbert\u2019 \u2018Frank\u2019 1920 \u2018anglais\u2019 3 \u2018Asimov\u2019 \u2018Isaac\u2019 1920 \u2018anglais\u2019 4 \u2018Huxley\u2019 \u2018Aldous\u2019 1894 \u2018anglais\u2019 5 \u2018Bradbury\u2019 \u2018Ray\u2019 1920 \u2018anglais\u2019 6 \u2018K.Dick\u2019 \u2018Philip\u2019 1928 \u2018anglais\u2019 7 \u2018Barjavel\u2019 \u2018Ren\u00e9\u2019 1911 \u2018fran\u00e7ais\u2019 la table Livres : id titre id_auteur ann_publi note 1 \u20181984\u2019 1 1949 10 2 \u2018Dune\u2019 2 1965 8 3 \u2018Fondation\u2019 3 1951 9 4 \u2018Le meilleur des mondes\u2019 4 1931 7 5 \u2018Fahrenheit 451\u2019 5 1953 7 6 \u2018Chroniques martiennes\u2019 5 1950 8 4) Ins\u00e9rer dans la table Livres : - \"Blade Runner\", \u00e9crit par K.Dick en 1968 et not\u00e9 \u00e0 8/10, - \"Les robots\", \u00e9crit par Asimov en 1950 et not\u00e9 \u00e0 9/10. II.2. Les projections/s\u00e9lections \u00b6 4) S\u00e9lectionner les titres des livres dont l\u2019auteur est Asimov en les rangeant par rapport \u00e0 leur ann\u00e9e de publication. 5) Projeter la table Livres sur son attribut ann_publi , sachant que l\u2019on ne veut pas de r\u00e9p\u00e9titions. 6) Faire une s\u00e9lection permettant de compter le nombre de livres \u00e9crits apr\u00e8s 1950. II.3. Les jointures \u00b6 7) Que va faire la jointure suivante ? SELECT * FROM Livres INNER JOIN Auteurs ON Livres . id_auteur = Auteurs . id 8) \u00c9crire une jointure permettant d\u2019afficher le titre des livres ainsi que le nom et pr\u00e9nom de leur auteur. 9) \u00c9crire une jointure permettant d\u2019afficher le titre des livres dont la note est sup\u00e9rieure \u00e0 8 ainsi que la langue d\u2019\u00e9criture de leur auteur. II.4. Modification \u00b6 10) Mettre \u00e0 jour la note du livre dont le titre est \u00ab Blade Runner \u00bb pour la passer \u00e0 9. 11) Supprimer de la table le livre dont le titre est \u00ab Fahrenheit 451 \u00bb. II. La base de donn\u00e9es de l\u2019histoire de l\u2019informatique \u00b6 Reprenons la base de donn\u00e9es sur l'histoire de l'informatique cr\u00e9\u00e9e dans le premier TP. 1) Dans cette base de donn\u00e9es, qui contient d\u00e9j\u00e0 la table Figures, on a cr\u00e9\u00e9 les 2 tables Avanc\u00e9es (d\u00e9finie dans le cours) et Programme (d\u00e9finie en TD). T\u00e9l\u00e9charger la version actualis\u00e9e de la base de donn\u00e9es BDDInformatique.db . Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s : Dans Avanc\u00e9es : id_a nom date id_f 1 Premier compilateur 1951 9 2 D\u00e9veloppement de logiciels pour la NASA 1965 2 3 Premier programme informatique 1843 3 4 Langage TeX 1976 4 5 Machine universelle 1936 7 6 D\u00e9chiffrement d\u2019Enigma 1941 7 7 Principe de transmission du signal \u00e0 la base du Wifi 1941 6 Pour Programme : id_p contenu capacite theme id_f 1 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 Comprendre que la calculabilit\u00e9 ne d\u00e9pend pas du langage utilis\u00e9. Langages et programmation 7 2 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 Montrer, sans formalisme th\u00e9orique, que le probl\u00e8me de l\u2019arr\u00eat est ind\u00e9cidable. Langages et programmation 7 2) V\u00e9rifier le contenu des tables, avec une s\u00e9lection sur l'ensemble des enregistrements. 3) Ajouter les enregistrements suivants : - A Avanc\u00e9es : ( 8 , Le Web , 1989 , 8 ) ( 9 , Mod\u00e8le d \u2019 architecture des ordinateurs , 1945 , 10 ) - A Programme : ( 3 , Mod\u00e8le d \u2019 architecture s\u00e9quentielle ( von Neumann ), Distinguer les r\u00f4les et les caract\u00e9ristiques des diff\u00e9rents constituants d \u2019 une machine , Architectures mat\u00e9rielles , 10 ) ( 4 , Constructions \u00e9 l\u00e9mentaires , Mettre en \u00e9 vidence un corpus de constructions \u00e9 l\u00e9mentaires , Langages et programmation , 3 ) Nous allons faire des jointures sur ces tables. Pensez \u00e0 utiliser des alias pour rendre les requ\u00eates plus lisibles. 3) \u00c9crire une jointure affichant les noms et pr\u00e9noms des figures avec les dates de leurs avanc\u00e9es. 4) \u00c9crire une jointure affichant les noms des avanc\u00e9es d\u00e9couvertes par une figure britannique. 5) \u00c9crire une jointure affichant les contenus et capacit\u00e9s du programme que nous devons \u00e0 des recherches d\u2019Alan Turing.","title":"III. Structured Query Language (SQL)"},{"location":"tle/seq5/SQL/#iii-structured-query-language-sql","text":"","title":"III. Structured Query Language (SQL)"},{"location":"tle/seq5/SQL/#td-le-langage-sql","text":"Un magasin de meubles veut organiser son inventaire et ses ventes. Pour cela, il cr\u00e9e trois tables, une contenant l\u2019ensemble des produits disponibles \u00e0 la vente, une contenant la liste des clients enregistr\u00e9s, et une contenant l\u2019ensemble des achats. Les tables sont construites selon ce mod\u00e8le : Produits : Identifiant Nom Prix 01252369 Lit simple 150 98563242 Lit double 250 65872304 Table 90 66320520 Chaise 40 33220141 Bureau 110 Clients : Identifiant Nom Pr\u00e9nom 001235 Arnot Amanda 005463 Brahms Bruno 006522 Crestin C\u00e9line 008563 Dubois Damien Achats : ID Client Produit Date 1 001235 66320520 01/02/2020 2 001235 66320520 01/02/2020 3 001235 66320520 01/02/2020 4 001235 66320520 01/02/2020 5 001235 65872304 01/02/2020 6 005463 98563242 25/10/2019 7 006522 33220141 15/06/2021 Que repr\u00e9sentent les attributs Client et Produit dans la table Achats ? Compl\u00e9ter les commandes suivantes, permettant de cr\u00e9er les tables Clients et Achats, avec les domaines des attributs et les cl\u00e9s : CREATE TABLE Clients ( Identifiant ... Nom ... Pr\u00e9nom ... ); CREATE TABLE Achats ( ID ... Client ... Produit ... Date ... ); L\u2019entreprise aimerait conna\u00eetre tous ses produits valant plus de 100 euros. Ecrire la commande permettant de lire tous les \u00e9l\u00e9ments de la table Produits dont le prix est sup\u00e9rieur \u00e0 100 euros. L\u2019entreprise aimerait trier ses produits par ordre de r\u00e9f\u00e9rence croissant. Ecrire la commande correspondante. Ecrire la commande permettant de compter le nombre de transactions r\u00e9alis\u00e9es apr\u00e8s le 1er janvier 2020. Donner le r\u00e9sultat de cette commande : SELECT COUNT ( DISTINCT Client ) FROM Achats ; Damien vient d\u2019acheter un bureau. Ecrire la commande permettant de mettre \u00e0 jour la table des achats. Lors des soldes, le prix du lit simple est baiss\u00e9 \u00e0 120 euros. Mettre \u00e0 jour la table des produits. S\u00e9lectionner le nom des produits qui ont \u00e9t\u00e9 achet\u00e9s, sans avoir de doublons.","title":"TD : Le langage SQL"},{"location":"tle/seq5/SQL/#tp-manipulation-dune-table-en-sql","text":"Dans ce TP, nous allons impl\u00e9menter la table contenant les figures de l\u2019informatique, et la manipuler avec le SGBD SQLite . Instructions T\u00e9l\u00e9charger une console sqlite3 , depuis l'ENT. T\u00e9l\u00e9charger aussi la base de donn\u00e9es Figures.db . Lancer SQLite, et taper la commande .open Figures.db . Cette commande ouvre le fichier contenant la base de donn\u00e9es et importe son contenu. La base de donn\u00e9es a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9e : consulter les diff\u00e9rentes tables qu'elle contient avec la commande .table . Consulter les sch\u00e9ma relationnels des tables avec la commande .schema . On utilise la m\u00eame table que dans le TP d'introduction. Des enregistrements ont \u00e9t\u00e9 ajout\u00e9s \u00e0 la base de donn\u00e9es. Regarder ce qu'elle contient, en utilisant une requ\u00eate de s\u00e9lection . Les enregistrements suivants doivent appara\u00eetre : 1 | Al-Khwarismi | Muhammad | 780 | ouzbek 2 | Hamilton | Margaret | 1936 | am\u00e9ricaine 3 | Lovelace | Ada | 1815 | britannique 4 | Knuth | Donald | 1938 | am\u00e9ricaine 5 | Chomsky | Noam | 1928 | am\u00e9ricaine 6 | Lamarr | Hedy | 1914 | autrichienne 7 | Turing | Alan | 1912 | britannique 8 | Berners-Lee | Tim | 1954 | britannique Ecrire une requ\u00eate d' insertion , pour ins\u00e9rer les n-uplets suivants : ( 9 , Hopper , Grace , 1906 , am\u00e9ricaine ) ( 10 , Von Neumann , John , 1903 , hongroise ) Ecrire les requ\u00eates de s\u00e9lection permettant de r\u00e9cup\u00e9rer : l'int\u00e9gralit\u00e9 de l'enregistrement d'identifiant 4. l\u2019ann\u00e9e de naissance d\u2019Alan Turing. Ecrire la commande permettant de r\u00e9cup\u00e9rer le nom et le pr\u00e9nom des personnes de nationalit\u00e9 britannique de cette table, dans l\u2019ordre croissant des dates de naissance. Ecrire la requ\u00eate permettant de compter toutes les personnes n\u00e9es apr\u00e8s l\u2019ann\u00e9e 1930. On se rend compte que la date de Tim Berners-Lee est fausse, car il est en r\u00e9alit\u00e9 n\u00e9 en 1955. Ecrire la requ\u00eate de mise \u00e0 jour permettant d'actualiser la date de naissance de Tim Berners-Lee avec la bonne valeur. On d\u00e9cide que Noam Chomsky n\u2019est plus digne d\u2019appartenir \u00e0 cette table. Supprimer Noam Chomsky de cette liste.","title":"TP : Manipulation d'une table en SQL"},{"location":"tle/seq5/SQL/#tp-manipulation-de-plusieurs-tables-en-sql","text":"Instructions Nous allons utiliser \u00e0 nouveau SQLite , pour manipuler des bases de donn\u00e9es contenant plusieurs tables. Pour garder une trace des requ\u00eates \u00e9crites, copiez-les dans un \u00e9diteur de texte au fur et \u00e0 mesure, et sauvegardez le fichier.","title":"TP\u00a0: Manipulation de plusieurs tables en SQL"},{"location":"tle/seq6/arbres/","text":"body { text-align: justify} I. La structure d'arbre \u00b6 Cours \u00b6 Les structures lin\u00e9aires sont peu pratiques pour faire des recherches, des ajouts ou des suppressions de donn\u00e9es ordonn\u00e9es. Les structures arborescentes ou arbres , dont les utilisations en informatique sont multiples, sont plus adapt\u00e9es \u00e0 cela. A. Des exemples \u00b6 A.I. G\u00e9ographie de la France \u00b6 Identifier, sur la repr\u00e9sentation ci-dessous, \u00e0 quoi correspondent les diff\u00e9rentes lignes de l'arbre. graph TB A[France] --> B[Auvergne Rh\u00f4ne-Alpes] B --> F[Ain] B --> G[Ard\u00eache] B --> I[...] B --> H[Haute-Savoie] A --> C[Bourgogne FC] A --> D[...] A --> E[PACA] C --> J[C\u00f4tes d'Or] C --> K[...] E --> L[...] E --> M[Vaucluse] Solution La premi\u00e8re ligne correspond au pays, la deuxi\u00e8me aux r\u00e9gions, la troisi\u00e8me au d\u00e9partement. Il y a une relation hi\u00e9rarchique entre ces 3 \u00e9l\u00e9ments : du plus grand au plus petit. A.II. Une arborescence de fichiers \u00b6 Ci-dessous un exemple de stockage de fichiers et dossier sur un ordinateur. Repr\u00e9sentez-le de mani\u00e8re similaire \u00e0 l'arbre du premier exemple : Solution graph TB A[Dossier personnel] --> B[Bureau] A --> C[Documents] A --> D[Images] A --> E[Musique] A --> G[T\u00e9l\u00e9chargements] A --> H[Vid\u00e9os] B --> I[Document] C --> J[Factures] C --> K[Budget 2016] C --> L[Projets] D --> M[Vacances] D --> N[Anniversaire] D --> O[Rando] E --> P[Pop] E --> Q[Electro] E --> R[Classique] G --> S[Logiciel] G --> T[Document] H --> U[Montage] H --> V[Films] H --> W[S\u00e9ries] A.III. Un tournoi \u00b6 Repr\u00e9senter un tournoi \u00e0 partir des quarts de finales jusqu\u2019\u00e0 la repr\u00e9sentation du vainqueur en utilisant un arbre. Les quarts de finales opposent les \u00e9quipes suivantes : France-Angleterre (vainqueur France), Maroc-Portugal (vainqueur Maroc), Pays-Bas-Argentine (vainqueur Argentine) et Croatie-Br\u00e9sil (vainqueur Croatie). En demi-finale, la France bat le Maroc et l'Argentine la Croatie. Je crois que vous connaissez le r\u00e9sultat de la finale... Solution graph TB A[Argentine] --> B[Argentine] A --> C[France] B --> D[Croatie] B --> E[Argentine] D --> F[Croatie] D --> G[Br\u00e9sil] E --> H[Pays-Bas] E --> I[Argentine] C --> K[France] C --> L[Maroc] K --> M[France] K --> N[Angleterre] L --> O[Maroc] L --> P[Portugal] B. D\u00e9finitions \u00b6 B.I. Vocabulaire \u00b6 Un arbre est un ensemble organis\u00e9 de n\u0153uds reli\u00e9s par des branches ou ar\u00eates . Les n\u0153uds ont une relation hi\u00e9rarchique les uns par rapport aux autres. Le vocabulaire utilis\u00e9 est emprunt\u00e9, entre autres, \u00e0 la g\u00e9n\u00e9alogie et \u00e0 la nature : Chaque n\u0153ud \u00e0 un p\u00e8re , dont il est le fils , sauf la racine . Un n\u0153ud qui n'a pas de fils est appel\u00e9 une feuille . Un n\u0153ud avec une valeur (texte, nombre, etc) est dit \u00e9tiquet\u00e9 . Si tous les n\u0153uds de l'arbre ont une \u00e9tiquette , l'arbre est aussi dit \u00e9tiquet\u00e9. Repr\u00e9sentation : L'arbre informatique est un arbre... renvers\u00e9. La racine est g\u00e9n\u00e9ralement repr\u00e9sent\u00e9e tout en haut. Sur l'arbre ci-dessous : identifier sa racine et distinguer les n\u0153uds des feuilles. Solution La racine est A. Des feuilles sont par exemple D ou H, alors que B ou C sont des noeuds. identifier le p\u00e8re du n\u0153ud \u00e9tiquet\u00e9 \"H\" et donner le(s) fils du n\u0153ud \u00e9tiquet\u00e9 \"B\". Solution Le p\u00e8re de H est C et les fils de B sont D, E et F. graph TB A --> B A --> C B --> D B --> E B --> F C --> G C --> H B.II. Mesures \u00b6 la taille d'un arbre correspond \u00e0 son nombre de n\u0153uds. la profondeur d'un n\u0153ud correspond au nombre d'ar\u00eates/de n\u0153uds de la racine jusqu'\u00e0 ce n\u0153ud (la convention utilis\u00e9e doit vous \u00eatre pr\u00e9cis\u00e9e !) . Nous utiliserons le nombre de noeuds, donc que la racine est \u00e0 la profondeur 1. la hauteur d'un arbre correspond \u00e0 la profondeur de son n\u0153ud le plus profond. Exemple : Donner la taille et la hauteur de l'arbre de la partie pr\u00e9c\u00e9dente. Quelle est la profondeur du n\u0153ud \u00e9tiquet\u00e9 \"E\" ? \"C\" ? Sa taille est de 8. La profondeur de E est 3, celle de C est 2. Exercice : Dessiner un arbre de taille 9, \u00e9tiquet\u00e9 par des nombres de 0 \u00e0 8, de racine 0 et de hauteur 3. graph TB A((0)) --> B((1)) A --> E((4)) A --> C((2)) B --> D((3)) B --> F((7)) C --> G((5)) E --> H((6)) E --> J((8)) C. Les arbres binaires \u00b6 C.I. D\u00e9finition \u00b6 Un arbre est dit binaire si chacun de ses n\u0153uds admet au plus deux fils, appel\u00e9s fils gauche et fils droit . On appelle sous-arbre gauche , et respectivement sous-arbre droit , d\u2019un n\u0153ud l\u2019arbre issu du fils gauche, respectivement fils droit, de ce n\u0153ud. Exemple : entourer les sous-arbres gauche et droit de la racine de l'arbre binaire ci-dessous. graph TB A --> B A --> C B --> D B --> E C --> G Exercice : Parmi les exemples 1, 2, et 3 du cours, le(s)quel(s) est/sont des arbres binaires ? Seul l'arbre de l'exemple 3 est un arbre binaire. Dans les autres, un noeud peut avoir plus de deux fils. C.II. Mesures \u00b6 C.II.a. Vocabulaire \u00b6 Ces d\u00e9finitions sont donn\u00e9es \u00e0 titre indicatif, pour les besoins des d\u00e9monstrations suivantes. - un arbre binaire complet est un arbre dont toutes les feuilles sont \u00e0 la m\u00eame profondeur. - un arbre binaire filiforme est un arbre dont tous les n\u0153uds ont au plus 1 fils. C.II.b. Encadrement de la hauteur \u00b6 Dessiner un arbre complet de taille \\(n=7\\) . Quelle est sa hauteur \\(h\\) ? L'exprimer en fonction de \\(n\\) . Solution graph TB A(( )) --> B(( )) A --> C(( )) B --> D(( )) B --> E(( )) C --> G(( )) C --> H(( )) Sa hauteur est de 3, et \\(n\\) vaut \\(7=2^3-1\\) . Donc \\(7+1 = 2^3\\) , soit en g\u00e9n\u00e9ralisant, \\(n+1=2^h\\) . La fonction inverse de la fonction qui transforme \\(x\\) en \\(2^x\\) et la fonction \\(log_2\\) , donc : \\(log_2(n+1) = log_2(2^h) = h\\) Dessiner un arbre filiforme de taille \\(n=7\\) . Quelle est sa hauteur ? L'exprimer en fonction de \\(n\\) . Solution graph TB A(( )) --> B(( )) B --> C(( )) C --> D(( )) D --> E(( )) E --> F(( )) F --> G(( )) \\(h = n\\) . En d\u00e9duire l'encadrement de la hauteur \\(h\\) d'un arbre binaire en fonction de sa taille \\(n\\) . Solution La valeur renvoy\u00e9e par le logarithme n'est pas toujours enti\u00e8re. Pour qu'elle le soit dans tous les cas, on l'arrondit \u00e0 l'entier sup\u00e9rieur : \\(\\lceil log_2(n+1) \\rceil < h\\) On en d\u00e9duit que \\(\\lceil log2(n+1) \\rceil \\leq h \\leq n\\) . C.II.c. Encadrement de la taille \u00b6 Dessiner l'arbre binaire de hauteur \\(h=3\\) comportant le plus de n\u0153uds possibles. De quel type d'arbre s'agit-il ? Exprimer sa taille \\(n\\) en fonction de \\(h\\) . Solution graph TB A(( )) --> B(( )) A --> C(( )) B --> D(( )) B --> E(( )) C --> G(( )) C --> H(( )) Il s'agit d'un arbre complet. \\(n=2^0+2^1+2^2=7=2^3-1\\) . Soit \\(n = 2^{h}-1\\) . Dessiner l'arbre binaire de hauteur \\(h=3\\) comportant le moins de n\u0153uds possibles. De quel type d'arbre s'agit-il ? Exprimer sa taille \\(n\\) en fonction de \\(h\\) . Solution graph TB A(( )) --> B(( )) B --> D(( )) Il s'agit d'un arbre filiforme. \\(n=3=h\\) . En d\u00e9duire l'encadrement de la taille \\(n\\) > d'un arbre binaire en fonction de sa hauteur \\(h\\) . Solution On en conclut, en g\u00e9n\u00e9ralisant, que \\(h<n <2^{h}-1\\) . C.III. Les arbres binaires de recherche \u00b6 Un arbre binaire de recherche (ABR) est un arbre vide ou un arbre binaire ayant les propri\u00e9t\u00e9s suivantes : - tous les n\u0153uds sont \u00e9tiquet\u00e9s par des nombres, - la racine est sup\u00e9rieure ou \u00e9gale \u00e0 tout n\u0153ud du sous-arbre gauche, - la racine est inf\u00e9rieure \u00e0 tout n\u0153ud du sous-arbre droit, - les deux sous-arbres de la racine sont eux-m\u00eames des ABR. Exemple : donner un arbre binaire satisfaisant les conditions ci-dessus pour \u00eatre un ABR. graph TB A((10 )) --> B((6)) A --> C((17)) B --> D((1)) B --> E((8)) C --> G((14)) C --> H((22)) Exercice : construire un ABR \u00e0 partir des nombres suivants, en les ins\u00e9rant les uns \u00e0 la suite des autres : 25, 11, 31, 4, 9, 42, 30, 28, 18. graph TB A((25)) --> B((11)) A --> C((31)) B --> D((4)) D --> F((9)) B --> E((18)) C --> G((30)) C --> H((42)) G --> I((28)) TD : Exercices sur les arbres \u00b6 Exercice 1 : un arbre g\u00e9n\u00e9alogique \u00b6 Expliquez les choix faits dans la construction de cet arbre g\u00e9n\u00e9alogique. Peut-on parler d\u2019arbre binaire ? Quelle est la racine de l\u2019arbre ? Donner le p\u00e8re de Marie-Th\u00e9r\u00e8se, les fils de Louis le grand dauphin. Donner deux exemples de n\u0153ud, de feuille. Donner la profondeur du n\u0153ud \u00e9tiquet\u00e9 \"Marie-Anne\" et la profondeur de l\u2019arbre. Exercice 2 : repr\u00e9senter une expression arithm\u00e9tique \u00b6 graph TB A((*)) --> B; B(('-')) --> C((/)); B-->D((t)) C --> E((y)) C --> F((2)) A-->G((+)) G-->H((75)) G-->I((z)) Quelle expression l\u2019arbre ci-dessus peut-t-il repr\u00e9senter ? Donner l\u2019arbre permettant de repr\u00e9senter \\(3 + (7/3-1)^3\\) . Exercice 3 : \u00b6 Les langages informatiques sont form\u00e9s \u00e0 partir d\u2019une grammaire, d\u00e9finissant une utilisation correcte du langage. Pour interpr\u00e9ter le langage Python, un arbre syntaxique du code est utilis\u00e9. Pour le code pr\u00e9sent\u00e9 ci-dessous, on propose une version simplifi\u00e9e de cet arbre : k = 3 for i in range ( 4 ): k = k * 2 graph TB A(body) --> B; B(assign) --> C((k)); B-->D((3)) A-->G(for) G-->H((i)) G-->I(range) G-->J(body) I-->K((4)) J-->L(assign) L-->M((k)) L-->N((*)) N-->O((k)) N-->P((2)) Proposer une adaptation de cet arbre pour repr\u00e9senter le code suivant : k = 2 for i in range ( 1 , 5 ): k = k * 2 + 1 TP : Impl\u00e9mentation des arbres binaires \u00b6 Pour manipuler des arbres binaires, il faut en utiliser une impl\u00e9mentation Python. Comme pour les listes, les piles et les files, nous allons proposer plusieurs impl\u00e9mentations de cette structure. A. Repr\u00e9sentation imbriqu\u00e9e avec un p-uplet \u00b6 On peut repr\u00e9senter les arbres binaires de mani\u00e8re imbriqu\u00e9e avec des p-uplets (type Python : tuple ). L\u2019arbre vide est repr\u00e9sent\u00e9 par un p-uplet vide, et, dans tous les autres cas, un n\u0153ud est un p-uplet de 3 valeurs contenant : l\u2019\u00e9tiquette du n\u0153ud, le sous-arbre gauche (\u00e9ventuellement vide) , le sous-arbre droit (\u00b4eventuellement vide) . A.I. Exemple \u00b6 graph TB A((E)) --> B(X) A --> C(L) B --> D(E) B --> E(M) E --> G(P) C --> H(E) L'arbre ici-dessus se repr\u00e9sente de la mani\u00e8re suivante : exemple = ( 'E' , ( 'X' , ( 'E' , (), ()), ( 'M' , ( 'P' , (), ()), ()) ), ( 'L' , ( 'E' , (), ()), () ) ) A.II. Application \u00b6 Repr\u00e9senter l'arbre suivant avec cette m\u00e9thode. graph TB A(( )) --> B(2) A --> C(0) B --> D(2) B --> E(3) B. Avec une classe \u00b6 On se propose dans un deuxi\u00e8me temps d\u2019utiliser la classe ArbreBinaire suivante : class ArbreBinaire : def __init__ ( self , r , g , d ): self . racine = r self . gauche = g self . droit = d gauche et droite sont des arbres binaires, et l\u2019arbre vide est repr\u00e9sent\u00e9 par None. Instancier un objet de cette classe pour repr\u00e9senter notre arbre. B.I. Exemple \u00b6 L'arbre de l'exemple donn\u00e9 en A.I. se repr\u00e9sente avec cette classe de la mani\u00e8re suivante : exemple = ArbreBinaire ( 'E' , ArbreBinaire ( 'X' , ArbreBinaire ( 'E' , None , None ), ArbreBinaire ( 'M' , ArbreBinaire ( 'P' , None , None ), None ) ), ArbreBinaire ( 'L' , ArbreBinaire ( 'E' , None , None ), None ,) ) B.II. Application \u00b6 Repr\u00e9senter l'arbre de la partie A.II. avec cette classe. Pour visualiser le r\u00e9sultat, utiliser la m\u00e9thode r\u00e9cursive affiche qui permet de visualiser l\u2019arbre. def affiche ( self , space = 0 ): spaces = \" \" * space print ( spaces , self . racine ) if self . gauche : self . gauche . affiche ( space + 1 ) if self . droit : self . droit . affiche ( space + 1 ) B.III. Am\u00e9lioration de la classe ArbreBinaire \u00b6 Rajouter les accesseurs et les mutateurs des attributs de cette classe (not\u00e9s getRacine , getABGauche , getABDroit , setRacine , setABGauche , setABDroit ). Nous allons utiliser cette classe et ces m\u00e9thodes dans un prochain TP.","title":"I. La structure d'arbre"},{"location":"tle/seq6/arbres/#i-la-structure-darbre","text":"","title":"I. La structure d'arbre"},{"location":"tle/seq6/arbres/#cours","text":"Les structures lin\u00e9aires sont peu pratiques pour faire des recherches, des ajouts ou des suppressions de donn\u00e9es ordonn\u00e9es. Les structures arborescentes ou arbres , dont les utilisations en informatique sont multiples, sont plus adapt\u00e9es \u00e0 cela.","title":"Cours"},{"location":"tle/seq6/arbres/#td-exercices-sur-les-arbres","text":"","title":"TD : Exercices sur les arbres"},{"location":"tle/seq6/arbres/#tp-implementation-des-arbres-binaires","text":"Pour manipuler des arbres binaires, il faut en utiliser une impl\u00e9mentation Python. Comme pour les listes, les piles et les files, nous allons proposer plusieurs impl\u00e9mentations de cette structure.","title":"TP : Impl\u00e9mentation des arbres binaires"},{"location":"tle/seq6/arbres_algo/","text":"body { text-align: justify} II. Les algorithmes sur les arbres \u00b6 Cours \u00b6 A. Les parcours \u00b6 Parcourir un arbre binaire consiste \u00e0 acc\u00e9der \u00e0 l'information contenue dans ses n\u0153uds : \u00e0 leur \u00e9tiquette. A.I. Parcours en profondeur \u00b6 Un parcours en profondeur consiste \u00e0 parcourir les n\u0153uds en suivant les branches. On consid\u00e8re que chaque n\u0153ud d'un arbre binaire est visit\u00e9 3 fois, dans l'ordre suivant : - une fois par la gauche, - une fois par en-dessous, - une fois par la droite. Illustrons-le sur l'arbre suivant : graph TB A --> B A --> C B --> D B --> E C --> G C --> H Parcours pr\u00e9fixe : on liste chaque n\u0153ud la premi\u00e8re fois qu'il est rencontr\u00e9. Exercice : quel est le parcours pr\u00e9fixe de l'arbre pr\u00e9c\u00e9dent ? A, B, D, E, C, G, H. Parcours infixe : on liste chaque n\u0153ud la deuxi\u00e8me fois qu'il est rencontr\u00e9. Exercice : quel est le parcours infixe de l'arbre pr\u00e9c\u00e9dent ? D, B, E, A, G, C, H Parcours suffixe ou postfixe : on liste chaque n\u0153ud la derni\u00e8re fois qu'il est rencontr\u00e9. Exercice : quel est le parcours sufixe de l'arbre pr\u00e9c\u00e9dent ? D, E, B, G, H, C, A A.II. Parcours en largeur \u00b6 Dans un parcours en largeur , on liste chaque n\u0153ud niveau par niveau (un niveau correspondant \u00e0 une profondeur \u00e9gale). Repr\u00e9senter ce parcours sur l'arbre ci-dessous : graph TB A --> B A --> C B --> D B --> E C --> G C --> H Solution A, B, C, D, E, G, H B. Sur les ABR \u00b6 Dans un ABR, les n\u0153uds sont ordonn\u00e9s. Cela facilite donc les recherches, et l'insertion d'un nouveau n\u0153ud ne peut se faire au hasard. B.I. Recherche \u00b6 Quel algorithme appliquer pour faire une recherche dans un ABR ? On parcourt l'arbre en commen\u00e7ant par la racine : - si elle est \u00e9gale \u00e0 la valeur recherch\u00e9e, la valeur est trouv\u00e9e, - sinon si celle-ci est plus petite que la valeur recherch\u00e9e, on continue le parcours dans le sous-arbre droit , - sinon, on continue dans le sous-arbre gauche . Dans les deux derniers cas, on r\u00e9applique l'algorithme en partant de la racine du sous-arbre en question, jusqu'\u00e0 tomber sur un sous-arbre vide . B.II. Insertion \u00b6 Quel algorithme appliquer pour ins\u00e9rer un \u00e9l\u00e9ment dans un ABR ? On applique le m\u00eame algorithme que pour rechercher un \u00e9l\u00e9ment, sauf que lorsque l'on arrive sur un sous-arbre vide, on le remplace par un sous-arbre ayant la valeur \u00e0 ins\u00e9rer comme racine. En appliquant ces algorithmes, rechercher 6 et 3, et ins\u00e9rer 10 et 1 dans l'ABR suivant : graph TB A[8] --> B[4] A --> C[12] B --> D[2] B --> E[6] E --> F[7] C --> G[9] C --> H[15] H --> J[20] Solution 6<8 -> sous-arbre gauche -> 6>4 -> sous-arbre droit -> 6 trouv\u00e9 3<8 -> sous-arbre gauche -> 3<4 -> sous-arbre gauche -> 3>2 -> sous-arbre droit -> arbre vide : valeur non-trouv\u00e9e. graph TB A[8] --> B[4] A --> C[12] B --> D[2] D --> K[1] B --> E[6] E --> F[7] C --> G[9] G --> I[10] C --> H[15] H --> J[20] TD : Propri\u00e9t\u00e9s et algorithmique sur les arbres \u00b6 Ce TD traite de deux exemples d'arbres, dont on extrait les propri\u00e9t\u00e9s et sur lesquels on applique les diff\u00e9rents parcours. A. L'arbre de la nouvelle ann\u00e9e \u00b6 On consid\u00e8re l'arbre suivant : graph TB A((B)) --> B(O) A --> C(N) B --> D(N) B --> E(E) E --> G(N) E --> H(N) C --> I( ) C --> J(A) J --> K(E) J --> L(E) A.I. Propri\u00e9t\u00e9s \u00b6 Donner la taille et la hauteur de cet arbre. Est-ce un arbre binaire ? Un arbre binaire de recherche ? Justifier. A.II. Parcours \u00b6 Donner les parcours en profondeur pr\u00e9fixe, infixe et suffixe de cet arbre. Donner le parcours en largeur de cet arbre. B. Arbre de recherche \u00b6 On consid\u00e8re l'arbre suivant : graph TB A((9)) --> B(3) A --> C(13) B --> D(2) B --> E(5) C --> I(11) C --> J(17) J --> L(19) Justifier qu'il s'agit bien d'un arbre binaire de recherche . Appliquer l' algorithme d'insertion pour y ajouter le chiffre 7. Appliquer l' algorithme de recherche pour trouver les nombres 11 et 14. Donner les parcours en profondeur pr\u00e9fixe, indixe et suffixe de cet arbre. Quel parcours permet d'obtenir la liste des nombres dans l'ordre croissant ? Donner le parcours en largeur de cet arbre. TP : Algorithmes sur les arbres binaires \u00b6 Dans ce TP, nous utilisons la classe ArbreBinaire d\u00e9finie dans le TP sur l'impl\u00e9mentation des arbres binaires, et l'arbre d'exemple du m\u00eame TP. A. Calcul de mesures \u00b6 B.I. La taille \u00b6 1) On propose une description d\u2019un algorithme r\u00e9cursif permettant de calculer la taille d\u2019un arbre binaire. A partir de celle-ci, proposer un pseudo-code de l\u2019algorithme. Description La taille de l\u2019arbre correspond \u00e0 la somme de la taille de ses sous-arbres . On parcourt donc les sous-arbres gauche et droit r\u00e9cursivement, et on incr\u00e9mente la taille \u00e0 chaque fois que l\u2019on rencontre un nouveau n\u0153ud. L\u2019algorithme s\u2019arr\u00eate lorsque l\u2019appel r\u00e9cursif se fait sur un arbre vide. 2) Tester cet algorithme en l\u2019impl\u00e9mentant en Python et en utilisant l\u2019arbre d'exemple impl\u00e9ment\u00e9 pr\u00e9c\u00e9demment avec la classe ArbreBinaire . N'oubliez pas que vous pouvez afficher le r\u00e9sultat avec la m\u00e9thode affiche . B.II. La hauteur \u00b6 Description L\u2019algorithme qui permet de calculer la hauteur d\u2019un arbre binaire est similaire \u00e0 celui utilis\u00e9 pour la taille. La diff\u00e9rence est qu\u2019\u00e0 chaque niveau de profondeur atteint (chaque nouvel appel r\u00e9cursif), on incr\u00e9mente de 1 la hauteur, et on s\u00e9lectionne le maximum des hauteurs entre celle du sous-arbre gauche et celle du sous-arbre droit. 1) Proposer un pseudo-code de cet algorithme. 2) L\u2019impl\u00e9menter sur le m\u00eame arbre qu\u2019en I.A. N.B.: on pourra utiliser la fonction max de Python pour s\u00e9lectionner la plus grande des deux hauteurs. B. II. Les parcours \u00b6 II.A. Parcours en profondeur \u00b6 1) Donner les parcours pr\u00e9fixe, infixe et postfixe de l\u2019arbre d'exemple du TP pr\u00e9c\u00e9dent : graph TB A(( )) --> B(2) A --> C(0) B --> D(2) B --> E(3) On propose une fonction qui effectue un de ces parcours en profondeur d\u2019un arbre binaire et stocke le r\u00e9sultat dans une liste Python. def parcours ( arbre ): if arbre == None : return [] else : r = arbre . getRacine () ag = arbre . getABGauche () ad = arbre . getABDroit () return parcours ( ag ) + [ r ] + parcours ( ad ) 2) A quel parcours ce code-correspond-il ? Justifier. 3) Combien de fois acc\u00e8de-t-on \u00e0 chaque n\u0153ud de l\u2019arbre ? En d\u00e9duire la complexit\u00e9 de cet algorithme en fonction de la taille de l\u2019arbre \\(n\\) . 4) Modifier le code pour obtenir les deux autres parcours en profondeur. 5) Tester ces parcours sur l\u2019arbre d'exemple et v\u00e9rifier leur bon fonctionnement gr\u00e2ce aux r\u00e9sultats obtenus \u201d\u00e0 la main\u201d. 6) Proposer une autre version de chacun de ces parcours, qui ne renvoie pas une liste Python mais affiche au fur et \u00e0 mesure les n\u0153uds de l\u2019arbre rencontr\u00e9s. II.B. Parcours en largeur \u00b6 On fournit un code du parcours en largeur d\u2019un arbre binaire. def parcoursLargeur ( arbre ): f = File () parcours = [] f . enfiler ( arbre ) while not ( f . vide ()): e = f . defiler () parcours . append ( e . getRacine ()) if e . getABGauche () != None : f . enfiler ( e . getABGauche ()) if e . getABDroit () != None : f . enfiler ( e . getABDroit ()) return parcours 1) Identifier les types des entr\u00e9es et sorties, ainsi que celui de la variable temporaire. 1) Indiquer le contenu des variables e , f et parcours \u00e0 l\u2019initialisation (code ex\u00e9cut\u00e9 jusqu\u2019\u00e0 la ligne 4) et \u00e0 la fin de chaque passage de boucle lorsque la fonction est appliqu\u00e9e \u00e0 l\u2019arbre d'exemple utilis\u00e9 dans les parties pr\u00e9c\u00e9dentes. On repr\u00e9sentera l\u2019arbre sch\u00e9matiquement. 2) Quelle est l\u2019utilit\u00e9 de f ? 3) Recopier cette fonction sur ordinateur en ajoutant sa sp\u00e9cification (les types des variables d\u2019entr\u00e9e et sortie) . On n\u2019oubliera pas d\u2019importer une impl\u00e9mentation de structure de file. 4) Tester le programme sur l\u2019arbre d'exemple. TP : Algorithmes sur les arbres binaires de recherche \u00b6 A. Repr\u00e9sentation \u00b6 On propose d\u2019utiliser une autre repr\u00e9sentation pour manipuler des arbres binaires de recherche. On utilise deux classes : Noeud et ABR . class ABR : def __init__ ( self , racine ): self . racine = racine def affiche_abr ( self ): if self is None : representation = \"L'arbre est vide !\" else : representation = self . racine . affiche () return representation class Noeud : def __init__ ( self , valeur , fils_gauche , fils_droit ): self . valeur = valeur self . fils_gauche = fils_gauche self . fils_droit = fils_droit def affiche ( self , space = 0 ): spaces = \" \" * space print ( spaces , self . valeur ) if self . fils_gauche : self . fils_gauche . affiche ( space + 1 ) if self . fils_droit : self . fils_droit . affiche ( space + 1 ) Exemple d'utilisation des classes : Le code suivant repr\u00e9sente l'arbre ci-dessous : n7 = Noeud ( 7 , None , None ) n6 = Noeud ( 6 , None , n7 ) n2 = Noeud ( 2 , None , None ) n4 = Noeud ( 4 , n2 , n6 ) n20 = Noeud ( 20 , None , None ) n15 = Noeud ( 15 , None , n20 ) n9 = Noeud ( 9 , None , None ) n12 = Noeud ( 12 , n9 , n15 ) n8 = Noeud ( 8 , n4 , n12 ) a = ABR ( n8 ) graph TB A((8)) --> B((4)) A --> C((12)) B --> D((2)) B --> E((6)) E --> G((7)) C --> H((9)) C --> I((15)) I --> J((20)) R\u00e9cup\u00e9rer le fichier suivant sur l'ENT. Utiliser ces classes pour repr\u00e9senter l\u2019ABR du TD pr\u00e9c\u00e9dent (ci-dessous), en vous aidant de l\u2019exemple. graph TB A((9)) --> B(3) A --> C(13) B --> D(2) B --> E(5) C --> I(11) C --> J(17) J --> L(19) 2) Afficher l\u2019arbre obtenu en utilisant la m\u00e9thode affiche_abr . B. Algorithme de recherche \u00b6 Nous allons cette fois-ci \u00e9crire des m\u00e9thodes pour les deux classes, en nous inspirant de ce qui a \u00e9t\u00e9 fait pour la fonction d\u2019affichage (impl\u00e9ment\u00e9e dans les deux classes) . Le principe est d\u2019effectuer la recherche dans la classe Noeud (en consid\u00e9rant qu\u2019on peut la faire en partant de n\u2019importe quel noeud de l\u2019ABR) et donc de cr\u00e9er une m\u00e9thode rechercher dans celle-ci, puis de cr\u00e9er une m\u00e9thode rechercher_abr dans la classe ABR , en appelant la m\u00e9thode rechercher de la classe Noeud sur la racine de l\u2019ABR. 1) Impl\u00e9menter ces m\u00e9thodes pour rechercher une cl\u00e9 dans un ABR, \u00e0 partir de l\u2019algorithme d\u00e9crit dans le cours. 2) Les tester sur l\u2019ABR d'exemple utilis\u00e9 dans les TP pr\u00e9c\u00e9dents. C. Algorithme d'insertion \u00b6 De la m\u00eame mani\u00e8re que pour la recherche, impl\u00e9menter une m\u00e9thode inserer dans la classe Noeud et une dans la classe ABR , inserer_abr , qui permettent d\u2019ins\u00e9rer une cl\u00e9. Les tester sur le m\u00eame ABR que l'algorithme de recherche.","title":"II. Les algorithmes sur les arbres"},{"location":"tle/seq6/arbres_algo/#ii-les-algorithmes-sur-les-arbres","text":"","title":"II. Les algorithmes sur les arbres"},{"location":"tle/seq6/arbres_algo/#cours","text":"","title":"Cours"},{"location":"tle/seq6/arbres_algo/#td-proprietes-et-algorithmique-sur-les-arbres","text":"Ce TD traite de deux exemples d'arbres, dont on extrait les propri\u00e9t\u00e9s et sur lesquels on applique les diff\u00e9rents parcours.","title":"TD : Propri\u00e9t\u00e9s et algorithmique sur les arbres"},{"location":"tle/seq6/arbres_algo/#tp-algorithmes-sur-les-arbres-binaires","text":"Dans ce TP, nous utilisons la classe ArbreBinaire d\u00e9finie dans le TP sur l'impl\u00e9mentation des arbres binaires, et l'arbre d'exemple du m\u00eame TP.","title":"TP : Algorithmes sur les arbres binaires"},{"location":"tle/seq6/arbres_algo/#tp-algorithmes-sur-les-arbres-binaires-de-recherche","text":"","title":"TP : Algorithmes sur les arbres binaires de recherche"},{"location":"tle/seq7/architecture/","text":"body { text-align: justify} I. Architecture des r\u00e9seaux informatiques \u00b6 Cours \u00b6 Diaporama disponible : Exemple de r\u00e9seau informatique : A. El\u00e9ments physiques des r\u00e9seaux \u00b6 Indiquer les diff\u00e9rentes cat\u00e9gories des \u00e9l\u00e9ments physiques des r\u00e9seaux, et donner des exemples pour chacune. P\u00e9riph\u00e9riques terminaux : serveurs, ordinateurs, t\u00e9l\u00e9phones,... P\u00e9riph\u00e9riques interm\u00e9diaires : switchs (concentrateurs), routeurs Connexions : sans fil (Wifi, Bluetooth,...) ou filaire (Ethernet, fibre,...) B. Communication dans un r\u00e9seau local \u00b6 Identifiquer les r\u00e9seaux locaux sur le sch\u00e9ma. D\u00e9crire le r\u00f4le de TCP (Transmission Control Protocol) . R\u00e9ponse TCP est un protocole s'assurant de la transmission des donn\u00e9es. Il pr\u00e9voit de v\u00e9rifier qu'elles sont bien toutes arriv\u00e9es au destinataire (envoi d'accus\u00e9s de r\u00e9ception) et qu'elles puissent \u00eatre remises dans l'ordre (ajout d'un num\u00e9ro \u00e0 chaque segment) . D\u00e9crire le r\u00f4le d' IP (Internet Protocol) . Expliquer \u00e0 quoi sert une adresse IP et d\u00e9tailler le format IPv4. A quoi sert un masque de sous-r\u00e9seau ? R\u00e9ponse IP guide les paquets dans le r\u00e9seau : il assure le routage, gr\u00e2ce aux adresses IP associ\u00e9es aux machines. Une adresse IP identifie une machine de mani\u00e8re unique sur un r\u00e9seau. Le format IPv4 utilise 4 nombres cod\u00e9s sur chacun 1 octet, donc pouvant aller de 0 \u00e0 255 ( \\(2^8-1\\) ). L'adresse IP d\u00e9pend du r\u00e9seau local, ou sous-r\u00e9seau de la machine : le masque de sous-r\u00e9seau permet d'obtenir l'adresse IP de ce sous-r\u00e9seau en faisant un ET logique entre l'adresse IP de la machine et le masque. D\u00e9crire le r\u00f4le d'un switch . R\u00e9ponse Un switch permet de diriger les paquets \u00e0 l'int\u00e9rieur d'un r\u00e9seau local. Il utilise le protocole ARP pour associer une adresse IP (d\u00e9pendant du r\u00e9seau) une adresse MAC (adresse physique d'une carte r\u00e9seau), ce qui est n\u00e9cessaire \u00e0 l'acheminement des donn\u00e9es. D\u00e9crire le mod\u00e8le TCP/IP et ses difff\u00e9rentes couches. R\u00e9ponse Dans ce mod\u00e8le, diff\u00e9rents protocoles sont associ\u00e9s \u00e0 diff\u00e9rentes couches : ils fonctionnent en partie ensemble, chaque protocole ajoutant des informations diff\u00e9rentes aux donn\u00e9es transport\u00e9es. Ce mod\u00e8le est hi\u00e9rarchique : un protocole d'une couche sup\u00e9rieure encapsule les donn\u00e9es format\u00e9es par les protocoles des couches inf\u00e9rieures. Les protocoles utilis\u00e9s d\u00e9pendent de l'application voulue : transf\u00e9rer des fichiers, acc\u00e9der aux donn\u00e9es du web, etc. C. Communication entre r\u00e9seaux \u00b6 Que se passe-t-il lorsque l'on veut faire communiquer deux ordinateurs de deux sous-r\u00e9seaux diff\u00e9rents ? Votre explication doit inclure les mots passerelle , routeur et table de routage . R\u00e9ponse Pour sortir d'un r\u00e9seau local, les donn\u00e9es doivent passer par une passerelle. C'est le routeur qui permet de relier un r\u00e9seau local au r\u00e9seau Internet.*** Les routeurs guident les paquets dans le r\u00e9seau gr\u00e2ce \u00e0 leur table de routage qui leur indique par o\u00f9 aller pour chaque r\u00e9seau de destination, jusqu'\u00e0 leur arriv\u00e9e dans le r\u00e9seau de la machine de destination. On se trouve alors dans le cas du B. TD : Architecture des r\u00e9seaux informatiques \u00b6 Exercice 1 : \u00b6 V\u00e9rifier que les adresses machines et adresses r\u00e9seau de ce r\u00e9seau sont coh\u00e9rentes, en faisant les v\u00e9rifications n\u00e9cessaires sur les adresses IP et masques de r\u00e9seau . Exercice 2 : \u00b6 On consid\u00e8re le r\u00e9seau du cours : a) Citer les machines appartenant aux diff\u00e9rents r\u00e9seaux locaux 1, 2 et 3 (connect\u00e9es aux switchs ayant ces num\u00e9ros) . Les adresses IP qui leur sont associ\u00e9es sont, respectivement 192.168.1.0 /24, 192.168.2.0 /24 et 128.10.0.0 /16. b) On attribue les adresses IP suivantes : 192.168.1.1 /24 \u00e0 M1 192.168.2.1 /24 \u00e0 M4 128.10.1.1 /16 \u00e0 M7 Attribuer des adresses IP aux machines M2, M3, M5, M6 et M8. c) On attribue les adresses IP suivantes : 192.168.1.254 \u00e0 l\u2019 interface r\u00e9seau eth0 de RA connect\u00e9e au r\u00e9seau 1, 192.168.2.254 pour eth1 connect\u00e9e au r\u00e9seau 2, 172.168.3.1 /24 pour eth2 connect\u00e9e au m\u00eame r\u00e9seau que RB, et 172.168.4.1 /24 pour eth3 celle connect\u00e9e \u00e0 RC. De la m\u00eame mani\u00e8re, attribuer des adresses IP aux deux interfaces r\u00e9seau de RB et aux deux de RC sachant que les deux routeurs communiquent sur le r\u00e9seau 192.168.7.0/24. TP : Mise en \u0153uvre d\u2019un r\u00e9seau \u00b6 Nous allons simuler des r\u00e9seaux informatiques avec le logiciel Filius , dont l'interface est la suivante : A. Un r\u00e9seau local \u00b6 Cr\u00e9er un r\u00e9seau de 2 ordinateurs , reli\u00e9s par un switch . S\u00e9lectionner les machines pour changer le nom en M1 et M2. Attribuer \u00e0 chacune une adresse IP diff\u00e9rente (qui doit \u00eatre dans le m\u00eame r\u00e9seau). Noter l\u2019 adresse MAC des 2 machines. En mode simulation (fl\u00e8che verte), s\u00e9lectionner M1 pour installer le logiciel \"Lignes de commande\". Faire un clic droit sur chaque machine et activer \"Afficher l\u2019\u00e9change de donn\u00e9es\". Lancer le logiciel de ligne de commande sur M1 et faire un ping pour tester la connexion entre M1 et M2. D\u2019apr\u00e8s la fen\u00eatre \"\u00e9changes de donn\u00e9es\" : quels protocoles ont \u00e9t\u00e9 utilis\u00e9 ? Que s\u2019est-il pass\u00e9 exactement ? B. Fonctionnement d\u2019un switch \u00b6 Repasser en mode construction de r\u00e9seau et rajouter un ordinateur M3 connect\u00e9 au m\u00eame r\u00e9seau que M1 et M2. En mode simulation , s\u00e9lectionner le switch . Appara\u00eet alors une table d\u2019association adresse MAC-port , qui doit \u00eatre vide. La fermer pour l\u2019instant. Faire un clic droit sur chaque machine et activer \"Afficher l\u2019\u00e9change de donn\u00e9es\". Lancer la console de M1 et tester sa connexion avec M3. Rouvrir la table d\u2019association du switch . Que remarquez-vous ? Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau1.fls . C. Fonctionnement d\u2019un routeur \u00b6 Nous allons \u00e0 pr\u00e9sent cr\u00e9er 2 r\u00e9seaux locaux connect\u00e9s par un routeur. Vous pouvez reprendre le r\u00e9seau cr\u00e9\u00e9 pr\u00e9c\u00e9demment, que nous allons connecter \u00e0 un deuxi\u00e8me r\u00e9seau local . Nommer les 3 ordinateurs M1, M2 et M3 et leur attribuer respectivement les adresses IP 192.168.1.1, 192.168.1.2 et 192.168.1.3 (changer les adresses si vous en aviez des diff\u00e9rentes) . Cr\u00e9er un second r\u00e9seau local avec 2 ordinateurs reli\u00e9s \u00e0 un switch , nomm\u00e9s M4 et M5, et leur attribuer respectivement les adresses IP 192.168.2.1 et 192.168.2.2. Rajouter un routeur appel\u00e9 R1 sur votre sch\u00e9ma, et relier les switchs au routeur. Dans la configuration du routeur, cocher \"routage automatique\". En mode simulation , installer le logiciel de lignes de commandes sur les machines M1 et M4. Faire un ping de M1 sur M4. V\u00e9rifier... que \u00e7a ne marche pas, car les passerelles ne sont pas bien configur\u00e9es ! Dans la configuration du routeur, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M1, M2 et M3, et lui attribuer l\u2019adresse IP 192.168.1.254. Indiquer cette adresse comme la passerelle de M1, M2 et M3. Dans la configuration du routeur, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M4 et M5, et lui attribuer l\u2019adresse IP 192.168.2.254. Indiquer cette adresse comme la passerelle de M4 et M5. Faire un nouveau ping en mode simulation entre M1 et M4. Cette requ\u00eate devrait \u00e0 pr\u00e9sent fonctionner ! Les deux r\u00e9seaux sont connect\u00e9s. Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau2.fls . D. Un r\u00e9seau avec deux routeurs \u00b6 Reprendre le sch\u00e9ma que vous avez fait \u00e0 la question d\u2019avant et y ajouter un 3\u00e8me r\u00e9seau local , compos\u00e9 d\u2019un ordinateur (M6), reli\u00e9 \u00e0 un switch. Ajouter un second routeur appel\u00e9 R2, et le relier au switch et au routeur R1. Rajouter une liaison \u00e0 R1 si vous ne lui en avez mis que 2 (\"G\u00e9rer les connexions\" et \"Ajouter une interface locale\"). Configurer M6 en lui attribuant l\u2019adresse IP 172.0.1.1 et la passerelle 172.0.1.254. Dans la configuration de R2, choisir l\u2019 interface colorant en vert la liaison menant vers le switch de M6, et lui attribuer l\u2019adresse IP 172.0.1.254. Cocher \"routage automatique\". Il faut maintenant configurer le chemin entre les routeurs R1 et R2. Attribuer l\u2019adresse 192.168.3.1 \u00e0 l\u2019interface de R1 le connectant \u00e0 R2. De la m\u00eame mani\u00e8re, choisir une adresse IP pour l\u2019interface de R2 le connectant \u00e0 R1. Faire un ping entre M1 et M6. La connexion se fait-elle bien ? Enregistrer votre travail sous un fichier Filius nomm\u00e9 reseau3.fls .","title":"I. Architecture des r\u00e9seaux"},{"location":"tle/seq7/architecture/#i-architecture-des-reseaux-informatiques","text":"","title":"I. Architecture des r\u00e9seaux informatiques"},{"location":"tle/seq7/architecture/#cours","text":"Diaporama disponible : Exemple de r\u00e9seau informatique :","title":"Cours"},{"location":"tle/seq7/architecture/#td-architecture-des-reseaux-informatiques","text":"","title":"TD : Architecture des r\u00e9seaux informatiques"},{"location":"tle/seq7/architecture/#tp-mise-en-uvre-dun-reseau","text":"Nous allons simuler des r\u00e9seaux informatiques avec le logiciel Filius , dont l'interface est la suivante :","title":"TP\u00a0: Mise en \u0153uvre d\u2019un r\u00e9seau"},{"location":"tle/seq7/graphes/","text":"body { text-align: justify} II. Vocabulaire sur les graphes \u00b6 Introduction \u00b6 Exemple 1 : On peut mod\u00e9liser des r\u00e9seaux informatiques par une structure appel\u00e9e graphe . Dans cet exemple, les lettres A, B et C repr\u00e9sentent des routeurs et les lignes entre eux repr\u00e9sentent leurs connexions. Exemple 2 : On peut \u00e9galement utiliser des graphes pour repr\u00e9senter les relations entre utilisateurs de r\u00e9seaux sociaux. Consid\u00e9rons un r\u00e9seau social sur lequel : - A est ami avec B, C et D - B est ami avec A et D - C est ami avec A, E et D - D est ami avec tous les autres abonn\u00e9s - E est ami avec C, D et F - F est ami avec E et D Exercice : Repr\u00e9senter ce r\u00e9seau social sous la forme d\u2019un graphe. A. D\u00e9finitions et vocabulaire \u00b6 D\u00e9finition : Un graphe G est un couple G = (V,E) avec V un ensemble de sommets , repr\u00e9sent\u00e9s par des points, et E un ensemble d\u2019 ar\u00eates , repr\u00e9sent\u00e9es par des lignes (V pour Vertex, soit sommet en anglais, E pour Edge, soit ar\u00eate) . Vocabulaire : - l\u2019 ordre d\u2019un graphe est le nombre de ses sommets, - 2 sommets sont dit adjacents s\u2019ils sont reli\u00e9s par une ar\u00eate, - le degr\u00e9 d\u2019un sommet est le nombre d\u2019ar\u00eates issues de ce sommet. Exemples : 1) Le graphe de l\u2019exemple 1 est d\u2019ordre 3, et chacun de ses sommets est adjacent aux deux autres et donc de degr\u00e9 2. 2) Quel est l\u2019ordre du graphe repr\u00e9sentant le r\u00e9seau social d\u2019introduction (exemple 2) ? Quels sommets sont adjacents et quel est le degr\u00e9 de chacun d\u2019entre eux ? Vocabulaire : - On appelle cha\u00eene toute suite d\u2019ar\u00eates dont l\u2019extr\u00e9mit\u00e9 de l\u2019une (sauf la derni\u00e8re) est l\u2019origine de la suivante. Sa longueur correspond au nombre d\u2019ar\u00eates. - On appelle cycle une cha\u00eene ferm\u00e9e dont toutes les ar\u00eates sont distinctes. Exemple 3 : Identifier une cha\u00eene de longueur 3 : Identifier un cycle : B. Les diff\u00e9rents types de graphes \u00b6 B.I. Graphes non-orient\u00e9s \u00b6 D\u00e9finition : Un graphe non-orient\u00e9 est un graphe dont les ar\u00eates n\u2019ont pas de sens. Cela signifie que, pour un graphe G = (V,E) avec V = {A,B,C}, les \u00e9l\u00e9ments (A,B) et (B,A) sont identiques. C'est le cas de l' exemple 1 . B.II. Graphes orient\u00e9s \u00b6 D\u00e9finition : Un graphe orient\u00e9 est un graphe dont les liens, les arcs, ont un sens. Cela signifie que, pour un graphe G = (V,E) avec V = {A,B,C}, les \u00e9l\u00e9ments (A,B) et (B,A) sont distincts. Exemple 6 : imaginons un site web compos\u00e9 de 3 pages nomm\u00e9es A, B et C et repr\u00e9sent\u00e9 ci-contre : - sur A sont pr\u00e9sents des liens vers B et C, - sur B est pr\u00e9sent un lien vers C. Vocabulaire : Soit (A,B) un arc de G : - A est appel\u00e9 le pr\u00e9d\u00e9cesseur de B, - B est appel\u00e9 le successeur de A. - Un chemin est une suite d\u2019arcs dont l\u2019extr\u00e9mit\u00e9 de l\u2019un (sauf la derni\u00e8re) est l\u2019origine du suivant. B.III. Graphes pond\u00e9r\u00e9s \u00b6 D\u00e9finition : On dit qu\u2019un graphe est pond\u00e9r\u00e9 quand ses ar\u00eates ou ses arcs sont coupl\u00e9s avec des nombres. Ceux-ci sont appel\u00e9s des poids. Exemple 7 : un r\u00e9seau routier repr\u00e9sentant les connexions entre villes, avec comme poids le nombre de km les s\u00e9parant. D\u00e9finition : On associe un chemin dans un graphe pond\u00e9r\u00e9 \u00e0 un poids en effectuant la somme des poids de ses diff\u00e9rentes ar\u00eates. Exercice : Donner diff\u00e9rents chemins possibles pour aller de G \u00e0 E et leur poids associ\u00e9.","title":"II. Les graphes"},{"location":"tle/seq7/graphes/#ii-vocabulaire-sur-les-graphes","text":"","title":"II. Vocabulaire sur les graphes"},{"location":"tle/seq7/graphes/#introduction","text":"Exemple 1 : On peut mod\u00e9liser des r\u00e9seaux informatiques par une structure appel\u00e9e graphe . Dans cet exemple, les lettres A, B et C repr\u00e9sentent des routeurs et les lignes entre eux repr\u00e9sentent leurs connexions. Exemple 2 : On peut \u00e9galement utiliser des graphes pour repr\u00e9senter les relations entre utilisateurs de r\u00e9seaux sociaux. Consid\u00e9rons un r\u00e9seau social sur lequel : - A est ami avec B, C et D - B est ami avec A et D - C est ami avec A, E et D - D est ami avec tous les autres abonn\u00e9s - E est ami avec C, D et F - F est ami avec E et D Exercice : Repr\u00e9senter ce r\u00e9seau social sous la forme d\u2019un graphe.","title":"Introduction"},{"location":"tle/seq7/graphes/#a-definitions-et-vocabulaire","text":"D\u00e9finition : Un graphe G est un couple G = (V,E) avec V un ensemble de sommets , repr\u00e9sent\u00e9s par des points, et E un ensemble d\u2019 ar\u00eates , repr\u00e9sent\u00e9es par des lignes (V pour Vertex, soit sommet en anglais, E pour Edge, soit ar\u00eate) . Vocabulaire : - l\u2019 ordre d\u2019un graphe est le nombre de ses sommets, - 2 sommets sont dit adjacents s\u2019ils sont reli\u00e9s par une ar\u00eate, - le degr\u00e9 d\u2019un sommet est le nombre d\u2019ar\u00eates issues de ce sommet. Exemples : 1) Le graphe de l\u2019exemple 1 est d\u2019ordre 3, et chacun de ses sommets est adjacent aux deux autres et donc de degr\u00e9 2. 2) Quel est l\u2019ordre du graphe repr\u00e9sentant le r\u00e9seau social d\u2019introduction (exemple 2) ? Quels sommets sont adjacents et quel est le degr\u00e9 de chacun d\u2019entre eux ? Vocabulaire : - On appelle cha\u00eene toute suite d\u2019ar\u00eates dont l\u2019extr\u00e9mit\u00e9 de l\u2019une (sauf la derni\u00e8re) est l\u2019origine de la suivante. Sa longueur correspond au nombre d\u2019ar\u00eates. - On appelle cycle une cha\u00eene ferm\u00e9e dont toutes les ar\u00eates sont distinctes. Exemple 3 : Identifier une cha\u00eene de longueur 3 : Identifier un cycle :","title":"A. D\u00e9finitions et vocabulaire"},{"location":"tle/seq7/graphes/#b-les-differents-types-de-graphes","text":"","title":"B. Les diff\u00e9rents types de graphes"},{"location":"tle/seq7/routage/","text":"body { text-align: justify} III. Routage \u00b6 Cours \u00b6 Diaporama disponible : On consid\u00e8re l'exemple de r\u00e9seau suivant : A. Les tables de routage \u00b6 Repr\u00e9senter les tables de routage des routeurs A et G avec les informations concernant les r\u00e9seaux auxquels ils sont directement connect\u00e9s. B. Routing Information Protocol (RIP) \u00b6 Principe de RIP : Repr\u00e9senter les tables de routage des routeurs A et G apr\u00e8s application de RIP : C. Open Short Path First \u00b6 Principe du protocole OSPF : Algorithme de Dijkstra : On part d\u2019un sommet source et on cherche \u00e0 rejoindre un sommet de destination. On utilise un tableau regroupant toutes les poids des chemins reliant la source \u00e0 chaque sommet, mis \u00e0 jour au fur et \u00e0 mesure. Initialisation du tableau avec la valeur \" ... \" pour tous les sommets, sauf la source, mise \u00e0 0. Mise \u00e0 jour de la valeur des sommets voisins avec la valeur du sommet de d\u00e9part + le poids de ar\u02c6ete permettant de l\u2019atteindre. On r\u00e9it\u00e8re ces \u00e9tapes \u00e0 partir du sommet associ\u00e9 \u00e0 la plus petite distance, non d\u00e9j\u00e0 trait\u00e9. Si une valeur de distance est d\u00e9j\u00e0 attribu\u00e9e \u00e0 un sommet, on ne met celle-ci \u00e0 jour que si la nouvelle est inf\u00e9rieure. L\u2019algorithme s\u2019arr\u00eate lorsque l\u2019on arrive au sommet destination. TD : Routage \u00b6 Exercice 1 : \u00b6 1) Repr\u00e9senter ce r\u00e9seau sous la forme d\u2019un graphe dont les sommets sont les routeurs. 2) Appliquer RIP pour trouver le plus court chemin entre A et F. 3) Les d\u00e9bits des connexions entre routeurs sont indiqu\u00e9s ci-dessus en Mb/s : - A \u2013 B : 10 - A \u2013 H : 1 - B \u2013 D : 100 - C \u2013 D : 10 - C \u2013 H : 10 - D \u2013 E : 10 - E \u2013 F : 100 - F \u2013 G : 1 - H \u2013 F : 10 Ajouter les co\u00fbts des connexions au graphe et appliquer OSPF pour d\u00e9terminer le plus court chemin entre M1 et M11. Exercice 2 : \u00b6 On reprend le m\u00eame r\u00e9seau que dans l\u2019exercice 2 sur l\u2019architecture des r\u00e9seaux : Compl\u00e9ter la table de routage du routeur RA apr\u00e8s application du protocole RIP : Routeur R\u00e9seau Interface Passerelle M\u00e9trique A 192.168.1.0/24 192.168.2.0/24 128.10.0.0/16 Exercice 3 : \u00b6 On consid\u00e8re un r\u00e9seau, assimil\u00e9 \u00e0 un graphe o\u00f9 chaque sommet repr\u00e9sente un routeur impl\u00e9mentant le protocole OSPF. Les chiffres indiqu\u00e9s sur les liens sont les co\u00fbts suppos\u00e9s des m\u00e9triques OSPF assign\u00e9es \u00e0 chaque liaison inter-routeur. 1) Quelle sera la route utilis\u00e9e entre G et E apr\u00e8s convergence (c\u2019est-\u00e0-dire lorsque les routeurs auront effectu\u00e9 suffisamment d\u2019\u00e9changes de tables de routage pour que toutes les relations d\u2019adjacence soient propag\u00e9es) ? Quelle aurait \u00e9t\u00e9 cette route avec le protocole RIP ? 2) On veut d\u00e9terminer la table de routage de B sous la forme : Destination Passerelle M\u00e9trique A C a) Quel est l\u2019 algorithme utilis\u00e9 dans la pratique pour d\u00e9terminer le chemin optimal entre B et chacun des routeurs destinataires envisag\u00e9s ? b) Donner la table de routage compl\u00e8te de B apr\u00e8s convergence. 3) On connecte le routeur D \u00e0 un routeur R suppl\u00e9mentaire, \u00e0 une distance de 3, lui-m\u00eame connect\u00e9 \u00e0 un r\u00e9seau inconnu (r\u00e9seau myst\u00e8re). Apr\u00e8s quelques minutes de fonctionnement du r\u00e9seau, la convergence est \u00e9tablie et R \u00e9change sa table de routage avec chaque routeur A \u00e0 H. En voici un extrait : Destination Passerelle M\u00e9trique C D 8 D D 3 ... ... ... I I 2 J J 1 K I 6 L J 2 M J 5 a) A partir de ces informations, compl\u00e9ter la table de routage de B, renseign\u00e9e \u00e0 la question 2) b). b) Dessiner une topologie possible des routeurs I \u00e0 M du r\u00e9seau myst\u00e8re (il y a diff\u00e9rentes possibilit\u00e9s!). Elle doit \u00eatre compatible avec les tables de routage de B et de R. Exercice 4 : \u00b6 On cherche \u00e0 appliquer l\u2019algorithme de Dijsktra sur le graphe suivant, repr\u00e9sentant un r\u00e9seau de routeurs : 1) Appliquer l\u2019algorithme pour trouver le plus court chemin de A \u00e0 F. A chaque \u00e9tape, on actualisera la liste couts contenant les poids des chemins reliant la source \u00e0 chaque sommet et une liste des pr\u00e9d\u00e9cesseurs pred . On consid\u00e8re que l\u2019on passe \u00e0 une autre \u00e9tape lorsque l\u2019on consid\u00e8re tous les voisins d\u2019un sommet diff\u00e9rent. couts : Etape A B C D E F G H Sommet choisi init 1 2 3 4 5 6 pred : Etape A B C D E F G H Sommet choisi init 1 2 3 4 5 6 2) M\u00eame question pour trouver le plus court chemin de B \u00e0 G. Ne donner que le plus court chemin. TP : Routage statique \u00b6 A. Routage statique \u00b6 Reprendre le fichier reseaux3.fls cr\u00e9\u00e9 dans le TP de simulation pr\u00e9c\u00e9dent : \"Mise en oeuvre d'un r\u00e9seau\". Nous allons maintenant \u00e9crire les tables de routage des routeurs de ce r\u00e9seau manuellement (dans le TP pr\u00e9c\u00e9dent, elles \u00e9taient g\u00e9n\u00e9r\u00e9es automatiquement) . Dans R1 et R2, d\u00e9cocher \"routage automatique\" et v\u00e9rifier qu\u2019il n\u2019est pas possible de faire un ping qui fonctionne de M1 \u00e0 M6. Les tables de routage sont compos\u00e9es de 4 parties : - L\u2019 adresse IP de destination - Le masque de cette adresse - La passerelle (le prochain point d\u2019acc\u00e8s) - L\u2019 interface (l\u00e0 d\u2019o\u00f9 l\u2019on part) Dans R1 : - Aller dans \"table de routage\", - d\u00e9cocher \"afficher toutes les lignes\", - cliquer sur \"nouvelle ligne\" - \u00e9crire la ligne permettant au routeur de se connecter au r\u00e9seau 172.0.1.0. Dans R2 : - Faire la m\u00eame proc\u00e9dure que pour R1. - \u00c9crire la ligne permettant au routeur de se connecter au r\u00e9seau 192.168.1.0. Faire un ping de M1 vers M6 et v\u00e9rifier que la connexion se fait bien. Faire un ping de M6 vers M4. Que se passe-t-il ? Indiquer sur le sch\u00e9ma ci-dessous toutes les adresses IP attribu\u00e9es (celles des ordinateurs, des interfaces des routeurs) : Compl\u00e9ter les tables de routage de R1 et R2 pour que la connexion puisse se faire entre M6 et M3. Se r\u00e9f\u00e9rer au sch\u00e9ma pour identifier les bonnes adresses IP. Compl\u00e9ter les tables de routage de R1 et R2 pour que tous les r\u00e9seaux y soient inscrits, m\u00eame les r\u00e9seaux auxquels les routeurs sont directement connect\u00e9s (ils sont sinon inscrits automatiquement par Filius) . B. Un plus grand r\u00e9seau \u00b6 Reprendre le r\u00e9seau pr\u00e9c\u00e9dent et rajouter un 4\u00e8me r\u00e9seau avec 2 ordinateurs M7 et M8, reli\u00e9s \u00e0 un switch, lui-m\u00eame reli\u00e9 \u00e0 un routeur R3. Connecter R3 \u00e0 R2. Utiliser l\u2019adresse 172.0.2.0 \u00e0 pour ce nouveau r\u00e9seau local, et distribuer les adresses IP en cons\u00e9quence aux ordinateurs et interfaces des routeurs. \u00c9tablir la table de routage de R3, et modifier celle de R1 et R2 pour faire communiquer toutes les machines entre elles. Prendre soin d\u2019ajouter tous les r\u00e9seaux dans les diff\u00e9rentes tables de routage.","title":"III. Le routage"},{"location":"tle/seq7/routage/#iii-routage","text":"","title":"III. Routage"},{"location":"tle/seq7/routage/#cours","text":"Diaporama disponible : On consid\u00e8re l'exemple de r\u00e9seau suivant :","title":"Cours"},{"location":"tle/seq7/routage/#td-routage","text":"","title":"TD : Routage"},{"location":"tle/seq7/routage/#tp-routage-statique","text":"","title":"TP\u00a0: Routage statique"},{"location":"tle/seq8/os/","text":"body { text-align: justify} I. Les syst\u00e8mes d'exploitation \u00b6 Cours \u00b6 A.I. Diff\u00e9rents syst\u00e8mes d\u2019exploitation \u00b6 Faire des recherches sur les diff\u00e9rents syst\u00e8mes d\u2019exploitation utilis\u00e9s aujourd\u2019hui. Comment ont-ils \u00e9t\u00e9 cr\u00e9\u00e9s ? Sont-ils libres ou propri\u00e9taires ? Le premier syst\u00e8me d\u2019exploitation multit\u00e2che est Multics , n\u00e9 en 1965, mais c\u2019est le syst\u00e8me UNIX , n\u00e9 quelques ann\u00e9es plus tard dans les laboratoires Bell, qui servira de base \u00e0 des OS encore utilis\u00e9s aujourd\u2019hui. UNIX est un syst\u00e8me propri\u00e9taire, c\u2019est-\u00e0-dire dont le code source n\u2019est pas connu de tous et donc non-modifiable. C\u2019est en opposition avec cette id\u00e9ologie que Linus Torvalds cr\u00e9a un clone libre d\u2019UNIX en 1991 appel\u00e9 Linux. S\u2019il est aujourd\u2019hui moins utilis\u00e9 que d\u2019autres OS sur les ordinateurs, c\u2019est l\u2019 OS le plus utilis\u00e9 au monde en comptant les serveurs et les smartphones . Les ordinateurs personnels sont g\u00e9n\u00e9ralement \u00e9quip\u00e9s de Microsoft Windows, qui est un OS propri\u00e9taire. C\u2019est aussi le cas de macOS, utilis\u00e9 sur les ordinateurs Apple, qui se base sur UNIX. A.II. Les fonctions d\u2019un syst\u00e8me d\u2019exploitation \u00b6 Faire un r\u00e9sum\u00e9 de la vid\u00e9o ci-dessus, pour extraite les fonctions d'un syst\u00e8me d'exploitation. Un syst\u00e8me d\u2019exploitation ou OS pour Operating System est un logiciel qui est une couche d\u2019abstraction entre les applications de l\u2019ordinateur et le mat\u00e9riel. Il donne acc\u00e8s aux diff\u00e9rentes ressources. Les utilisateurs peuvent utiliser les applications ou bien interagir avec l\u2019OS directement. Il est compos\u00e9 d\u2019un noyau auquel nous n\u2019avons pas acc\u00e8s directement. Celui-ci g\u00e8re l\u2019acc\u00e8s aux ressources, g\u00e8re l\u2019acc\u00e8s aux fichiers,... Il est possible d\u2019interagir avec l\u2019OS via des commandes. Le BIOS sert \u00e0 d\u00e9marrer l\u2019ordinateur : il lance l\u2019OS.","title":"I. Syst\u00e8mes d'exploitation"},{"location":"tle/seq8/os/#i-les-systemes-dexploitation","text":"","title":"I. Les syst\u00e8mes d'exploitation"},{"location":"tle/seq8/os/#cours","text":"","title":"Cours"},{"location":"tle/seq8/processus/","text":"body { text-align: justify} II. Les processus \u00b6 Cours \u00b6 A. Processus \u00b6 D\u00e9finition Un programme correspond \u00e0 un ensemble d\u2019instructions susceptibles d\u2019\u00eatre ex\u00e9cut\u00e9es. Lorsqu\u2019elle sont effectivement ex\u00e9cut\u00e9es, un processus est cr\u00e9\u00e9. Un processus est donc une instance d\u2019un programme. On peut avoir l\u2019impression qu\u2019un ensemble de processus est ex\u00e9cut\u00e9 simultan\u00e9ment sur l\u2019ordinateur, lorsque l\u2019on a plusieurs logiciels d\u2019ouverts. En r\u00e9alit\u00e9, un processeur ne peut ex\u00e9cuter qu\u2019autant d\u2019instructions qu\u2019il a de c\u0153urs. Il faut donc g\u00e9rer l\u2019ex\u00e9cution de ces processus \u00e0 tour de r\u00f4le. On associe donc un \u00e9tat \u00e0 chaque processus, pour indiquer s\u2019il peut s\u2019ex\u00e9cuter ou bien s\u2019il s\u2019ex\u00e9cute. Ajouter, \u00e0 c\u00f4t\u00e9 de la figure suivante, la signification des diff\u00e9rents \u00e9tats : B. Cr\u00e9ation d\u2019un processus \u00b6 D\u00e9crire la cr\u00e9ation des processus sur l'ordinateur, et d\u00e9finir son PID et PPID . C. L\u2019ordonnancement \u00b6 La question de quel processus doit s\u2019ex\u00e9cuter dans quel ordre est g\u00e9r\u00e9e par un ordonnanceur (\u201dscheduler\u201d en anglais), qui est une partie du syst\u00e8me d\u2019exploitation de l\u2019ordinateur. Il peut utiliser plusieurs strat\u00e9gies : (a) Premier arriv\u00e9, premier servi (b) A priorit\u00e9s constantes (c) Le tourniquet (\u201dround robin\u201d) D. L\u2019interblocage \u00b6 Lorsque des processus attendent chacun des ressources qui sont utilis\u00e9es par les autres, on atteint la situation d\u2019interblocage (\u201ddeadlock\u201d en anglais). Tous les processus sont en attente, leur ex\u00e9cution est bloqu\u00e9e ind\u00e9finiment. C\u2019est donc une situation que l\u2019on veut \u00e9viter ! Exemple Un processus P1 utilise une ressource R1 et a besoin d\u2019une ressource R2 pour continuer de s\u2019ex\u00e9cuter. Or, R2 est utilis\u00e9e par un processus P2, qui a besoin de la ressource R1 pour terminer son ex\u00e9cution et lib\u00e9rer R2.","title":"II. Processus"},{"location":"tle/seq8/processus/#ii-les-processus","text":"","title":"II. Les processus"},{"location":"tle/seq8/processus/#cours","text":"","title":"Cours"}]}